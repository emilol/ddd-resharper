<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.TaskRunnerFramework</name>
    </assembly>
    <members>
        <member name="F:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.myRegistrations">
            <summary>
            Don't add directly, use <see cref="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.RegisterAssembly(System.String,System.String)"/> overloads.
            Stores under both local and full assembly names.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.myLoadedAssemblies">
            <summary>
            Don't add directly, use <see cref="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.RegisterLoadedAssembly(System.Reflection.Assembly)"/>.
            Stores under both local and full assembly names.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.myResolveAssemblyToken">
            <summary>
            Reentrancy token for <see cref="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.RegisterAssembly(System.Reflection.Assembly)"/>, <c>True</c> when inside.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.RegisterAssembly(System.String,System.String)">
            <summary>
            Allows the assembly to be resolved later.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.RegisterAssembly(System.Reflection.Assembly)">
            <summary>
            Allows the assembly to be resolved later.
            This overload must not be called across appdomains.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.ResolveAssembly(System.Object,System.ResolveEventArgs)">
            <summary>
            AppDomain Resolver entry point.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.ResolveRegisteredAssemblyByName(System.String)">
            <summary>
            Looks up the registered assemblies cache by the <paramref name="name"/>,
            which could be either a full or a local name.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.ResolveAssemblyFileByName(System.String,System.String)">
            <summary>
            Looks up the assemblies on disk under the known paths by the <paramref name="name"/>,
            which could be either a full or a local name (<paramref name="fullName"/>).
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.AssemblyLoader.RegisterLoadedAssembly(System.Reflection.Assembly)">
            <summary>
            As the assembly has been resolved, registers it for subsequent resolves under both local and full names.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.TaskRunnerFramework.RemoteTask.IsMeaningfulTask">
            <summary>
            Must return <value>true</value>, if the task is meaningful, e. g. it has related IUnitTestElement
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.ITaskRunnerClientController.AfterTaskFinished(JetBrains.ReSharper.TaskRunnerFramework.RemoteTask,System.String@,JetBrains.ReSharper.TaskRunnerFramework.TaskResult@)">
            <summary>
            Client controller may replace test result and message.
            </summary>
            <param name="remoteTask"></param>
            <param name="message">Original message provided by test framework, it is allowed to modify it, but don't abuse this</param>
            <param name="result">Original test result provided by test framework, it is allowed to modify it, but don't abuse this</param>
        </member>
        <member name="T:JetBrains.ReSharper.TaskRunnerFramework.TaskOutputInterceptor.DebuggerTraceListener">
            <summary>
            Intercept the Debug.WriteLine() and Trace.WriteLine() calls
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.IRemoteChannel.OnFinish(System.Action)">
            <summary>
            Action to be executed when channel is closed.
            </summary>
            <remarks>Can not use Lifetime here, because of inability to add reference</remarks>
            <param name="onFinishAction"></param>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.IRemoteChannelMessageListener.OnPacket(System.Xml.XmlReader,JetBrains.ReSharper.TaskRunnerFramework.IRemoteChannel)">
            <summary>
            Handles packet
            </summary>
            <param name="reader">Child reader to read only one packet</param>
            <param name="remoteChannel"></param>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.RecursiveRemoteTaskRunner.Abort">
            <summary>
            Abort run. May not be overridden if not supported.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.TaskRunnerFramework.IRemoteTaskServer.ShowNotification(System.String,System.String)">
            <summary>
            Shows notification that is not related to any test.
            </summary>
            <param name="message">Notification text</param>
            <param name="description">Full description of problem, collapsed by default. May be <value>null</value>.</param>
        </member>
        <member name="P:JetBrains.ReSharper.TaskRunnerFramework.TaskExecutorConfiguration.IsInInternalDebug">
            <summary>
            Internal option to debug TaskRunner
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.TaskRunnerFramework.TaskExecutorConfiguration.RunnerPaths">
            <summary>
            Folders with UnitTestProviders (for 3rd party plugins)
            </summary>
        </member>
    </members>
</doc>
