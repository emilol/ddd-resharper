<?xml version="1.0" encoding="utf-8"?>
<assembly name="PresentationCore, Version=3.0.0.0">
  <member name="M:ModuleLoadExceptionHandlerException.GetObjectData(,)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:ModuleLoadExceptionHandlerException.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AbbreviatedGeometryParser.ParseToGeometryContext(System.Windows.Media.StreamGeometryContext,System.String,System.Int32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pathString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AbbreviatedGeometryParser.ReadPoint(System.Char,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AbbreviatedGeometryParser.Reflect">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AppDomainShutdownMonitor.Add(System.WeakReference)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AppDomainShutdownMonitor.Remove(System.WeakReference)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AppModel.CookieHandler.GetCookie(System.Uri,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AppModel.CookieHandler.SetCookie(System.Uri,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AppModel.CookieHandler.SetCookieUnsafe(System.Uri,System.String,System.String)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AppModel.CustomCredentialPolicy.MapUrlToZone(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AppModel.CustomCredentialPolicy.ShouldSendCredential(System.Uri,System.Net.WebRequest,System.Net.NetworkCredential,System.Net.IAuthenticationModule)">
    <parameter name="challengeUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AppModel.SiteOfOriginContainer.CreatePartCore(System.Uri,System.String,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AppModel.SiteOfOriginContainer.GetDeploymentUri">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AppModel.SiteOfOriginContainer.GetPartCore(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.AppModel.SiteOfOriginContainer.SiteOfOrigin">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AppModel.SiteOfOriginPart.GetStreamAndSetContentType(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AppModel.SiteOfOriginPart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AppModel.SiteOfOriginPart.HandleFileSource(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AppModel.SiteOfOriginPart.HandleWebSource(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.DockProviderWrapper.SetDockPosition(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.DockProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.GetEmbeddedFragmentRoots">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.GetHostHelper(System.Windows.Automation.Peers.HostedWindowWrapper)">
    <parameter name="hwndWrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextAdviseEventAdded(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextAdviseEventRemoved(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextElementProviderFromPoint(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextFragmentRoot(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextGetFocus(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextGetHostRawElementProvider(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextGetPatternProvider(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextGetPropertyValue(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextGetRuntimeId(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextNavigate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.InContextSetFocus(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.StaticWrap(System.Windows.Automation.Peers.AutomationPeer,System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="referencePeer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementProxy.Wrap(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.FindVisibleSibling(System.Windows.Media.Visual,System.Int32,System.Boolean)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.FindVisibleSibling(System.Windows.Media.Visual,System.Windows.Media.Visual,System.Boolean)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.GetElementFromPoint(System.IntPtr,System.Windows.Media.Visual,)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.GetLocalRect(System.Windows.UIElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.GetNextSibling(System.Windows.Media.Visual)">
    <parameter name="el">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.GetParent(System.Windows.Media.Visual)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="el">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.GetPreviousSibling(System.Windows.Media.Visual)">
    <parameter name="el">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.GetRoot(System.Windows.Media.Visual)">
    <parameter name="el">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ElementUtil.GetScreenRect(System.IntPtr,System.Windows.UIElement)">
    <parameter name="el">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.EventPropertyMap.IsInterestingDP()">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.EventPropertyMap.RemovePropertyNotify([])">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ExpandCollapseProviderWrapper.Collapse(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ExpandCollapseProviderWrapper.Expand(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ExpandCollapseProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.GridItemProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.GridProviderWrapper.GetItem(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.GridProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InteropAutomationProvider.#ctor(System.Windows.Automation.Peers.HostedWindowWrapper,System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.InteropAutomationProvider.#ElementProviderFromPoint(System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Automation.InteropAutomationProvider.#FragmentRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InteropAutomationProvider.#GetEmbeddedFragmentRoots">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InteropAutomationProvider.#GetFocus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InteropAutomationProvider.#GetPatternProvider(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InteropAutomationProvider.#GetPropertyValue(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InteropAutomationProvider.#GetRuntimeId">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InteropAutomationProvider.#Navigate()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InvokeProviderWrapper.Invoke(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.InvokeProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.MultipleViewProviderWrapper.GetViewName(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.MultipleViewProviderWrapper.SetCurrentView(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.MultipleViewProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.RangeValueProviderWrapper.SetValueInternal(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.RangeValueProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ScrollItemProviderWrapper.ScrollIntoView(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ScrollItemProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ScrollProviderWrapper.Scroll(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ScrollProviderWrapper.SetScrollPercent(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.ScrollProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.SelectionItemProviderWrapper.AddToSelection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.SelectionItemProviderWrapper.RemoveFromSelection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.SelectionItemProviderWrapper.Select(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.SelectionItemProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.SelectionProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TableItemProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TableProviderWrapper.GetItem(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TableProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TextProviderWrapper.RangeFromChild()">
    <parameter name="childElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.AddToSelection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.Compare()">
    <parameter name="range">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.CompareEndpoints(,,)">
    <parameter name="targetRange">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.CompareEndpoints(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.ExpandToEnclosingUnit(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.FindAttribute(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.FindText(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.GetAttributeValue(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.GetText(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.Move(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.MoveEndpointByRange(,,)">
    <parameter name="targetRange">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.MoveEndpointByRange(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.MoveEndpointByUnit(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.RemoveFromSelection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.ScrollIntoView(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.Select(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.WrapArgument(,System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TextRangeProviderWrapper.WrapArgument([],System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ToggleProviderWrapper.ToggleInternal(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ToggleProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.TransformProviderWrapper.Move(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TransformProviderWrapper.Resize(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TransformProviderWrapper.Rotate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.TransformProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ValueProviderWrapper.SetValueInternal(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.ValueProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.WindowProviderWrapper.Close(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.WindowProviderWrapper.SetVisualState(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Automation.WindowProviderWrapper.WaitForInputIdle(System.Object)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Automation.WindowProviderWrapper.Wrap(System.Windows.Automation.Peers.AutomationPeer,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.CharacterBuffer.AppendToStringBuilder(System.Text.StringBuilder,System.Int32,System.Int32)">
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.CharacterBuffer.CopyTo(System.Char[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.CharacterBuffer.GetCharacterPointer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.CharacterBuffer.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.CharArrayCharacterBuffer.#ctor(System.Char[])">
    <parameter name="characterArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Classification.AdvanceUntilUTF16(MS.Internal.CharacterBuffer,System.Int32,System.Int32,System.UInt16,System.UInt16@)">
    <parameter name="charBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Classification.AdvanceWhileUTF16(MS.Internal.CharacterBuffer,System.Int32,System.Int32,System.UInt16,System.UInt16@)">
    <parameter name="charBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.CommandLibraryHelper.CreateUICommand(System.String,System.Type,System.Byte,System.Security.PermissionSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.GetData(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.GetData(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.GetData(System.Type)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.GetDataPresent(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.GetDataPresent(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.GetDataPresent(System.Type)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.GetFormats">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.GetFormats(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.SetData(System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.SetData(System.String,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.SetData(System.String,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.SetData(System.Type,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ConstrainedDataObject.StripCriticalFormats(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="formats">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.DecoderFallbackWithFailureFlag.FallbackBuffer.Fallback(System.Byte[],System.Int32)">
    <parameter name="bytesUnknown">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.DeferredElementTreeState.GetCoreParent(,MS.Internal.DeferredElementTreeState)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.DeferredElementTreeState.GetInputElementParent(,MS.Internal.DeferredElementTreeState)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.DeferredElementTreeState.GetLogicalParent(,MS.Internal.DeferredElementTreeState)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.DeferredElementTreeState.SetCoreParent(,)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.DeferredElementTreeState.SetLogicalParent(,)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.AbortableTask.Cleanup(System.Object)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.AbortableTask.Execute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.AbortableTask.WorkerThreadFunc(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.BaseGlyphElement.RenderingFlags">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.BaseGlyphElement.SetGlyph(System.UInt16,System.Void*)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CachedFontFace.CreateGlyphTypeface">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontCache.CachedFontFamily.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontCache.CachedFontFamily.Names">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontCache.CachedFontFamily.OrdinalName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.CachedFontFamily.System#Collections#Generic#IEnumerable{MS#Internal#FontCache#CachedFontFace}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.CachedFontFamily.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.CacheManager.Lookup(MS.Internal.FontCache.IFontCacheElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CacheManager.OpenServerCache(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.CacheManager.SaveNativeCache(MS.Internal.FontCache.ElementCacher,System.Collections.Generic.IList{MS.Internal.FontCache.ElementCacher})">
    <parameter name="nativeCaches">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CacheManager.SendMissReport(MS.Internal.FontCache.IFontCacheElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CanonicalFontFamilyReference.Create(System.Uri,System.String)">
    <parameter name="normalizedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CanonicalFontFamilyReference.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CanonicalFontFamilyReference.SplitFontFamilyReference(System.String,System.String@,System.String@)">
    <parameter name="normalizedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CheckedPointer.#ctor(System.IO.UnmanagedMemoryStream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CheckedPointer.OffsetOf(System.Void*)">
    <parameter name="pointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.CheckedPointer.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.ClientManager.CloseAndRemove(MS.Internal.FontCache.ServerConnectionInstance)">
    <parameter name="inst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.ClientManager.Instances">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.ClientManager.StoreInstance(MS.Internal.FontCache.ServerConnectionInstance)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.ConnectTask.Cleanup(System.Object)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.ElementCacher.#ctor(MS.Internal.FontCache.FileMapping,System.Boolean,System.Boolean)">
    <parameter name="mfile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.ElementCacher.InitFromPreviousCache(MS.Internal.FontCache.ElementCacher,System.Int32)">
    <parameter name="oldCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.ElementCacher.Item(System.Byte*)">
    <parameter name="pointer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.ElementCacher.LookupAndAdd(MS.Internal.FontCache.IFontCacheElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.ElementCacher.ReadOnlyLookup(MS.Internal.FontCache.IFontCacheElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.ExplicitAccessList.AddAccessAllowedAce(System.Int32,MS.Internal.FontCache.AccessPermissions,MS.Internal.FontCache.AceFlags,MS.Internal.FontCache.Sid,System.Int32@)">
    <parameter name="sid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.#ctor(System.Uri,System.Boolean)">
    <parameter name="folderUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.AddCompositeFamilyToCache(MS.Internal.FontCache.FamilyCollection.CompositeFamily,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="compositeFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.AddCompositeFamilyToList(MS.Internal.FontCache.FontSource,System.Collections.Generic.List{MS.Internal.FontCache.FamilyCollection.BaseFamily},System.Collections.Generic.SortedDictionary{MS.Internal.FontCache.LocalizedName,MS.Internal.FontCache.FamilyCollection.BaseFamily},System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="fontSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="familyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="familyNameList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.AddFamiliesToCache(MS.Internal.FontCache.FamilyCollection.CachedName*,System.Int32*,System.Int32,System.Collections.Generic.SortedDictionary{MS.Internal.FontCache.LocalizedName,MS.Internal.FontCache.FamilyCollection.BaseFamily},System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="cachedFamilies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="familyNameList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.AddFamilyNames(MS.Internal.FontCache.FamilyCollection.CachedFamily*,MS.Internal.FontCache.FamilyCollection.BaseFamily,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="family">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.AddPhysicalFamilyToCache(MS.Internal.FontCache.FamilyCollection.PhysicalFamily,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="physicalFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.AddPhysicalFamilyToList(MS.Internal.FontCache.FontSource,System.Collections.Generic.List{MS.Internal.FontCache.FamilyCollection.BaseFamily},System.Collections.Generic.SortedDictionary{MS.Internal.FontCache.LocalizedName,MS.Internal.FontCache.FamilyCollection.BaseFamily},System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="fontSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="familyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="familyNameList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.CachedDeviceFont.#ctor(System.String,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.CompositeFamilyCacher.Allocate(MS.Internal.FontFace.CompositeFontInfo,MS.Internal.FontCache.FamilyCollection,System.Collections.Generic.SortedList{System.String,System.Object},System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="compositeFontInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.CompositeFamilyCacher.AnalyzeCompositeFontInfo(MS.Internal.FontFace.CompositeFontInfo)">
    <parameter name="compositeFontInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.CompositeFamilyCacher.GetPrefixedStringSize(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.CompositeFamilyCacher.WriteFamilyMapLanguages(MS.Internal.FontCache.FamilyCollection,MS.Internal.FontCache.CheckedPointer,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.CompositeFamilyCacher.WriteFamilyMaps(MS.Internal.FontCache.FamilyCollection,MS.Internal.FontCache.CheckedPointer,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.FamilyEnumerator.#ctor(MS.Internal.FontCache.FamilyCollection)">
    <parameter name="familyCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.FamilyEnumerator.System#Collections#Generic#IEnumerable{MS#Internal#FontCache#CachedFontFamily}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.FamilyEnumerator.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontCache.FamilyCollection.FamilyEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetFamilyMapLanguageFromOffset(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetFamilyMapOfChar(MS.Internal.FontCache.FamilyCollection.CachedCompositeFamily*,System.UInt16*,System.Int32,System.Int32)">
    <parameter name="ranges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetFamilyMapRanges(MS.Internal.FontCache.FamilyCollection.CachedCompositeFamily*,System.Globalization.CultureInfo,System.Int32@)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetFamilyName(MS.Internal.FontCache.FamilyCollection.CachedFamily*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetFontFamilies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetFontUri(MS.Internal.FontCache.FamilyCollection.CachedPhysicalFace*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetLocalizedNameDictionary(MS.Internal.FontCache.FamilyCollection.CachedFamily*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetOffsetToIetfLanguageTag(System.Windows.Markup.XmlLanguage,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetOffsetToString(System.String,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.GetStringFromOffset(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LanguageComparer.Compare(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.#ctor(MS.Internal.FontCache.FamilyCollection,MS.Internal.FontCache.FamilyCollection.CachedFamily*)">
    <parameter name="familyCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.Enumerator.GetCurrentLanguage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.Enumerator.GetCurrentName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.OrdinaryName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Windows#Markup#XmlLanguage@System#String}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Windows.Markup.XmlLanguage,System.String}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Windows#Markup#XmlLanguage@System#String}#Add(System.Windows.Markup.XmlLanguage,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Windows#Markup#XmlLanguage@System#String}#ContainsKey(System.Windows.Markup.XmlLanguage)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Windows#Markup#XmlLanguage@System#String}#Item(System.Windows.Markup.XmlLanguage)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Windows#Markup#XmlLanguage@System#String}#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Windows#Markup#XmlLanguage@System#String}#Remove(System.Windows.Markup.XmlLanguage)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Windows#Markup#XmlLanguage@System#String}#TryGetValue(System.Windows.Markup.XmlLanguage,System.String@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Windows#Markup#XmlLanguage@System#String}#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Windows#Markup#XmlLanguage@System#String}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LocalizedNameDictionary.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LookupFace(System.String,System.Int32@,MS.Internal.FontCache.FamilyCollection.CachedPhysicalFamily*)">
    <parameter name="styleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LookupLongestName(System.String,System.Int32@,MS.Internal.FontCache.FamilyCollection.CachedName*,System.Int32)">
    <parameter name="searchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cachedNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.LookupNextCharacter(System.String,System.Int32,System.Int32,MS.Internal.FontCache.FamilyCollection.CachedName*,System.Int32@,System.Int32@)">
    <parameter name="searchName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.PhysicalFace.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.SaveLocalizedString(MS.Internal.FontCache.LocalizedName,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.SaveRegularString(System.String,System.Collections.Generic.SortedList{System.String,System.Object})">
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FamilyCollection.StoreString(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FileMapping.OpenFile(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheAccessor.AddBitmapsToNativeCacheAtRenderTime(System.IntPtr,System.UInt32,System.Void*[],System.UInt16[],System.UInt16,System.Boolean)">
    <parameter name="glyphBitmaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphIndices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheAccessor.BuildGeometry(MS.Internal.FontCache.FontCacheAccessor.FontFaceID,System.UInt16[],System.Single*,System.Single,System.Single)">
    <parameter name="faceId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphIndices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pPositions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheAccessor.CreateGlyphBitmapsHelper(System.IntPtr,MS.Internal.FontCache.FontCacheAccessor.FontFaceID,System.UInt16[],System.UInt32)">
    <parameter name="faceId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphIndices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheAccessor.CreateGlyphGeometryHelper(System.IntPtr,MS.Internal.FontCache.FontCacheAccessor.FontFaceID,System.UInt16[],System.Single*,System.Single,System.Single)">
    <parameter name="glyphIndices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pGlyphPositions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="faceId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheAccessor.GetBitmaps(System.String,System.Int32,System.Int32,System.Int32,System.UInt16,System.UInt16,System.UInt16,System.Int32,System.UInt16[],System.Void*[])">
    <parameter name="glyphBitmaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fontFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheAccessor.GetGlyphs(MS.Internal.FontCache.BaseGlyphElement,System.Collections.Generic.IList{System.UInt16},System.Void*[])">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphIndices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphsArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheConfig.GetProtocol(MS.Internal.FontCache.FontCacheConfig.ProtocolType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheConfig.MakeClientPortSD">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontCacheConfig.MakeServerPortSid">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.#ctor(MS.Internal.FontCache.FontSource,System.Int32)">
    <parameter name="fontSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.FontFaceLayoutInfo.GaspRanges">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetAdjustedFaceNameDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetCopyrightDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetDescriptionDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetDesignerNameDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetDesignerUrlDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetFaceNameDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetFamilyNameDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetLicenseDescriptionDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetManufacturerNameDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetSampleTextDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetTrademarkDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetVendorUrlDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetVersionStringDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetWin32FaceNameDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.GetWin32FamilyNameDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.IntMap.CopyTo(System.Collections.Generic.KeyValuePair{System.Int32,System.UInt16}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.FontFaceLayoutInfo.IntMap.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.IntMap.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontCache.FontFaceLayoutInfo.IntMap.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.#ctor(MS.Internal.FontCache.ElementCacher,System.Int32)">
    <parameter name="cacher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.#ctor(MS.Internal.FontCache.ElementCacher,System.Int32,System.Int32)">
    <parameter name="cacher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.Enumerator.GetCurrentCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.Enumerator.GetCurrentName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.FindLCID(System.Int32,System.Int32,MS.Internal.FontCache.FontFaceLayoutInfo.CachedName*,System.Int32)">
    <parameter name="cachedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.GetName(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.GetNameFromLCID(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Globalization#CultureInfo@System#String}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Globalization.CultureInfo,System.String}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Globalization#CultureInfo@System#String}#Add(System.Globalization.CultureInfo,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Globalization#CultureInfo@System#String}#ContainsKey(System.Globalization.CultureInfo)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Globalization#CultureInfo@System#String}#Item(System.Globalization.CultureInfo)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Globalization#CultureInfo@System#String}#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Globalization#CultureInfo@System#String}#Remove(System.Globalization.CultureInfo)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Globalization#CultureInfo@System#String}#TryGetValue(System.Globalization.CultureInfo,System.String@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#IDictionary{System#Globalization#CultureInfo@System#String}#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Globalization#CultureInfo@System#String}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontFaceLayoutInfo.LocalizedNameDictionary.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontResourceCache.AddResourceToFolderMap(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String)">
    <parameter name="folderResourceMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceFullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontResourceCache.ConstructFontResourceCache(System.Reflection.Assembly,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})">
    <parameter name="folderResourceMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontResourceCache.IsFolderUri(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontResourceCache.LookupFolder(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontSource.#ctor(System.Uri,System.Boolean)">
    <parameter name="fontUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontSource.ByteArrayToUnmanagedStream(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontSource.GetStream">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontSource.GetUnmanagedStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.FontSource.PinnedByteArrayStream.#ctor(System.Byte[])">
    <parameter name="bits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontSource.StreamToByteArray(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fontStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontSourceCollection.#ctor(System.Uri,System.Boolean)">
    <parameter name="folderUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontSourceCollection.Equals(MS.Internal.FontCache.FontSourceCollection)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontSourceCollection.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.FontSourceCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.GsubGposTables.#ctor(MS.Internal.FontCache.FontFaceLayoutInfo)">
    <parameter name="layout">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.GsubGposTables.GetFontTable(MS.Internal.Shaping.OpenTypeTags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.HashFn.HashMemory(System.Void*,System.Int32,System.Int32)">
    <parameter name="pv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.HashFn.HashString(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.HashTable.AddNewElement(System.Int32*,System.Int32,System.Int32)">
    <parameter name="elementOffsetPtr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.HashTable.GetElementInfo(System.Int32*@,MS.Internal.FontCache.HashTable.ElementHeader*@,MS.Internal.FontCache.CheckedPointer@)">
    <parameter name="elementOffsetPtr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.HashTable.Lookup(MS.Internal.FontCache.IFontCacheElement,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.IPCCacheManager.#ctor(MS.Internal.FontCache.FontCacheConfig)">
    <parameter name="fc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.IPCCacheManager.GetServerSectionName(System.Int32,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.IPCCacheManager.SendMissReport(MS.Internal.FontCache.IFontCacheElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LocalizedName.#ctor(System.Windows.Markup.XmlLanguage,System.String)">
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LocalizedName.LanguageComparerClass.System#Collections#Generic#IComparer{MS#Internal#FontCache#LocalizedName}#Compare(MS.Internal.FontCache.LocalizedName,MS.Internal.FontCache.LocalizedName)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LocalizedName.NameComparerClass.System#Collections#Generic#IComparer{MS#Internal#FontCache#LocalizedName}#Compare(MS.Internal.FontCache.LocalizedName,MS.Internal.FontCache.LocalizedName)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.#ctor(MS.Internal.FontCache.LPCMessage)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.#ctor(MS.Internal.FontCache.LPCMessage,MS.Internal.FontCache.LPCMessageType)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.#ctor(System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.#ctor(System.Byte[],MS.Internal.FontCache.LPCMessageType)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.CopyDataFrom(System.Byte[])">
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.CopyDataTo(System.Byte[])">
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.CopyDataTo(System.Byte[],System.Int32)">
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.CopyDataTo(System.Byte[],System.Int32,System.Int32)">
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCMessage.CopyHeaderFrom(MS.Internal.FontCache.LPCMessage)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontCache.LPCMessage.Data">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.CloseSingleClient(MS.Internal.FontCache.ServerConnectionInstance)">
    <parameter name="inst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.CreatePort(System.String,System.Int32,System.Int32,MS.Internal.FontCache.SecurityDescriptor,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="securityDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.DispatchLPCMessage(MS.Internal.FontCache.LPCMessage)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.GetClientToBump(MS.Internal.FontCache.ClientManager,MS.Internal.FontCache.LPCMessage)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.MakeClientInfo(System.IntPtr,MS.Internal.FontCache.LPCMessage,System.Runtime.InteropServices.SafeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="connectMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.OnDatagram(MS.Internal.FontCache.LPCMessage)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.OnPortClosed(MS.Internal.FontCache.LPCMessage)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.OnRequest(MS.Internal.FontCache.LPCMessage)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.ProcessConnectionRequest(MS.Internal.FontCache.LPCMessage)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.ProcessConnectionRequest(System.Runtime.InteropServices.SafeHandle,MS.Internal.FontCache.LPCMessage,System.Boolean,System.IntPtr,System.Int32@)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.LPCServer.SendReply(System.Runtime.InteropServices.SafeHandle,MS.Internal.FontCache.LPCMessage,System.Int32@)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="portHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TryConnectToLPCPort(System.String,MS.Internal.FontCache.Sid,System.Byte[],System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TryConnectToLPCPort(System.String,System.Void*,System.Byte[],System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TryCreateLPCPort(System.String,System.Int32,System.Int32,MS.Internal.FontCache.SecurityDescriptor,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="securityDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TryProcessConnectionRequest(MS.Internal.FontCache.LPCMessage,System.Boolean,System.IntPtr,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendDatagram(MS.Internal.FontCache.LPCClientConnection,MS.Internal.FontCache.LPCMessage,System.Int32@)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendDatagram(MS.Internal.FontCache.LPCClientConnection,System.Byte[],System.Int32,System.Int32,System.Int32@)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendDatagram(MS.Internal.FontCache.LPCClientConnection,System.Byte[],System.Int32@)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendReply(MS.Win32.SafePortHandle,MS.Internal.FontCache.LPCMessage,System.Int32@)">
    <parameter name="portHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendReply(MS.Win32.SafePortHandle,System.Byte[],System.Int32,System.Int32,System.Int32@)">
    <parameter name="portHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendReply(MS.Win32.SafePortHandle,System.Byte[],System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="portHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendRequest(MS.Internal.FontCache.LPCClientConnection,MS.Internal.FontCache.LPCMessage,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendRequest(MS.Internal.FontCache.LPCClientConnection,System.Byte[],System.Int32,System.Int32,System.Int32@)">
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.LPCServices.TrySendRequest(MS.Internal.FontCache.LPCClientConnection,System.Byte[],System.Int32@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="conn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.NtErrorCodeProtocol.TryCloseInstance(MS.Internal.FontCache.ConnectionInstance,System.Int32@)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.NtErrorCodeProtocol.TryConnectToServer(System.Int32,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.NtErrorCodeProtocol.TrySendRequest(MS.Internal.FontCache.ConnectionInstance,System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32@)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.RobustProtocol.TryCloseInstance(MS.Internal.FontCache.ConnectionInstance,System.Int32@)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.RobustProtocol.TryConnectToServer(System.Int32,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.RobustProtocol.WorkerThreadFunc(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.SendRequestTask.Cleanup(System.Object)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.TypefaceMetricsCache.Add(System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.TypefaceMetricsCache.ReadonlyLookup(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.ArrayCopyToCheckedPointer(MS.Internal.FontCache.CheckedPointer,System.UInt16[],System.Int32,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.CombineUriWithFaceIndex(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fontUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.CompareOrdinalIgnoreCase(System.String,System.String)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.ConvertFamilyNameAndLocationToFontFamilyReference(System.String,System.String)">
    <parameter name="familyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.ConvertFontFamilyReferenceToFriendlyName(System.String)">
    <parameter name="fontFamilyReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.ConvertInPageException(MS.Internal.FontCache.FontSource,System.Runtime.InteropServices.SEHException)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fontSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.GetNormalizedFontFamilyReference(System.String,System.Int32,System.Int32)">
    <parameter name="friendlyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.GetUriExtension(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.Util.IsAppSpecificUri(System.Uri)">
    <parameter name="fontLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.IsEnumerableFontUriScheme(System.Uri)">
    <parameter name="fontLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.IsSupportedSchemeForAbsoluteFontFamilyUri(System.Uri)">
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.NormalizeFontFamilyReference(System.String)">
    <parameter name="fontFamilyReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.NormalizeFontFamilyReference(System.String,System.Int32,System.Int32)">
    <parameter name="fontFamilyReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.SplitFontFaceIndex(System.Uri,System.Uri@,System.Int32@)">
    <parameter name="fontUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringAndLengthCopyFromCheckedPointer(MS.Internal.FontCache.CheckedPointer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringAndLengthCopyToCheckedPointer(MS.Internal.FontCache.CheckedPointer,System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringCopyFromCheckedPointer(MS.Internal.FontCache.CheckedPointer,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringCopyFromUncheckedPointer(System.Void*,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringCopyToCheckedPointer(MS.Internal.FontCache.CheckedPointer,System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringCopyToUncheckedPointer(System.Void*,System.String)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringEqual(MS.Internal.FontCache.CheckedPointer,System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringEqualIgnoreCase(MS.Internal.FontCache.CheckedPointer,System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util.StringSize(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.#ctor(System.Int64[])">
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.ArrayToString(System.Object[])">
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.Util2.ArrayToString(System.Object[],System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.Average(System.Int64[])">
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.Average(System.Int64[][])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.ByteArrayAppend(System.Byte[],System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="a1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.ByteArrayCompare(System.Byte[],System.Byte[])">
    <parameter name="a1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.ByteArrayToString(System.Byte[])">
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontCache.Util2.ByteArrayToString(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.MakeCopy(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Util2.StringToByteArray(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontCache.Win32ErrorDecoder.FromLastError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CachedCompositeFamily.DeviceFont.MS#Internal#FontFace#IDeviceFont#GetAdvanceWidths(System.Char*,System.Int32,System.Double,System.Int32*)">
    <parameter name="pAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontFace.CachedCompositeFamily.DeviceFont.MS#Internal#FontFace#IDeviceFont#Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CachedCompositeFamily.GetCachedFamilyMap(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Int32@)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CachedCompositeFamily.GetFirstFontFamily">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CachedCompositeFamily.GetFirstTargetFamilyName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CachedCompositeFamily.MS#Internal#FontFace#IFontFamily#GetDeviceFont(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CachedCompositeFamily.MS#Internal#FontFace#IFontFamily#GetTypefaceMetrics(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CachedCompositeFamily.MS#Internal#FontFace#IFontFamily#GetTypefaces(MS.Internal.FontFace.FontFamilyIdentifier)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontFace.CachedCompositeFamily.MS#Internal#FontFace#IFontFamily#Names">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontInfo.CreateFamilyMapRanges(System.Windows.Markup.XmlLanguage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontFace.CompositeFontInfo.FamilyMapLanguages">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontInfo.GetFamilyMapOfChar(System.UInt16[],System.Int32)">
    <parameter name="familyMapRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontInfo.GetFamilyTypefaceList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontInfo.IsFamilyMapRangesValid(System.UInt16[])">
    <parameter name="familyMapRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontInfo.PrepareToAddFamilyMap(System.Windows.Media.FontFamilyMap)">
    <parameter name="familyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.#ctor(System.IO.Stream)">
    <parameter name="fileStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.CreateXmlReader(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.FailAttributeValue(System.Exception)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.GetAttributeAsXmlLanguage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.GetAttributeValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.IsMappedNamespace(System.String)">
    <parameter name="xmlNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.IsXmlNamespaceSupported(System.String,System.String@)">
    <parameter name="xmlNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.LoadXml(System.IO.Stream)">
    <parameter name="fileStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.ParseCharacterMetricsElement(System.Windows.Media.FamilyTypeface)">
    <parameter name="face">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.CompositeFontParser.ParseFamilyTypefaceAttributes(System.Windows.Media.FamilyTypeface)">
    <parameter name="face">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.AppendBoldSimulation(System.String@)">
    <parameter name="faceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.AppendObliqueSimulation(System.String@)">
    <parameter name="faceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.AppendSimulationsToFaceNames(System.Collections.Generic.IDictionary{System.Windows.Markup.XmlLanguage,System.String},System.Windows.Media.StyleSimulations)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.BuildFaceName(System.String,System.Windows.FontStyle,System.String,System.Windows.FontWeight,System.String,System.Windows.FontStretch,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.ConstructFaceNamesByStyleWeightStretch(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.ExtractFaceAspect``1(MS.Internal.FontFace.FontDifferentiator.SubFamilyPattern{``0}[],System.String@,System.String@,``0@)">
    <parameter name="patterns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.ExtractStyleWeightAndStretchFromNames(System.String,System.String,System.String,System.String,System.Windows.FontWeight,System.String@,System.String@,System.String@,System.String@,System.String@,System.Windows.FontStyle@,System.Windows.FontWeight@,System.Windows.FontStretch@)">
    <parameter name="canonicalPreferredFamilyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="canonicalPreferredSubFamilyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.ResolveFaceConflicts(System.Collections.Generic.List{MS.Internal.FontCache.FamilyCollection.BaseFamily},System.Collections.Generic.SortedList{System.String,System.Object},MS.Internal.FontCache.FamilyCollection)">
    <parameter name="familyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="frequentStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="familyCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.StretchWeightStyleComparer.CalculateScore(MS.Internal.FontCache.FamilyCollection.PhysicalFace)">
    <parameter name="face">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.StretchWeightStyleComparer.Compare(MS.Internal.FontCache.FamilyCollection.PhysicalFace,MS.Internal.FontCache.FamilyCollection.PhysicalFace)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.StyleStretchWeightComparer.CalculateScore(MS.Internal.FontCache.FamilyCollection.PhysicalFace)">
    <parameter name="face">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontDifferentiator.StyleStretchWeightComparer.Compare(MS.Internal.FontCache.FamilyCollection.PhysicalFace,MS.Internal.FontCache.FamilyCollection.PhysicalFace)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontFamilyIdentifier.BasedName.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontFamilyIdentifier.CountTokens(System.String)">
    <parameter name="friendlyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontFamilyIdentifier.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.FontFamilyIdentifier.FindToken(System.String,System.Int32,System.Int32@,System.Int32@)">
    <parameter name="friendlyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.MatchingStyle.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.MatchingStyle.Vector.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.PhysicalFontFamily.GetGlyphTypeface(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.PhysicalFontFamily.MapCharacters(System.Windows.Media.GlyphTypeface,System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Int32@)">
    <parameter name="typeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.PhysicalFontFamily.MapGlyphTypeface(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch,System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Int32@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.PhysicalFontFamily.MS#Internal#FontFace#IFontFamily#GetDeviceFont(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.PhysicalFontFamily.MS#Internal#FontFace#IFontFamily#GetTypefaceMetrics(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.PhysicalFontFamily.MS#Internal#FontFace#IFontFamily#GetTypefaces(MS.Internal.FontFace.FontFamilyIdentifier)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontFace.PhysicalFontFamily.MS#Internal#FontFace#IFontFamily#Names">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.#ctor(System.IO.UnmanagedMemoryStream,System.Uri)">
    <parameter name="unmanagedMemoryStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.CharacterToUnicodeMapper.MapBytesToUtf16(System.Byte[],System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ComputeFontContrastAdjustment(MS.Internal.FontFace.TrueTypeFontDriver.ParsedNameTable@,MS.Internal.FontCache.FontFaceLayoutInfo)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ComputeFontSubset(System.Collections.Generic.ICollection{System.UInt16})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ComputeHeights(MS.Internal.FontCache.CheckedPointer,System.UInt16,MS.Internal.FontCache.FontFaceLayoutInfo)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.CrossPopulateSymbolFontCodepoints(MS.Internal.FontCache.FontFaceLayoutInfo.IntMap)">
    <parameter name="characterMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.GetCharacterToUnicodeMapperForCharacterEncoding(MS.Internal.FontFace.TrueTypeFontDriver.CharacterEncoding)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.GetLayoutFontFaceInfo(MS.Internal.FontCache.FontFaceLayoutInfo)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.GetShapingFontFaceInfo(MS.Internal.FontCache.FontFaceLayoutInfo)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.MacRomanToUnicodeMapper.MapBytesToUtf16(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.CandidateComparer.System#Collections#Generic#IComparer{MS#Internal#FontFace#TrueTypeFontDriver#NameCollection#LocalizedNameCandidate}#Compare(MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.LocalizedNameCandidate,MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.LocalizedNameCandidate)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.ConvertAllNames(MS.Internal.FontCache.CheckedPointer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.ConvertVersion(MS.Internal.FontCache.CheckedPointer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.Parse8BitCodepageName(MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.LocalizedNameCandidate,MS.Internal.FontCache.CheckedPointer)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.ParseNameString(MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.LocalizedNameCandidate,MS.Internal.FontCache.CheckedPointer)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.ParseUtf16Name(MS.Internal.FontFace.TrueTypeFontDriver.NameCollection.LocalizedNameCandidate,MS.Internal.FontCache.CheckedPointer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.NullMapper.MapBytesToUtf16(System.Byte[],System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadAdvances(MS.Internal.FontCache.FontFaceLayoutInfo,MS.Internal.FontCache.CheckedPointer,System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadCFFMetrics(MS.Internal.FontCache.FontFaceLayoutInfo,System.Boolean,System.UInt16,System.UInt16)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadCmapFormat0(MS.Internal.FontCache.CheckedPointer,System.Int32,MS.Internal.FontFace.TrueTypeFontDriver.CharacterToUnicodeMapper,MS.Internal.FontCache.FontFaceLayoutInfo.IntMap)">
    <parameter name="mapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadCmapFormat12(MS.Internal.FontCache.CheckedPointer,System.Int32,MS.Internal.FontCache.FontFaceLayoutInfo.IntMap)">
    <parameter name="characterMapInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadCmapFormat2(MS.Internal.FontCache.CheckedPointer,System.Int32,MS.Internal.FontFace.TrueTypeFontDriver.CharacterToUnicodeMapper,MS.Internal.FontCache.FontFaceLayoutInfo.IntMap)">
    <parameter name="mapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadCmapFormat4(MS.Internal.FontCache.CheckedPointer,System.Int32,MS.Internal.FontFace.TrueTypeFontDriver.CharacterToUnicodeMapper,MS.Internal.FontCache.FontFaceLayoutInfo.IntMap)">
    <parameter name="mapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterMapInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadCmapFormat6(MS.Internal.FontCache.CheckedPointer,System.Int32,MS.Internal.FontFace.TrueTypeFontDriver.CharacterToUnicodeMapper,MS.Internal.FontCache.FontFaceLayoutInfo.IntMap)">
    <parameter name="mapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadGlyfMetrics(MS.Internal.FontCache.FontFaceLayoutInfo,System.UInt16,System.Boolean,System.UInt16,System.UInt16)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadHmtx(MS.Internal.FontCache.FontFaceLayoutInfo,MS.Internal.FontCache.CheckedPointer,System.UInt16)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadRenderingHints(MS.Internal.FontCache.CheckedPointer,MS.Internal.FontCache.FontFaceLayoutInfo)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TrueTypeFontDriver.ReadVmtx(MS.Internal.FontCache.FontFaceLayoutInfo)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TypefaceCollection.Add(System.Windows.Media.Typeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TypefaceCollection.Contains(System.Windows.Media.Typeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TypefaceCollection.CopyTo(System.Windows.Media.Typeface[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.FontFace.TypefaceCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.FontFace.TypefaceCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TypefaceCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FontFace.TypefaceCollection.Remove(System.Windows.Media.Typeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.FontFace.TypefaceCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Generic.SpanVector`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Generic.SpanVector`1.SpanEnumerator`1.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Generic.SpanVector`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.GenericEnumerator.#ctor(System.Collections.IList,MS.Internal.GenericEnumerator.GetGenerationIDDelegate)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getGenerationID">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.GenericEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.Bezier.AddBezierSegment(MS.Internal.Ink.CuspData,System.Int32,@,System.Int32,@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Bezier.AddLeastSquares(MS.Internal.Ink.CuspData,System.Int32,@,System.Int32,@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Bezier.AddLine(MS.Internal.Ink.CuspData,System.Int32,System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Bezier.AddParabola(MS.Internal.Ink.CuspData,System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Bezier.AddSegmentPoint(MS.Internal.Ink.CuspData,System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Bezier.CoCubic(MS.Internal.Ink.CuspData,System.Int32[],System.Double)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="i">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Bezier.ConstructFromData(MS.Internal.Ink.CuspData,System.Double)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Bezier.ExtendingRange(System.Double,MS.Internal.Ink.CuspData,System.Int32,System.Int32,System.Int32@,System.Boolean@,System.Boolean@)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Bezier.Flatten(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.Bezier.FlattenSegment(System.Int32,System.Double,System.Collections.Generic.List{})">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.BitStreamReader.#ctor(System.Byte[])">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.BitStreamReader.#ctor(System.Byte[],System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.BitStreamReader.#ctor(System.Byte[],System.UInt32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.BitStreamWriter.#ctor(System.Collections.Generic.List{System.Byte})">
    <parameter name="bufferToWriteTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.CuspData.XY(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.EllipticalNodeOperations.#ctor(System.Windows.Ink.StylusShape)">
    <parameter name="nodeShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.ErasingStroke.#ctor(System.Windows.Ink.StylusShape)">
    <parameter name="erasingShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.ErasingStroke.#ctor(System.Windows.Ink.StylusShape,System.Collections.Generic.IEnumerable{})">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="erasingShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.ErasingStroke.EraseTest(MS.Internal.Ink.StrokeNodeIterator,System.Collections.Generic.List{System.Windows.Ink.StrokeIntersection})">
    <parameter name="iterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="intersections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.ErasingStroke.FilterPoints([])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.ErasingStroke.HitTest(MS.Internal.Ink.StrokeNodeIterator)">
    <parameter name="iterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.ErasingStroke.MoveTo(System.Collections.Generic.IEnumerable{})">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.AddStrokes(MS.Win32.Recognizer.ContextSafeHandle,System.Windows.Ink.StrokeCollection)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.CreateInstance">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.GetApplicationGestureArrayAndVerify(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="applicationGestures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.GetPacketData(System.Windows.Ink.Stroke,MS.Win32.Recognizer.PACKET_DESCRIPTION@,System.Int32@,System.IntPtr@,@)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.InvokeGetAlternateList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.InvokeGetLatticePtr">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.Recognize(System.Windows.Ink.StrokeCollection)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.SetEnabledGestures(MS.Win32.Recognizer.ContextSafeHandle,System.Windows.Ink.ApplicationGesture[])">
    <parameter name="enabledGestures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.GestureRecognition.NativeRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="applicationGestures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.AlgoModule.CompressPacketData(System.Int32[],System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.AlgoModule.CompressPropertyData(System.Byte[],System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.AlgoModule.DecompressPacketData(System.Byte[],System.Int32[])">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.AlgoModule.DecompressPropertyData(System.Byte[])">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Ink.InkSerializedFormat.AlgoModule.DeltaDelta">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.AlgoModule.GetBestDefHuff(System.Int32[])">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Ink.InkSerializedFormat.AlgoModule.GorillaCodec">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Ink.InkSerializedFormat.AlgoModule.HuffModule">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Ink.InkSerializedFormat.AlgoModule.LZCodec">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Ink.InkSerializedFormat.AlgoModule.MultiByteCodec">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.Compressor.CompressPacketData(System.Int32[],System.Byte@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.Compressor.CompressPropertyData(System.Byte[],System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.Compressor.DecompressPacketData(System.Byte[],System.UInt32@,System.Int32[])">
    <parameter name="compressedInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="decompressedPackets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.Compressor.DecompressPropertyData(System.Byte[])">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.DrawingAttributeSerializer.DecodeAsISF(System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32,System.Windows.Ink.DrawingAttributes)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.DrawingAttributeSerializer.EncodeAsISF(System.Windows.Ink.DrawingAttributes,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.Byte,System.Boolean)">
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.DrawingAttributeSerializer.PersistColorAndTransparency(System.Windows.Ink.DrawingAttributes,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32@,System.IO.BinaryWriter@)">
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.DrawingAttributeSerializer.PersistDrawingFlags(System.Windows.Ink.DrawingAttributes,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32@,System.IO.BinaryWriter@)">
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.DrawingAttributeSerializer.PersistExtendedProperties(System.Windows.Ink.DrawingAttributes,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32@,System.IO.BinaryWriter@,System.Byte,System.Boolean)">
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.DrawingAttributeSerializer.PersistRasterOperation(System.Windows.Ink.DrawingAttributes,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32@,System.IO.BinaryWriter@)">
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.DrawingAttributeSerializer.PersistStylusTip(System.Windows.Ink.DrawingAttributes,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32@,System.IO.BinaryWriter@)">
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.DrawingAttributeSerializer.PersistWidthHeight(System.Windows.Ink.DrawingAttributes,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32@,System.IO.BinaryWriter@)">
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bw">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.DecodeAsISF(System.IO.Stream,System.UInt32,MS.Internal.Ink.InkSerializedFormat.GuidList,MS.Internal.Ink.InkSerializedFormat.KnownTagCache.KnownTagIndex,System.Guid@,System.Object@)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.DecodeAttribute(System.Guid,System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.DecodeAttribute(System.Guid,System.IO.Stream,System.Runtime.InteropServices.VarEnum@)">
    <parameter name="memStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.EncodeAsISF(System.Guid,System.Byte[],System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.Byte,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.EncodeAsISF(System.Windows.Ink.ExtendedPropertyCollection,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.Byte,System.Boolean)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.EncodeAttribute(System.Guid,System.Object,System.Runtime.InteropServices.VarEnum,System.IO.Stream)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.EncodeToStream(System.Windows.Ink.ExtendedProperty,System.IO.Stream)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.GetUnknownGuids(System.Windows.Ink.ExtendedPropertyCollection,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.ExtendedPropertySerializer.Validate(System.Guid,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.GorillaCodec.Compress(System.Int32,MS.Internal.Ink.BitStreamReader,MS.Internal.Ink.InkSerializedFormat.GorillaEncodingType,System.Int32,System.Collections.Generic.List{System.Byte})">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="compressedData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.GorillaCodec.Compress(System.Int32,System.Int32[],System.Int32,MS.Internal.Ink.InkSerializedFormat.DeltaDelta,System.Collections.Generic.List{System.Byte})">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="compressedData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.GorillaCodec.FindPacketAlgoByte(System.Int32[],System.Boolean)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.GorillaCodec.FindPropAlgoByte(System.Byte[])">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.GorillaCodec.GetDataFromReader(MS.Internal.Ink.BitStreamReader,MS.Internal.Ink.InkSerializedFormat.GorillaEncodingType)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.GorillaCodec.Uncompress(System.Int32,MS.Internal.Ink.BitStreamReader,MS.Internal.Ink.InkSerializedFormat.GorillaEncodingType,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.GorillaCodec.Uncompress(System.Int32,System.Byte[],System.Int32,MS.Internal.Ink.InkSerializedFormat.DeltaDelta,System.Int32[],System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.GuidList.Load(System.IO.Stream,System.UInt32)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.HuffCodec.Compress(MS.Internal.Ink.InkSerializedFormat.DataXform,System.Int32[],System.Collections.Generic.List{System.Byte})">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="compressedData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.HuffCodec.Decode(System.Int32@,System.Int32@,MS.Internal.Ink.BitStreamReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.HuffCodec.Encode(System.Int32,System.Int32,MS.Internal.Ink.BitStreamWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.HuffCodec.InitHuffTable(MS.Internal.Ink.InkSerializedFormat.HuffCodec.HuffBits)">
    <parameter name="huffBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.HuffCodec.Uncompress(MS.Internal.Ink.InkSerializedFormat.DataXform,System.Byte[],System.Int32,System.Int32[])">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Ink.InkSerializedFormat.HuffModule.DefaultDeltaDelta">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.HuffModule.FindDtXf(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.HuffModule.GetDefCodec(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.LZCodec.Uncompress(System.Byte[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MetricBlock.AddMetricEntry(MS.Internal.Ink.InkSerializedFormat.MetricEntry)">
    <parameter name="newEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MetricBlock.AddMetricEntry(System.Windows.Input.StylusPointPropertyInfo,MS.Internal.Ink.InkSerializedFormat.KnownTagCache.KnownTagIndex)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MetricBlock.Pack(System.IO.Stream)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MetricEntry.Compare(MS.Internal.Ink.InkSerializedFormat.MetricEntry)">
    <parameter name="metricEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MetricEntry.CreateMetricEntry(System.Windows.Input.StylusPointPropertyInfo,MS.Internal.Ink.InkSerializedFormat.KnownTagCache.KnownTagIndex)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MetricEntry.Initialize(System.Windows.Input.StylusPointPropertyInfo,System.Windows.Input.StylusPointPropertyInfo)">
    <parameter name="originalInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MetricEntry.IsValidMetricEntry(System.Windows.Input.StylusPointPropertyInfo,MS.Internal.Ink.InkSerializedFormat.KnownTagCache.KnownTagIndex,MS.Internal.Ink.InkSerializedFormat.MetricEntryType@,System.UInt32@)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MultiByteCodec.Decode(System.Byte[],System.Int32,System.UInt32@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MultiByteCodec.Encode(System.UInt32,System.Collections.Generic.List{System.Byte})">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MultiByteCodec.SignDecode(System.Byte[],System.Int32,System.Int32@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.MultiByteCodec.SignEncode(System.Int32,System.Collections.Generic.List{System.Byte})">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.SerializationHelper.Decode(System.IO.Stream,System.UInt32@)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.SerializationHelper.DecodeLarge(System.IO.Stream,System.UInt64@)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.SerializationHelper.Encode(System.IO.Stream,System.UInt32)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.SerializationHelper.EncodeLarge(System.IO.Stream,System.UInt64)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.SerializationHelper.SignDecode(System.IO.Stream,System.Int32@)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.SerializationHelper.SignEncode(System.IO.Stream,System.Int32)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.BuildGuidList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.BuildStrokeGuidList(System.Windows.Ink.Stroke,MS.Internal.Ink.InkSerializedFormat.GuidList)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.BuildStylusPointDescription(MS.Internal.Ink.InkSerializedFormat.StrokeDescriptor,MS.Internal.Ink.InkSerializedFormat.MetricBlock,MS.Internal.Ink.InkSerializedFormat.GuidList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.BuildTables(MS.Internal.Ink.InkSerializedFormat.GuidList)">
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeInkSpaceRectangle(System.IO.Stream,System.UInt32)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeISF(System.IO.Stream)">
    <parameter name="inkData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeMetricBlock(System.IO.Stream,System.UInt32,MS.Internal.Ink.InkSerializedFormat.MetricBlock@)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeMetricTable(System.IO.Stream,System.UInt32)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeRawISF(System.IO.Stream)">
    <parameter name="inputStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeStrokeDescriptor(System.IO.Stream,System.UInt32,MS.Internal.Ink.InkSerializedFormat.StrokeDescriptor@)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeStrokeDescriptorBlock(System.IO.Stream,System.UInt32)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeStrokeDescriptorTable(System.IO.Stream,System.UInt32)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeTransformBlock(System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.KnownTagCache.KnownTagIndex,System.UInt32,System.Boolean,MS.Internal.Ink.InkSerializedFormat.TransformDescriptor@)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.DecodeTransformTable(System.IO.Stream,System.UInt32,System.Boolean)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.EncodeISF(System.IO.Stream)">
    <parameter name="outputStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.EncodeStrokeDescriptor(System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.StrokeDescriptor)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.EncodeTransformDescriptor(System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.TransformDescriptor,System.Boolean)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.ExamineStreamHeader(System.IO.Stream,System.Boolean@,System.Boolean@,System.UInt32@)">
    <parameter name="inkdata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.GetStylusPointPropertyInfo(System.Guid,MS.Internal.Ink.InkSerializedFormat.KnownTagCache.KnownTagIndex,MS.Internal.Ink.InkSerializedFormat.MetricBlock)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.IsBase64Data(System.IO.Stream)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.ISFDebugMessage(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.IsGIFData(System.IO.Stream)">
    <parameter name="inkdata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.LoadDrawAttrsTable(System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.LoadStrokeIds(System.IO.Stream,System.UInt32)">
    <parameter name="isfStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.LoadTransform(MS.Internal.Ink.InkSerializedFormat.TransformDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tdrd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.ReadGifData(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inkdata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.ReliableRead(System.IO.Stream,System.Byte[],System.UInt32)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.SaveStrokeIds(System.Windows.Ink.StrokeCollection,System.IO.Stream,System.Boolean)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.SerializeDrawingAttrsTable(System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.SerializeMetricTable(System.IO.Stream)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.SerializePacketDescrTable(System.IO.Stream)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.SerializeTransformTable(System.IO.Stream)">
    <parameter name="strm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.StoreStrokeData(System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.GuidList,System.UInt32@,System.UInt32@)">
    <parameter name="localStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeDescriptor.IsEqual(MS.Internal.Ink.InkSerializedFormat.StrokeDescriptor)">
    <parameter name="strd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeIdGenerator.GetStrokeIds(System.Windows.Ink.StrokeCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeSerializer.BuildStrokeDescriptor(System.Windows.Ink.Stroke,MS.Internal.Ink.InkSerializedFormat.GuidList,MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.StrokeLookupEntry,MS.Internal.Ink.InkSerializedFormat.StrokeDescriptor@,MS.Internal.Ink.InkSerializedFormat.MetricBlock@)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strokeLookupEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeSerializer.DecodeISFIntoStroke(System.IO.Stream,System.UInt32,MS.Internal.Ink.InkSerializedFormat.GuidList,MS.Internal.Ink.InkSerializedFormat.StrokeDescriptor,System.Windows.Input.StylusPointDescription,,System.Windows.Input.StylusPointCollection@,System.Windows.Ink.ExtendedPropertyCollection@)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strokeDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusPointDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeSerializer.DecodeStroke(System.IO.Stream,System.UInt32,MS.Internal.Ink.InkSerializedFormat.GuidList,MS.Internal.Ink.InkSerializedFormat.StrokeDescriptor,System.Windows.Input.StylusPointDescription,System.Windows.Ink.DrawingAttributes,,System.Windows.Ink.Stroke@)">
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusPointDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strokeDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeSerializer.EncodeStroke(System.Windows.Ink.Stroke,System.IO.Stream,System.Byte,MS.Internal.Ink.InkSerializedFormat.GuidList,MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.StrokeLookupEntry)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="guidList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strokeLookupEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeSerializer.FillButtonData(System.Int32,System.Int32,System.Int32,System.Int32[],System.Byte[])">
    <parameter name="packets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeSerializer.LoadPackets(System.IO.Stream,System.UInt32,System.Windows.Input.StylusPointDescription,,System.Windows.Input.StylusPointCollection@)">
    <parameter name="inputStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusPointDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeSerializer.SavePacketPropertyData(System.Int32[],System.IO.Stream,System.Guid,System.Byte@)">
    <parameter name="packetdata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.StrokeSerializer.SavePackets(System.Windows.Ink.Stroke,System.IO.Stream,MS.Internal.Ink.InkSerializedFormat.StrokeCollectionSerializer.StrokeLookupEntry)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strokeLookupEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.InkSerializedFormat.TransformDescriptor.Compare(MS.Internal.Ink.InkSerializedFormat.TransformDescriptor)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Lasso.AddPoints(System.Collections.Generic.IEnumerable{})">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Lasso.HitTest(MS.Internal.Ink.StrokeNodeIterator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="iterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Lasso.LassoCrossing.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Lasso.ProduceHitTestResults(System.Collections.Generic.List{MS.Internal.Ink.Lasso.LassoCrossing},System.Collections.Generic.List{System.Windows.Ink.StrokeIntersection})">
    <parameter name="crossingList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strokeIntersections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Lasso.SortAndMerge(System.Collections.Generic.List{MS.Internal.Ink.Lasso.LassoCrossing}@)">
    <parameter name="crossingList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.Quad.GetPoints(System.Collections.Generic.List{})">
    <parameter name="pointBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeFIndices.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeInfo.#ctor(System.Windows.Ink.Stroke)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeInfo.OnDrawingAttributesReplaced(System.Object,System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeInfo.OnStrokeDrawingAttributesChanged(System.Object,System.Windows.Ink.PropertyDataChangedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNode.GetContourPoints(System.Collections.Generic.List{})">
    <parameter name="pointBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNode.GetIntersection(,,,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.StrokeNode.GetPointsAtEndOfSegment(System.Collections.Generic.List{},System.Collections.Generic.List{})">
    <parameter name="abPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dcPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNode.GetPointsAtMiddleSegment(MS.Internal.Ink.StrokeNode,System.Double,System.Collections.Generic.List{},System.Collections.Generic.List{},System.Boolean@)">
    <parameter name="abPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dcPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNode.GetPointsAtStartOfSegment(System.Collections.Generic.List{},System.Collections.Generic.List{})">
    <parameter name="abPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dcPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNode.GetPreviousContourPoints(System.Collections.Generic.List{})">
    <parameter name="pointBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeIterator.#ctor(System.Windows.Ink.StylusShape)">
    <parameter name="nodeShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeIterator.#ctor(System.Windows.Input.StylusPointCollection,MS.Internal.Ink.StrokeNodeOperations,System.Boolean)">
    <parameter name="operations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeIterator.GetIterator(System.Windows.Ink.Stroke,System.Windows.Ink.DrawingAttributes)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeIterator.GetIterator(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeIterator.GetIteratorForNextSegment([])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeIterator.GetIteratorForNextSegment(System.Windows.Input.StylusPointCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeOperations.#ctor(System.Windows.Ink.StylusShape)">
    <parameter name="nodeShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeOperations.CreateInstance(System.Windows.Ink.StylusShape)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nodeShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeOperations.CutTest(MS.Internal.Ink.StrokeNodeData,MS.Internal.Ink.StrokeNodeData,MS.Internal.Ink.Quad,System.Collections.Generic.IEnumerable{MS.Internal.Ink.ContourSegment})">
    <parameter name="hitContour">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeOperations.GetNodeContourPoints(MS.Internal.Ink.StrokeNodeData,System.Collections.Generic.List{})">
    <parameter name="pointBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeOperations.HitTest(MS.Internal.Ink.StrokeNodeData,MS.Internal.Ink.StrokeNodeData,MS.Internal.Ink.Quad,System.Collections.Generic.IEnumerable{MS.Internal.Ink.ContourSegment})">
    <parameter name="hitContour">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeOperations.HitTestInkContour(System.Collections.Generic.IEnumerable{MS.Internal.Ink.ContourSegment},MS.Internal.Ink.Quad,MS.Internal.Ink.StrokeNodeData,MS.Internal.Ink.StrokeNodeData)">
    <parameter name="hitContour">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeOperations.HitTestPolygonContourSegments(System.Collections.Generic.IEnumerable{MS.Internal.Ink.ContourSegment},MS.Internal.Ink.StrokeNodeData,MS.Internal.Ink.StrokeNodeData)">
    <parameter name="hitContour">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeNodeOperations.HitTestPolygonSegment([],,)">
    <parameter name="vertices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeRenderer.AddArcToFigureToStreamGeometryContext(System.Windows.Media.StreamGeometryContext,System.Collections.Generic.List{},System.Collections.Generic.List{},System.Collections.Generic.List{})">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="abPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dcPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="polyLinePoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeRenderer.AddFigureToStreamGeometryContext(System.Windows.Media.StreamGeometryContext,System.Collections.Generic.List{},System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeRenderer.AddPolylineFigureToStreamGeometryContext(System.Windows.Media.StreamGeometryContext,System.Collections.Generic.List{},System.Collections.Generic.List{})">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="abPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dcPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeRenderer.CalcGeometryAndBounds(MS.Internal.Ink.StrokeNodeIterator,System.Windows.Ink.DrawingAttributes,System.Boolean,System.Windows.Media.Geometry@,@)">
    <parameter name="iterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeRenderer.CalcGeometryAndBoundsWithTransform(MS.Internal.Ink.StrokeNodeIterator,System.Windows.Ink.DrawingAttributes,,System.Boolean,System.Windows.Media.Geometry@,@)">
    <parameter name="iterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeRenderer.GetHighlighterAttributes(System.Windows.Ink.Stroke,System.Windows.Ink.DrawingAttributes)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="da">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeRenderer.RenderTwoStrokeNodes(System.Windows.Media.StreamGeometryContext,MS.Internal.Ink.StrokeNode,,MS.Internal.Ink.StrokeNode,,System.Collections.Generic.List{},System.Collections.Generic.List{},System.Collections.Generic.List{})">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pointBuffer1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pointBuffer2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pointBuffer3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Ink.StrokeRenderer.ReverseDCPointsRenderAndClear(System.Windows.Media.StreamGeometryContext,System.Collections.Generic.List{},System.Collections.Generic.List{},System.Collections.Generic.List{},System.Boolean,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="abPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dcPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="polyLinePoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.#ctor(System.Uri,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
    <parameter name="requestedUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.#ctor(System.Uri,System.IO.Stream,Microsoft.Win32.SafeHandles.SafeWaitHandle,System.Threading.Mutex)">
    <parameter name="eventHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requestedUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.#ctor(System.Uri,System.String,Microsoft.Win32.SafeHandles.SafeWaitHandle)">
    <parameter name="tempFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requestedUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.CheckContentRange(System.Net.WebHeaderCollection,System.Int32,System.Int32@)">
    <parameter name="responseHeaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.CheckOneDimensionalByteRanges(System.Int32[])">
    <parameter name="byteRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.CheckTwoDimensionalByteRanges(System.Int32[0:,0:])">
    <parameter name="byteRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.ConvertByteRanges(System.Int32[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inByteRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.ConvertByteRanges(System.Int32[0:,0:])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inByteRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.CreateHttpWebRequest(System.Int32[0:,0:])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="byteRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.GetDownloadedByteRanges">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.IO.Packaging.ByteRangeDownloader.Proxy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.RequestByteRanges(System.Int32[0:,0:])">
    <parameter name="byteRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.ResponseCallback(System.IAsyncResult)">
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.Write(System.IO.Stream,System.Int32,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.ByteRangeDownloader.WriteByteRange(System.Net.HttpWebResponse,System.Int32,System.Int32)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.DeobfuscatingStream.#ctor(System.IO.Stream,System.Uri,System.Boolean)">
    <parameter name="obfuscatedStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="streamUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.DeobfuscatingStream.Deobfuscate(System.Byte[],System.Int32,System.Int32,System.Int64)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.DeobfuscatingStream.GetGuidByteArray(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="guidString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.DeobfuscatingStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.Block.Merge(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.Block.Mergeable(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.Block.System#IComparable#CompareTo(System.Object)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.BytesInByteRangeAvailable(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.GetData(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.HandleByteRangeReadEvent(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.HandleFullDownloadReadEvent(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.MakeByteRangeRequest(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.MergeByteRanges(System.Collections.ArrayList)">
    <parameter name="ranges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.ReadCallBack(System.IAsyncResult)">
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.TrimBlockToStreamLength(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.TrimByteRangeRequest(MS.Internal.IO.Packaging.NetStream.Block)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.NetStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buf">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PreloadedPackages.AddPackage(System.Uri,)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PreloadedPackages.AddPackage(System.Uri,,System.Boolean)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PreloadedPackages.GetPackage(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PreloadedPackages.GetPackage(System.Uri,System.Boolean@)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PreloadedPackages.RemovePackage(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PreloadedPackages.ValidateUriKey(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.PseudoWebRequest.Headers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.SynchronizingStream.#ctor(System.IO.Stream,System.Object)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="syncRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.Deserialize(System.IO.BinaryReader,System.Windows.Media.StreamGeometryContext,System.Windows.Media.StreamGeometry)">
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="geometry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializeArcTo(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometryContext)">
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializeBeginFigure(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometryContext)">
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializeBezierTo(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometryContext)">
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializeDouble(System.IO.BinaryReader,System.Boolean)">
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializeFillRule(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometry)">
    <parameter name="geometry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializeLineTo(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometryContext)">
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializeListOfPointsAndTwoBools(System.IO.BinaryReader,System.Byte,System.Boolean@,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializePointAndTwoBools(System.IO.BinaryReader,System.Byte,@,System.Boolean@,System.Boolean@)">
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializePolyBezierTo(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometryContext)">
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializePolyLineTo(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometryContext)">
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializePolyQuadraticBezierTo(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometryContext)">
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.DeserializeQuadraticBezierTo(System.IO.BinaryReader,System.Byte,System.Windows.Media.StreamGeometryContext)">
    <parameter name="sc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="br">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.ParserStreamGeometryContext.SerializeListOfPointsAndTwoBools(MS.Internal.Media.ParserStreamGeometryContext.ParserGeometryContextOpCodes,System.Collections.Generic.IList{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.VisualTreeUtils.AsNearestPointHitTestResult(System.Windows.Media.HitTestResult)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media.VisualTreeUtils.AsNonNullVisual(,System.Windows.Media.Visual@,System.Windows.Media.Media3D.Visual3D@)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.XamlSerializationHelper.ReadDouble(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.XamlSerializationHelper.ReadScaledInteger(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.XamlSerializationHelper.SerializePoint(System.IO.BinaryWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.XamlSerializationHelper.SerializePoint3D(System.IO.BinaryWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.XamlSerializationHelper.SerializeVector3D(System.IO.BinaryWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media.XamlSerializationHelper.WriteDouble(System.IO.BinaryWriter,System.Double)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.#ctor(System.Windows.Media.Media3D.Viewport2DVisual3D,System.Windows.Media.Visual)">
    <parameter name="visual3D">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromVisual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.CopyCommon(MS.Internal.Media3D.GeneralTransform2DTo3DTo2D)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.FindClosestIntersection(,System.Collections.Generic.List{MS.Internal.Media3D.HitTestEdge},@)">
    <parameter name="edges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.GrabValidEdges([])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="visualTexCoordBounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.HandleCoincidentLines(,,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,,,System.Collections.Generic.List{MS.Internal.Media3D.HitTestEdge})">
    <parameter name="edgeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.HandleSilhouetteEdge(,,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,[],System.Collections.Generic.List{MS.Internal.Media3D.HitTestEdge})">
    <parameter name="bounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edgeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.Inverse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.IsPointInPolygon([],)">
    <parameter name="polygon">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.ProcessTriangle(System.Windows.Media.Media3D.Point3D[],[],[],System.Collections.Generic.List{MS.Internal.Media3D.HitTestEdge},System.Collections.Generic.Dictionary{MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.Edge,MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.EdgeInfo},System.Windows.Media.Media3D.Point3D)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="adjInformation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edgeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visualTexCoordBounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.ProcessTriangleEdges(System.Windows.Media.Media3D.Point3D[],[],[],MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.PolygonSide,System.Collections.Generic.List{MS.Internal.Media3D.HitTestEdge},System.Collections.Generic.Dictionary{MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.Edge,MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.EdgeInfo})">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="adjInformation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edgeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visualTexCoordBounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform2DTo3DTo2D.ProcessVisualBoundsIntersections(System.Windows.Media.Media3D.Point3D[],[],[],System.Collections.Generic.List{MS.Internal.Media3D.HitTestEdge})">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visualTexCoordBounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edgeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform3DTo2DTo3D.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform3DTo2DTo3D.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform3DTo2DTo3D.CopyCommon(MS.Internal.Media3D.GeneralTransform3DTo2DTo3D)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform3DTo2DTo3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform3DTo2DTo3D.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.GeneralTransform3DTo2DTo3D.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.HitTestEdge.Project(System.Windows.Media.Media3D.GeneralTransform3DTo2D)">
    <parameter name="objectToViewportTransform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.LineUtil.ColumnsToAffinePointVector(System.Double[0:,0:],System.Int32,System.Int32,System.Windows.Media.Media3D.Point3D@,System.Windows.Media.Media3D.Vector3D@)">
    <parameter name="matrix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.LineUtil.FindSmallestTwoDiagonal(System.Double[0:,0:],System.Int32@,System.Int32@)">
    <parameter name="matrix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.LineUtil.JacobiRotation.#ctor(System.Int32,System.Int32,System.Double[0:,0:])">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.LineUtil.JacobiRotation.LeftMultiplyTranspose(System.Double[0:,0:])">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.LineUtil.JacobiRotation.LeftRightMultiply(System.Double[0:,0:])">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.LineUtil.JacobiRotation.RightMultiply(System.Double[0:,0:])">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.LineUtil.Square(System.Double[0:,0:])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.LineUtil.TransformedLineMatrix(System.Windows.Media.Media3D.Matrix3D@,System.Windows.Media.Media3D.Point3D@,System.Windows.Media.Media3D.Vector3D@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.M3DUtil.GetHomogeneousToViewportTransform()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.M3DUtil.GetNormalizedPoint(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Media3D.M3DUtil.GetWorldToViewportTransform3D(System.Windows.Media.Media3D.Camera,)">
    <parameter name="camera">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Media3D.M3DUtil.IsPointInTriangle(,[],System.Windows.Media.Media3D.Point3D[],System.Windows.Media.Media3D.Point3D@)">
    <parameter name="triUVVertices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tri3DVertices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.MimeTypeMapper.GetDocument(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.MimeTypeMapper.GetFileExtension(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Pair.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.DeserializeStreamGeometry(System.IO.BinaryReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParseBrush(System.String,System.IFormatProvider,System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="brush">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParseColor(System.String,System.IFormatProvider)">
    <parameter name="color">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParseColor(System.String,System.IFormatProvider,System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="color">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParseContextColor(System.String,System.IFormatProvider,System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="trimmedColor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParseGeometry(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Parsers.ParseHexColor(System.String)">
    <parameter name="trimmedColor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParsePathFigureCollection(System.String,System.IFormatProvider)">
    <parameter name="pathString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParseScRgbColor(System.String,System.IFormatProvider)">
    <parameter name="trimmedColor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParseStringToStreamGeometryContext(System.Windows.Media.StreamGeometryContext,System.String,System.IFormatProvider,System.Windows.Media.FillRule@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Parsers.ParseTransform(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PartialArray`1.#ctor(`0[])">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialArray`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialArray`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialArray`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialArray`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialArray`1.Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialArray`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialArray`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PartialList`1.#ctor(System.Collections.Generic.IList{`0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialList`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialList`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialList`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialList`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialList`1.Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialList`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PartialList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PointUtil.ClientToRoot(,System.Windows.PresentationSource)">
    <parameter name="presentationSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PointUtil.ClientToScreen(,System.Windows.Interop.HwndSource)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PointUtil.ElementToRoot(,System.Windows.Media.Visual,System.Windows.PresentationSource)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="presentationSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PointUtil.FromPoint()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PointUtil.FromRect()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PointUtil.RootToClient(,System.Windows.PresentationSource)">
    <parameter name="presentationSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PointUtil.ToPoint()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PointUtil.ToRect()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PointUtil.TryClientToRoot(,System.Windows.PresentationSource,System.Boolean,System.Boolean@)">
    <parameter name="presentationSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.AddPoint(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.AddRect(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.AddRotation3D(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.AddSize(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.GetSegmentLengthRotation3D(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.GetZeroValuePoint()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.GetZeroValueRect()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.GetZeroValueSize()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.GetZeroValueVector()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.InterpolateRect(,,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.InterpolateRotation3D(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.IsValidAnimationValueRotation3D(System.Windows.Media.Media3D.Rotation3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.ScalePoint(,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.ScaleRect(,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.ScaleRotation3D(System.Windows.Media.Media3D.Rotation3D,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.SubtractPoint(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.SubtractRect(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.SubtractRotation3D(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.AnimatedTypeHelpers.SubtractSize(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.BindUriHelper.DoSchemeAndHostMatch(System.Uri,System.Uri)">
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.BindUriHelper.GetReferer(System.Uri)">
    <parameter name="destinationUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.BindUriHelper.GetResolvedUri(System.Uri,System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.BindUriHelper.UriToString(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SafeSecurityHelper.GetAssemblyPartialName(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SafeSecurityHelper.GetCultureInfoByIetfLanguageTag(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="languageTag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SafeSecurityHelper.GetLoadedAssembly(System.Reflection.AssemblyName)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SafeSecurityHelper.IsConnectedToPresentationSource(System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.BlockCrossDomainForHttpsApps(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.CallerHasWebPermission(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.CreateMediaAccessPermission(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.CreateUriDiscoveryPermission(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.CreateUriReadPermission(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.DemandUriDiscoveryPermission(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.DemandUriReadPermission(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.DemandWebPermission(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.EnforceUncContentAccessRules(System.Uri)">
    <parameter name="contentUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.GetBaseDirectory(System.AppDomain)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.MapUrlToZoneWrapper(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SecurityHelper.SafeHandleIsInvalid(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="sh">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.PresentationCore.SR.Get(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PresentationCore.SR.Get(System.String,System.Object[])">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.PriorityQueue`1.Push(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Resources.ContentFileHelper.GetContentFiles(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Resources.ContentFileHelper.IsContentFile(System.String)">
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Resources.ResourceManagerWrapper.AddResourceNameToList(System.Resources.ResourceSet,System.Collections.ArrayList@)">
    <parameter name="rs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Resources.ResourceManagerWrapper.GetStream(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Resources.ResourceManagerWrapper.ResourceManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Resources.ResourceManagerWrapper.ResourceSet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.SequentialUshortCollection.CopyTo(System.UInt16[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.SequentialUshortCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.AlternateSubstitutionSubtable.AlternateSet(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AlternateSubstitutionSubtable.AlternateSetTable.Alternate(MS.Internal.Shaping.FontTable,System.UInt32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AlternateSubstitutionSubtable.AlternateSetTable.GlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AlternateSubstitutionSubtable.Apply(MS.Internal.Shaping.FontTable,MS.Internal.Shaping.GlyphInfoList,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AlternateSubstitutionSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AlternateSubstitutionSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AlternateSubstitutionSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AlternateSubstitutionSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AnchorTable.#ctor(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AnchorTable.AnchorCoordinates(MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.LayoutOffset)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AnchorTable.ContourPointIndex(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AnchorTable.Format2AnchorPoint(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AnchorTable.Format3XDeviceTable(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AnchorTable.Format3YDeviceTable(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AnchorTable.XCoordinate(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.AnchorTable.YCoordinate(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.BaseShape.GetCharClassifier(MS.Internal.ScriptTags,System.Windows.Media.GlyphTypeface)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.BaseShaper.GetGlyphPlacements(MS.Internal.Shaping.Item,System.Globalization.CultureInfo,System.Windows.Media.GlyphTypeface,MS.Internal.Shaping.FeatureSet,MS.Internal.Shaping.ShapingOptions,System.Object,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.CheckedUShortPointer,System.Int32,MS.Internal.CheckedUShortPointer,MS.Internal.CheckedGlyphShapingPropertiesPointer,System.Int32,System.Double,MS.Internal.CheckedIntPointer,MS.Internal.CheckedGlyphOffsetPointer)">
    <parameter name="fontFace">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.BaseShaper.GetGlyphs(MS.Internal.Shaping.Item,System.Globalization.CultureInfo,System.Windows.Media.GlyphTypeface,MS.Internal.Shaping.FeatureSet,MS.Internal.Shaping.ShapingOptions,System.Object,MS.Internal.CheckedCharPointer,System.Int32,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.CheckedUShortPointer,System.UInt16[]@,MS.Internal.Shaping.GlyphShapingProperties[]@,System.Int32@)">
    <parameter name="fontFace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ChainingSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ChainingSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ChainingSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ChainingSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CharacterShapingProperties.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CharToken.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.BacktrackClassDef(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.ClassSet(MS.Internal.Shaping.FontTable,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.ClassSetCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.InputClassDef(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.LookaheadClassDef(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.SubClassRule.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.ClassDefTable,MS.Internal.Shaping.ClassDefTable,MS.Internal.Shaping.ClassDefTable,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.SubClassRule.ClassId(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.SubClassRule.ContextualLookups(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.SubClassRule.GlyphCount(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.SubClassSet.Rule(MS.Internal.Shaping.FontTable,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassChainingSubtable.SubClassSet.RuleCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.ClassDef(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.ClassSet(MS.Internal.Shaping.FontTable,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.ClassSetCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.SubClassRule.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.ClassDefTable,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.SubClassRule.ClassId(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.SubClassRule.ContextualLookups(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.SubClassRule.GlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.SubClassRule.SubstCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.SubClassSet.Rule(MS.Internal.Shaping.FontTable,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassContextSubtable.SubClassSet.RuleCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.Format1ClassValue(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.Format1GlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.Format1StartGlyph(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.Format2RangeClassValue(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.Format2RangeCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.Format2RangeEndGlyph(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.Format2RangeStartGlyph(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ClassDefTable.GetClass(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Shaping.CompositeFontFamily.FamilyTypefaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.CompositeFontFamily.FindExactFamilyTypeface(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.CompositeFontFamily.FindNearestFamilyTypeface(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.CompositeFontFamily.FindTypefaceMetrics(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.CompositeFontFamily.GetFirstFontFamily">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.CompositeFontFamily.GetTargetFamilyMap(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Int32@)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CompositeFontFamily.MS#Internal#FontFace#IFontFamily#GetDeviceFont(System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Shaping.CompositeTypefaceMetrics.AdjustedFaceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.ContextSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ContextSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ContextSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ContextSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ContextualLookupRecords.ApplyContextualLookups(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ContextualLookupRecords.LookupIndex(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ContextualLookupRecords.SequenceIndex(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Shaping.ControlShape.SupportedScripts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.#ctor(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.BacktrackCoverage(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.BacktrackGlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.ContextualLookups(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.InputCoverage(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.InputGlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.LookaheadCoverage(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageChainingSubtable.LookaheadGlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageContextSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageContextSubtable.ContextualLookups(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageContextSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageContextSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageContextSubtable.GlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageContextSubtable.InputCoverage(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageContextSubtable.SubstCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.Format1Glyph(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.Format1GlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.Format2RangeCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.Format2RangeEndGlyph(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.Format2RangeStartCoverageIndex(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.Format2RangeStartGlyph(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.GetGlyphIndex(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CoverageTable.IsAnyGlyphCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CursivePositioningSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.GlyphInfoList,System.UInt16,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.Int32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CursivePositioningSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CursivePositioningSubtable.EntryAnchor(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CursivePositioningSubtable.ExitAnchor(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CursivePositioningSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.CursivePositioningSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.DefaultShape.CmapShaper.GetGlyphPlacements(MS.Internal.Shaping.Item,System.Globalization.CultureInfo,System.Windows.Media.GlyphTypeface,MS.Internal.Shaping.FeatureSet,MS.Internal.Shaping.ShapingOptions,System.Object,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.CheckedUShortPointer,System.Int32,MS.Internal.CheckedUShortPointer,MS.Internal.CheckedGlyphShapingPropertiesPointer,System.Int32,System.Double,MS.Internal.CheckedIntPointer,MS.Internal.CheckedGlyphOffsetPointer)">
    <parameter name="fontFace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.DefaultShape.CmapShaper.GetGlyphs(MS.Internal.Shaping.Item,System.Globalization.CultureInfo,System.Windows.Media.GlyphTypeface,MS.Internal.Shaping.FeatureSet,MS.Internal.Shaping.ShapingOptions,System.Object,MS.Internal.CheckedCharPointer,System.Int32,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.CheckedUShortPointer,System.UInt16[]@,MS.Internal.Shaping.GlyphShapingProperties[]@,System.Int32@)">
    <parameter name="fontFace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.DeviceTable.DeltaFormat(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.DeviceTable.DeltaValue(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.DeviceTable.EndSize(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.DeviceTable.StartSize(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.DeviceTable.Value(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Shaping.DigitShape.SupportedScripts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.ExtensionLookupTable.LookupSubtableOffset(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ExtensionLookupTable.LookupType(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.FeatureList.FeatureCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.FeatureList.FeatureTable(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.FeatureList.FeatureTag(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.FeatureTable.LookupCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.FeatureTable.LookupIndex(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GDEFHeader.GetGlyphClassDef(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GDEFHeader.GetMarkAttachClassDef(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.RuleSet(MS.Internal.Shaping.FontTable,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.SubRule.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.SubRule.ContextualLookups(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.SubRule.GlyphCount(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.SubRule.GlyphId(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.SubRuleSet.Rule(MS.Internal.Shaping.FontTable,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphChainingSubtable.SubRuleSet.RuleCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.RuleSet(MS.Internal.Shaping.FontTable,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.SubRule.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.SubRule.ContextualLookups(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.SubRule.GlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.SubRule.GlyphId(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.SubRule.SubstCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.SubRuleSet.Rule(MS.Internal.Shaping.FontTable,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphContextSubtable.SubRuleSet.RuleCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphingCache.GetShapeableText(System.Windows.Media.Typeface,System.Windows.Media.TextFormatting.CharacterBufferReference,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties,System.Globalization.CultureInfo,System.Boolean,System.Collections.Generic.IList{MS.Internal.TextFormatting.TextShapeableSymbols},MS.Internal.TextFormatting.IShapeableTextCollector)">
    <parameter name="typeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="shapeableList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphingCache.Lookup(System.Windows.Media.Typeface)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GlyphShapingProperties.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GPOSHeader.GetFeatureList(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GPOSHeader.GetLookupList(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GPOSHeader.GetScriptList(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GSUBHeader.GetFeatureList(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GSUBHeader.GetLookupList(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.GSUBHeader.GetScriptList(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.HebrewClusterCop.#ctor(System.Char*,System.UInt16*)">
    <parameter name="clusterArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clusterGlyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.IndicCharClassifier.GetFontCharacterFormsInfo(MS.Internal.Shaping.IndicFontClient)">
    <parameter name="fontClient">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.IndicClusterCop.#ctor(MS.Internal.Shaping.IndicFontClient)">
    <parameter name="fontClient">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.IndicFontClient.GetCharacterFormsInfo(System.Byte[])">
    <parameter name="formsInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.IndicShapeFSM.#ctor(MS.Internal.Shaping.IndicCharClassifier,System.Boolean)">
    <parameter name="charConverter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.Item.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LangSysTable.FeatureCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LangSysTable.FindFeature(MS.Internal.Shaping.FontTable,MS.Internal.Shaping.FeatureList,System.UInt32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LangSysTable.GetFeatureIndex(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LangSysTable.RequiredFeature(MS.Internal.Shaping.FontTable,MS.Internal.Shaping.FeatureList)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LayoutEngine.AppendLangSys(System.UInt32,System.UInt32,MS.Internal.Shaping.LangSysTable,MS.Internal.Shaping.FeatureList,MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt32[],MS.Internal.Shaping.WritingSystem[]@,System.Int32@)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="featureTagsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lookupBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="complexLanguages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LayoutEngine.ApplyFeatures(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeLayoutWorkspace,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.LangSysTable,MS.Internal.Shaping.FeatureList,MS.Internal.Shaping.LookupList,MS.Internal.Shaping.Feature[],System.Int32,System.Int32,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="FeatureSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LayoutEngine.ApplyLookup(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.LookupTable,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.Int32,System.Int32,System.UInt32,System.Int32,System.Int32@)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LayoutEngine.CompileFeatureSet(MS.Internal.Shaping.Feature[],System.Int32,System.Int32,System.Int32,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LangSysTable,MS.Internal.Shaping.FeatureList,System.Int32,MS.Internal.Shaping.OpenTypeLayoutWorkspace)">
    <parameter name="FeatureSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LayoutEngine.GetComplexLanguageList(MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt32[],System.UInt16,System.UInt16,MS.Internal.Shaping.WritingSystem[]@,System.Int32@)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="featureTagsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LayoutEngine.GetNextEnabledGlyphRange(MS.Internal.Shaping.Feature[],System.Int32,System.Int32,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.OpenTypeLayoutWorkspace,MS.Internal.Shaping.LangSysTable,MS.Internal.Shaping.FeatureList,System.UInt16,System.Int32,MS.Internal.Shaping.UshortList,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.UInt32@)">
    <parameter name="FeatureSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LayoutEngine.GetNextGlyphInLookup(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.GlyphInfoList,System.Int32,System.UInt16,System.Int32)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LayoutEngine.UpdateGlyphFlags(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.GlyphInfoList,System.Int32,System.Int32,System.Boolean,MS.Internal.Shaping.GlyphFlags)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureAttachTable.LigatureAnchor(MS.Internal.Shaping.FontTable,System.UInt16,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.FontTable,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.UInt16,System.Int32,System.Int32,System.Int32@)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.LigatureSet(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.LigatureSetCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.LigatureSetTable.Ligature(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.LigatureSetTable.LigatureCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.LigatureTable.Component(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.LigatureTable.ComponentCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LigatureSubstitutionSubtable.LigatureTable.LigatureGlyph(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LookupList.Lookup(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LookupList.LookupCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LookupTable.#ctor(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.LookupTable.SubtableOffset(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkArray.Class(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkArray.MarkAnchor(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.GlyphInfoList,System.UInt16,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.Int32,System.Int32,System.Int32@)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.BaseArray.BaseAnchor(MS.Internal.Shaping.FontTable,System.UInt16,System.UInt16,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.BaseCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.Bases(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.ClassCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.MarkCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToBasePositioningSubtable.Marks(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.GlyphInfoList,System.UInt16,System.Int32,MS.Internal.Shaping.UshortList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.Int32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.ClassCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.FindBaseLigature(System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32,System.UInt16@,System.Int32@)">
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.LigatureCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.Ligatures(MS.Internal.Shaping.FontTable,System.Int32,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.MarkCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToLigaturePositioningSubtable.Marks(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.GlyphInfoList,System.UInt16,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.Int32,System.Int32,System.Int32@)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.Mark1Array(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.Mark1ClassCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.Mark1Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.Mark2Array.Anchor(MS.Internal.Shaping.FontTable,System.UInt16,System.UInt16,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.Mark2Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MarkToMarkPositioningSubtable.Marks2(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Shaping.MirroringShape.SupportedScripts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.MultipleSubstitutionSequenceTable.Glyph(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MultipleSubstitutionSequenceTable.GlyphCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MultipleSubstitutionSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.FontTable,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.UInt16,System.Int32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MultipleSubstitutionSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MultipleSubstitutionSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MultipleSubstitutionSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MultipleSubstitutionSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.MultipleSubstitutionSubtable.Sequence(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeFontClient.GetFontTable(MS.Internal.Shaping.OpenTypeTags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayout.CreateLayoutCache(MS.Internal.Shaping.IOpenTypeFont,System.Int32)">
    <parameter name="font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayout.FindLangSys(MS.Internal.Shaping.IOpenTypeFont,System.UInt32,System.UInt32)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayout.FindScript(MS.Internal.Shaping.IOpenTypeFont,System.UInt32)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayout.GetComplexLanguageList(MS.Internal.Shaping.IOpenTypeFont,System.UInt32[],System.UInt32[],System.UInt16,System.UInt16,MS.Internal.Shaping.WritingSystem[]@)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="featureList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayout.PositionGlyphs(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeLayoutWorkspace,System.UInt32,System.UInt32,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.Feature[],System.Int32,System.Int32,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="FeatureSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Glyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayout.SubstituteGlyphs(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeLayoutWorkspace,System.UInt32,System.UInt32,MS.Internal.Shaping.Feature[],System.Int32,System.Int32,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="FeatureSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Glyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Charmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.AppendCoverageGlyphRecords(MS.Internal.Shaping.FontTable,System.UInt16,MS.Internal.Shaping.CoverageTable,MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord[],System.Int32@,System.Int32@)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="records">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.AppendGlyphRecord(System.UInt16,System.UInt16,MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord[],System.Int32@,System.Int32@)">
    <parameter name="records">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.CalculateCacheSize(MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord[],System.Int32,System.Int32@,System.Int32@)">
    <parameter name="records">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.CompareGlyphRecordLists(MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord[],System.Int32,System.Int32,System.Int32)">
    <parameter name="records">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.ComputeTableCache(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,System.Int32,System.Int32@,MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord[]@,System.Int32@,System.Int32@,System.Int32@)">
    <parameter name="font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.CreateCache(MS.Internal.Shaping.IOpenTypeFont,System.Int32)">
    <parameter name="font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.CreateTableCache(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,System.Int32,System.Int32@)">
    <parameter name="font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.FillTableCache(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,System.Int32,MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord[],System.Int32,System.Int32,System.Int32)">
    <parameter name="font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="records">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.FindNextGlyphInLookup(MS.Internal.Shaping.OpenTypeLayoutWorkspace,System.UInt16,System.Boolean,System.Int32@,System.Int32@)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.FindNextLookup(MS.Internal.Shaping.OpenTypeLayoutWorkspace,MS.Internal.Shaping.GlyphInfoList,System.UInt16,System.UInt16@,System.Int32@)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.GetCacheLookupCount(MS.Internal.Shaping.OpenTypeLayoutWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.GetSubtablePrincipalCoverage(MS.Internal.Shaping.FontTable,MS.Internal.Shaping.OpenTypeTags,System.UInt16,System.Int32)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord.CompareTo(MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord.Equals(MS.Internal.Shaping.OpenTypeLayoutCache.GlyphLookupRecord)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.InitCache(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.GlyphInfoList,MS.Internal.Shaping.OpenTypeLayoutWorkspace)">
    <parameter name="font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.OnGlyphsChanged(MS.Internal.Shaping.OpenTypeLayoutWorkspace,MS.Internal.Shaping.GlyphInfoList,System.Int32,System.Int32,System.Int32)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.OpenTypeLayoutCache.RenewPointers(MS.Internal.Shaping.GlyphInfoList,MS.Internal.Shaping.OpenTypeLayoutWorkspace,System.Int32,System.Int32)">
    <parameter name="glyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.GlyphInfoList,System.UInt16,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.Int32,System.Int32,System.Int32@)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.FirstValueFormat(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Format1PairSet(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Format2Class1Count(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Format2Class1Table(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Format2Class2Count(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Format2Class2Table(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Format2FirstValueRecord(MS.Internal.Shaping.FontTable,System.UInt16,System.UInt16,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.Format2SecondValueRecord(MS.Internal.Shaping.FontTable,System.UInt16,System.UInt16,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.PairSetTable.FindPairValue(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.PairSetTable.PairValueCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.PairSetTable.PairValueGlyph(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PairPositioningSubtable.SecondValueFormat(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.PlacementWorkspace.#ctor(MS.Internal.Shaping.ShapingOptions,MS.Internal.Shaping.ShaperFontClient,MS.Internal.Shaping.ShaperBuffers,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.CheckedUShortPointer,System.Int32,MS.Internal.CheckedUShortPointer,MS.Internal.CheckedGlyphShapingPropertiesPointer,System.Int32,MS.Internal.CheckedIntPointer,MS.Internal.CheckedGlyphOffsetPointer,System.Boolean,MS.Internal.Shaping.TextFlowDirection)">
    <parameter name="shaperBuffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.Positioning.AlignAnchors(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.Int32,System.Int32,MS.Internal.Shaping.AnchorTable,MS.Internal.Shaping.AnchorTable,System.Boolean)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Advances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Offsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ReverseChainingSubtable.Apply(MS.Internal.Shaping.IOpenTypeFont,MS.Internal.Shaping.OpenTypeTags,MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.UInt16,System.Int32,System.Int32,System.UInt32,System.Int32@)">
    <parameter name="Font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ReverseChainingSubtable.Coverage(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ReverseChainingSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ReverseChainingSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ReverseChainingSubtable.Glyph(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ReverseChainingSubtable.GlyphCount(MS.Internal.Shaping.FontTable,System.Int32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ReverseChainingSubtable.InputCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScaledShapeTypeface.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptList.FindScript(MS.Internal.Shaping.FontTable,System.UInt32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptList.GetScriptCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptList.GetScriptTable(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptList.GetScriptTag(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptTable.FindLangSys(MS.Internal.Shaping.FontTable,System.UInt32)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptTable.GetDefaultLangSysTable(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptTable.GetLangSysCount(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptTable.GetLangSysTable(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptTable.GetLangSysTag(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ScriptTable.IsDefaultLangSysExists(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShaperFontClient.Initialize(MS.Internal.Shaping.OpenTypeLayoutWorkspace,MS.Internal.Shaping.OpenTypeTags,MS.Internal.ScriptID,MS.Internal.LanguageTags)">
    <parameter name="layoutWorkspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShaperFontClient.PositionGlyphs(MS.Internal.Shaping.PlacementWorkspace@,MS.Internal.Shaping.LayoutMetrics@,MS.Internal.Shaping.Feature[],System.Int32)">
    <parameter name="features">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShaperFontClient.SubstituteGlyphs(MS.Internal.Shaping.Feature[],System.Int32,MS.Internal.Shaping.UshortList,MS.Internal.Shaping.GlyphInfoList)">
    <parameter name="features">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="charMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShaperFontClient.SubstituteGlyphs(MS.Internal.Shaping.ShapingWorkspace@,MS.Internal.Shaping.Feature[],System.Int32)">
    <parameter name="features">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShapeTypeface.CacheShapeState(MS.Internal.ScriptID)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.ShapeTypeface.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShapeTypeface.ShapeState.GetGlyphPlacements(MS.Internal.CheckedUShortPointer,MS.Internal.CheckedGlyphShapingPropertiesPointer,System.Int32,MS.Internal.Shaping.Item,System.Globalization.CultureInfo,MS.Internal.CheckedUShortPointer,MS.Internal.CheckedCharacterShapingPropertiesPointer,System.Int32,MS.Internal.Shaping.ShapingOptions,MS.Internal.Shaping.FeatureSet,System.Windows.Media.GlyphTypeface,System.Double,MS.Internal.CheckedIntPointer,MS.Internal.CheckedGlyphOffsetPointer)">
    <parameter name="glyphTypeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShapeTypeface.ShapeState.GetGlyphs(MS.Internal.CheckedCharPointer,System.Int32,System.Globalization.CultureInfo,MS.Internal.Shaping.Item,System.Windows.Media.GlyphTypeface,MS.Internal.Shaping.ShapingOptions,MS.Internal.Shaping.FeatureSet,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.CheckedUShortPointer,MS.Internal.Shaping.GlyphShapingProperties[]@,System.Int32@)">
    <parameter name="glyphTypeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShapingWorkspace.#ctor(MS.Internal.Shaping.Item,MS.Internal.Shaping.ShapingOptions,MS.Internal.Shaping.ShaperFontClient,MS.Internal.Shaping.ShaperBuffers,MS.Internal.CheckedCharPointer,System.Int32,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.CheckedUShortPointer)">
    <parameter name="shaperFontClient">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="shaperBuffers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ShapingWorkspace.ValidateGlyphsOut(System.UInt16[])">
    <parameter name="glyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SinglePositioningSubtable.Apply(MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.GlyphInfoList,System.Int32*,MS.Internal.Shaping.LayoutOffset*,System.Int32,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SinglePositioningSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SinglePositioningSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SinglePositioningSubtable.Format1ValueRecord(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SinglePositioningSubtable.Format2ValueRecord(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SinglePositioningSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SinglePositioningSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SinglePositioningSubtable.ValueFormat(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SingleSubstitutionSubtable.Apply(MS.Internal.Shaping.FontTable,MS.Internal.Shaping.GlyphInfoList,System.Int32,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GlyphInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SingleSubstitutionSubtable.Coverage(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SingleSubstitutionSubtable.Format(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SingleSubstitutionSubtable.Format1DeltaGlyphId(MS.Internal.Shaping.FontTable)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SingleSubstitutionSubtable.Format2SubstituteGlyphId(MS.Internal.Shaping.FontTable,System.UInt16)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SingleSubstitutionSubtable.GetPrimaryCoverage(MS.Internal.Shaping.FontTable)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.SingleSubstitutionSubtable.IsLookupCovered(MS.Internal.Shaping.FontTable,System.UInt32[],System.UInt16,System.UInt16)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphBits">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.ThaiClusterCop.#ctor(System.UInt16*)">
    <parameter name="clusterGlyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.CacheScaledTypefaceMap(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,MS.Internal.SpanVector,MS.Internal.Generic.SpanVector{System.Int32}@,System.Int32)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.GetCachedScaledTypefaceMap(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,MS.Internal.Generic.SpanVector{System.Int32}@,System.Int32)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.GetShapeableText(System.Windows.Media.TextFormatting.CharacterBufferReference,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties,System.Globalization.CultureInfo,System.Boolean,System.Collections.Generic.IList{MS.Internal.TextFormatting.TextShapeableSymbols},MS.Internal.TextFormatting.IShapeableTextCollector)">
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="shapeableList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.IndexOfScaledTypeface(MS.Internal.Shaping.ScaledShapeTypeface)">
    <parameter name="scaledTypeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.MapByFontFaceFamily(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,MS.Internal.FontFace.IFontFamily,MS.Internal.FontFace.PhysicalFontFamily@,System.Int32@,MS.Internal.FontFace.IDeviceFont,System.Boolean,System.Double,MS.Internal.SpanVector,System.Int32,System.Boolean,System.Int32@)">
    <parameter name="scaledTypefaceSpans">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.MapByFontFamily(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,MS.Internal.FontFace.IFontFamily,MS.Internal.FontCache.CanonicalFontFamilyReference,MS.Internal.FontFace.PhysicalFontFamily@,System.Int32@,MS.Internal.FontFace.IDeviceFont,System.Double,System.Int32,MS.Internal.SpanVector,System.Int32,System.Int32@)">
    <parameter name="fontFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="scaledTypefaceSpans">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.MapByFontFamilyList(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Windows.Media.FontFamily[],MS.Internal.FontFace.PhysicalFontFamily@,System.Int32@,MS.Internal.FontFace.IDeviceFont,System.Double,System.Int32,MS.Internal.SpanVector,System.Int32,System.Int32@)">
    <parameter name="scaledTypefaceSpans">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.MapByFontFamilyName(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.String,System.Uri,MS.Internal.FontFace.PhysicalFontFamily@,System.Int32@,MS.Internal.FontFace.IDeviceFont,System.Double,System.Int32,MS.Internal.SpanVector,System.Int32,System.Int32@)">
    <parameter name="scaledTypefaceSpans">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.MapItem(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,MS.Internal.Span,MS.Internal.Generic.SpanVector{System.Int32}@,System.Int32)">
    <parameter name="itemSpan">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.MapOnceByFontFamilyList(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Windows.Media.FontFamily[],MS.Internal.FontFace.PhysicalFontFamily@,System.Int32@,MS.Internal.FontFace.IDeviceFont,System.Double,System.Int32,MS.Internal.SpanVector,System.Int32,System.Int32@)">
    <parameter name="scaledTypefaceSpans">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.TypefaceMap.MapUnresolvedCharacters(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Globalization.CultureInfo,System.Globalization.CultureInfo,MS.Internal.FontFace.PhysicalFontFamily,System.Int32@,MS.Internal.SpanVector,System.Int32,System.Int32@)">
    <parameter name="scaledTypefaceSpans">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Shaping.UshortArray.GetSubsetCopy(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.UshortBuffer.GetSubsetCopy(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.UshortBuffer.ToArray">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.UshortList.GetCopy">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.UshortList.ToArray">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Shaping.ValueRecordTable.AdjustPos(MS.Internal.Shaping.FontTable,MS.Internal.Shaping.LayoutMetrics,MS.Internal.Shaping.LayoutOffset@,System.Int32@)">
    <parameter name="Table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.SizeLimitedCache`2.Add(`0,`1,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.SizeLimitedCache`2.Get(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.SizeLimitedCache`2.InsertAtEnd(MS.Internal.SizeLimitedCache{`0,`1}.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.SizeLimitedCache`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.SizeLimitedCache`2.RemoveFromList(MS.Internal.SizeLimitedCache{`0,`1}.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.SpanEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.SpanVector.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.SpanVector.Set(System.Int32,System.Int32,System.Object,MS.Internal.Equals,MS.Internal.SpanPosition)">
    <parameter name="equals">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.StringCharacterBuffer.#ctor(System.String)">
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.Bidi.Analyze(System.Char[],System.Int32,System.Int32,MS.Internal.TextFormatting.Bidi.Flags,MS.Internal.TextFormatting.Bidi.State,System.Byte[]@,System.Int32@)">
    <parameter name="chars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.Bidi.BidiAnalyzeInternal(MS.Internal.CharacterBuffer,System.Int32,System.Int32,System.Int32,MS.Internal.TextFormatting.Bidi.Flags,MS.Internal.TextFormatting.Bidi.State,System.Collections.Generic.IList{System.Byte},System.Collections.Generic.IList{MS.Internal.DirectionClass},System.Int32@)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="levels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.Bidi.GetFirstStrongCharacter(MS.Internal.CharacterBuffer,System.Int32,System.Int32,MS.Internal.DirectionClass@)">
    <parameter name="charBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.Bidi.ResolveImplictLevels(System.Collections.Generic.IList{MS.Internal.DirectionClass},MS.Internal.CharacterBuffer,System.Int32,System.Int32,System.Collections.Generic.IList{System.Byte},System.Int32,System.Byte)">
    <parameter name="characterClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="charBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="levels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.Bidi.ResolveNeutralAndWeak(System.Collections.Generic.IList{MS.Internal.DirectionClass},System.Int32,System.Int32,MS.Internal.DirectionClass,MS.Internal.DirectionClass,System.Byte,MS.Internal.TextFormatting.Bidi.State,MS.Internal.TextFormatting.Bidi.State,System.Boolean,MS.Internal.TextFormatting.Bidi.Flags)">
    <parameter name="characterClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.BidiState.#ctor(MS.Internal.TextFormatting.FormatSettings,System.Int32)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.BidiState.#ctor(MS.Internal.TextFormatting.FormatSettings,System.Int32,System.Windows.Media.TextFormatting.TextModifierScope)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.BidiState.InitLevelStackFromModifierScope(MS.Internal.TextFormatting.Bidi.BidiStack,System.Windows.Media.TextFormatting.TextModifierScope,System.UInt16@)">
    <parameter name="stack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitMap.StringToScalar(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitState.CreateTraditionalCulture(System.Globalization.CultureInfo,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="numberCulture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitState.GetDigitCulture(System.Globalization.CultureInfo,System.Windows.Media.NumberSubstitutionMethod,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitState.GetNumberCulture(System.Windows.Media.TextFormatting.TextRunProperties,System.Windows.Media.NumberSubstitutionMethod@)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitState.GetTraditionalCulture(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="numberCulture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitState.HasLatinDigits(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitState.IsArabic(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitState.IsFarsi(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DigitState.SetTextRunProperties(System.Windows.Media.TextFormatting.TextRunProperties)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DoubleWideChar.GetChar(MS.Internal.CharacterBuffer,System.Int32,System.Int32,System.Int32,System.Int32@)">
    <parameter name="charBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.DrawingState.#ctor(System.Windows.Media.DrawingContext,,System.Windows.Media.MatrixTransform,MS.Internal.TextFormatting.TextMetrics.FullTextLine)">
    <parameter name="currentLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.FormatSettings.#ctor(MS.Internal.TextFormatting.TextFormatterImp,System.Windows.Media.TextFormatting.TextSource,MS.Internal.TextFormatting.TextRunCacheImp,MS.Internal.TextFormatting.ParaProp,System.Windows.Media.TextFormatting.TextLineBreak,System.Boolean)">
    <parameter name="pap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.FormatSettings.GetPrecedingText(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.FormattedTextSymbols.#ctor(MS.Internal.Shaping.GlyphingCache,System.Windows.Media.TextFormatting.TextRun,System.Boolean,System.Double)">
    <parameter name="textSymbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphingCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.FormattedTextSymbols.Glyphs.#ctor(MS.Internal.TextFormatting.TextShapeableSymbols,System.Char[],System.Int32[],System.Double)">
    <parameter name="nominalAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.FormattedTextSymbols.Glyphs.#ctor(MS.Internal.TextFormatting.TextShapeableSymbols,System.Char[],System.Int32[],System.UInt16[],System.UInt16[],MS.Internal.Shaping.GlyphShapingProperties[],MS.Internal.Shaping.GlyphOffset[],System.Double)">
    <parameter name="glyphAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.FormattedTextSymbols.Glyphs.CreateGlyphRun(,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.FullTextBreakpoint.#ctor(MS.Internal.TextFormatting.FullTextState,System.Int32,System.Int32,MS.Internal.TextFormatting.LsBreaks@,System.Int32)">
    <parameter name="fullText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.FullTextBreakpoint.CreateMultiple(System.Windows.Media.TextFormatting.TextParagraphCache,System.Int32,System.Int32,System.Windows.Media.TextFormatting.TextLineBreak,System.IntPtr,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.FullTextState.CountText(System.Int32,System.Int32,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.FullTextState.Create(MS.Internal.TextFormatting.FormatSettings,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.FullTextState.CreateLsTbds(MS.Internal.TextFormatting.ParaProp,MS.Internal.TextFormatting.LsTbd*,System.Int32)">
    <parameter name="pap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="plsTbds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.FullTextState.SetTabs(System.Windows.Media.TextFormatting.TextFormatterContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.GenericTextParagraphProperties.#ctor(System.Windows.Media.TextFormatting.TextParagraphProperties)">
    <parameter name="textParagraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.GenericTextRunProperties.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.AdjustChars(MS.Internal.TextFormatting.LsCharRunInfo*,System.Boolean,System.Int32,System.Int32**,System.Int32**)">
    <parameter name="pplsAdjustLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pplsAdjustRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.CompressGlyphs(MS.Internal.TextFormatting.LsGlyphRunInfo*,System.Int32,System.Int32**,System.Int32**)">
    <parameter name="pplsCompressionLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pplsCompressionRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.ComputeShapedGlyphRun(MS.Internal.TextFormatting.LSRun,System.Double,System.Boolean,MS.Internal.TextFormatting.LSPOINT,System.Int32,System.Char*,System.UInt16*,System.Int32,System.UInt16*,MS.Internal.Shaping.GlyphShapingProperties*,System.Int32*,MS.Internal.Shaping.GlyphOffset*)">
    <parameter name="lsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pwchText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="puClusterMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="puGlyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piGlyphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piJustifiedGlyphAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piiGlyphOffsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.ComputeUnshapedGlyphRun(MS.Internal.TextFormatting.LSRun,MS.Internal.TextFormatting.LsTFlow,System.Double,System.Boolean,MS.Internal.TextFormatting.LSPOINT,System.Int32,System.Int32,System.Char*,System.Int32*)">
    <parameter name="lsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pwchText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piCharAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.TextFormatting.LineServicesCallbacks.Draw">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.DrawGlyphs(System.IntPtr,MS.Internal.TextFormatting.Plsrun,System.Char*,System.UInt16*,MS.Internal.Shaping.CharacterShapingProperties*,System.Int32,System.UInt16*,System.Int32*,System.Int32*,MS.Internal.Shaping.GlyphOffset*,MS.Internal.Shaping.GlyphShapingProperties*,MS.Internal.TextFormatting.LsExpType*,System.Int32,MS.Internal.TextFormatting.LsTFlow,System.UInt32,MS.Internal.TextFormatting.LSPOINT@,MS.Internal.TextFormatting.LsHeights@,System.Int32,MS.Internal.TextFormatting.LSRECT@)">
    <parameter name="piJustifiedGlyphAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="puClusterMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piGlyphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pwchText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="puGlyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piiGlyphOffsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.DrawTextDecoration(MS.Internal.TextFormatting.LSRun,System.Windows.Media.Brush,MS.Internal.TextFormatting.LSPOINT,System.Int32,System.Int32,MS.Internal.TextFormatting.LsTFlow,System.Windows.TextDecoration)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="lsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textDecoration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.DrawTextDecorationCollection(MS.Internal.TextFormatting.LSRun,System.UInt32,System.Windows.TextDecorationCollection,System.Windows.Media.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,MS.Internal.TextFormatting.LsTFlow)">
    <parameter name="lsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.DrawTextDecorations(MS.Internal.TextFormatting.LSRun,System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,MS.Internal.TextFormatting.LsTFlow)">
    <parameter name="lsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.DrawTextRun(System.IntPtr,MS.Internal.TextFormatting.Plsrun,MS.Internal.TextFormatting.LSPOINT@,System.Char*,System.Int32*,System.Int32,MS.Internal.TextFormatting.LsTFlow,System.UInt32,MS.Internal.TextFormatting.LSPOINT@,MS.Internal.TextFormatting.LsHeights@,System.Int32,MS.Internal.TextFormatting.LSRECT@)">
    <parameter name="pwchText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piCharAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.EnumText(System.IntPtr,MS.Internal.TextFormatting.Plsrun,System.Int32,System.Int32,System.Char*,System.Int32,MS.Internal.TextFormatting.LsTFlow,System.Int32,System.Int32,MS.Internal.TextFormatting.LSPOINT@,MS.Internal.TextFormatting.LsHeights@,System.Int32,System.Int32,System.Int32*,System.UInt16*,MS.Internal.Shaping.CharacterShapingProperties*,System.UInt16*,System.Int32*,MS.Internal.Shaping.GlyphOffset*,MS.Internal.Shaping.GlyphShapingProperties*,System.Int32)">
    <parameter name="pwchText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piCharAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="puClusterMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="puGlyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piJustifiedGlyphAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piiGlyphOffsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="piGlyphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.ExpandGlyphs(MS.Internal.TextFormatting.LsGlyphRunInfo*,System.Int32,System.Int32**,System.Int32**,MS.Internal.TextFormatting.LsExpType*,MS.Internal.TextFormatting.LsExpType,MS.Internal.TextFormatting.LsExpType)">
    <parameter name="pplsExpansionLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pplsExpansionRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.TextFormatting.LineServicesCallbacks.FullText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.GetCharCompressionInfoFullMixed(System.IntPtr,MS.Internal.TextFormatting.LsDevice,MS.Internal.TextFormatting.LsTFlow,MS.Internal.TextFormatting.LsCharRunInfo*,MS.Internal.TextFormatting.LsNeighborInfo*,MS.Internal.TextFormatting.LsNeighborInfo*,System.Int32,System.Int32**,System.Int32**)">
    <parameter name="pplscompressionLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pplscompressionRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.GetCharExpansionInfoFullMixed(System.IntPtr,MS.Internal.TextFormatting.LsDevice,MS.Internal.TextFormatting.LsTFlow,MS.Internal.TextFormatting.LsCharRunInfo*,MS.Internal.TextFormatting.LsNeighborInfo*,MS.Internal.TextFormatting.LsNeighborInfo*,System.Int32,System.Int32**,System.Int32**)">
    <parameter name="pplsexpansionLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pplsexpansionRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.GetGlyphCompressionInfoFullMixed(System.IntPtr,MS.Internal.TextFormatting.LsDevice,MS.Internal.TextFormatting.LsTFlow,MS.Internal.TextFormatting.LsGlyphRunInfo*,MS.Internal.TextFormatting.LsNeighborInfo*,MS.Internal.TextFormatting.LsNeighborInfo*,System.Int32,System.Int32**,System.Int32**)">
    <parameter name="pplscompressionLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pplscompressionRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.GetGlyphExpansionInfoFullMixed(System.IntPtr,MS.Internal.TextFormatting.LsDevice,MS.Internal.TextFormatting.LsTFlow,MS.Internal.TextFormatting.LsGlyphRunInfo*,MS.Internal.TextFormatting.LsNeighborInfo*,MS.Internal.TextFormatting.LsNeighborInfo*,System.Int32,System.Int32**,System.Int32**,MS.Internal.TextFormatting.LsExpType*,System.Int32*)">
    <parameter name="pplsexpansionLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pplsexpansionRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.GetGlyphPositions(System.IntPtr,System.IntPtr*,System.Int32*,System.Int32,MS.Internal.TextFormatting.LsDevice,System.Char*,System.UInt16*,MS.Internal.Shaping.CharacterShapingProperties*,System.Int32,System.UInt16*,MS.Internal.Shaping.GlyphShapingProperties*,System.Int32,MS.Internal.TextFormatting.LsTFlow,System.Int32*,MS.Internal.Shaping.GlyphOffset*)">
    <parameter name="plsplsruns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pcchPlsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.GetGlyphsRedefined(System.IntPtr,System.IntPtr*,System.Int32*,System.Int32,System.Char*,System.Int32,MS.Internal.TextFormatting.LsTFlow,System.UInt16*,System.Int32*,System.Int32,System.Int32@,System.UInt16*,MS.Internal.Shaping.CharacterShapingProperties*,System.Int32*,System.Int32@)">
    <parameter name="plsplsruns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="puClusterMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pfCanGlyphAlone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pcchPlsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.GetLSRunStrikethroughMetrics(MS.Internal.TextFormatting.LSRun,System.Double@,System.Double@)">
    <parameter name="lsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.GetRunCharWidths(System.IntPtr,MS.Internal.TextFormatting.Plsrun,MS.Internal.TextFormatting.LsDevice,System.Char*,System.Int32,System.Int32,MS.Internal.TextFormatting.LsTFlow,System.Int32*,System.Int32@,System.Int32@)">
    <parameter name="charWidths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="charString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.TextFormatting.LineServicesCallbacks.IndexedGlyphRuns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.TextFormatting.LineServicesCallbacks.InlineDrawDelegate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.TextFormatting.LineServicesCallbacks.InlineFormatDelegate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.RemapLSRuns(System.IntPtr*,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="plsplsruns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.SaveException(System.Exception,MS.Internal.TextFormatting.Plsrun,MS.Internal.TextFormatting.LSRun)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LineServicesCallbacks.SetChpFormat(System.Windows.Media.TextFormatting.TextRunProperties,MS.Internal.TextFormatting.LsChp@)">
    <parameter name="runProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LSRun.CompileFeatureSet(MS.Internal.TextFormatting.LSRun[],System.Int32*)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="lsruns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pcchRuns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LSRun.DisableFeature(MS.Internal.TextFormatting.LSRun.CustomOpenTypeFeatures,System.UInt16*)">
    <parameter name="featureIndex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LSRun.DrawGlyphRun(System.Windows.Media.DrawingContext,System.Windows.Media.Brush,System.Windows.Media.GlyphRun)">
    <parameter name="glyphRun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LSRun.RectUV(,MS.Internal.TextFormatting.LSPOINT,MS.Internal.TextFormatting.LSPOINT,System.Double,MS.Internal.TextFormatting.TextMetrics.FullTextLine)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.LSRun.SetFeature(MS.Internal.TextFormatting.LSRun.CustomOpenTypeFeatures,System.Int32,System.Int32,System.Int32,System.UInt16*,MS.Internal.Shaping.Feature[]@,System.Int32@)">
    <parameter name="featureIndex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="features">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LSRun.UVToXY(,,System.Double,System.Double,System.Double,MS.Internal.TextFormatting.TextMetrics.FullTextLine)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="line">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.LSRun.UVToXY(,,System.Int32,System.Int32,System.Double,MS.Internal.TextFormatting.TextMetrics.FullTextLine)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="line">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ParaProp.#ctor(MS.Internal.TextFormatting.TextFormatterImp,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Boolean)">
    <parameter name="formatter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.TextFormatting.ParaProp.Tabs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.TextFormatting.ParaProp.TextDecorations">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.TextFormatting.ParaProp.TextMarkerProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.SimpleRun.Create(MS.Internal.TextFormatting.FormatSettings,System.Int32,System.Int32,System.Int32,System.Int32)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.SimpleRun.Create(MS.Internal.TextFormatting.FormatSettings,System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.TextRun,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.SimpleRun.CreateSimpleTextRun(System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.TextRun,MS.Internal.TextFormatting.TextFormatterImp,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="textRun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="formatter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.SimpleRun.IsUnderlineCompatible(MS.Internal.TextFormatting.SimpleRun)">
    <parameter name="nextRun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.SimpleTextLine.#ctor(MS.Internal.TextFormatting.FormatSettings,System.Int32,System.Int32,System.Collections.ArrayList,System.Int32@,System.Int32@)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="runs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.SimpleTextLine.AddRun(System.Collections.ArrayList,MS.Internal.TextFormatting.SimpleRun,MS.Internal.TextFormatting.SimpleRun)">
    <parameter name="runs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="run">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.SimpleTextLine.Create(MS.Internal.TextFormatting.FormatSettings,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.SimpleTextLine.GetIndexedGlyphRuns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextFormatterImp.AcquireContext(System.Object,System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextFormatterImp.CreateAntiInversionTransform(System.Windows.Media.TextFormatting.InvertAxes,System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextFormatterImp.FormatLineInternal(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="textRunCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextFormatterImp.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)">
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.TextFormatting.TextFormatterImp.GlyphingCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextFormatterImp.PrepareFormatSettings(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textRunCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextFormatterImp.VerifyTextFormattingArguments(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextRunCache)">
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textRunCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMarkerSource.#ctor(System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.TextMarkerStyle,System.Int32)">
    <parameter name="textParagraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMarkerSource.AddRomanNumeric(System.Text.StringBuilder,System.Int32,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oneFiveTen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMarkerSource.ConvertNumberToString(System.Int32,System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="numericSymbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.Compute(MS.Internal.TextFormatting.FullTextState,System.Int32,System.Int32,MS.Internal.TextFormatting.FormattedTextSymbols,MS.Internal.TextFormatting.LsLineWidths@,MS.Internal.TextFormatting.LsLInfo*)">
    <parameter name="fullText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.#ctor(MS.Internal.TextFormatting.FormatSettings,System.Int32,System.Int32,System.Int32,MS.Internal.TextFormatting.LineFlags)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.AddValidTextBounds(System.Collections.ArrayList,System.Windows.Media.TextFormatting.TextBounds)">
    <parameter name="boundsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bounds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.AppendCollapsingSymbol(MS.Internal.TextFormatting.FormattedTextSymbols)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.CalculateTextRunBounds(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.CollectTextBoundsFromBaseLevel(System.Collections.ArrayList,System.Int32@,System.Int32@,MS.Internal.TextFormatting.LsQSubInfo[],System.Int32,System.Int32)">
    <parameter name="boundsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sublines">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.CollectTextBoundsToBaseLevel(System.Collections.ArrayList,System.Int32@,System.Int32@,MS.Internal.TextFormatting.LsQSubInfo[],System.Int32,System.Int32,System.Int32@)">
    <parameter name="boundsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sublines">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.CpCount(MS.Internal.Span)">
    <parameter name="plsrunSpan">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.CreateCollapsingSymbolBounds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.CreateDegenerateBounds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.FormatLine(MS.Internal.TextFormatting.FullTextState,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,MS.Internal.TextFormatting.LineFlags,MS.Internal.TextFormatting.FormattedTextSymbols)">
    <parameter name="fullText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.GetDistanceInsideTextCell(System.Int32,System.Boolean,MS.Internal.TextFormatting.LsQSubInfo[],System.Int32,MS.Internal.TextFormatting.LsTextCell@)">
    <parameter name="sublineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.GetEndOfRunDistance(MS.Internal.TextFormatting.LsQSubInfo[],System.Int32)">
    <parameter name="sublines">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.GetEndOfSublineDistance(MS.Internal.TextFormatting.LsQSubInfo[],System.Int32)">
    <parameter name="sublines">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.PrefetchLSRuns(MS.Internal.TextFormatting.TextStore,System.Int32,System.Int32)">
    <parameter name="store">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.QueryLineCpPpoint(System.Int32,MS.Internal.TextFormatting.LsQSubInfo[],System.Int32@,MS.Internal.TextFormatting.LsTextCell@)">
    <parameter name="subLineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.QueryLinePointPcp(,MS.Internal.TextFormatting.LsQSubInfo[],System.Int32@,MS.Internal.TextFormatting.LsTextCell@)">
    <parameter name="subLineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.FullTextLine.WrapException(System.Exception)">
    <parameter name="caughtException">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextMetrics.GetTextLineBreak(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextRunCacheImp.FetchTextRun(MS.Internal.TextFormatting.FormatSettings,System.Int32,System.Int32,System.Int32@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextRunCacheImp.GetPrecedingText(System.Windows.Media.TextFormatting.TextSource,System.Int32)">
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextRunCacheImp.GetTextRunSpans">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextShapeableSymbols.ComputeShapedGlyphRun(,System.Char[],System.UInt16[],System.UInt16[],MS.Internal.Shaping.GlyphShapingProperties[],System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{},System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="glyphAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextShapeableSymbols.ComputeUnshapedGlyphRun(,System.Char[],System.Collections.Generic.IList{System.Double})">
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="characterAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextShapeableSymbols.Draw(System.Windows.Media.DrawingContext,System.Windows.Media.Brush,System.Windows.Media.GlyphRun)">
    <parameter name="glyphRun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextShapeableSymbols.GetAdvanceWidthsUnshaped(System.Char*,System.Int32,System.Double,System.Int32*)">
    <parameter name="advanceWidthsUnshaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextShapeableSymbols.GetGlyphs(MS.Internal.CheckedCharPointer,System.Int32,MS.Internal.Shaping.ShapingOptions,MS.Internal.Shaping.FeatureSet,MS.Internal.CheckedUShortPointer,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.Shaping.GlyphShapingProperties[]@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.#ctor(MS.Internal.TextFormatting.FormatSettings,System.Int32,System.Int32,System.Int32)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.AddLSRun(MS.Internal.TextFormatting.LSRun)">
    <parameter name="lsrun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.AnalyzeDirectionalModifier(MS.Internal.TextFormatting.BidiState,System.Windows.FlowDirection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.AnalyzeEndOfDirectionalModifier(MS.Internal.TextFormatting.BidiState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.BidiAnalyze(MS.Internal.SpanVector,System.Int32,System.Byte[]@)">
    <parameter name="runInfoVector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.CollectRawWord(System.Int32,System.Boolean,System.Int32@,System.Int32@,System.Globalization.CultureInfo@,System.Int32@,MS.Internal.Generic.SpanVector{System.Int32}@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.CreateLineBreakLSRun(MS.Internal.TextFormatting.TextRunInfo,System.Int32,System.Int32@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="runInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.CreateLSRuns(MS.Internal.TextFormatting.TextRunInfo,System.Collections.Generic.IList{System.Windows.Media.TextEffect},System.Globalization.CultureInfo,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
    <parameter name="runInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.CreateSpecialRunFromTextContent(MS.Internal.TextFormatting.TextRunInfo,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="runInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.CreateTextLSRuns(MS.Internal.TextFormatting.TextRunInfo,System.Collections.Generic.IList{System.Windows.Media.TextEffect},System.Globalization.CultureInfo,System.Int32,System.Int32,System.Int32,System.Int32@)">
    <parameter name="runInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.FetchTextRun(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.FormatTextObject(System.Windows.Media.TextFormatting.TextEmbeddedObject,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="textObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.IsEndOfDirectionalModifier(MS.Internal.TextFormatting.TextRunInfo)">
    <parameter name="runInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.IsForceBreakRequired(MS.Internal.SpanVector,System.Int32@)">
    <parameter name="runInfoVector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.TextStore.SetTextEffectsVector(MS.Internal.SpanVector,System.Int32,MS.Internal.TextFormatting.TextRunInfo,System.Windows.Media.TextEffectCollection)">
    <parameter name="textEffectsVector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="runInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textEffects">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealDoubles.#ctor(System.Double,System.Collections.Generic.IList{System.Double})">
    <parameter name="realValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealDoubles.CopyTo(System.Double[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealDoubles.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealPoints.#ctor(System.Double,System.Collections.Generic.IList{})">
    <parameter name="pointValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealPoints.Add()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealPoints.Contains()">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealPoints.CopyTo([],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealPoints.IndexOf()">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealPoints.Insert(System.Int32,)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealPoints.Remove()">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextFormatting.ThousandthOfEmRealPoints.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TrueTypeRasterizer.GetPath(MS.Internal.TrueTypeRasterizer.Allocator,,System.UInt16)">
    <parameter name="allocator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TrueTypeRasterizer.NewFont(System.IO.UnmanagedMemoryStream,System.Uri,System.Int32)">
    <parameter name="fontFileStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TrueTypeRasterizer.ReadUINT32(System.Byte*)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TrueTypeSubsetter.ComputeSubset(System.Void*,System.Int32,System.Uri,System.Int32,System.UInt16[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="glyphArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.UIElementHelper.GetContainingUIElement2D()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.UIElementHelper.GetUIParent()">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.UIElementHelper.GetUIParent(,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.UIElementHelper.IsHitTestVisible()">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.UIElementHelper.IsVisible()">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.UIElementHelper.PredictFocus(,)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.UnsafeStringCharacterBuffer.#ctor(System.Char*,System.Int32)">
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.CreateRequest(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.CreateRequestAndGetResponse(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.CreateRequestAndGetResponseStream(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.CreateRequestAndGetResponseStream(System.Uri,@)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.EndGetResponse(System.Net.WebRequest,System.IAsyncResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.GetContentType(System.Net.WebResponse)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.GetResponse(System.Net.WebRequest)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.GetResponseStream(System.Net.WebRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WpfWebRequestHelper.GetResponseStream(System.Net.WebRequest,@)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Utility.DTypeMap.Item()">
    <parameter name="dType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Win32.WinInet.InternetCacheFolder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageStore.AddPackage(System.Uri,)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageStore.GetPackage(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageStore.RemovePackage(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageStore.ValidatePackageUri(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackWebRequest.GetInnerRequest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackWebRequest.GetRequest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackWebRequest.GetRequest(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackWebRequest.GetResponse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackWebRequestFactory.CreateWebRequest(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackWebRequestFactory.System#Net#IWebRequestCreate#Create(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackWebResponse.#ctor(System.Uri,System.Uri,System.Uri,,System.Boolean)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="innerUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackWebResponse.#ctor(System.Uri,System.Uri,System.Uri,System.Net.WebRequest)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="innerUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="innerRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackWebResponse.CachedResponse.GetResponseStream">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.PackWebResponse.CachedResponse.Headers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackWebResponse.ResponseCallback(System.IAsyncResult)">
    <parameter name="ar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetAccessKey()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetAutomationId()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetHelpText()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetIsColumnHeader()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetIsRowHeader()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetItemStatus()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetItemType()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetLabeledBy()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.GetName()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetAcceleratorKey(,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetAccessKey(,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetAutomationId(,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetHelpText(,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetIsColumnHeader(,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetIsRequiredForForm(,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetIsRowHeader(,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetItemStatus(,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetItemType(,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetLabeledBy(,System.Windows.UIElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.AutomationProperties.SetName(,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.AutomationPeerFromInputElement(System.Windows.IInputElement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetChildrenCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClassNameCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePointCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetControlType(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetCultureInfo(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetFrameworkId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetFrameworkId(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProvider">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetHostRawElementProviderCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetInteropChild">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledByCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetName(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetNativeWindowHandle(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetPeerFromPoint()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetRuntimeId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.GetRuntimeId(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.isDescendantOf(System.Windows.Automation.Peers.AutomationPeer)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="peer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeer(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.ProviderFromPeerNoDelegation(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.RaiseAsyncContentLoadedEvent()">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.UpdatePeer(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.AutomationPeer.ValidateConnected(System.Windows.Automation.Peers.AutomationPeer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="connectedPeer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.ContentElementAutomationPeer.#ctor(System.Windows.ContentElement)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.ContentElementAutomationPeer.CreatePeerForElement(System.Windows.ContentElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.ContentElementAutomationPeer.FromElement(System.Windows.ContentElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.ContentElementAutomationPeer.GetAcceleratorKeyCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.ContentElementAutomationPeer.GetItemStatusCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.ContentElementAutomationPeer.GetItemTypeCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.GenericRootAutomationPeer.#ctor(System.Windows.UIElement)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.GenericRootAutomationPeer.GetBoundingRectangleCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.HostedWindowWrapper.CreateInternal(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElement3DAutomationPeer.#ctor(System.Windows.UIElement3D)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElement3DAutomationPeer.CreatePeerForElement(System.Windows.UIElement3D)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElement3DAutomationPeer.FromElement(System.Windows.UIElement3D)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElement3DAutomationPeer.iterate(,System.Windows.Automation.Peers.UIElement3DAutomationPeer.IteratorCallback)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElementAutomationPeer.#ctor(System.Windows.UIElement)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElementAutomationPeer.CreatePeerForElement(System.Windows.UIElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElementAutomationPeer.FromElement(System.Windows.UIElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElementAutomationPeer.GetRootAutomationPeer(System.Windows.Media.Visual,System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.UIElementAutomationPeer.iterate(,System.Windows.Automation.Peers.UIElementAutomationPeer.IteratorCallback)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ClassHandlersStore.AddToExistingHandlers(System.Int32,System.Delegate,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ClassHandlersStore.UpdateSubClassHandlers(System.Windows.RoutedEvent,System.Windows.RoutedEventHandlerInfoList)">
    <parameter name="baseClassListeners">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.ContainsData(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.ContainsDataInternal(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.CriticalSetDataObject(System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.GetAudioStream">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Clipboard.GetData(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.GetDataInternal(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.GetDataObject">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Clipboard.GetDataObjectInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Clipboard.GetFileDropList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Clipboard.GetImage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Clipboard.GetText">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Clipboard.GetText(System.Windows.TextDataFormat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Clipboard.IsCurrent(System.Windows.IDataObject)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.IsDataObjectFromLessPriviligedApplicationDomain(System.Windows.IDataObject)">
    <parameter name="dataObjectToApply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetAudio(System.Byte[])">
    <parameter name="audioBytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetAudio(System.IO.Stream)">
    <parameter name="audioStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetData(System.String,System.Object)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetDataInternal(System.String,System.Object)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetDataObject(System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetDataObject(System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetFileDropList(System.Collections.Specialized.StringCollection)">
    <parameter name="fileDropList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetImage(System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="image">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetText(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Clipboard.SetText(System.String,System.Windows.TextDataFormat)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
    <parameter name="route">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.AdjustEventSource(System.Windows.RoutedEventArgs)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContentElement.ApplyAnimationClock(,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.ApplyAnimationClock(,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.BeginAnimation(,System.Windows.Media.Animation.AnimationTimeline)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.BeginAnimation(,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.BuildRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="route">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.CoerceIsEnabled(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.ContentElement.CommandBindings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContentElement.EventHandlersStoreAdd(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.EventHandlersStoreRemove(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.GetAnimationBaseValue()">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.GetUIParent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContentElement.GetUIParent(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContentElement.GetUIParentCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.ContentElement.InputBindings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContentElement.IsFocused_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.IsKeyboardFocused_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.IsMouseCaptured_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.IsMouseDirectlyOver_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.IsStylusCaptured_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.IsStylusDirectlyOver_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.OnCreateAutomationPeer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContentElement.OnFocusableChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.OnIsEnabledChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.PredictFocus()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContentElement.RaiseDependencyPropertyChanged(System.Windows.EventPrivateKey,)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs,System.Boolean)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.RaiseMouseButtonEvent(System.Windows.EventPrivateKey,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentOperations.GetParent(System.Windows.ContentElement)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContentOperations.SetParent(System.Windows.ContentElement,)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.AddToSizeChangedChain(System.Windows.SizeChangedInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.ContextLayoutManager.ArrangeQueue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.ContextLayoutManager.AutomationEvents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContextLayoutManager.From()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContextLayoutManager.GetAutomationRoots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContextLayoutManager.getProperArrangeRect(System.Windows.UIElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.ContextLayoutManager.LayoutEvents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue._addRequest(System.Windows.UIElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue._getNewRequest(System.Windows.UIElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue._removeRequest(System.Windows.ContextLayoutManager.LayoutQueue.Request)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue.Add(System.Windows.UIElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue.canRelyOnParentRecalc(System.Windows.UIElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue.getRequest(System.Windows.UIElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue.invalidate(System.Windows.UIElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue.Remove(System.Windows.UIElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue.RemoveOrphans(System.Windows.UIElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue.ReuseRequest(System.Windows.ContextLayoutManager.LayoutQueue.Request)">
    <parameter name="r">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.LayoutQueue.setRequest(System.Windows.UIElement,System.Windows.ContextLayoutManager.LayoutQueue.Request)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.markTreeDirty(System.Windows.UIElement)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.ContextLayoutManager.MeasureQueue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ContextLayoutManager.UpdateLayoutBackground(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ContextLayoutManager.UpdateLayoutCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.CultureInfoIetfLanguageTagConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.CultureInfoIetfLanguageTagConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.CultureInfoIetfLanguageTagConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.CultureInfoIetfLanguageTagConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataFormat.#ctor(System.String,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataFormats.GetDataFormat(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.#ctor(System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.#ctor(System.Runtime.InteropServices.ComTypes.IDataObject)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.#ctor(System.String,System.Object)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.#ctor(System.String,System.Object,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.#ctor(System.Type,System.Object)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.#ctor(System.Windows.IDataObject)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.AddCopyingHandler(,System.Windows.DataObjectCopyingEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.AddPastingHandler(,System.Windows.DataObjectPastingEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.AddSettingDataHandler(,System.Windows.DataObjectSettingDataEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.CriticalSetData(System.String,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.FindDataStoreEntry(System.String,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetData(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetData(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetData(System.String,System.Boolean,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetData(System.Type)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetDataPresent(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetDataPresent(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetDataPresent(System.String,System.Boolean,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetDataPresent(System.Type)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetFormats">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.DataStore.GetFormats(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.DataStore.SetData(System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.SetData(System.String,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.SetData(System.String,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.SetData(System.String,System.Object,System.Boolean,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.DataStore.SetData(System.Type,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.EnsureBitmapDataFromFormat(System.String,System.Boolean,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.FormatEnumerator.#ctor(System.Windows.DataObject)">
    <parameter name="dataObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.FormatEnumerator.#ctor(System.Windows.DataObject.FormatEnumerator)">
    <parameter name="formatEnumerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.FormatEnumerator.Next(System.Int32,System.Runtime.InteropServices.ComTypes.FORMATETC[],System.Int32[])">
    <parameter name="rgelt">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetAudioStream">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.GetData(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetData(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetData(System.Type)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetDataIntoOleStructsByTypeMedimHGlobal(System.String,System.Object,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetDataPresent(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetDataPresent(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetDataPresent(System.Type)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetDistinctStrings(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="formats">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.GetFileDropList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.GetFormats">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.GetFormats(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.GetImage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.GetMappedFormats(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.GetText">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.GetText(System.Windows.TextDataFormat)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetBitmapSourceFromHbitmap(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetData(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetData(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetData(System.String,System.Boolean,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetData(System.Type)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataFromBoundOleDataObject(System.String,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataFromOleHGLOBAL(System.String,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataFromOleIStream(System.String,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataFromOleOther(System.String,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataPresent(System.String)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataPresent(System.String,System.Boolean)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataPresent(System.String,System.Boolean,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataPresent(System.Type)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetDataPresentInner(System.String,System.Runtime.InteropServices.ComTypes.DVASPECT,System.Int32)">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetFormats">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetFormats(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.GetMetafileFromHemf(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.ReadByteStreamFromHandle(System.IntPtr,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.ReadFileListFromHandle(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.ReadStringFromHandle(System.IntPtr,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.ReadStringFromHandleUtf8(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.SetData(System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.SetData(System.String,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.SetData(System.String,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.OleConverter.SetData(System.Type,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.RemoveCopyingHandler(,System.Windows.DataObjectCopyingEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.RemovePastingHandler(,System.Windows.DataObjectPastingEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.RemoveSettingDataHandler(,System.Windows.DataObjectSettingDataEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SaveObjectToHandle(System.IntPtr,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SaveStreamToHandle(System.IntPtr,System.IO.Stream,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SaveStringToHandle(System.IntPtr,System.String,System.Boolean,System.Boolean)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SaveStringToHandleAsUtf8(System.IntPtr,System.String,System.Boolean)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SaveSystemBitmapSourceToHandle(System.IntPtr,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetAudio(System.Byte[])">
    <parameter name="audioBytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetAudio(System.IO.Stream)">
    <parameter name="audioStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetData(System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetData(System.String,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetData(System.Type,System.Object)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetFileDropList(System.Collections.Specialized.StringCollection)">
    <parameter name="fileDropList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetImage(System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="image">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetText(System.String)">
    <parameter name="textData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObject.SetText(System.String,System.Windows.TextDataFormat)">
    <parameter name="textData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObjectCopyingEventArgs.#ctor(System.Windows.IDataObject,System.Boolean)">
    <parameter name="dataObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObjectCopyingEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObjectPastingEventArgs.#ctor(System.Windows.IDataObject,System.Boolean,System.String)">
    <parameter name="dataObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="formatToApply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObjectPastingEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObjectSettingDataEventArgs.#ctor(System.Windows.IDataObject,System.String)">
    <parameter name="dataObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DataObjectSettingDataEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync(System.Windows.Documents.ContentPosition)">
    <parameter name="contentPosition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync(System.Windows.Documents.ContentPosition,System.Object)">
    <parameter name="contentPosition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddDragEnterHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddDragLeaveHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddDragOverHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddDropHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddGiveFeedbackHandler(,System.Windows.GiveFeedbackEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddPreviewDragEnterHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddPreviewDragLeaveHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddPreviewDragOverHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddPreviewDropHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddPreviewGiveFeedbackHandler(,System.Windows.GiveFeedbackEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddPreviewQueryContinueDragHandler(,System.Windows.QueryContinueDragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.AddQueryContinueDragHandler(,System.Windows.QueryContinueDragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.DoDragDrop(,System.Object,System.Windows.DragDropEffects)">
    <parameter name="dragSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemoveDragEnterHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemoveDragLeaveHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemoveDragOverHandler(,System.Windows.DragEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemoveDropHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemoveGiveFeedbackHandler(,System.Windows.GiveFeedbackEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemovePreviewDragEnterHandler(,System.Windows.DragEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemovePreviewDragLeaveHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemovePreviewDragOverHandler(,System.Windows.DragEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemovePreviewDropHandler(,System.Windows.DragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemovePreviewGiveFeedbackHandler(,System.Windows.GiveFeedbackEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemovePreviewQueryContinueDragHandler(,System.Windows.QueryContinueDragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragDrop.RemoveQueryContinueDragHandler(,System.Windows.QueryContinueDragEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragEventArgs.GetPosition(System.Windows.IInputElement)">
    <parameter name="relativeTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DragEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Duration.Equals(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DurationConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DurationConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DurationConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Enumerator.#ctor(System.Windows.FreezableCollection{})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.EventHandlersStore.#ctor(System.Windows.EventHandlersStore)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventHandlersStore.Add(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventHandlersStore.AddRoutedEventHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventHandlersStore.Contains(System.Windows.RoutedEvent)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventHandlersStore.Get(System.Windows.EventPrivateKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventHandlersStore.GetRoutedEventHandlers(System.Windows.RoutedEvent)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.EventHandlersStore.Item(System.Windows.EventPrivateKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.EventHandlersStore.Item(System.Windows.RoutedEvent)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventHandlersStore.OnEventHandlersIterationCallback(System.Collections.ArrayList,System.Int32,System.Object)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventHandlersStore.Remove(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventHandlersStore.RemoveRoutedEventHandler(System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventManager.GetRoutedEventFromName(System.String,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.EventManager.GetRoutedEvents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.EventManager.GetRoutedEventsForOwner(System.Type)">
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="classType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventManager.RegisterClassHandler(System.Type,System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
    <parameter name="classType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handlerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.EventRoute.BranchNodeStack">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.EventRoute.InvokeHandlers(System.Object,System.Windows.RoutedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventRoute.InvokeHandlersImpl(System.Object,System.Windows.RoutedEventArgs,System.Boolean)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventRoute.ReInvokeHandlers(System.Object,System.Windows.RoutedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventRouteFactory.FetchObject(System.Windows.RoutedEvent)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EventRouteFactory.RecycleObject(System.Windows.EventRoute)">
    <parameter name="eventRoute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStretch.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStretch.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FontStretchConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStretchConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStretchConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStretches.FontStretchStringToKnownStretch(System.String,System.IFormatProvider,System.Windows.FontStretch@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStyle.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FontStyle.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FontStyle.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FontStyleConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStyleConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontStyles.FontStyleStringToKnownStyle(System.String,System.IFormatProvider,System.Windows.FontStyle@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontWeight.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontWeight.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FontWeightConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontWeightConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontWeightConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FontWeights.FontWeightStringToKnownWeight(System.String,System.IFormatProvider,System.Windows.FontWeight@)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.Add(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.AddHelper(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.AddWithoutFiringPublicEvents(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.CloneCommon(System.Windows.FreezableCollection{`0},System.Windows.FreezableCollection{`0}.CloneCommonType)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FreezableCollection`1.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.GiveFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.GlobalEventManager.AddOwner(System.Windows.RoutedEvent,System.Type)">
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.GlobalEventManager.GetDTypedClassListeners(,System.Windows.RoutedEvent)">
    <parameter name="dType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.GlobalEventManager.GetDTypedClassListeners(,System.Windows.RoutedEvent,System.Windows.ClassHandlersStore@,System.Int32@)">
    <parameter name="dType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.GlobalEventManager.GetRoutedEventFromName(System.String,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.GlobalEventManager.GetRoutedEvents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.GlobalEventManager.GetRoutedEventsForOwner(System.Type)">
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.GlobalEventManager.GetUpdatedDTypedClassListeners(,System.Windows.RoutedEvent,System.Windows.ClassHandlersStore@,System.Int32@)">
    <parameter name="dType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.GlobalEventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.AddPropertyData(System.Guid,System.Object)">
    <parameter name="propertyData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.CopyPropertyData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.ExtendedPropertiesChanged_EventForwarder(System.Object,System.Windows.Ink.ExtendedPropertiesChangedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.GeometricallyEqual(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.GetPropertyDataIds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.OnAttributeChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.PrivateNotifyPropertyChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.SetExtendedPropertyBackedProperty(System.Guid,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Ink.DrawingAttributes.StylusShape">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributes.ValidateStylusTipTransform(System.Guid,System.Object)">
    <parameter name="propertyData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.DrawingAttributesReplacedEventArgs.#ctor(System.Windows.Ink.DrawingAttributes,System.Windows.Ink.DrawingAttributes)">
    <parameter name="newDrawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="previousDrawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.ExtendedProperty.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.ExtendedProperty.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.ExtendedPropertyCollection.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.ExtendedPropertyCollection.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.ExtendedPropertyCollection.GetGuidArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.GestureRecognizer.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
    <parameter name="enabledApplicationGestures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.GestureRecognizer.CriticalRecognize(System.Windows.Ink.StrokeCollection)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.GestureRecognizer.GetEnabledGestures">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.GestureRecognizer.Recognize(System.Windows.Ink.StrokeCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.GestureRecognizer.RecognizeImpl(System.Windows.Ink.StrokeCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.GestureRecognizer.SetEnabledGestures(System.Collections.Generic.IEnumerable{System.Windows.Ink.ApplicationGesture})">
    <parameter name="applicationGestures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IEnumerablePointHelper.GetCount(System.Collections.Generic.IEnumerable{})">
    <parameter name="ienum">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IEnumerablePointHelper.GetPointArray(System.Collections.Generic.IEnumerable{})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ienum">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IncrementalHitTester.#ctor(System.Windows.Ink.StrokeCollection)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IncrementalHitTester.AddPoints(System.Collections.Generic.IEnumerable{})">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IncrementalHitTester.AddPoints(System.Windows.Input.StylusPointCollection)">
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IncrementalHitTester.AddPointsCore(System.Collections.Generic.IEnumerable{})">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IncrementalHitTester.OnStrokesChanged(System.Object,System.Windows.Ink.StrokeCollectionChangedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IncrementalLassoHitTester.#ctor(System.Windows.Ink.StrokeCollection,System.Int32)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.IncrementalStrokeHitTester.#ctor(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StylusShape)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eraserShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Ink.LassoSelectionChangedEventArgs.DeselectedStrokes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Ink.LassoSelectionChangedEventArgs.SelectedStrokes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Renderer.AttachIncrementalRendering(System.Windows.Media.Visual,System.Windows.Ink.DrawingAttributes)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.AttachVisual(System.Windows.Ink.Renderer.StrokeVisual,System.Boolean)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.DetachIncrementalRendering(System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.DetachVisual(System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.GetContainerVisual(System.Windows.Ink.DrawingAttributes)">
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.OnStrokeInvalidated(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.OnStrokesChanged(System.Object,System.Windows.Ink.StrokeCollectionChangedEventArgs)">
    <parameter name="eventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.StartListeningOnStrokeEvents(System.Windows.Ink.Stroke)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.StopListeningOnStrokeEvents(System.Windows.Ink.Stroke)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Ink.Renderer.Strokes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Renderer.StrokeVisual.#ctor(System.Windows.Ink.Stroke,System.Windows.Ink.Renderer)">
    <parameter name="stroke">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Renderer.StrokeVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
    <parameter name="hitTestParams">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection)">
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes)">
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Ink.DrawingAttributes,System.Windows.Ink.ExtendedPropertyCollection)">
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.AddInterpolatedBezierPoint(System.Windows.Input.StylusPointCollection,,System.Int32[],System.Single)">
    <parameter name="bezierStylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.AddPropertyData(System.Guid,System.Object)">
    <parameter name="propertyData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.CalcHollowTransforms(System.Windows.Ink.DrawingAttributes,@,@)">
    <parameter name="originalDa">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.Clip(MS.Internal.Ink.StrokeFIndices[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cutAt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.Clip(System.Windows.Ink.StrokeIntersection[])">
    <parameter name="cutAt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.Copy(System.Windows.Input.StylusPointCollection,System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceStylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.Draw(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
    <parameter name="drawingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.DrawCore(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes)">
    <parameter name="drawingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.DrawingAttributes_Changed(System.Object,System.Windows.Ink.PropertyDataChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.DrawInternal(System.Windows.Media.DrawingContext,System.Windows.Ink.DrawingAttributes,System.Boolean)">
    <parameter name="DrawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.Erase(MS.Internal.Ink.StrokeFIndices[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cutAt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.Erase(System.Windows.Ink.StrokeIntersection[])">
    <parameter name="cutAt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.EraseTest(System.Collections.Generic.IEnumerable{},System.Windows.Ink.StylusShape)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="shape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Ink.Stroke.ExtendedProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetClipResult()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetClipResult(System.Collections.Generic.IEnumerable{})">
    <parameter name="lassoPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetEraseResult()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{})">
    <parameter name="lassoPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetEraseResult(System.Collections.Generic.IEnumerable{},System.Windows.Ink.StylusShape)">
    <parameter name="eraserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eraserShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetGeometry(System.Windows.Ink.DrawingAttributes)">
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetIntermediatePoint(System.Windows.Input.StylusPoint,System.Windows.Input.StylusPoint,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetInterpolatedStylusPoints(System.Collections.Generic.List{})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bezierPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.GetPropertyDataIds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.Stroke.HitTest(MS.Internal.Ink.Lasso)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="lasso">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{},System.Int32)">
    <parameter name="lassoPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.HitTest(System.Collections.Generic.IEnumerable{},System.Windows.Ink.StylusShape)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.OnDrawingAttributesChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.OnDrawingAttributesReplaced(System.Windows.Ink.DrawingAttributesReplacedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.OnInvalidated(System.EventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.OnStylusPointsChanged(System.EventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.OnStylusPointsReplaced(System.Windows.Ink.StylusPointsReplacedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.Stroke.StylusPoints_CountGoingToZero(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)">
    <parameter name="propertyData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{})">
    <parameter name="lassoPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{})">
    <parameter name="lassoPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{},System.Windows.Ink.StylusShape)">
    <parameter name="eraserPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eraserShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="eraserShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.GetSeekableStream(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.GetStrokeIndexes(System.Windows.Ink.StrokeCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.HitTest()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.HitTest(,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.HitTest(,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="lassoPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{},System.Windows.Ink.StylusShape)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusShape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.PointHitTest(,System.Windows.Ink.StylusShape)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="shape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.ReadOnlyStrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)">
    <parameter name="strokes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)">
    <parameter name="strokeToReplace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strokesToReplaceWith">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)">
    <parameter name="strokesToReplace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strokesToReplaceWith">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.SaveIsf(System.IO.Stream,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeCollection.UpdateStrokeCollection(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection,System.Int32@)">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toReplace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Ink.StrokeCollectionChangedEventArgs.Added">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Ink.StrokeCollectionChangedEventArgs.Removed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StrokeHitEventArgs.GetPointEraseResults">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StrokeIntersection.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeIntersection.GetHitSegments(System.Windows.Ink.StrokeIntersection[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="intersections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StrokeIntersection.GetInSegments(System.Windows.Ink.StrokeIntersection[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="intersections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StylusPointsReplacedEventArgs.#ctor(System.Windows.Input.StylusPointCollection,System.Windows.Input.StylusPointCollection)">
    <parameter name="newStylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="previousStylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StylusShape.FixCounterClockwiseVertices([])">
    <parameter name="vertices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Ink.StylusShape.GetBezierControlPoints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Ink.StylusShape.GetVerticesAsVectors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.AddAccessKeyPressedHandler(,System.Windows.Input.AccessKeyPressedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.CopyAndPurgeDead(System.Collections.ArrayList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.CriticalGetActiveSource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.GetActiveSource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.GetSourceForElement(System.Windows.IInputElement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.GetTargetsForScope(System.Object,System.String,System.Windows.IInputElement,System.Windows.Input.AccessKeyManager.AccessKeyInformation)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.GetTargetsForSender(System.Windows.IInputElement,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.IsKeyRegistered(System.Object,System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.NormalizeKey(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.OnKeyDown(System.Windows.Input.KeyEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.OnText(System.Windows.Input.TextCompositionEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.PostProcessInput(System.Object,System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.ProcessKey(System.Object,System.String,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.ProcessKeyForScope(System.Object,System.String,System.Boolean,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.ProcessKeyForSender(System.Object,System.String,System.Boolean,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.PurgeDead(System.Collections.ArrayList,System.Object)">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.Register(System.String,System.Windows.IInputElement)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.RemoveAccessKeyPressedHandler(,System.Windows.Input.AccessKeyPressedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyManager.Unregister(System.String,System.Windows.IInputElement)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.AccessKeyPressedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ApplicationCommands.GetPropertyName(System.Windows.Input.ApplicationCommands.CommandId)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.ApplicationCommands.GetRequiredPermissions(System.Windows.Input.ApplicationCommands.CommandId)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.ApplicationCommands.GetUIText(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.ApplicationCommands.LoadDefaultGestureFromResource(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.CanExecuteRoutedEventArgs.#ctor(System.Windows.Input.ICommand,System.Object)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CanExecuteRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.ExecutedRoutedEventHandler,System.Windows.Input.CanExecuteRoutedEventHandler)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBinding.CheckCanExecute(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBinding.OnCanExecute(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBinding.OnExecuted(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.Add(System.Windows.Input.CommandBinding)">
    <parameter name="commandBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.AddRange(System.Collections.ICollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.FindMatch(System.Object,System.Windows.Input.InputEventArgs)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.FindMatch(System.Windows.Input.ICommand,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.Insert(System.Int32,System.Windows.Input.CommandBinding)">
    <parameter name="commandBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.CommandBindingCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="commandBinding">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandBindingCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="commandBinding">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandDevice.PostProcessInput(System.Object,System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandDevice.PreProcessInput(System.Object,System.Windows.Input.PreProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandDeviceEventArgs.#ctor(System.Windows.Input.CommandDevice,System.Int32,System.Windows.Input.ICommand)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.AddCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.AddExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.AddPreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.AddPreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.CanExecuteCommandBinding(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs,System.Windows.Input.CommandBinding)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.ExecuteCommand(System.Windows.Input.RoutedCommand,System.Object,System.Windows.IInputElement,System.Windows.Input.InputEventArgs)">
    <parameter name="routedCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputEventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.ExecuteCommandBinding(System.Object,System.Windows.Input.ExecutedRoutedEventArgs,System.Windows.Input.CommandBinding)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.FindCommandBinding(System.Object,System.Windows.RoutedEventArgs,System.Windows.Input.ICommand,System.Boolean)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.FindCommandBinding(System.Windows.Input.CommandBindingCollection,System.Object,System.Windows.RoutedEventArgs,System.Windows.Input.ICommand,System.Boolean)">
    <parameter name="commandBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.GetParentScopeFocusedElement()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.CommandManager.RaiseRequerySuggested(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.CommandManager.RegisterClassCommandBinding(System.Type,System.Windows.Input.CommandBinding)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.RegisterClassInputBinding(System.Type,System.Windows.Input.InputBinding)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.RemoveCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.RemoveExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.RemovePreviewCanExecuteHandler(System.Windows.UIElement,System.Windows.Input.CanExecuteRoutedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.RemovePreviewExecutedHandler(System.Windows.UIElement,System.Windows.Input.ExecutedRoutedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.TransferEvent(System.Windows.IInputElement,System.Windows.Input.CanExecuteRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CommandManager.TransferEvent(System.Windows.IInputElement,System.Windows.Input.ExecutedRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ComponentCommands.GetPropertyName(System.Windows.Input.ComponentCommands.CommandId)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.ComponentCommands.GetUIText(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.ComponentCommands.LoadDefaultGestureFromResource(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.Cursor.#ctor(System.IO.Stream)">
    <parameter name="cursorStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Cursor.#ctor(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="cursorHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Cursor.#ctor(System.String)">
    <parameter name="cursorFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.Cursor.Handle">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.Cursor.LoadFromStream(System.IO.Stream)">
    <parameter name="cursorStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CursorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CursorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CursorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CursorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CursorConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.CursorConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.DeadCharTextComposition.#ctor(System.Windows.Input.InputManager,System.Windows.IInputElement,System.String,System.Windows.Input.TextCompositionAutoComplete,System.Windows.Input.InputDevice)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.DefaultTextStore.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.DefaultTextStore.StringFromITfRange(,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.DefaultTextStore.TransitoryDocumentManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.DefaultTextStoreTextComposition.#ctor(System.Windows.Input.InputManager,System.Windows.IInputElement,System.String,System.Windows.Input.TextCompositionAutoComplete)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ExecutedRoutedEventArgs.#ctor(System.Windows.Input.ICommand,System.Object)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.FocusManager.GetFocusedElement()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.FocusManager.GetFocusScope()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.FocusManager.GetIsFocusScope()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.FocusManager.GetRoot()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.FocusManager.SetFocusedElement(,System.Windows.IInputElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.FocusManager.SetIsFocusScope(,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="gesture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.Add(System.Windows.Input.InputBinding)">
    <parameter name="inputBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.AddRange(System.Collections.ICollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.FindMatch(System.Object,System.Windows.Input.InputEventArgs)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.Insert(System.Int32,System.Windows.Input.InputBinding)">
    <parameter name="inputBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.InputBindingCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="inputBinding">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputBindingCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="inputBinding">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.InputDevice.ActiveSource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputElement.GetRootVisual()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputElement.GetRootVisual(,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.Add(System.Windows.Input.InputGesture)">
    <parameter name="inputGesture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.AddRange(System.Collections.ICollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.FindMatch(System.Object,System.Windows.Input.InputEventArgs)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.Insert(System.Int32,System.Windows.Input.InputGesture)">
    <parameter name="inputGesture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.Remove(System.Windows.Input.InputGesture)">
    <parameter name="inputGesture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.InputGestureCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="inputGesture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputGestureCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="inputGesture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.InputLanguageManager.AvailableInputLanguages">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.InputLanguageManager.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputLanguageManager.GetInputLanguage()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputLanguageManager.GetRestoreInputLanguage()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputLanguageManager.RegisterInputLanguageSource(System.Windows.Input.IInputLanguageSource)">
    <parameter name="inputLanguageSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputLanguageManager.ReportInputLanguageChanged(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
    <parameter name="newLanguageId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="previousLanguageId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputLanguageManager.ReportInputLanguageChanging(System.Globalization.CultureInfo,System.Globalization.CultureInfo)">
    <parameter name="newLanguageId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="previousLanguageId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputLanguageManager.SetInputLanguage(,System.Globalization.CultureInfo)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputLanguageManager.SetRestoreInputLanguage(,System.Boolean)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputLanguageManager.SetSourceCurrentLanguageId(System.Globalization.CultureInfo)">
    <parameter name="languageId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputLanguageSource.#ctor(System.Windows.Input.InputLanguageManager)">
    <parameter name="inputlanguagemanager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.InputLanguageSource.CurrentInputLanguage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.InputLanguageSource.InputLanguageList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputManager.ContinueProcessingStagingArea(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.InputManager.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputManager.GetCurrentInputManagerImpl">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputManager.HitTestInvalidatedAsyncCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.InputManager.InputProviders">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputManager.PeekInput">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputManager.PopInput">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputManager.ProcessInput(System.Windows.Input.InputEventArgs)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputManager.RegisterInputProvider(System.Windows.Input.IInputProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputManager.UnregisterInputProvider(System.Windows.Input.IInputProvider)">
    <parameter name="inputProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.InputManager.UnsecureCurrent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.InputManager.UnsecureInputProviders">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.InputMethod.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputMethod.GetInputScope()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.GetIsInputMethodEnabled()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.GetIsInputMethodSuspended()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.GetPreferredImeConversionMode()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.GetPreferredImeSentenceMode()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.GetPreferredImeState()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.SetInputScope(,System.Windows.Input.InputScope)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.SetIsInputMethodEnabled(,System.Boolean)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.SetIsInputMethodSuspended(,System.Boolean)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.SetPreferredImeConversionMode(,System.Windows.Input.ImeConversionModeValues)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.SetPreferredImeSentenceMode(,System.Windows.Input.ImeSentenceModeValues)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputMethod.SetPreferredImeState(,System.Windows.Input.InputMethodState)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.InputProcessorProfiles.InputLanguageList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.InputProviderSite.ReportInput(System.Windows.Input.InputReport)">
    <parameter name="inputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputReport.#ctor(System.Windows.PresentationSource,System.Windows.Input.InputType,System.Windows.Input.InputMode,System.Int32)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputReportEventArgs.#ctor(System.Windows.Input.InputDevice,System.Windows.Input.InputReport)">
    <parameter name="report">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeName.AddChild(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeName.AddText(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeNameConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopeNameConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopePhrase.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopePhrase.AddChild(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.InputScopePhrase.AddText(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,,)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="gesture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(,System.Windows.Input.KeyboardFocusChangedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.AddKeyDownHandler(,System.Windows.Input.KeyEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.AddKeyUpHandler(,System.Windows.Input.KeyEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(,System.Windows.Input.KeyboardFocusChangedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(,System.Windows.Input.KeyboardFocusChangedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(,System.Windows.Input.KeyEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(,System.Windows.Input.KeyEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(,System.Windows.Input.KeyboardFocusChangedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(,System.Windows.Input.KeyboardFocusChangedEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(,System.Windows.Input.KeyEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(,System.Windows.Input.KeyEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(,System.Windows.Input.KeyboardFocusChangedEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(,System.Windows.Input.KeyboardFocusChangedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(,System.Windows.Input.KeyEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(,System.Windows.Input.KeyEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(,System.Windows.Input.KeyboardFocusChangedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyboardDevice.#ctor(System.Windows.Input.InputManager)">
    <parameter name="inputManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyboardDevice.ExtractRawKeyboardInputReport(System.Windows.Input.NotifyInputEventArgs,System.Windows.RoutedEvent)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.KeyboardDevice.FocusTreeState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.KeyboardDevice.GetNonRedundantActions(System.Windows.Input.NotifyInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyboardDevice.PostProcessInput(System.Object,System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyboardDevice.PreNotifyInput(System.Object,System.Windows.Input.NotifyInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyboardDevice.PreProcessInput(System.Object,System.Windows.Input.PreProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyboardDevice.ReevaluateFocusCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGesture.#ctor(,,System.String)">
    <parameter name="displayString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGesture.#ctor(,,System.String,System.Boolean)">
    <parameter name="displayString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGesture.AddGesturesFromResourceStrings(System.String,System.String,System.Windows.Input.InputGestureCollection)">
    <parameter name="displayStrings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="gestures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGesture.CreateFromResourceStrings(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="keyGestureToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGestureValueSerializer.ConvertFromString(System.String,)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyGestureValueSerializer.ConvertToString(System.Object,)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MediaCommands.GetPropertyName(System.Windows.Input.MediaCommands.CommandId)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.MediaCommands.GetUIText(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.MediaCommands.LoadDefaultGestureFromResource(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddMouseDownHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddMouseEnterHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddMouseMoveHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddMouseUpHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddMouseWheelHandler(,System.Windows.Input.MouseWheelEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(,System.Windows.Input.MouseWheelEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.AddQueryCursorHandler(,System.Windows.Input.QueryCursorEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(,System.Windows.Input.MouseWheelEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(,System.Windows.Input.MouseEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(,System.Windows.Input.MouseButtonEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(,System.Windows.Input.MouseWheelEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(,System.Windows.Input.QueryCursorEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseActionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseActionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseActionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseActionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseActionValueSerializer.ConvertFromString(System.String,)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseActionValueSerializer.ConvertToString(System.Object,)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.MouseAction)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.MouseGesture)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="gesture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton)">
    <parameter name="mouse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseButtonEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.MouseButton,System.Windows.Input.StylusDevice)">
    <parameter name="mouse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseDevice.FindMouseInputProviderForCursor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.MouseDevice.GetNonRedundantActions(System.Windows.Input.NotifyInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseDevice.GetScreenPositionFromSystem">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.MouseDevice.GetStylusDevice(System.Windows.Input.StagingAreaInputItem)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="stagingItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.MouseDevice.MouseCaptureWithinTreeState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.MouseDevice.MouseOverTreeState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.MouseDevice.PostProcessInput(System.Object,System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseDevice.PreNotifyInput(System.Object,System.Windows.Input.NotifyInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseDevice.PreProcessInput(System.Object,System.Windows.Input.PreProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseDevice.ReevaluateCaptureAsync(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.MouseDevice.ReevaluateMouseOverAsync(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.MouseDevice.ValidateContentElementForCapture(System.Windows.ContentElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseDevice.ValidateUIElement3DForCapture(System.Windows.UIElement3D)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseDevice.ValidateUIElementForCapture(System.Windows.UIElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)">
    <parameter name="mouse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)">
    <parameter name="mouse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseGestureConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseGestureConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseGestureConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.MouseGestureConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseGestureValueSerializer.ConvertFromString(System.String,)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseGestureValueSerializer.ConvertToString(System.Object,)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)">
    <parameter name="mouse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.NavigationCommands.GetPropertyName(System.Windows.Input.NavigationCommands.CommandId)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.NavigationCommands.GetUIText(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.NavigationCommands.LoadDefaultGestureFromResource(System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.PenContext.FirePackets(System.Int32,System.Int32[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenContexts.#ctor(System.Windows.Input.StylusLogic,System.Windows.PresentationSource)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenContexts.AddStylusPlugInCollection(System.Windows.Input.StylusPlugIns.StylusPlugInCollection)">
    <parameter name="pic">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenContexts.FindPlugInCollection(System.Windows.UIElement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenContexts.FindZOrderIndex(System.Windows.Input.StylusPlugIns.StylusPlugInCollection)">
    <parameter name="spicAdding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenContexts.GetTabletDeviceIDPenContext(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.PenContexts.HittestPlugInCollection()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.PenContexts.InvokeStylusPluginCollection(System.Windows.Input.RawStylusInputReport)">
    <parameter name="inputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenContexts.InvokeStylusPluginCollectionForMouse(System.Windows.Input.RawStylusInputReport,System.Windows.IInputElement,System.Windows.Input.StylusPlugIns.StylusPlugInCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="inputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenContexts.TargetPlugInCollection(System.Windows.Input.RawStylusInputReport)">
    <parameter name="inputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenThreadPool.GetPenThreadForPenContext(System.Windows.Input.PenContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.PenThreadPool.GetPenThreadForPenContextHelper(System.Windows.Input.PenContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.PenThreadWorker.DoCacheEvent(System.Int32,System.Windows.Input.PenContext,System.Int32,System.Int32[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenThreadWorker.FireEvent(System.Windows.Input.PenContext,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)">
    <parameter name="penContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenThreadWorker.GetStylusDevicesInfo(MS.Win32.Penimc.IPimcTablet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pimcTablet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenThreadWorker.GetTabletInfoHelper(MS.Win32.Penimc.IPimcTablet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pimcTablet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.PenThreadWorker.InitializeSupportedStylusPointProperties(MS.Win32.Penimc.IPimcTablet,System.Windows.Input.TabletDeviceInfo)">
    <parameter name="pimcTablet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tabletInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ProcessInputEventArgs.PeekInput">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.ProcessInputEventArgs.PopInput">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.QueryCursorEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32)">
    <parameter name="mouse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.QueryCursorEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Windows.Input.StylusDevice)">
    <parameter name="mouse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RawAppCommandInputReport.#ctor(System.Windows.PresentationSource,System.Windows.Input.InputMode,System.Int32,System.Int32,System.Windows.Input.InputType,System.Windows.Input.InputType)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RawKeyboardInputReport.#ctor(System.Windows.PresentationSource,System.Windows.Input.InputMode,System.Int32,System.Windows.Input.RawKeyboardActions,System.Int32,System.Boolean,System.Boolean,System.Int32,System.IntPtr)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RawMouseInputReport.#ctor(System.Windows.Input.InputMode,System.Int32,System.Windows.PresentationSource,System.Windows.Input.RawMouseActions,System.Int32,System.Int32,System.Int32,System.IntPtr)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RawStylusInputReport.#ctor(System.Windows.Input.InputMode,System.Int32,System.Windows.PresentationSource,System.Windows.Input.PenContext,System.Windows.Input.RawStylusActions,System.Int32,System.Int32,System.Int32[])">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RawStylusInputReport.#ctor(System.Windows.Input.InputMode,System.Int32,System.Windows.PresentationSource,System.Windows.Input.RawStylusActions,System.Windows.Input.StylusPointDescription,System.Int32[])">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mouseData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RawStylusInputReport.GetLastTabletPoint">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.RawStylusSystemGestureInputReport.#ctor(System.Windows.Input.InputMode,System.Int32,System.Windows.PresentationSource,System.Windows.Input.PenContext,System.Int32,System.Int32,System.Windows.Input.SystemGesture,System.Int32,System.Int32,System.Int32)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RawTextInputReport.#ctor(System.Windows.PresentationSource,System.Windows.Input.InputMode,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Char)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RawUIStateInputReport.#ctor(System.Windows.PresentationSource,System.Windows.Input.InputMode,System.Int32,System.Windows.Input.RawUIStateActions,System.Windows.Input.RawUIStateTargets)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type,System.Byte)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RoutedCommand.#ctor(System.String,System.Type,System.Windows.Input.InputGestureCollection)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RoutedCommand.CriticalCanExecuteWrapper(System.Object,System.Windows.IInputElement,System.Boolean,System.Windows.Input.CanExecuteRoutedEventArgs)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RoutedCommand.FilterInputElement(System.Windows.IInputElement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.RoutedCommand.GetInputGestures">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.RoutedCommand.InputGesturesInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.String,System.Type,System.Windows.Input.InputGestureCollection)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RoutedUICommand.#ctor(System.String,System.Type,System.Byte)">
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.RoutedUICommand.GetText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.SecureUICommand.#ctor(System.Security.PermissionSet,System.String,System.Type,System.Byte)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StagingAreaInputItem.GetData(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StagingAreaInputItem.SetData(System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(,System.Windows.Input.StylusButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(,System.Windows.Input.StylusButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(,System.Windows.Input.StylusDownEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(,System.Windows.Input.StylusSystemGestureEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(,System.Windows.Input.StylusButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(,System.Windows.Input.StylusButtonEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusDownHandler(,System.Windows.Input.StylusDownEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusEnterHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusMoveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(,System.Windows.Input.StylusSystemGestureEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.AddStylusUpHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.GetIsFlicksEnabled()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(,System.Windows.Input.StylusButtonEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(,System.Windows.Input.StylusButtonEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(,System.Windows.Input.StylusDownEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(,System.Windows.Input.StylusSystemGestureEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(,System.Windows.Input.StylusButtonEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(,System.Windows.Input.StylusButtonEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(,System.Windows.Input.StylusDownEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(,System.Windows.Input.StylusSystemGestureEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(,System.Windows.Input.StylusEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusButtonEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32,System.Windows.Input.StylusButton)">
    <parameter name="stylusDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusDevice.DetermineValidSource(System.Windows.PresentationSource,System.Windows.Input.StylusPointCollection,System.Windows.Input.PenContexts)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusDevice.GetMouseActionsFromStylusEventAndPlaybackCachedDown(System.Windows.RoutedEvent,System.Windows.Input.StylusEventArgs)">
    <parameter name="stylusArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusDevice.GetMouseButtonState(System.Windows.Input.MouseButton,System.Windows.Input.MouseDevice)">
    <parameter name="mouseDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusDevice.GetMousePresentationSource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusDevice.GetStylusPoints(System.Windows.IInputElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusDevice.GetStylusPoints(System.Windows.IInputElement,System.Windows.Input.StylusPointDescription)">
    <parameter name="subsetToReformatTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusDevice.GetTabletToElementTransform(System.Windows.IInputElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusDevice.UpdateEventStylusPoints(System.Windows.Input.RawStylusInputReport,System.Boolean)">
    <parameter name="report">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusDevice.UpdateState(System.Windows.Input.RawStylusInputReport)">
    <parameter name="report">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusDevice.UpdateStateForSystemGesture(System.Windows.Input.RawStylusSystemGestureInputReport)">
    <parameter name="report">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusDeviceCollection.AddStylusDevice(System.Int32,System.Windows.Input.StylusDevice)">
    <parameter name="stylusDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusDownEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32)">
    <parameter name="stylusDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32)">
    <parameter name="stylus">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusEventArgs.GetStylusPoints(System.Windows.IInputElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusEventArgs.GetStylusPoints(System.Windows.IInputElement,System.Windows.Input.StylusPointDescription)">
    <parameter name="subsetToReformatTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.CallPlugInsForMouse(System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.GenerateGesture(System.Windows.Input.RawStylusInputReport,System.Windows.Input.SystemGesture)">
    <parameter name="rawStylusInputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.GenerateInRange(System.Windows.Input.RawStylusInputReport)">
    <parameter name="rawStylusInputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.StylusLogic.GetMousePointDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.GetStylusPenContextForHwnd(System.Windows.PresentationSource,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.GetTabletToViewTransform(System.Windows.Input.TabletDevice)">
    <parameter name="tabletDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.InputManagerProcessInput(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.InvokeStylusPluginCollection(System.Windows.Input.RawStylusInputReport)">
    <parameter name="inputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.IsValidStylusAction(System.Windows.Input.RawStylusInputReport)">
    <parameter name="rawStylusInputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.PostProcessInput(System.Object,System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.PreNotifyInput(System.Object,System.Windows.Input.NotifyInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.PreProcessInput(System.Object,System.Windows.Input.PreProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ProcessDeferredMouseMove(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ProcessDisplayChanged(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ProcessInput(System.Windows.Input.RawStylusActions,System.Windows.Input.PenContext,System.Int32,System.Int32,System.Int32[],System.Int32,System.Windows.PresentationSource)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ProcessInputReport(System.Windows.Input.RawStylusInputReport)">
    <parameter name="inputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ProcessMouseMove(System.Windows.Input.StylusDevice,System.Int32,System.Boolean)">
    <parameter name="stylusDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ProcessSystemEvent(System.Windows.Input.PenContext,System.Int32,System.Int32,System.Int32,System.Windows.Input.SystemGesture,System.Int32,System.Int32,System.Int32,System.Windows.PresentationSource)">
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.PromoteMainToMouse(System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.PromotePreviewToMain(System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.PromoteRawToPreview(System.Windows.Input.RawStylusInputReport,System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="report">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ReevaluateCaptureAsync(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ReevaluateStylusOverAsync(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.RegisterHwndForInput(System.Windows.Input.InputManager,System.Windows.PresentationSource)">
    <parameter name="inputManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.RegisterStylusDeviceCore(System.Windows.Input.StylusDevice)">
    <parameter name="stylusDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ShouldConsiderStylusInRange(System.Windows.Input.RawMouseInputReport)">
    <parameter name="mouseInputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.StylusLogic.StylusCaptureWithinTreeState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.StylusLogic.StylusOverTreeState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.StylusLogic.TabletDevices">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusLogic.UnRegisterHwndForInput(System.Windows.Interop.HwndSource)">
    <parameter name="hwndSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.UnregisterStylusDeviceCore(System.Windows.Input.StylusDevice)">
    <parameter name="stylusDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.UpdateButtonStates(System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ValidateContentElementForCapture(System.Windows.ContentElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ValidateUIElement3DForCapture(System.Windows.UIElement3D)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.ValidateUIElementForCapture(System.Windows.UIElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusLogic.VerifyStylusPlugInCollectionTarget(System.Windows.Input.RawStylusInputReport)">
    <parameter name="rawStylusInputReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.StylusPlugIns.DispatcherShutdownStartedEventManager.CurrentManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.StylusPlugIns.DynamicRenderer.DynamicRendererHostVisual.VisualTarget">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.FindStrokeInfo(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.HandleStylusEnterLeave(System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean,System.Boolean)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.NotifyAppOfDRThreadRenderComplete(System.Windows.Input.StylusPlugIns.DynamicRenderer.StrokeInfo)">
    <parameter name="si">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.OnDraw(System.Windows.Media.DrawingContext,System.Windows.Input.StylusPointCollection,System.Windows.Media.Geometry,System.Windows.Media.Brush)">
    <parameter name="drawingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.RenderPackets(System.Windows.Input.StylusPointCollection,System.Windows.Input.StylusPlugIns.DynamicRenderer.StrokeInfo)">
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="si">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.StrokeInfo.#ctor(System.Windows.Ink.DrawingAttributes,System.Int32,System.Int32,System.Windows.Input.StylusPlugIns.DynamicRenderer.DynamicRendererHostVisual)">
    <parameter name="drawingAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hostVisual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.TransitionComplete(System.Windows.Input.StylusPlugIns.DynamicRenderer.StrokeInfo)">
    <parameter name="si">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRenderer.TransitionStrokeVisuals(System.Windows.Input.StylusPlugIns.DynamicRenderer.StrokeInfo,System.Boolean)">
    <parameter name="si">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.DynamicRendererThreadManager.GetCurrentThreadInstance">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.RawStylusInput.#ctor(System.Windows.Input.RawStylusInputReport,System.Windows.Media.GeneralTransform,System.Windows.Input.StylusPlugIns.StylusPlugInCollection)">
    <parameter name="report">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tabletToElementTransform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetPlugInCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.StylusPlugIns.RawStylusInput.CustomDataList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.RawStylusInput.GetStylusPoints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.RawStylusInput.GetStylusPoints(System.Windows.Media.GeneralTransform)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.RawStylusInput.SetStylusPoints(System.Windows.Input.StylusPointCollection)">
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusDown(System.Windows.Input.StylusPlugIns.RawStylusInput)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusEnter(System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusLeave(System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusMove(System.Windows.Input.StylusPlugIns.RawStylusInput)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.OnStylusUp(System.Windows.Input.StylusPlugIns.RawStylusInput)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.RawStylusInput(System.Windows.Input.StylusPlugIns.RawStylusInput)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugIn.StylusEnterLeave(System.Boolean,System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugInCollection.FireEnterLeave(System.Boolean,System.Windows.Input.StylusPlugIns.RawStylusInput,System.Boolean)">
    <parameter name="rawStylusInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPlugIns.StylusPlugInCollection.FireRawStylusInput(System.Windows.Input.StylusPlugIns.RawStylusInput)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPoint.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPoint.GetPacketData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPoint.GetPropertyValue(System.Windows.Input.StylusPointProperty)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPoint.HasProperty(System.Windows.Input.StylusPointProperty)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPoint.SetPropertyValue(System.Windows.Input.StylusPointProperty,System.Int32)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPoint.SetPropertyValue(System.Windows.Input.StylusPointProperty,System.Int32,System.Boolean)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPoint.ToPoint">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Collections.Generic.IEnumerable{})">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Input.StylusPoint})">
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Windows.Input.StylusPointDescription)">
    <parameter name="stylusPointDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Windows.Input.StylusPointDescription,System.Int32)">
    <parameter name="stylusPointDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.#ctor(System.Windows.Input.StylusPointDescription,System.Int32[],System.Windows.Media.GeneralTransform,)">
    <parameter name="stylusPointDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rawPacketData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.Add(System.Windows.Input.StylusPointCollection)">
    <parameter name="stylusPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.Clone(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.Clone(System.Windows.Media.GeneralTransform,System.Windows.Input.StylusPointDescription)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="descriptionToUse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.Clone(System.Windows.Media.GeneralTransform,System.Windows.Input.StylusPointDescription,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="descriptionToUse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.StylusPointCollection.Description">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.OnChanged(System.EventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.Reformat(System.Windows.Input.StylusPointDescription)">
    <parameter name="subsetToReformatTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.Reformat(System.Windows.Input.StylusPointDescription,System.Windows.Media.GeneralTransform)">
    <parameter name="subsetToReformatTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.ToHiMetricArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointCollection.Transform(System.Windows.Media.GeneralTransform)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Input.StylusPointPropertyInfo})">
    <parameter name="stylusPointPropertyInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Input.StylusPointPropertyInfo},System.Int32)">
    <parameter name="stylusPointPropertyInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.AreCompatible(System.Windows.Input.StylusPointDescription,System.Windows.Input.StylusPointDescription)">
    <parameter name="stylusPointDescription1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusPointDescription2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.GetButtonBitPosition(System.Windows.Input.StylusPointProperty)">
    <parameter name="buttonProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.GetCommonDescription(System.Windows.Input.StylusPointDescription,System.Windows.Input.StylusPointDescription)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stylusPointDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusPointDescriptionPreserveInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.GetPropertyInfo(System.Windows.Input.StylusPointProperty)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.GetStylusPointProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.GetStylusPointPropertyIds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.HasProperty(System.Windows.Input.StylusPointProperty)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointDescription.IsSubsetOf(System.Windows.Input.StylusPointDescription)">
    <parameter name="stylusPointDescriptionSuperset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointProperty.#ctor(System.Windows.Input.StylusPointProperty)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointPropertyIds.GetStringRepresentation(System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.StylusPointPropertyInfo.#ctor(System.Windows.Input.StylusPointProperty)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointPropertyInfo.#ctor(System.Windows.Input.StylusPointProperty,System.Int32,System.Int32,System.Windows.Input.StylusPointPropertyUnit,System.Single)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointPropertyInfo.AreCompatible(System.Windows.Input.StylusPointPropertyInfo,System.Windows.Input.StylusPointPropertyInfo)">
    <parameter name="stylusPointPropertyInfo1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusPointPropertyInfo2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusPointPropertyInfoDefaults.GetStylusPointPropertyInfoDefault(System.Windows.Input.StylusPointProperty)">
    <parameter name="stylusPointProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusSystemGestureEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32,System.Windows.Input.SystemGesture)">
    <parameter name="stylusDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.StylusSystemGestureEventArgs.#ctor(System.Windows.Input.StylusDevice,System.Int32,System.Windows.Input.SystemGesture,System.Int32,System.Int32,System.Int32)">
    <parameter name="stylusDevice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.Tablet.TabletDevices">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TabletDevice.#ctor(System.Windows.Input.TabletDeviceInfo,System.Windows.Input.PenThread)">
    <parameter name="tabletInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TabletDevice.CreateContext(System.IntPtr,System.Windows.Input.PenContexts)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TabletDevice.GetPropertyValue(System.Windows.Input.StylusPointPropertyInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.TabletDevice.StylusPointDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.TabletDevice.TabletToScreen">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TabletDevice.UpdateSizeDeltas(System.Windows.Input.StylusPointDescription,System.Windows.Input.StylusLogic)">
    <parameter name="description">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stylusLogic">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TabletDevice.UpdateStylusDevices(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TabletDeviceCollection.CopyTo(System.Windows.Input.TabletDevice[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TabletDeviceCollection.CreateContexts(System.IntPtr,System.Windows.Input.PenContexts)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.TabletDeviceCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TabletDeviceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TabletDeviceCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.TabletDeviceCollection.TabletDeviceEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TabletDeviceCollection.UpdateStylusDevices(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TextComposition.#ctor(System.Windows.Input.InputManager,System.Windows.IInputElement,System.String)">
    <parameter name="resultText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextComposition.#ctor(System.Windows.Input.InputManager,System.Windows.IInputElement,System.String,System.Windows.Input.TextCompositionAutoComplete)">
    <parameter name="resultText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextComposition.#ctor(System.Windows.Input.InputManager,System.Windows.IInputElement,System.String,System.Windows.Input.TextCompositionAutoComplete,System.Windows.Input.InputDevice)">
    <parameter name="resultText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionEventArgs.#ctor(System.Windows.Input.InputDevice,System.Windows.Input.TextComposition)">
    <parameter name="composition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.#ctor(System.Windows.Input.InputManager)">
    <parameter name="inputManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.AddPreviewTextInputHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.AddPreviewTextInputStartHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.AddPreviewTextInputUpdateHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.AddTextInputHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.AddTextInputStartHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.AddTextInputUpdateHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.CharacterEncoding(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.CompleteComposition(System.Windows.Input.TextComposition)">
    <parameter name="composition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.ConvertCodeToByteArray(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.GetCurrentOEMCPEncoding(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.PostProcessInput(System.Object,System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.PreProcessInput(System.Object,System.Windows.Input.PreProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.RemovePreviewTextInputHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.RemovePreviewTextInputStartHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.RemovePreviewTextInputUpdateHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.RemoveTextInputHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.RemoveTextInputStartHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.RemoveTextInputUpdateHandler(,System.Windows.Input.TextCompositionEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.StartComposition(System.Windows.Input.TextComposition)">
    <parameter name="composition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.UnsafeCompleteComposition(System.Windows.Input.TextComposition)">
    <parameter name="composition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.UnsafeStartComposition(System.Windows.Input.TextComposition)">
    <parameter name="composition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.UnsafeUpdateComposition(System.Windows.Input.TextComposition)">
    <parameter name="composition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextCompositionManager.UpdateComposition(System.Windows.Input.TextComposition)">
    <parameter name="composition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Input.TextServicesCompartmentContext.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TextServicesCompartmentContext.GetCompartment(System.Windows.Input.InputMethodStateType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TextServicesCompartmentContext.GetGlobalCompartment(System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TextServicesCompartmentContext.GetThreadCompartment(System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Input.TextServicesContext.DispatcherCurrent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.TextServicesContext.RegisterTextStore(System.Windows.Input.DefaultTextStore)">
    <parameter name="defaultTextStore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextServicesContext.TextServicesContextShutDownListener.OnShutDown(System.Object)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextServicesManager.#ctor(System.Windows.Input.InputManager)">
    <parameter name="inputManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextServicesManager.PostProcessInput(System.Object,System.Windows.Input.ProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextServicesManager.PreProcessInput(System.Object,System.Windows.Input.PreProcessInputEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.TextServicesManager.TextServicesKeystroke(System.Windows.Input.TextServicesContext,System.Windows.Input.KeyEventArgs,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.Win32KeyboardDevice.#ctor(System.Windows.Input.InputManager)">
    <parameter name="inputManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.CursorInteropHelper.Create(System.Runtime.InteropServices.SafeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cursorHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.CursorInteropHelper.CriticalCreate(System.Runtime.InteropServices.SafeHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cursorHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.D3DImage.CloneCommon()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.D3DImage.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.D3DImage.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.D3DImage.CopyBackBuffer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.D3DImage.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.D3DImage.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.D3DImage.IsFrontBufferAvailablePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.D3DImage.SetIsFrontBufferAvailable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="isAvailableVersionPair">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndMouseInputProvider.System#Windows#Input#IMouseInputProvider#SetCursor(System.Windows.Input.Cursor)">
    <parameter name="cursor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndSource.#RegisterKeyboardInputSink()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndSource.#TabInto()">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Interop.HwndSource.CompositionTarget">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.HwndSource.CriticalFromHwnd(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.HwndSource.DisableSizeToContent(System.Windows.UIElement,System.IntPtr)">
    <parameter name="rootUIElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndSource.FromHwnd(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.HwndSource.GetSizeFromHwnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.HwndSource.OnPreprocessMessage(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Interop.HwndSource.PerThreadData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.HwndSource.Process_WM_SIZE(System.Windows.UIElement,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
    <parameter name="rootUIElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndSource.Process_WM_WINDOWPOSCHANGING(System.Windows.UIElement,System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
    <parameter name="rootUIElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndSource.RestoreCharMessages(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.HwndSourceKeyboardInputSite.#ctor(System.Windows.Interop.HwndSource,)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndSourceParameters.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndStylusInputProvider.#ctor(System.Windows.Interop.HwndSource)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.HwndTarget.SetChannelNotificationWindow(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Interop.HwndTarget)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHBitmap(System.IntPtr,System.IntPtr,,System.Windows.Media.Imaging.BitmapSizeOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromHIcon(System.IntPtr,,System.Windows.Media.Imaging.BitmapSizeOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.Imaging.CreateBitmapSourceFromMemorySection(System.IntPtr,System.Int32,System.Int32,System.Windows.Media.PixelFormat,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.Imaging.CriticalCreateBitmapSourceFromHBitmap(System.IntPtr,System.IntPtr,,System.Windows.Media.Imaging.BitmapSizeOptions,MS.Internal.WICBitmapAlphaChannelOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Interop.InteropBitmap.CopyCommon(System.Windows.Interop.InteropBitmap)">
    <parameter name="sourceBitmapSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Interop.InteropBitmap.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.KeySplineConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.KeySplineConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.KeySplineConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.KeySplineConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.KeyTimeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.LayoutEventList.Add(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.LayoutEventList.CopyToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.LayoutEventList.getNewListItem(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.LayoutEventList.Remove(System.Windows.LayoutEventList.ListItem)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.LayoutEventList.reuseListItem(System.Windows.LayoutEventList.ListItem)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.AsciiToLower(System.String)">
    <parameter name="tag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.GetEquivalentCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.GetLanguage(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ietfLanguageTag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.GetSpecificCulture">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.GetSubtagCount(System.String)">
    <parameter name="languageTag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.IsPrefixOf(System.String)">
    <parameter name="longTag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.MatchingLanguageCollection.System#Collections#Generic#IEnumerable{System#Windows#Markup#XmlLanguage}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.MatchingLanguageCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Markup.XmlLanguage.MatchingLanguageEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Markup.XmlLanguage.MatchingLanguageEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.ParseSubtag(System.String,System.IO.StringReader,System.Boolean)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Markup.XmlLanguage.PrefixLanguage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.RangeIncludes(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.RangeIncludes(System.Windows.Markup.XmlLanguage)">
    <parameter name="language">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.Shorten(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="languageTag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguage.ValidateLowerCaseTag(System.String)">
    <parameter name="ietfLanguageTag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlLanguageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.MeasureData.#ctor(System.Windows.MeasureData)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.AddRefOnChannelAnimations(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.AddRefResource(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.BeginAnimation(,System.Windows.Media.Animation.AnimationTimeline)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.BeginAnimation(,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue()">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.GetWeakReference">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.ReleaseOnChannelAnimations(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.ReleaseResource(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.System#Windows#Media#Composition#DUCE#IResource#RemoveChildFromParent(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Animatable.UpdateResource(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationClock.#ctor(System.Windows.Media.Animation.AnimationTimeline)">
    <parameter name="animation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationClock.GetCurrentValue(System.Object,System.Object)">
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultOriginValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationClockResource.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationClockResource.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationClockResource.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationClockResource.System#Windows#Media#Composition#DUCE#IResource#RemoveChildFromParent(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationClockResource.UpdateResource(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationClockResource.UpdateResourceFromMediaContext(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationLayer.AppendAnimationClocks(System.Collections.Generic.IList{System.Windows.Media.Animation.AnimationClock})">
    <parameter name="newAnimationClocks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationLayer.ApplyAnimationClocks(System.Collections.Generic.IList{System.Windows.Media.Animation.AnimationClock},System.Windows.Media.Animation.HandoffBehavior,System.Object)">
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationLayer.GetCurrentValue(System.Object)">
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationLayer.OnCurrentStateInvalidated(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationLayer.OnRemoveRequested(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationLayer.SetAnimationClocks(System.Collections.Generic.IList{System.Windows.Media.Animation.AnimationClock})">
    <parameter name="animationClocks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.ApplyAnimationClocks(,,System.Collections.Generic.IList{System.Windows.Media.Animation.AnimationClock},System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="animationClocks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.ApplyAnimationClocksToLayer(,,System.Collections.Generic.IList{System.Windows.Media.Animation.AnimationClock},System.Windows.Media.Animation.HandoffBehavior,System.Int64)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="animationClocks">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.AttachAnimationClock(System.Windows.Media.Animation.AnimationClock,System.EventHandler)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.CreateIndependentAnimationStorageForType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.CreateStorage(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.DetachAnimationClock(System.Windows.Media.Animation.AnimationClock,System.EventHandler)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.GetCurrentPropertyValue(System.Windows.Media.Animation.AnimationStorage,,,,System.Object)">
    <parameter name="storage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.GetStorage(,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.IsAnimationClockValid(,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.IsAnimationValid(,System.Windows.Media.Animation.AnimationTimeline)">
    <parameter name="animation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.OnCurrentStateInvalidated(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.OnCurrentTimeInvalidated(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationStorage.OnRemoveRequested(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationTimeline.AnimationTimeline_PropertyChangedFunction(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationTimeline.CreateClock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationTimeline.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultOriginValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
    <parameter name="clock">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.AnimationTimeline.TargetPropertyType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationBase.GetCurrentValue(System.Boolean,System.Boolean,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationBase.GetCurrentValueCore(System.Boolean,System.Boolean,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.BooleanKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.Add(System.Windows.Media.Animation.BooleanKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.BooleanKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.BooleanKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.BooleanKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationBase.GetCurrentValue(System.Byte,System.Byte,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationBase.GetCurrentValueCore(System.Byte,System.Byte,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.ByteAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.ByteKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.Add(System.Windows.Media.Animation.ByteKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ByteKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.ByteKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ByteKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationBase.GetCurrentValue(System.Char,System.Char,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationBase.GetCurrentValueCore(System.Char,System.Char,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.CharAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.CharKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.Add(System.Windows.Media.Animation.CharKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.CharKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.CharKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.CharKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Clock.#ctor(System.Windows.Media.Animation.Timeline)">
    <parameter name="timeline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Clock.AddEventHandler(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Clock.AllocateClock(System.Windows.Media.Animation.Timeline,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="timeline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Clock.BuildClockTreeFromTimeline(System.Windows.Media.Animation.Timeline,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rootTimeline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Clock.ComputeEffectiveDuration">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.Controller">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.CurrentIteration">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.CurrentProgress">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.CurrentTime">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.DesiredFrameRate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Clock.FireEvent(System.Windows.EventPrivateKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.FirstChild">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Clock.RemoveEventHandler(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.SyncData.SyncClockEffectiveDuration">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.Clock.WeakReference">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ClockCollection.Add(System.Windows.Media.Animation.Clock)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.ClockCollection.ClockEnumerator.System#Collections#Generic#IEnumerator{System#Windows#Media#Animation#Clock}#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.ClockCollection.ClockEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ClockCollection.Contains(System.Windows.Media.Animation.Clock)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ClockCollection.CopyTo(System.Windows.Media.Animation.Clock[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ClockCollection.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ClockCollection.Remove(System.Windows.Media.Animation.Clock)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ClockCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Animation#Clock}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ClockCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ClockGroup.#ctor(System.Windows.Media.Animation.TimelineGroup)">
    <parameter name="timelineGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.ClockGroup.Children">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationBase.GetCurrentValue(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationBase.GetCurrentValueCore(System.Windows.Media.Color,System.Windows.Media.Color,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.ColorAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.ColorKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.Add(System.Windows.Media.Animation.ColorKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ColorKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.ColorKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ColorKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationBase.GetCurrentValue(System.Decimal,System.Decimal,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationBase.GetCurrentValueCore(System.Decimal,System.Decimal,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.Add(System.Windows.Media.Animation.DecimalKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.DecimalKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.DecimalKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DecimalKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteBooleanKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteByteKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteCharKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteColorKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteDecimalKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteDoubleKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteInt16KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteInt32KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteInt64KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteMatrixKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteObjectKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscretePoint3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscretePointKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteQuaternionKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteRectKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteRotation3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Rotation3D,System.Double)">
    <parameter name="baseValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteSingleKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteSizeKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteStringKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteVector3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DiscreteVectorKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValue(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationBase.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleAnimationUsingPath.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.DoubleKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Add(System.Windows.Media.Animation.DoubleKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.DoubleKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.DoubleKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.DoubleKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.IndependentAnimationStorage.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.IndependentAnimationStorage.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.IndependentAnimationStorage.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.IndependentAnimationStorage.System#Windows#Media#Composition#DUCE#IResource#RemoveChildFromParent(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.IndependentAnimationStorage.UpdateResource(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.IndependentAnimationStorage.UpdateResourceCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16Animation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16Animation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationBase.GetCurrentValue(System.Int16,System.Int16,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationBase.GetCurrentValueCore(System.Int16,System.Int16,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.Int16AnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Int16KeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.Add(System.Windows.Media.Animation.Int16KeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Int16KeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Int16KeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int16KeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32Animation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32Animation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationBase.GetCurrentValue(System.Int32,System.Int32,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationBase.GetCurrentValueCore(System.Int32,System.Int32,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.Int32AnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Int32KeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.Add(System.Windows.Media.Animation.Int32KeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Int32KeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Int32KeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int32KeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64Animation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64Animation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValue(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationBase.GetCurrentValueCore(System.Int64,System.Int64,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.Int64AnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64AnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Int64KeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.Add(System.Windows.Media.Animation.Int64KeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Int64KeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Int64KeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Int64KeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.CloneCommon(System.Windows.Media.Animation.KeySpline)">
    <parameter name="sourceKeySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.InternalConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.KeySpline.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.KeyTime.Equals(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.LinearByteKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearColorKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearDecimalKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearDoubleKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearInt16KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearInt32KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearInt64KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearPoint3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearPointKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearQuaternionKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearRectKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearRotation3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearSingleKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearSizeKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearVector3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.LinearVectorKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValueCore(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Add(System.Windows.Media.Animation.MatrixKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.MatrixKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.MatrixKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.MatrixKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultOriginValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationBase.GetCurrentValueCore(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Add(System.Windows.Media.Animation.ObjectKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.ObjectKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.ObjectKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ObjectKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ParallelTimeline.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.ParallelTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
    <parameter name="clock">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ParallelTimeline.ParallelTimeline_PropertyChangedFunction(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ParallelTimeline.ValidateSlipBehavior(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Point3DKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Add(System.Windows.Media.Animation.Point3DKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Point3DKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Point3DKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Point3DKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimation.GetCurrentValueCore(,,System.Windows.Media.Animation.AnimationClock)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValue(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationBase.GetCurrentValueCore(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.PointAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointAnimationUsingPath.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Add(System.Windows.Media.Animation.PointKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.PointKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.PointKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.PointKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.QuaternionKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Add(System.Windows.Media.Animation.QuaternionKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.QuaternionKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.QuaternionKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.QuaternionKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimation.GetCurrentValueCore(,,System.Windows.Media.Animation.AnimationClock)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationBase.GetCurrentValue(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationBase.GetCurrentValueCore(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.RectAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.Add(System.Windows.Media.Animation.RectKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.RectKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.RectKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RectKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RepeatBehavior.Equals(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RepeatBehavior.InternalToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RepeatBehavior.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RepeatBehavior.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.RepeatBehaviorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.ResolvedKeyFrameEntry.CompareTo(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimation.GetCurrentValueCore(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultOriginValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultOriginValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.GetCurrentValueCore(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrame.InterpolateValue(System.Windows.Media.Media3D.Rotation3D,System.Double)">
    <parameter name="baseValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrame.InterpolateValueCore(System.Windows.Media.Media3D.Rotation3D,System.Double)">
    <parameter name="baseValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Add(System.Windows.Media.Animation.Rotation3DKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Rotation3DKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Rotation3DKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationBase.GetCurrentValue(System.Single,System.Single,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationBase.GetCurrentValueCore(System.Single,System.Single,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.SingleAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.SingleKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.Add(System.Windows.Media.Animation.SingleKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.SingleKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.SingleKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SingleKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimation.GetCurrentValueCore(,,System.Windows.Media.Animation.AnimationClock)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationBase.GetCurrentValue(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationBase.GetCurrentValueCore(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.SizeAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.Add(System.Windows.Media.Animation.SizeKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.SizeKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.SizeKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SizeKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineByteKeyFrame.#ctor(System.Byte,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineByteKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.#ctor(System.Windows.Media.Color,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineColorKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineDecimalKeyFrame.#ctor(System.Decimal,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineDecimalKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.#ctor(System.Double,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineDoubleKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineInt16KeyFrame.#ctor(System.Int16,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineInt16KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineInt32KeyFrame.#ctor(System.Int32,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineInt32KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineInt64KeyFrame.#ctor(System.Int64,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineInt64KeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplinePoint3DKeyFrame.#ctor(System.Windows.Media.Media3D.Point3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplinePoint3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.#ctor(,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplinePointKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineQuaternionKeyFrame.#ctor(System.Windows.Media.Media3D.Quaternion,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineQuaternionKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineRectKeyFrame.#ctor(,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineRectKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineRotation3DKeyFrame.#ctor(System.Windows.Media.Media3D.Rotation3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineRotation3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineSingleKeyFrame.#ctor(System.Single,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineSingleKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineSizeKeyFrame.#ctor(,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineSizeKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineVector3DKeyFrame.#ctor(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineVector3DKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.SplineVectorKeyFrame.#ctor(,System.Windows.Media.Animation.KeyTime,System.Windows.Media.Animation.KeySpline)">
    <parameter name="keySpline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.SplineVectorKeyFrame.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="defaultDestinationValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultOriginValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValue(System.String,System.String,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationBase.GetCurrentValueCore(System.String,System.String,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.StringAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.Add(System.Windows.Media.Animation.StringKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.StringKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.StringKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.StringKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.AddEventHandler(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.AllocateClock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.CreateClock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)">
    <parameter name="timeline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)">
    <parameter name="clock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)">
    <parameter name="clock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.RemoveEventHandler(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})">
    <parameter name="timeline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.Timeline_PropertyChangedFunction(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.ValidateAccelerationDecelerationRatio(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.ValidateFillBehavior(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Timeline.ValidateSpeedRatio(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Animation.Timeline})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.Add(System.Windows.Media.Animation.Timeline)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.AddHelper(System.Windows.Media.Animation.Timeline)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Animation.Timeline)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.Contains(System.Windows.Media.Animation.Timeline)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.CopyTo(System.Windows.Media.Animation.Timeline[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.Enumerator.#ctor(System.Windows.Media.Animation.TimelineCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.TimelineCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Animation.TimelineCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.IndexOf(System.Windows.Media.Animation.Timeline)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.Insert(System.Int32,System.Windows.Media.Animation.Timeline)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.Remove(System.Windows.Media.Animation.Timeline)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Animation#Timeline}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.TimelineCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineGroup.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineGroup.CreateClock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimelineGroup.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.TimeManager.AddToEventQueue(System.Windows.Media.Animation.Clock)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.TimeManager.CurrentTime">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationBase.GetCurrentValue(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationBase.GetCurrentValueCore(System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Media3D.Vector3D,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Vector3DKeyFrame.System#Windows#Media#Animation#IKeyFrame#Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Add(System.Windows.Media.Animation.Vector3DKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.Vector3DKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.Vector3DKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.Vector3DKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimation.AnimationFunction_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimation.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationBase.GetCurrentValue(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationBase.GetCurrentValueCore(,,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="animationClock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.CopyCommon(System.Windows.Media.Animation.VectorAnimationUsingKeyFrames,System.Boolean)">
    <parameter name="sourceAnimation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorAnimationUsingKeyFrames.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="childText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.Add(System.Windows.Media.Animation.VectorKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.Insert(System.Int32,System.Windows.Media.Animation.VectorKeyFrame)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Animation.VectorKeyFrameCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Animation.VectorKeyFrameCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="keyFrame">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ArcSegment.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ArcSegment.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.BezierSegment.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.BezierSegment.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Brush.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Brush.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Brush.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Brush.OpacityPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Brush.Parse(System.String,System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Brush.RelativeTransformPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Brush.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Brush.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Brush.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Brush.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Brush.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Brush.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Brush.TransformPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Brush.UpdateRealizations(,System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.BrushConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ByteStreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ByteStreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ByteStreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetrics.#ctor(System.String)">
    <parameter name="metrics">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetrics.AppendField(System.Double,System.Windows.Media.CharacterMetrics.FieldIndex,System.Int32@,System.Text.StringBuilder)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetrics.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.CharacterMetrics.Metrics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetrics.ParseMetrics(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.Add(System.Int32,System.Windows.Media.CharacterMetrics)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.ConvertKey(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.ConvertValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Int32,System.Windows.Media.CharacterMetrics}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.Enumerator.System#Collections#IDictionaryEnumerator#Key">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.Enumerator.System#Collections#IDictionaryEnumerator#Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.GetKeys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.GetNextValue(System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.GetPageFromUnicodeScalar(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.GetValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.SetValue(System.Int32,System.Windows.Media.CharacterMetrics,System.Boolean)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CharacterMetricsDictionary.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.CharacterMetricsDictionary.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Color.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Color.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="profileUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Color.FromProfile(System.Uri)">
    <parameter name="profileUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Color.FromValues(System.Single[],System.Uri)">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="profileUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Color.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Color.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ColorContext.#ctor(System.Uri)">
    <parameter name="profileUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorContext.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorContext.FromRawBytes(System.Byte[],System.Int32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorContext.FromStream(System.IO.Stream,System.String)">
    <parameter name="stm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorContext.Initialize(System.Uri,System.Boolean)">
    <parameter name="profileUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorContext.OpenProfileStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ColorConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorConverter.ConvertFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ColorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorTransform.ICM2Color(System.Single[])">
    <parameter name="srcValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorTransform.Translate(System.Single[],System.Single[])">
    <parameter name="dstValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="srcValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ColorTransformHelper.CreateTransform(System.Windows.Media.SafeProfileHandle,System.Windows.Media.SafeProfileHandle)">
    <parameter name="sourceProfile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destinationProfile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CombinedGeometry.ContainsInternal(System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CombinedGeometry.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CombinedGeometry.Geometry1PropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CombinedGeometry.Geometry2PropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CombinedGeometry.GeometryCombineModePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CombinedGeometry.GetAsPathGeometry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CombinedGeometry.GetTransformedFigureCollection(System.Windows.Media.Transform)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Composition.CompositionResourceManager.MilMatrix3x2DToMatrix(System.Windows.Media.Composition.MilMatrix3x2D@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Channel.DuplicateHandle(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="targetChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Channel.IsSecurityCriticalCommand(System.Byte*)">
    <parameter name="pCommandData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Channel.SendCommand(System.Byte*,System.Int32)">
    <parameter name="pCommandData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.InsertChildAt(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.UInt32,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.RemoveAllChildren(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.RemoveChild(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.RemoveChildOutOfBand(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetAlpha(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Double,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetAlphaMask(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetClip(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetContent(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetEffect(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetGuidelineCollection(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.DoubleCollection,System.Windows.Media.DoubleCollection,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetOffset(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Double,System.Double,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetRenderOptions(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.MILRenderOptions,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionNode.SetTransform(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionTarget.HwndInitialize(System.Windows.Media.Composition.DUCE.ResourceHandle,System.IntPtr,System.Int32,System.Int32,System.Boolean,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionTarget.Invalidate(System.Windows.Media.Composition.DUCE.ResourceHandle,@,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionTarget.PrintInitialize(System.Windows.Media.Composition.DUCE.ResourceHandle,System.IntPtr,System.Int32,System.Int32,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionTarget.SetClearColor(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Color,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionTarget.SetRenderingMode(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.MILRTInitializationFlags,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionTarget.SetRoot(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionTarget.SuppressLayered(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Boolean,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CompositionTarget.UpdateWindowSettings(System.Windows.Media.Composition.DUCE.ResourceHandle,,System.Windows.Media.Color,System.Single,System.Windows.Media.Composition.MILWindowLayerType,System.Windows.Media.Composition.MILTransparencyFlags,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.CopyBytes(System.Byte*,System.Byte*,System.Int32)">
    <parameter name="pbTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pbFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.DrawingGroupNode.SetContent(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.ETWEvent.RaiseEvent(System.Windows.Media.Composition.DUCE.ResourceHandle,System.UInt32,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.MultiChannelResource.CreateOrAddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceType)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.MultiChannelResource.DuplicateHandle(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="sourceChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.MultiChannelResource.GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.MultiChannelResource.GetRefCountOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.MultiChannelResource.ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Resource.CreateOrAddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceType)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Resource.ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Viewport3DVisualNode.Set3DChild(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Viewport3DVisualNode.SetCamera(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Viewport3DVisualNode.SetViewport(System.Windows.Media.Composition.DUCE.ResourceHandle,,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Visual3DNode.InsertChildAt(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.UInt32,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Visual3DNode.RemoveAllChildren(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Visual3DNode.RemoveChild(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Visual3DNode.SetContent(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.DUCE.Visual3DNode.SetTransform(System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.VisualProxy.CreateOrAddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceType)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.VisualProxy.DuplicateHandle(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="sourceChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Composition.VisualProxy.ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.ClearRootNode(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.CreateUCEResources(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outOfBandChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.MarkVisibleRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="rc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.MarkVisibleRealizationsForTransform(System.Windows.Media.RealizationContext,@)">
    <parameter name="rc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.ReleaseUCEResources(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outOfBandChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.StateChangedCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.System#Windows#Media#ICompositionTarget#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="outOfBandChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.System#Windows#Media#ICompositionTarget#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="outOfBandChannel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.CompositionTarget.System#Windows#Media#ICompositionTarget#Render(System.Boolean,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ContainerVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Converters.BaseIListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Converters.BaseIListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Converters.BaseIListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Converters.BaseIListConverter.ConvertFromCore(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Converters.BaseIListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Converters.BaseIListConverter.ConvertToCore(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Crc32Helper.ComputeCrc32(System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Crc32Helper.UpdateCRC32(System.Byte[],System.UInt32)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DashStyle.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DashStyle.DashesPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DashStyle.OffsetPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DashStyle.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DashStyle.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DashStyle.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.#ctor(System.Collections.Generic.IEnumerable{System.Double})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.Cast(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.CopyTo(System.Double[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.Enumerator.#ctor(System.Windows.Media.DoubleCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.DoubleCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#Collections#Generic#IEnumerable{System#Double}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.DoubleCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.DoubleCollection.System#Collections#IList#Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollection.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DoubleCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Drawing.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Drawing.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.System#Windows#Media#IDrawingContent#GetContentBounds(System.Windows.Media.BoundsDrawingContextWalker)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.System#Windows#Media#IDrawingContent#UpdateRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="realizationContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.System#Windows#Media#IDrawingContent#WalkContent(System.Windows.Media.DrawingContextWalker)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.UpdateRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="realizationContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Drawing.WalkCurrentValue(System.Windows.Media.DrawingContextWalker)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingBrush.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingBrush.DrawingPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Drawing})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.Add(System.Windows.Media.Drawing)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.AddHelper(System.Windows.Media.Drawing)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Drawing)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.Contains(System.Windows.Media.Drawing)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.CopyTo(System.Windows.Media.Drawing[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.Enumerator.#ctor(System.Windows.Media.DrawingCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.DrawingCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.DrawingCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.IndexOf(System.Windows.Media.Drawing)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.Insert(System.Int32,System.Windows.Media.Drawing)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.Remove(System.Windows.Media.Drawing)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Drawing}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.DrawingCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingCollection.TransactionalAppend(System.Windows.Media.DrawingCollection)">
    <parameter name="collectionToAppend">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingDrawingContext.AddDrawing(System.Windows.Media.Drawing)">
    <parameter name="newDrawing">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingDrawingContext.CloseCore(System.Windows.Media.DrawingCollection)">
    <parameter name="rootDrawingGroupChildren">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingDrawingContext.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.Append">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.DrawingGroup.BitmapEffectDrawing">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.BitmapEffectInputPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.BitmapEffectPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.BitmapScalingModePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.ChildrenPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.ClipGeometryPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.Close(System.Windows.Media.DrawingCollection)">
    <parameter name="rootDrawingGroupChildren">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.EdgeModePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.GuidelineSetPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.OpacityMaskPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.OpacityPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.Open">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.RenderBitmapEffect(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingGroup.TransformPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingImage.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingImage.DrawingPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.DrawingServices.DrawingGroupFromRenderData(System.Windows.Media.RenderData)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="renderData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.DrawingVisual.Drawing">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingVisual.RenderOpen">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.DrawingVisual.WalkContent(System.Windows.Media.DrawingContextWalker)">
    <parameter name="walker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.BevelWidthPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.LightAnglePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.ReliefPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.SmoothnessPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BevelBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="unmanagedEffect">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.GetAffineMatrix(System.Runtime.InteropServices.SafeHandle,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.GetInputConnector(System.Runtime.InteropServices.SafeHandle,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.GetInteriorInputConnector(System.Runtime.InteropServices.SafeHandle,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.GetInteriorOutputConnector(System.Runtime.InteropServices.SafeHandle,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Runtime.InteropServices.SafeHandle,System.Int32,System.Windows.Media.Effects.BitmapEffectRenderContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.GetOutputConnector(System.Runtime.InteropServices.SafeHandle,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.Internal_UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="unmanagedEffect">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.SetInputSource(System.Runtime.InteropServices.SafeHandle,System.Int32,System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="bitmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.TransformPoint(System.Runtime.InteropServices.SafeHandle,System.Int32,,System.Boolean,System.Windows.Media.Effects.BitmapEffectRenderContext,System.Boolean@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.TransformPoint(System.Windows.Media.Effects.BitmapEffectInput,,@,System.Boolean)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.TransformRect(System.Runtime.InteropServices.SafeHandle,System.Int32,,System.Boolean,System.Windows.Media.Effects.BitmapEffectRenderContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.TransformRect(System.Windows.Media.Effects.BitmapEffectInput,,System.Boolean)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.UpdateRenderContext(System.Windows.Media.Effects.BitmapEffectInput,)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="unmanagedEffect">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Effects.BitmapEffect})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Add(System.Windows.Media.Effects.BitmapEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.AddHelper(System.Windows.Media.Effects.BitmapEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Effects.BitmapEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Contains(System.Windows.Media.Effects.BitmapEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.CopyTo(System.Windows.Media.Effects.BitmapEffect[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.#ctor(System.Windows.Media.Effects.BitmapEffectCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.IndexOf(System.Windows.Media.Effects.BitmapEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Insert(System.Int32,System.Windows.Media.Effects.BitmapEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.Remove(System.Windows.Media.Effects.BitmapEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Effects#BitmapEffect}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectContent.#ctor(System.Windows.Media.Visual,System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectDrawing.Clear(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectDrawing.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectDrawing.DrawingsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectDrawing.WalkCurrentValue(System.Windows.Media.DrawingContextWalker)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectDrawing.WorldTransformsItemInserted(System.Object,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectDrawing.WorldTransformsItemRemoved(System.Object,System.Object)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectDrawing.WorldTransformsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectDrawingContent.#ctor(System.Windows.Media.DrawingGroup,System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Effects.BitmapEffectDrawingContextWalker.BitmapEffectDrawing">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGeneralTransform.#ctor(System.Windows.Media.Effects.BitmapEffect,System.Windows.Media.Effects.BitmapEffectInput,System.Boolean,)">
    <parameter name="effect">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGeneralTransform.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGeneralTransform.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGeneralTransform.CopyCommon(System.Windows.Media.Effects.BitmapEffectGeneralTransform)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGeneralTransform.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGeneralTransform.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGeneralTransform.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGroup.CreateEffectHandleList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGroup.GetChildrenHandles(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="unmanagedEffect">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectGroup.SetupConnections(System.Runtime.InteropServices.SafeHandle,System.Collections.Generic.List{System.Windows.Media.Effects.BitmapEffectHandle})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectInput.AreaToApplyEffectPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectInput.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectInputConnector.ConnectTo(System.Windows.Media.Effects.BitmapEffectOutputConnector)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectRenderDataContent.#ctor(System.Windows.Media.RenderData,System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectRenderDataResource.CreateBitmapEffectResources(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectRenderDataResource.MarshalBitmapEffectResources(System.Windows.Media.Composition.DUCE.Channel,System.Int32)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectRenderDataResource.ReleaseBitmapEffectResources(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectRenderDataResource.UpdateBitmapEffectResources(System.Windows.Media.RenderData,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="renderData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectState.GetEffectOutput(System.Windows.Media.Visual,System.Windows.Media.Imaging.RenderTargetBitmap@,,,@)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectVisualState.FreeContent(System.Windows.Media.Visual,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectVisualState.RenderBitmapEffect(System.Windows.Media.Visual,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BitmapEffectVisualState.SetContent(System.Windows.Media.IDrawingContent,System.Windows.Media.Visual,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BlurBitmapEffect.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BlurBitmapEffect.GetEmulatingEffect">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BlurBitmapEffect.RadiusPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BlurBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="unmanagedEffect">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BlurEffect.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.BlurEffect.KernelTypePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BlurEffect.RadiusPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.BlurEffect.RenderingBiasPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.ColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.DirectionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.GetEmulatingEffect">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.NoisePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.OpacityPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.ShadowDepthPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.SoftnessPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="unmanagedEffect">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowEffect.BlurRadiusPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowEffect.ColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowEffect.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowEffect.DirectionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowEffect.OpacityPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowEffect.RenderingBiasPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.DropShadowEffect.ShadowDepthPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.UnitSpaceCoercingGeneralTransform.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.UnitToWorld(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.Effect.WorldToUnit(,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.EmbossBitmapEffect.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.EmbossBitmapEffect.LightAnglePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.EmbossBitmapEffect.ReliefPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.EmbossBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="unmanagedEffect">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ImplicitInputBrush.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.GlowSizePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.NoisePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.OpacityPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.OuterGlowBitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)">
    <parameter name="unmanagedEffect">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.CopyCommon(System.Windows.Media.Effects.PixelShader)">
    <parameter name="shader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.ManualUpdateResource(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.ShaderRenderModePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.PixelShader.UriSourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.AppendRegisters``1(System.Windows.Media.Composition.DUCE.Channel,System.Collections.Generic.List{System.Nullable{``0}})">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.ConvertValueToMilColorF(System.Object,System.Windows.Media.Composition.MilColorF@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.CopyCommon(System.Windows.Media.Effects.ShaderEffect)">
    <parameter name="effect">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.DetermineShaderConstantType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.GeneratedAddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.GeneratedReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.ManualUpdateResource(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback(System.Int32,System.Windows.Media.Effects.SamplingMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Effects.ShaderEffect.UpdateShaderConstant(,System.Object,System.Int32)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ValidateEnums.IsEdgeProfileValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ValidateEnums.IsKernelTypeValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ValidateEnums.IsRenderingBiasValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Effects.ValidateEnums.IsShaderRenderModeValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.EllipseGeometry.CenterPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.EllipseGeometry.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.EllipseGeometry.GetBoundsInternal(System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.EllipseGeometry.GetPointList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.EllipseGeometry.GetTransformedFigureCollection(System.Windows.Media.Transform)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.EllipseGeometry.RadiusXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.EllipseGeometry.RadiusYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.EventProxyWrapper.CreateEventProxyWrapper(System.Windows.Media.IInvokable)">
    <parameter name="invokable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.EventProxyWrapper.RaiseEvent(System.Byte[],System.UInt32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.EventProxyWrapper.RaiseEvent(System.Windows.Media.EventProxyDescriptor@,System.Byte[],System.UInt32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ExceptionEventArgs.#ctor(System.Exception)">
    <parameter name="errorException">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypeface.#ctor(System.Windows.Media.Typeface)">
    <parameter name="face">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FamilyTypeface.AdjustedFaceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.FamilyTypeface.DeviceFontCharacterMetrics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FamilyTypeface.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypeface.MS#Internal#FontFace#IDeviceFont#GetAdvanceWidths(System.Char*,System.Int32,System.Double,System.Int32*)">
    <parameter name="pAdvances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.#ctor(System.Collections.Generic.ICollection{System.Windows.Media.Typeface})">
    <parameter name="innerList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.Add(System.Windows.Media.FamilyTypeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.Contains(System.Windows.Media.FamilyTypeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.ConvertValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.CopyItems(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.CopyTo(System.Windows.Media.FamilyTypeface[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FamilyTypefaceCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.FamilyTypefaceCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.IndexOf(System.Windows.Media.FamilyTypeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.Insert(System.Int32,System.Windows.Media.FamilyTypeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.InsertItem(System.Int32,System.Windows.Media.FamilyTypeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.Remove(System.Windows.Media.FamilyTypeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.SetItem(System.Int32,System.Windows.Media.FamilyTypeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontEmbeddingManager.GetUsedGlyphs(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="glyphTypeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FontEmbeddingManager.GlyphTypefaceUris">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontEmbeddingManager.RecordUsage(System.Windows.Media.GlyphRun)">
    <parameter name="glyphRun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontEmbeddingManager.UriComparer.Equals(System.Uri,System.Uri)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontEmbeddingManager.UriComparer.GetHashCode(System.Uri)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamily.#ctor(System.String)">
    <parameter name="familyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamily.#ctor(System.Uri,System.String)">
    <parameter name="familyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamily.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FontFamily.FamilyTypefaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamily.FindFirstFontFamilyAndFace(System.Windows.FontStyle@,System.Windows.FontWeight@,System.Windows.FontStretch@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamily.FindFontFamilyFromFriendlyNameList(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.FontFamily.FirstFontFamily">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamily.PreCreateDefaultFamilyCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamily.SafeLookupFontFamily(MS.Internal.FontCache.CanonicalFontFamilyReference,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamily.VerifyMutable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamilyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMap.ParseHexNumber(System.String,System.Int32@,System.Int32@)">
    <parameter name="numString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMap.ParseUnicodeRanges(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unicodeRanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FontFamilyMap.Unicode">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.Add(System.Windows.Media.FontFamilyMap)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.Contains(System.Windows.Media.FontFamilyMap)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.ConvertValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.CopyTo(System.Windows.Media.FontFamilyMap[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FontFamilyMapCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.FontFamilyMapCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.IndexOf(System.Windows.Media.FontFamilyMap)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.Insert(System.Int32,System.Windows.Media.FontFamilyMap)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.InsertItem(System.Int32,System.Windows.Media.FontFamilyMap)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.Remove(System.Windows.Media.FontFamilyMap)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.SetItem(System.Int32,System.Windows.Media.FontFamilyMap)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyValueSerializer.ConvertFromString(System.String,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FontFamilyValueSerializer.ConvertToString(System.Object,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Fonts.CreateDefaultFamilyCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Fonts.CreateFamilyCollection(System.Uri,System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fontLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Fonts.GetFontFamilies(System.String)">
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Fonts.GetFontFamilies(System.Uri)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Fonts.GetFontFamilies(System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Fonts.GetTypefaces(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Fonts.GetTypefaces(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Fonts.GetTypefaces(System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Fonts.SystemTypefaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Fonts.TypefaceCollection.Add(System.Windows.Media.Typeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Fonts.TypefaceCollection.Contains(System.Windows.Media.Typeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Fonts.TypefaceCollection.CopyTo(System.Windows.Media.Typeface[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Fonts.TypefaceCollection.Remove(System.Windows.Media.Typeface)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Fonts.TypefaceCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush)">
    <parameter name="typeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textToFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.#ctor(System.String,System.Globalization.CultureInfo,System.Windows.FlowDirection,System.Windows.Media.Typeface,System.Double,System.Windows.Media.Brush,System.Windows.Media.NumberSubstitution)">
    <parameter name="textToFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.AdvanceLineOrigin(@,System.Windows.Media.TextFormatting.TextLine)">
    <parameter name="currentLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FormattedText.BlackBoxMetrics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FormattedText.BuildHighlightGeometry()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FormattedText.BuildHighlightGeometry(,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FormattedText.Draw(System.Windows.Media.DrawingContext,)">
    <parameter name="dc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.DrawAndCalculateMetrics(System.Windows.Media.DrawingContext,,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FormattedText.LineEnumerator.#ctor(System.Windows.Media.FormattedText)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.LineEnumerator.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="paraProps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.FormattedText.LineEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.FormattedText.Metrics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.SetCulture(System.Globalization.CultureInfo,System.Int32,System.Int32)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.SetFontFamily(System.String)">
    <parameter name="fontFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.SetFontFamily(System.String,System.Int32,System.Int32)">
    <parameter name="fontFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily)">
    <parameter name="fontFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.SetFontFamily(System.Windows.Media.FontFamily,System.Int32,System.Int32)">
    <parameter name="fontFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.SetMaxTextWidths(System.Double[])">
    <parameter name="maxTextWidths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.FormattedText.ValidateCulture(System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GeneralTransform.AffineTransform">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransform.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GeneralTransform.Inverse">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransform.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransform.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.GeneralTransform})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.Add(System.Windows.Media.GeneralTransform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.AddHelper(System.Windows.Media.GeneralTransform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.AddWithoutFiringPublicEvents(System.Windows.Media.GeneralTransform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.Contains(System.Windows.Media.GeneralTransform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.CopyTo(System.Windows.Media.GeneralTransform[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.Enumerator.#ctor(System.Windows.Media.GeneralTransformCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GeneralTransformCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GeneralTransformCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.IndexOf(System.Windows.Media.GeneralTransform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.Insert(System.Int32,System.Windows.Media.GeneralTransform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.Remove(System.Windows.Media.GeneralTransform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#GeneralTransform}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GeneralTransformCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeneralTransformGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)">
    <parameter name="geometry1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="geometry2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="geometry2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="geometry1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.ContainsInternal(System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.ContainsInternal(System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType,*,System.UInt32,System.Byte*,System.UInt32)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetBoundsHelper(System.Windows.Media.Pen,*,*,System.Byte*,System.UInt32,System.UInt32,*,System.Double,System.Windows.Media.ToleranceType,System.Boolean)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.GetBoundsInternal(System.Windows.Media.Pen,)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.GetBoundsInternal(System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetFlattenedPathGeometry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetOutlinedPathGeometry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetPathFigureCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.GetTransformedFigureCollection(System.Windows.Media.Transform)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.MakeEmptyGeometry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Geometry.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Geometry.TransformPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Geometry})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.Add(System.Windows.Media.Geometry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.AddHelper(System.Windows.Media.Geometry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Geometry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.Contains(System.Windows.Media.Geometry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.CopyTo(System.Windows.Media.Geometry[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.Enumerator.#ctor(System.Windows.Media.GeometryCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GeometryCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GeometryCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.IndexOf(System.Windows.Media.Geometry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.Insert(System.Int32,System.Windows.Media.Geometry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.Remove(System.Windows.Media.Geometry)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Geometry}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GeometryCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryDrawing.BrushPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryDrawing.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryDrawing.GeometryPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryDrawing.PenPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryGroup.ChildrenPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryGroup.FillRulePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GeometryGroup.GetAsPathGeometry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryGroup.GetTransformedFigureCollection(System.Windows.Media.Transform)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GeometryHitTestParameters.#ctor(System.Windows.Media.Geometry)">
    <parameter name="geometry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphCache.#ctor(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.#ctor(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Collections.Generic.IList{System.UInt16},,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)">
    <parameter name="advanceWidths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphTypeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphIndices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.ComputeAlignmentBox">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphRun.CreateOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.DefaultCaretStopList.CopyTo(System.Boolean[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.DefaultCaretStopList.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphRun.DefaultClusterMap.CopyTo(System.UInt16[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.DefaultClusterMap.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphRun.EmitBackground(System.Windows.Media.DrawingContext,System.Windows.Media.Brush)">
    <parameter name="dc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.FindNearestCaretStop(System.Int32,System.Collections.Generic.IList{System.Boolean},System.Int32@,System.Int32@)">
    <parameter name="caretStops">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.Initialize(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Collections.Generic.IList{System.UInt16},,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage,System.Boolean)">
    <parameter name="glyphTypeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphIndices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="advanceWidths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphRun.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.System#Windows#Media#Composition#DUCE#IResource#RemoveChildFromParent(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRun.TryCreate(System.Windows.Media.GlyphTypeface,System.Int32,System.Boolean,System.Double,System.Collections.Generic.IList{System.UInt16},,System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{},System.Collections.Generic.IList{System.Char},System.String,System.Collections.Generic.IList{System.UInt16},System.Collections.Generic.IList{System.Boolean},System.Windows.Markup.XmlLanguage)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="glyphTypeface">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="glyphIndices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="advanceWidths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRunDrawing.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphRunDrawing.ForegroundBrushPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphRunDrawing.GlyphRunPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphsSerializer.#ctor(System.Windows.Media.GlyphRun)">
    <parameter name="glyphRun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphsSerializer.CreateCaretStopsString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphsSerializer.RemoveTrailingCharacters(System.Text.StringBuilder,System.Char)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.#ctor(System.Uri)">
    <parameter name="typefaceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.#ctor(System.Uri,System.Windows.Media.StyleSimulations)">
    <parameter name="typefaceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.#ctor(System.Uri,System.Windows.Media.StyleSimulations,System.Boolean)">
    <parameter name="typefaceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.AdvanceHeights">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.AdvanceWidths">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.BottomSideBearings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.ComputeSubset(System.Collections.Generic.ICollection{System.UInt16})">
    <parameter name="glyphs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.ComputeUnshapedGlyphRun(,System.Windows.Media.TextFormatting.CharacterBufferRange,System.Collections.Generic.IList{System.Double},System.Double,System.Double,System.Boolean,System.Globalization.CultureInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="charWidths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.ConvertPostscriptOutline(System.Void*,System.Double,System.Boolean,System.Windows.Media.PathGeometry@)">
    <parameter name="outline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.Copyrights">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.CriticalUriDiscoveryPermission">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.Descriptions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.DesignerNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.DesignerUrls">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.DistancesFromHorizontalBaselineToBlackBoxBottom">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.FaceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.FamilyNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.GetAdvanceWidthsUnshaped(System.Char*,System.Int32,System.Double,System.Int32*,System.Boolean)">
    <parameter name="unsafeCharString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="advanceWidthsUnshaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.GetFontStream">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.GlyphIndexer.CopyTo(System.Collections.Generic.KeyValuePair{System.UInt16,System.Double}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.GlyphIndexer.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.GlyphIndexer.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.GlyphIndexer.ValueCollection.CopyTo(System.Double[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.GlyphIndexer.ValueCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.GlyphIndexer.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GlyphTypeface.Initialize(System.Uri,System.Windows.Media.StyleSimulations,System.Boolean)">
    <parameter name="typefaceSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.LeftSideBearings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.LicenseDescriptions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.ManufacturerNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.MS#Internal#FontFace#ITypefaceMetrics#AdjustedFaceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.RightSideBearings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.SampleTexts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.TopSideBearings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.Trademarks">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.VendorUrls">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.VersionStrings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.Win32FaceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GlyphTypeface.Win32FamilyNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientBrush.ColorInterpolationModePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientBrush.GradientStopsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientBrush.MappingModePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientBrush.SpreadMethodPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStop.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStop.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStop.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStop.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.GradientStop})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.Add(System.Windows.Media.GradientStop)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.AddHelper(System.Windows.Media.GradientStop)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.AddWithoutFiringPublicEvents(System.Windows.Media.GradientStop)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.Contains(System.Windows.Media.GradientStop)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.CopyTo(System.Windows.Media.GradientStop[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.Enumerator.#ctor(System.Windows.Media.GradientStopCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GradientStopCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.GradientStopCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.IndexOf(System.Windows.Media.GradientStop)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.Insert(System.Int32,System.Windows.Media.GradientStop)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.Remove(System.Windows.Media.GradientStop)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#GradientStop}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.GradientStopCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GradientStopCollection.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GuidelineSet.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GuidelineSet.GuidelinesXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GuidelineSet.GuidelinesYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GuidelineSet.IsDynamicPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GuidelineSet.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.GuidelineSet.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.GuidelineSet.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.HitTestWithGeometryDrawingContextWalker.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.HitTestWithPointDrawingContextWalker.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.HostVisual.DisconnectHostedVisual(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.HostVisual.DoHandleDuplication(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.HostVisual.EnsureHostedVisualConnected(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.HostVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.HostVisual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageBrush.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ImageBrush.ImageSourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageDrawing.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ImageDrawing.ImageSourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageDrawing.RectPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageSource.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageSource.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ImageSource.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.ImageSource.Metadata">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ImageSource.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.ImageSource.Size">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ImageSource.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageSource.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ImageSource.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageSource.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ImageSource.UpdateRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageSourceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ImageSourceConverter.GetBitmapStream(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="rawData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.Author">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.DeviceManufacturer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.DeviceModels">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.FileExtensions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.FriendlyName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.MimeTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.SpecificationVersion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapCodecInfo.Version">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Guid)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Guid)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.CheckCache(System.Uri,System.Guid@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapDecoder.CodecInfo">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.Create(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.Create(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.Create(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Net.Cache.RequestCachePolicy)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.CreateFromUriOrStream(System.Uri,System.Uri,System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Net.Cache.RequestCachePolicy,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.CreateInPlaceBitmapMetadataWriter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapDecoder.Frames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.GetIStreamFromStream(System.IO.Stream@)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.GetSeekableStream(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.ProcessHttpFiles(System.Uri,System.IO.Stream)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.ProcessHttpsFiles(System.Uri,System.IO.Stream)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.ProcessUncFiles(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDecoder.SetupDecoderFromUriOrStream(System.Uri,System.IO.Stream,System.Windows.Media.Imaging.BitmapCacheOption,System.Guid@,System.Boolean@,System.IO.Stream@,System.IO.UnmanagedMemoryStream@,Microsoft.Win32.SafeHandles.SafeFileHandle@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDownload.MarshalException(System.Windows.Media.Imaging.QueueEntry,System.Exception)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDownload.ReadCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapDownload.ResponseCallback(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapEncoder.CodecInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapEncoder.Create(System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapEncoder.Frames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapEncoder.Save(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapEncoder.SaveFrame(System.Windows.Media.SafeMILHandle,System.Windows.Media.SafeMILHandle,System.Windows.Media.Imaging.BitmapFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.IO.Stream)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Uri)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Uri,System.Net.Cache.RequestCachePolicy)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Net.Cache.RequestCachePolicy)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Windows.Media.Imaging.BitmapSource)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.Create(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapMetadata,System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Media.ColorContext})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.CreateFromUriOrStream(System.Uri,System.Uri,System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Net.Cache.RequestCachePolicy)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrame.CreateInPlaceBitmapMetadataWriter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapFrame.Decoder">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.#ctor(System.Int32,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Windows.Media.Imaging.BitmapFrameDecode)">
    <parameter name="frameDecode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.#ctor(System.Int32,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Windows.Media.Imaging.LateBoundBitmapDecoder)">
    <parameter name="decoder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.#ctor(System.Int32,System.Windows.Media.Imaging.BitmapSourceSafeMILHandle,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Windows.Media.Imaging.BitmapDecoder)">
    <parameter name="decoder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.CopyCommon(System.Windows.Media.Imaging.BitmapFrameDecode)">
    <parameter name="sourceBitmapFrameDecode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.CreateInPlaceBitmapMetadataWriter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.OnDownloadCompleted(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.OnDownloadFailed(System.Object,System.Windows.Media.ExceptionEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameDecode.UpdateDecoder(System.Windows.Media.Imaging.BitmapDecoder)">
    <parameter name="decoder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameEncode.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapMetadata,System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Media.ColorContext})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameEncode.CopyCommon(System.Windows.Media.Imaging.BitmapFrameEncode)">
    <parameter name="sourceBitmapFrameEncode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapFrameEncode.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri)">
    <parameter name="uriSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.#ctor(System.Uri,System.Net.Cache.RequestCachePolicy)">
    <parameter name="uriSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CacheOptionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CheckCache(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.ClonePrequel(System.Windows.Media.Imaging.BitmapImage)">
    <parameter name="otherBitmapImage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceCacheOption(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceCreateOptions(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceDecodePixelHeight(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceDecodePixelWidth(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceRotation(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceSourceRect(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceStreamSource(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceUriCachePolicy(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CoerceUriSource(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.CreateOptionsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.DecodePixelHeightPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.DecodePixelWidthPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.RotationPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.SourceRectPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.StreamSourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.UriCachePolicyPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapImage.UriSourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.#ctor(System.String)">
    <parameter name="containerFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.#ctor(System.Windows.Media.Imaging.BitmapMetadata)">
    <parameter name="bitmapMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.BitmapMetadataBlockWriter.#ctor(System.Windows.Media.Imaging.BitmapMetadata.BitmapMetadataBlockWriter,System.Object)">
    <parameter name="blockWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="syncObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.BitmapMetadataBlockWriterEnumerator.#ctor(System.Windows.Media.Imaging.BitmapMetadata.BitmapMetadataBlockWriter)">
    <parameter name="blockWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.ContainsQuery(System.String)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.CopyCommon(System.Windows.Media.Imaging.BitmapMetadata)">
    <parameter name="sourceBitmapMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Format">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.GetQuery(System.String)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.InitializeFromBlockWriter(System.Windows.Media.Imaging.BitmapMetadata.BitmapMetadataBlockWriter,System.Object)">
    <parameter name="sourceBlockWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="syncObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.InitializeFromMetadataWriter(System.Windows.Media.SafeMILHandle,System.Object)">
    <parameter name="syncObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapMetadata.Location">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.RemoveQuery(System.String)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.SetQuery(System.String,System.Object)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.System#Collections#Generic#IEnumerable{System#String}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapMetadata.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapMetadataEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapMetadataEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapPalette.#ctor(System.Collections.Generic.IList{System.Windows.Media.Color})">
    <parameter name="colors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapPalette.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Int32)">
    <parameter name="bitmapSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapPalette.CreateFromBitmapSource(System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.BlackAndWhite">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.BlackAndWhiteTransparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapPalettes.FromMILPaletteType(MS.Internal.WICPaletteType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray16">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray16Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray256">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray256Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray4">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Gray4Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone125">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone125Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone216">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone216Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone252">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone252Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone256">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone256Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone27">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone27Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone64">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone64Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone8">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.Halftone8Transparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.WebPalette">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapPalettes.WebPaletteTransparent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromEmptyOptions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromHeight(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromRotation(System.Windows.Media.Imaging.Rotation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromWidth(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSizeOptions.FromWidthAndHeight(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.CopyCommon(System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="sourceBitmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(,System.Array,System.Int32,System.Int32)">
    <parameter name="pixels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.CopyPixels(System.Array,System.Int32,System.Int32)">
    <parameter name="pixels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pixels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.Create(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.CriticalCopyPixels(,System.Array,System.Int32,System.Int32)">
    <parameter name="pixels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapSource.DUCECompatibleMILPtr">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.ManagedBitmapSource.#ctor(System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="bitmapSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Imaging.BitmapSource.Palette">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.RecoverFromDecodeFailure(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapSource.UpdateBitmapSourceResource(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapVisualManager.#ctor(System.Windows.Media.Imaging.RenderTargetBitmap)">
    <parameter name="bitmapTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapVisualManager.Render(System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BitmapVisualManager.Render(System.Windows.Media.Visual,,,System.Boolean)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BmpBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.BmpBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CachedBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Array,System.Int32)">
    <parameter name="pixels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="palette">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CachedBitmap.#ctor(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)">
    <parameter name="palette">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CachedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CachedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSourceSafeMILHandle)">
    <parameter name="bitmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CachedBitmap.CopyCommon(System.Windows.Media.Imaging.CachedBitmap)">
    <parameter name="sourceBitmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CachedBitmap.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.CachedBitmap.InitFromMemoryPtr(System.Int32,System.Int32,System.Double,System.Double,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.IntPtr,System.Int32,System.Int32)">
    <parameter name="palette">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.ColorContext,System.Windows.Media.ColorContext,System.Windows.Media.PixelFormat)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceColorContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destinationColorContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.CoerceDestinationColorContext(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.CoerceDestinationFormat(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.CoerceSource(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.CoerceSourceColorContext(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationColorContextPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.DestinationFormatPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.SourceColorContextPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ColorConvertedBitmap.SourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CroppedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CroppedBitmap.CoerceSource(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CroppedBitmap.CoerceSourceRect(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CroppedBitmap.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.CroppedBitmap.SourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.CroppedBitmap.SourceRectPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.PixelFormat,System.Windows.Media.Imaging.BitmapPalette,System.Double)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.AlphaThresholdPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.CoerceAlphaThreshold(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.CoerceDestinationFormat(,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.CoerceDestinationPalette(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.CoerceSource(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationFormatPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.DestinationPalettePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.FormatConvertedBitmap.SourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.GifBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.GifBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.IconBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.IconBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.AddToCache(System.Uri,System.Object,System.Collections.Hashtable)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.AddToDecoderCache(System.Uri,System.Object)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.AddToImageCache(System.Uri,System.Object)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.CheckCache(System.Uri,System.Collections.Hashtable)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.CheckDecoderCache(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.CheckImageCache(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.RemoveFromCache(System.Uri,System.Collections.Hashtable)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.RemoveFromDecoderCache(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ImagingCache.RemoveFromImageCache(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.CreateFromDecoder(System.Windows.Media.SafeMILHandle,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="syncObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.CreateFromFrameDecode(System.Windows.Media.Imaging.BitmapSourceSafeMILHandle,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="syncObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.InPlaceBitmapMetadataWriter.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.JpegBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.JpegBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.LateBoundBitmapDecoder.#ctor(System.Uri,System.Uri,System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption,System.Net.Cache.RequestCachePolicy)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.LateBoundBitmapDecoder.DownloadCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.LateBoundBitmapDecoder.ExceptionCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.LateBoundBitmapDecoder.ProgressCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.PngBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.PngBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.PROPVARIANT.CopyBytes(System.Byte*,System.Int32,System.Byte*,System.Int32)">
    <parameter name="pbTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pbFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.PROPVARIANT.Init(System.Array,System.Type,System.Runtime.InteropServices.VarEnum)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.PROPVARIANT.Init(System.String[],System.Boolean)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.PROPVARIANT.InitVector(System.Array,System.Type,System.Runtime.InteropServices.VarEnum)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.PROPVARIANT.ToObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.RenderTargetBitmap.CopyCommon(System.Windows.Media.Imaging.RenderTargetBitmap)">
    <parameter name="sourceBitmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.RenderTargetBitmap.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.RenderTargetBitmap.Render(System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.RenderTargetBitmap.RenderForBitmapEffect(System.Windows.Media.Visual,,)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TiffBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TiffBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TransformedBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Transform)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newTransform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TransformedBitmap.CheckTransform(System.Windows.Media.Transform)">
    <parameter name="newTransform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TransformedBitmap.CoerceSource(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TransformedBitmap.CoerceTransform(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TransformedBitmap.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.TransformedBitmap.GetParamsFromTransform(System.Windows.Media.Transform,System.Double@,System.Double@,MS.Internal.WICBitmapTransformOptions@)">
    <parameter name="newTransform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TransformedBitmap.SourcePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.TransformedBitmap.TransformPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.UnmanagedBitmapWrapper.#ctor(System.Windows.Media.Imaging.BitmapSourceSafeMILHandle)">
    <parameter name="bitmapSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.UnmanagedBitmapWrapper.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.UnmanagedBitmapWrapper.UpdateBitmapSource(System.Windows.Media.Imaging.BitmapSource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="bitmapSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.ValidateEnums.IsRotationValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.WmpBitmapDecoder.#ctor(System.IO.Stream,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.WmpBitmapDecoder.#ctor(System.Uri,System.Windows.Media.Imaging.BitmapCreateOptions,System.Windows.Media.Imaging.BitmapCacheOption)">
    <parameter name="bitmapUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.WriteableBitmap.#ctor(System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Imaging.WriteableBitmap.CommittingBatchHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.WriteableBitmap.CopyCommon(System.Windows.Media.Imaging.WriteableBitmap)">
    <parameter name="sourceBitmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.WriteableBitmap.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Imaging.WriteableBitmap.InitFromBitmapSource(System.Windows.Media.Imaging.BitmapSource)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.WriteableBitmap.ValidateArrayAndGetInfo(System.Array,System.Boolean,System.Int32@,System.Int32@,System.Type@)">
    <parameter name="sourceBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(,System.Array,System.Int32,System.Int32)">
    <parameter name="pixels">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Imaging.WriteableBitmap.WritePixels(,System.Array,System.Int32,System.Int32,System.Int32)">
    <parameter name="sourceBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.#ctor(System.Collections.Generic.IEnumerable{System.Int32})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.Cast(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.CopyTo(System.Int32[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.Enumerator.#ctor(System.Windows.Media.Int32Collection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Int32Collection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#Collections#Generic#IEnumerable{System#Int32}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Int32Collection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Int32Collection.System#Collections#IList#Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Int32Collection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32Collection.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Int32CollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.InvalidWmpVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.KnownColors.MatchColor(System.String,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="colorString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.Add(System.Windows.Markup.XmlLanguage,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.BaseCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.BaseCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.BaseCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.ContainsKey(System.Windows.Markup.XmlLanguage)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.ConvertKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.ConvertValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Windows.Markup.XmlLanguage,System.String}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.EntryEnumerator.#ctor(System.Collections.Generic.IDictionary{System.Windows.Markup.XmlLanguage,System.String})">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.EntryEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.EntryEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.EntryEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.Item(System.Windows.Markup.XmlLanguage)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.KeyCollection.KeyEnumerator.#ctor(System.Collections.Generic.IDictionary{System.Windows.Markup.XmlLanguage,System.String})">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.Remove(System.Windows.Markup.XmlLanguage)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.TryConvertKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.TryGetValue(System.Windows.Markup.XmlLanguage,System.String@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.ValidateValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LanguageSpecificStringDictionary.ValueCollection.ValueEnumerator.#ctor(System.Collections.Generic.IDictionary{System.Windows.Markup.XmlLanguage,System.String})">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LinearGradientBrush.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LinearGradientBrush.EndPointFromAngle(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LinearGradientBrush.EndPointPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LinearGradientBrush.ManualUpdateResource(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LinearGradientBrush.StartPointPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LineGeometry.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LineGeometry.EndPointPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LineGeometry.GetBoundsInternal(System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LineGeometry.GetTransformedFigureCollection(System.Windows.Media.Transform)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.LineGeometry.StartPointPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.LineSegment.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MatrixStack.Push(System.Windows.Media.Transform,System.Boolean)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MatrixTransform.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MatrixTransform.MatrixPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.AmbientLight.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.AxisAngleRotation3D.AnglePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.AxisAngleRotation3D.AxisPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.AxisAngleRotation3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.RayFromViewportPoint(,,System.Windows.Media.Media3D.Rect3D,System.Double@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Camera.TransformPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ContainerUIElement3D.OnCreateAutomationPeer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.DiffuseMaterial.AmbientColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.DiffuseMaterial.BrushPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.DiffuseMaterial.ColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.DiffuseMaterial.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.DirectionalLight.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.DirectionalLight.DirectionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.EmissiveMaterial.BrushPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.EmissiveMaterial.ColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.EmissiveMaterial.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.#ctor(System.Windows.Media.GeneralTransform,System.Windows.Media.Media3D.Viewport2DVisual3D,System.Windows.Media.Media3D.GeneralTransform3D)">
    <parameter name="containingVisual3D">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.CopyCommon(System.Windows.Media.Media3D.GeneralTransform2DTo3D)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform2DTo3D.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.GeneralTransform3D.AffineTransform">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Media3D.GeneralTransform3D.Inverse">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.GeneralTransform3D})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Add(System.Windows.Media.Media3D.GeneralTransform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.AddHelper(System.Windows.Media.Media3D.GeneralTransform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Media3D.GeneralTransform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Contains(System.Windows.Media.Media3D.GeneralTransform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.CopyTo(System.Windows.Media.Media3D.GeneralTransform3D[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator.#ctor(System.Windows.Media.Media3D.GeneralTransform3DCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.IndexOf(System.Windows.Media.Media3D.GeneralTransform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.GeneralTransform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.Remove(System.Windows.Media.Media3D.GeneralTransform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Media3D#GeneralTransform3D}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.CopyCommon(System.Windows.Media.Media3D.GeneralTransform3DTo2D)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeneralTransform3DTo2D.GetCurrentValueAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Geometry3D.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Geometry3D.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Geometry3D.RayHitTest(System.Windows.Media.Media3D.RayHitTestParameters,MS.Internal.Media3D.FaceType)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Geometry3D.RayHitTestCore(System.Windows.Media.Media3D.RayHitTestParameters,MS.Internal.Media3D.FaceType)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Geometry3D.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Geometry3D.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Geometry3D.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Geometry3D.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeometryModel3D.BackMaterialPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeometryModel3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.GeometryModel3D.GeometryPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.GeometryModel3D.MaterialPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Light.ColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Light.MarkVisibleRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="rc">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Light.RayHitTestCore(System.Windows.Media.Media3D.RayHitTestParameters)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.UpdateRealizations(System.Windows.Media.Brush,System.Windows.Media.RealizationContext,@)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Material.UpdateRealizations(System.Windows.Media.RealizationContext,@)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Material})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.Add(System.Windows.Media.Media3D.Material)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.AddHelper(System.Windows.Media.Media3D.Material)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Media3D.Material)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.Contains(System.Windows.Media.Media3D.Material)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.CopyTo(System.Windows.Media.Media3D.Material[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.Enumerator.#ctor(System.Windows.Media.Media3D.MaterialCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.MaterialCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Media3D.MaterialCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.IndexOf(System.Windows.Media.Media3D.Material)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.Insert(System.Int32,System.Windows.Media.Media3D.Material)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.Remove(System.Windows.Media.Media3D.Material)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Media3D#Material}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.MaterialCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialGroup.ChildrenItemInserted(System.Object,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialGroup.ChildrenPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MaterialGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Matrix3D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Matrix3D.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Matrix3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Matrix3D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Matrix3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MatrixCamera.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.MatrixCamera.ProjectionMatrixPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MatrixCamera.ViewMatrixPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MatrixTransform3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.MatrixTransform3D.MatrixPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.NormalsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.PositionsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.TextureCoordinatesPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.TriangleIndicesPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.ValidateLineHit(System.Windows.Media.Media3D.RayHitTestParameters,MS.Internal.Media3D.FaceType,System.Int32,System.Int32,System.Int32,System.Windows.Media.Media3D.Point3D@,System.Windows.Media.Media3D.Point3D@,System.Windows.Media.Media3D.Point3D@,@)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.MeshGeometry3D.ValidateRayHit(System.Windows.Media.Media3D.RayHitTestParameters,System.Windows.Media.Media3D.Point3D@,System.Windows.Media.Media3D.Vector3D@,System.Double,System.Int32,System.Int32,System.Int32,@)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.MarkVisibleRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="rc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.RayHitTest(System.Windows.Media.Media3D.RayHitTestParameters)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.RayHitTestCore(System.Windows.Media.Media3D.RayHitTestParameters)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3D.TransformPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Model3D})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.Add(System.Windows.Media.Media3D.Model3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.AddHelper(System.Windows.Media.Media3D.Model3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Media3D.Model3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.Contains(System.Windows.Media.Media3D.Model3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.CopyTo(System.Windows.Media.Media3D.Model3D[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.Enumerator.#ctor(System.Windows.Media.Media3D.Model3DCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Model3DCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Media3D.Model3DCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.IndexOf(System.Windows.Media.Media3D.Model3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.Model3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.Remove(System.Windows.Media.Media3D.Model3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Media3D#Model3D}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Model3DCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DGroup.ChildrenPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Model3DGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.ModelUIElement3D.ModelPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ModelUIElement3D.OnCreateAutomationPeer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.ModelVisual3D.ContentPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ModelVisual3D.System#Windows#Markup#IAddChild#AddChild(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ModelVisual3D.System#Windows#Markup#IAddChild#AddText(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.OrthographicCamera.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.OrthographicCamera.WidthPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.PerspectiveCamera.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.PerspectiveCamera.FieldOfViewPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3D.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3D.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Point3D})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.Cast(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.CopyTo(System.Windows.Media.Media3D.Point3D[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.DeserializeFrom(System.IO.BinaryReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.Enumerator.#ctor(System.Windows.Media.Media3D.Point3DCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Point3DCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Media3D#Point3D}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Point3DCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollection.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point4D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point4D.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Point4D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point4D.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point4D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Point4DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.PointLight.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.PointLightBase.ConstantAttenuationPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.PointLightBase.LinearAttenuationPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.PointLightBase.PositionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.PointLightBase.QuadraticAttenuationPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.PointLightBase.RangePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ProjectionCamera.FarPlaneDistancePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ProjectionCamera.LookDirectionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ProjectionCamera.NearPlaneDistancePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ProjectionCamera.PositionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ProjectionCamera.UpDirectionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Quaternion.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Quaternion.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Quaternion.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Quaternion.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Quaternion.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.QuaternionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.QuaternionRotation3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.QuaternionRotation3D.QuaternionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.RayHitTestParameters.RaiseCallback(System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultBehavior)">
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.RayHitTestParameters.RaiseCallback(System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultBehavior,System.Double)">
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.RayHitTestResult.CompareByDistanceToRayOrigin(System.Windows.Media.Media3D.RayHitTestResult,System.Windows.Media.Media3D.RayHitTestResult)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Rect3D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Rect3D.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Rect3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Rect3D.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Rect3D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Rect3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.RotateTransform3D.CenterXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.RotateTransform3D.CenterYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.RotateTransform3D.CenterZPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.RotateTransform3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.RotateTransform3D.RotationPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Rotation3D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.CenterXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.CenterYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.CenterZPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.ScaleXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.ScaleYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.ScaleTransform3D.ScaleZPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Scene3D.CameraPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Scene3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Scene3D.MarkVisibleRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Scene3D.ModelsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Scene3D.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Scene3D.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Scene3D.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Scene3D.ViewportPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Size3D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Size3D.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Size3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Size3D.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Size3D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Size3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.SpecularMaterial.BrushPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.SpecularMaterial.ColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.SpecularMaterial.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.SpecularMaterial.SpecularPowerPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.SpotLight.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.SpotLight.DirectionPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.SpotLight.InnerConeAnglePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.SpotLight.OuterConeAnglePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3D.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Transform3D.AffineTransform">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3D.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3D.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3D.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3D.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3D.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Transform3D})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Add(System.Windows.Media.Media3D.Transform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.AddHelper(System.Windows.Media.Media3D.Transform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Media3D.Transform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Contains(System.Windows.Media.Media3D.Transform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.CopyTo(System.Windows.Media.Media3D.Transform3D[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Enumerator.#ctor(System.Windows.Media.Media3D.Transform3DCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Transform3DCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Media3D.Transform3DCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.IndexOf(System.Windows.Media.Media3D.Transform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.Transform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.Remove(System.Windows.Media.Media3D.Transform3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Media3D#Transform3D}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DGroup.ChildrenItemInserted(System.Object,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DGroup.ChildrenItemRemoved(System.Object,System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DGroup.ChildrenPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Transform3DGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.OffsetXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.OffsetYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.TranslateTransform3D.OffsetZPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3D.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3D.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3D.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3D.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3D.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Media3D.Vector3D})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Cast(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.CopyTo(System.Windows.Media.Media3D.Vector3D[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.DeserializeFrom(System.IO.BinaryReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Enumerator.#ctor(System.Windows.Media.Media3D.Vector3DCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Vector3DCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Media3D#Vector3D}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollection.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Vector3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.CreateVisualBrush">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.InternalGet2DOr3DVisualChild(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.OnCacheInvalidationThresholdMaximumChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.OnCacheInvalidationThresholdMinimumChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.OnCachingHintChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.OnGeometryChanged(System.Object,)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.OnMaterialPropertyChanged(System.Object,)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.OnVisualChanged(System.Object,)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.TextureCoordsToVisualCoords(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.TextureCoordsToVisualCoords(,System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.VisualCoordsToTextureCoords(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport2DVisual3D.VisualCoordsToTextureCoords(,System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.CameraPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.MS#Internal#IVisual3DContainer#AddChild(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.MS#Internal#IVisual3DContainer#RemoveChild(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Viewport3DVisual.ViewportPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.ApplyAnimationClock(,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.BeginAnimation(,System.Windows.Media.Animation.AnimationTimeline)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.BeginAnimation(,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.DoAnyChildrenHaveABitSet(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.VisualFlags)">
    <parameter name="pe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.DoesRayHitSubgraphBounds(System.Windows.Media.Media3D.RayHitTestParameters)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.FindCommonVisualAncestor()">
    <parameter name="otherVisual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.FreeDUCEResources(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.GetAnimationBaseValue()">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.HitTestChildren(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.Media3D.RayHitTestParameters)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.HitTestChildren(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.Media3D.RayHitTestParameters,MS.Internal.IVisual3DContainer)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.InternalTransformToAncestor(System.Windows.Media.Media3D.Visual3D,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.InternalTransformToAncestor(System.Windows.Media.Visual)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.IsAncestorOf()">
    <parameter name="descendant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.IsDescendantOf()">
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.MS#Internal#IVisual3DContainer#AddChild(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.MS#Internal#IVisual3DContainer#RemoveChild(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.RayHitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.Media3D.RayHitTestParameters)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.RayHitTestInternal(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.Media3D.RayHitTestParameters)">
    <parameter name="rayParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.RemoveVisual3DChild(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.RenderContent(System.Windows.Media.RenderContext,System.Boolean)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.RenderRecursive(System.Windows.Media.RenderContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.System#Windows#Media#Composition#DUCE#IResource#RemoveChildFromParent(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.TransformPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.TransformToAncestor(System.Windows.Media.Visual)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.TransformToDescendant(System.Windows.Media.Media3D.Visual3D)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="descendant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3D.UpdateRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="rc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Add(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.ConnectChild(System.Int32,System.Windows.Media.Media3D.Visual3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Contains(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.CopyTo(System.Windows.Media.Media3D.Visual3D[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Enumerator.#ctor(System.Windows.Media.Media3D.Visual3DCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Visual3DCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Media3D.Visual3DCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.IndexOf(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Insert(System.Int32,System.Windows.Media.Media3D.Visual3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.InternalInsert(System.Int32,System.Windows.Media.Media3D.Visual3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.Remove(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Media3D#Visual3D}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Media3D.Visual3DCollection.VerifyAPIForAdd(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaClock.#ctor(System.Windows.Media.MediaTimeline)">
    <parameter name="media">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.AcquireBoundsDrawingContextWalker">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaContext.AddLoadedOrUnloadedCallback(,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaContext.AnimatedRenderMessageHandler(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaContext.ChannelManager.ReleaseSyncChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.ConnectHandler(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.MediaContext.CurrentMediaContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaContext.DisconnectHandler(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaContext.From()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaContext.InputMarkerMessageHandler(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaContext.NotifySyncChannelMessage(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.RegisterForNotifications(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.RegisterICompositionTarget(,System.Windows.Media.ICompositionTarget)">
    <parameter name="iv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.RegisterICompositionTargetInternal(System.Windows.Media.ICompositionTarget)">
    <parameter name="iv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.ReleaseSyncChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.RemoveLoadedOrUnloadedCallback(MS.Internal.LoadedOrUnloadedOperation)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.RenderMessageHandler(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaContext.RequestPresentedNotification(System.Windows.Media.Composition.DUCE.Channel,System.Int64)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.RequestTier(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.UnregisterICompositionTarget(,System.Windows.Media.ICompositionTarget)">
    <parameter name="iv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaContext.UnregisterICompositionTargetInternal(System.Windows.Media.ICompositionTarget)">
    <parameter name="iv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.GetStringFromReader(System.IO.BinaryReader,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.HandleScriptCommand(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.OnBufferingEnded(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.OnBufferingStarted(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.OnMediaEnded(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.OnMediaFailed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.OnMediaOpened(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.OnMediaPrerolled(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.OnNewFrame(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.OnScriptCommand(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.RaiseMediaFailed(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaEventsHelper.System#Windows#Media#IInvokable#RaiseEvent(System.Byte[],System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.CloneCommon()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.GetAsFrozenCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayer.UpdateResourceInternal(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayerState.DemandPermissions(System.Uri)">
    <parameter name="absoluteUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayerState.ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayerState.ResolveUri(System.Uri,System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="appBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayerState.SendCommandMedia(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Boolean,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaPlayerState.SendMediaPlayerCommand(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Boolean,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaScriptCommandEventArgs.#ctor(System.String,System.String)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaSystem.ConnectChannels(System.Windows.Media.MediaContext)">
    <parameter name="mc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaTimeline.CloneCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaTimeline.CloneCurrentValueCore()">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaTimeline.CopyCommon(System.Windows.Media.MediaTimeline)">
    <parameter name="sourceTimeline">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MediaTimeline.CreateClock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MediaTimeline.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MILUtilities.ConvertFromD3DMATRIX(System.Windows.Media.Composition.D3DMATRIX*,*)">
    <parameter name="d3dMatrix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="matrix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.MILUtilities.ConvertToD3DMATRIX(*,System.Windows.Media.Composition.D3DMATRIX*)">
    <parameter name="matrix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="d3dMatrix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.NumberSubstitution.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.NumberSubstitution.GetCultureOverride()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.NumberSubstitution.GetCultureSource()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.NumberSubstitution.GetSubstitution()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.NumberSubstitution.SetCultureOverride(,System.Globalization.CultureInfo)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.NumberSubstitution.SetCultureSource(,System.Windows.Media.NumberCultureSource)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.NumberSubstitution.SetSubstitution(,System.Windows.Media.NumberSubstitutionMethod)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigure.#ctor(,System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment},System.Boolean)">
    <parameter name="segments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigure.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigure.GetTransformedCopy()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigure.SerializeData(System.Windows.Media.StreamGeometryContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigure.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.Add(System.Windows.Media.PathFigure)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.AddHelper(System.Windows.Media.PathFigure)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.AddWithoutFiringPublicEvents(System.Windows.Media.PathFigure)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.Contains(System.Windows.Media.PathFigure)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.CopyTo(System.Windows.Media.PathFigure[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.Enumerator.#ctor(System.Windows.Media.PathFigureCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.PathFigureCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.PathFigureCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.IndexOf(System.Windows.Media.PathFigure)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.Insert(System.Int32,System.Windows.Media.PathFigure)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.Parse(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.Remove(System.Windows.Media.PathFigure)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#PathFigure}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.PathFigureCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollection.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathFigureCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure})">
    <parameter name="figures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.AddGeometry(System.Windows.Media.Geometry)">
    <parameter name="geometry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathGeometry.FigureList.AddFigureToList(System.Boolean,System.Boolean,System.Windows.Media.Composition.MilPoint2F*,System.UInt32,System.Byte*,System.UInt32)">
    <parameter name="pPoints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pSegTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.FiguresPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.FillRulePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.GetPathBounds(System.Windows.Media.Geometry.PathGeometryData,System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType,System.Boolean)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.GetPathBoundsAsRB(System.Windows.Media.Geometry.PathGeometryData,System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType,System.Boolean)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.GetTransformedFigureCollection(System.Windows.Media.Transform)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathGeometry.HitTestWithPathGeometry(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="geometry1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="geometry2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.InternalCombine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="geometry1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="geometry2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.ManualUpdateResource(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathGeometry.ParsePathGeometryData(System.Windows.Media.Geometry.PathGeometryData,System.Windows.Media.CapacityStreamGeometryContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegment.AddToFigure(,System.Windows.Media.PathFigure,@)">
    <parameter name="figure">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegment.SerializeData(System.Windows.Media.StreamGeometryContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.AddHelper(System.Windows.Media.PathSegment)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.AddWithoutFiringPublicEvents(System.Windows.Media.PathSegment)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.Enumerator.#ctor(System.Windows.Media.PathSegmentCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.PathSegmentCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.PathSegmentCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PathStreamGeometryContext.GenericPolyTo(System.Collections.Generic.IList{},System.Boolean,System.Boolean,System.Windows.Media.Composition.MIL_SEGMENT_TYPE)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.BrushPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Pen.DashCapPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.DashStylePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.EndLineCapPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.LineJoinPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.MiterLimitPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.StartLineCapPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Pen.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.ThicknessPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Pen.UpdateRealizations(,System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PixelFormat.#ctor(System.String)">
    <parameter name="pixelFormatString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PixelFormat.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.PixelFormat.Masks">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PixelFormatChannelMask.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.PixelFormatChannelMask.Mask">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PixelFormatConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PixelFormatConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PixelFormatConverter.ConvertFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.#ctor(System.Collections.Generic.IEnumerable{})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.Add()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.Contains()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.CopyTo([],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.DeserializeFrom(System.IO.BinaryReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.Enumerator.#ctor(System.Windows.Media.PointCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.PointCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.PointCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.IndexOf()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.Insert(System.Int32,)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.Remove()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#Collections#Generic#IEnumerable{}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.PointCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PointCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollection.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PointCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PolyBezierSegment.#ctor(System.Collections.Generic.IEnumerable{},System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PolyBezierSegment.#ctor(System.Collections.Generic.IEnumerable{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PolyBezierSegment.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PolyLineSegment.#ctor(System.Collections.Generic.IEnumerable{},System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PolyLineSegment.#ctor(System.Collections.Generic.IEnumerable{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PolyLineSegment.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.#ctor(System.Collections.Generic.IEnumerable{},System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.#ctor(System.Collections.Generic.IEnumerable{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.PolyQuadraticBezierSegment.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.QuadraticBezierSegment.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.QuadraticBezierSegment.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.RadialGradientBrush.CenterPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RadialGradientBrush.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.RadialGradientBrush.GradientOriginPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RadialGradientBrush.ManualUpdateResource(System.Windows.Media.Composition.DUCE.Channel,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RadialGradientBrush.RadiusXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RadialGradientBrush.RadiusYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RealizationBrushHelper.UpdateRealizations(,,System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RealizationDrawingContextWalker.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RectangleGeometry.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.RectangleGeometry.GetBoundsInternal(System.Windows.Media.Pen,,System.Double,System.Windows.Media.ToleranceType)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RectangleGeometry.GetPointList(*,System.UInt32,,System.Double,System.Double)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RectangleGeometry.GetPointList(,System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.RectangleGeometry.RadiusXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RectangleGeometry.RadiusYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RectangleGeometry.RectPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.BaseValueDrawingContextWalk(System.Windows.Media.DrawingContextWalker)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.RenderData.DrawingContextWalk(System.Windows.Media.DrawingContextWalker)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.ExecuteBitmapEffectRealizationUpdates(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.GetContentBounds(System.Windows.Media.BoundsDrawingContextWalker)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.MarshalToDUCE(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.RenderData.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.System#Windows#Media#Composition#DUCE#IResource#RemoveChildFromParent(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.UpdateRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="realizationContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.UpdateResource(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderData.WalkContent(System.Windows.Media.DrawingContextWalker)">
    <parameter name="walker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderDataDrawingContext.DrawGeometry(System.Windows.Media.Brush,System.Windows.Media.Pen,System.Windows.Media.Geometry)">
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Renderer.Render(System.IntPtr,System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Visual,System.Int32,System.Int32,System.Double,System.Double)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Renderer.Render(System.IntPtr,System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Visual,System.Int32,System.Int32,System.Double,System.Double,,,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.GetBitmapScalingMode()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMaximum()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.GetCacheInvalidationThresholdMinimum()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.GetCachingHint()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.GetEdgeMode()">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.SetBitmapScalingMode(,System.Windows.Media.BitmapScalingMode)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMaximum(,System.Double)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.SetCacheInvalidationThresholdMinimum(,System.Double)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.SetCachingHint(,System.Windows.Media.CachingHint)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RenderOptions.SetEdgeMode(,System.Windows.Media.EdgeMode)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RequestCachePolicyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RequestCachePolicyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RequestCachePolicyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="td">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RequestCachePolicyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="cultureInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RotateTransform.AnglePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RotateTransform.CenterXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RotateTransform.CenterYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.RotateTransform.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.RotateTransform.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ScaleTransform.CenterXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ScaleTransform.CenterYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ScaleTransform.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.ScaleTransform.ScaleXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ScaleTransform.ScaleYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.ScaleTransform.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.SkewTransform.AngleXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.SkewTransform.AngleYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.SkewTransform.CenterXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.SkewTransform.CenterYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.SkewTransform.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.SkewTransform.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.SolidColorBrush.ColorPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.SolidColorBrush.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.SolidColorBrush.DeserializeFrom(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.SolidColorBrush.DeserializeFrom(System.IO.BinaryReader,System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.SolidColorBrush.SerializeOn(System.IO.BinaryWriter,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stringValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamAsIStream.IStreamFrom(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamAsIStream.Read(System.Byte[],System.UInt32,System.UInt32@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamAsIStream.Read(System.Windows.Media.StreamDescriptor@,System.Byte[],System.UInt32,System.UInt32@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamAsIStream.Write(System.Byte[],System.UInt32,System.UInt32@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamAsIStream.Write(System.Windows.Media.StreamDescriptor@,System.Byte[],System.UInt32,System.UInt32@)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamGeometry.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamGeometry.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamGeometry.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.StreamGeometry.FillRulePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamGeometry.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamGeometry.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamGeometry.Open">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{},System.Boolean,System.Boolean)">
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffect.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextEffect.ValidatePositionCountValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffect.ValidatePositionStartValue(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.TextEffect})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.Add(System.Windows.Media.TextEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.AddHelper(System.Windows.Media.TextEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.AddWithoutFiringPublicEvents(System.Windows.Media.TextEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.Contains(System.Windows.Media.TextEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.CopyTo(System.Windows.Media.TextEffect[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.Enumerator.#ctor(System.Windows.Media.TextEffectCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.TextEffectCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextEffectCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.IndexOf(System.Windows.Media.TextEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.Insert(System.Int32,System.Windows.Media.TextEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.Remove(System.Windows.Media.TextEffect)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#TextEffect}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.TextEffectCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextEffectCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Char*,System.Int32)">
    <parameter name="unsafeCharacterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Char[],System.Int32,System.Int32)">
    <parameter name="characterArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.String)">
    <parameter name="charString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.String,System.Int32,System.Int32)">
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.#ctor(System.Windows.Media.TextFormatting.TextRun)">
    <parameter name="textRun">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferRange.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.#ctor(System.Char*,System.Int32)">
    <parameter name="unsafeCharacterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.#ctor(System.Char[],System.Int32)">
    <parameter name="characterArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.#ctor(System.String,System.Int32)">
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterBufferReference.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.CharacterHit.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextBreakpoint.GetTextLineBreak">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.Char*,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
    <parameter name="unsafeCharacterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.Char[],System.Int32,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
    <parameter name="characterArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.String,System.Int32,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.String,System.Windows.Media.TextFormatting.TextRunProperties)">
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="characterString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextCharacters.#ctor(System.Windows.Media.TextFormatting.CharacterBufferReference,System.Int32,System.Windows.Media.TextFormatting.TextRunProperties)">
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextCharacters.MS#Internal#TextFormatting#IShapeableTextCollector#Add(System.Collections.Generic.IList{MS.Internal.TextFormatting.TextShapeableSymbols},System.Windows.Media.TextFormatting.CharacterBufferRange,System.Windows.Media.TextFormatting.TextRunProperties,MS.Internal.Shaping.Item,MS.Internal.Shaping.ShapeTypeface,System.Double,System.Boolean)">
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="shapeables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextCharacters.MS#Internal#TextFormatting#ITextSymbols#GetTextShapeableSymbols(MS.Internal.Shaping.GlyphingCache,System.Windows.Media.TextFormatting.CharacterBufferReference,System.Int32,System.Boolean,System.Globalization.CultureInfo,System.Windows.Media.TextFormatting.TextModifierScope)">
    <parameter name="glyphingCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.Create">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.CreateFromContext(System.Windows.Media.TextFormatting.TextFormatterContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.CreateParagraphCache(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="textRunCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak)">
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FormatLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)">
    <parameter name="textRunCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)">
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FormatMinMaxParagraphWidth(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextRunCache)">
    <parameter name="textRunCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.FromCurrentDispatcher">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatter.RecreateLine(System.Windows.Media.TextFormatting.TextSource,System.Int32,System.Int32,System.Double,System.Windows.Media.TextFormatting.TextParagraphProperties,System.Windows.Media.TextFormatting.TextLineBreak,System.Windows.Media.TextFormatting.TextRunCache)">
    <parameter name="textRunCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paragraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextFormatterContext.GetTextPenaltyModule">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextFormatting.TextFormatterContext.IndexedGlyphRuns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextLine.Collapse(System.Windows.Media.TextFormatting.TextCollapsingProperties[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextLine.Draw(System.Windows.Media.DrawingContext,,System.Windows.Media.TextFormatting.InvertAxes)">
    <parameter name="drawingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextLine.GetIndexedGlyphRuns">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextLine.GetTextBounds(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextLine.GetTextCollapsedRanges">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextLine.GetTextLineBreak">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextLine.GetTextRunSpans">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextLineBreak.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextModifierScope.CloneStack">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextParagraphCache.FormatBreakpoints(System.Int32,System.Windows.Media.TextFormatting.TextLineBreak,System.IntPtr,System.Double,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.Tabs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.TextDecorations">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextFormatting.TextParagraphProperties.TextMarkerProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextFormatting.TextRun.Properties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextRunCache.GetTextRunSpans">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.NumberSubstitution">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.TextEffects">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TextFormatting.TextRunProperties.TypographyProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextShapeableCharacters.GetGlyphTypeface(System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextShapeableCharacters.GetNullGlyphs(System.Int32,MS.Internal.CheckedCharPointer,MS.Internal.CheckedCharacterShapingPropertiesPointer,MS.Internal.CheckedUShortPointer,MS.Internal.Shaping.GlyphShapingProperties[]@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextSimpleMarkerProperties.#ctor(System.Windows.TextMarkerStyle,System.Double,System.Int32,System.Windows.Media.TextFormatting.TextParagraphProperties)">
    <parameter name="textParagraphProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextTrailingCharacterEllipsis.#ctor(System.Double,System.Windows.Media.TextFormatting.TextRunProperties)">
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TextFormatting.TextTrailingWordEllipsis.#ctor(System.Double,System.Windows.Media.TextFormatting.TextRunProperties)">
    <parameter name="textRunProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.AlignmentXPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.AlignmentYPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.CacheInvalidationThresholdMaximumPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.CacheInvalidationThresholdMinimumPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.CachingHintPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.StretchPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.TileModePropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.ViewboxPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.ViewboxUnitsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.ViewportPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TileBrush.ViewportUnitsPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Transform.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Transform.AffineTransform">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Transform.ConvertToD3DMATRIX(System.Windows.Media.Composition.D3DMATRIX*)">
    <parameter name="milMatrix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Transform.GetChannelCore(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Transform.MakeIdentityTransform">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Transform.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Transform.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Transform.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Transform.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Transform.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Transform})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.Add(System.Windows.Media.Transform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.AddHelper(System.Windows.Media.Transform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.AddWithoutFiringPublicEvents(System.Windows.Media.Transform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.Contains(System.Windows.Media.Transform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.CopyTo(System.Windows.Media.Transform[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TransformCollection.Enumerator.#ctor(System.Windows.Media.TransformCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.TransformCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.TransformCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TransformCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.IndexOf(System.Windows.Media.Transform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.Insert(System.Int32,System.Windows.Media.Transform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.Remove(System.Windows.Media.Transform)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Transform}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TransformCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.TransformCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TransformCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformGroup.ChildrenPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TransformGroup.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TranslateTransform.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.TranslateTransform.XPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TranslateTransform.YPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.TypeConverterHelper.GetUriFromUriContext(System.ComponentModel.ITypeDescriptorContext,System.Object)">
    <parameter name="inputString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Typeface.#ctor(System.String)">
    <parameter name="typefaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch)">
    <parameter name="fontFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Typeface.#ctor(System.Windows.Media.FontFamily,System.Windows.FontStyle,System.Windows.FontWeight,System.Windows.FontStretch,System.Windows.Media.FontFamily)">
    <parameter name="fontFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Typeface.CachedTypeface">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Typeface.ConstructCachedTypeface">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Typeface.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Typeface.FaceNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Typeface.TryGetGlyphTypeface">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.UniqueEventHelper.AddEvent(System.EventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.UniqueEventHelper.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.UniqueEventHelper.RemoveEvent(System.EventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.UniqueEventHelper`1.AddEvent(System.EventHandler{`0})">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.UniqueEventHelper`1.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.UniqueEventHelper`1.RemoveEvent(System.EventHandler{`0})">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsAlignmentXValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsAlignmentYValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsBitmapScalingModeValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsBrushMappingModeValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsCachingHintValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsColorInterpolationModeValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsEdgeModeValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsFillRuleValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsGeometryCombineModeValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsGradientSpreadMethodValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsPenLineCapValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsPenLineJoinValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsStretchValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsSweepDirectionValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.ValidateEnums.IsTileModeValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.#ctor(System.Collections.Generic.IEnumerable{})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.Add()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.Contains()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollection.CopyTo([],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollection.Enumerator.#ctor(System.Windows.Media.VectorCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.VectorCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.VectorCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.IndexOf()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.Insert(System.Int32,)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollection.Remove()">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#Collections#Generic#IEnumerable{}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.VectorCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VectorCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollection.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VectorCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VideoDrawing.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VideoDrawing.PlayerPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VideoDrawing.RectPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VideoDrawing.UpdateRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="realizationContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.AddRefOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.AddRefOnChannelForVisualBrush(System.Windows.Media.VisualBrush,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="visualBrush">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Visual.BitmapEffectChangedHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Visual.BitmapEffectInputChangedHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Visual.ClipChangedHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Visual.ContentsChangedHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Visual.DoAnyChildrenHaveABitSet(System.Windows.Media.Visual,System.Windows.Media.VisualFlags)">
    <parameter name="pe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Visual.EffectChangedHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Visual.FindCommonVisualAncestor()">
    <parameter name="otherVisual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.FreeContent(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.GetDrawing">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.Visual.GuidelinesChangedHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Visual.HitTest(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.HitTestGeometry(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.GeometryHitTestParameters)">
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="geometryParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.HitTestPoint(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.PointHitTestParameters)">
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pointParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.HitTestPointInternal(System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.PointHitTestParameters)">
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.InternalTransformToAncestor(System.Windows.Media.Media3D.Visual3D,System.Boolean)">
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.IsAncestorOf()">
    <parameter name="descendant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.IsDescendantOf()">
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.IsVisualBrushRootOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.MarkVisibleRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.MarkVisibleRealizationsForBitmapEffect(System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.MarkVisibleRealizationsForChildren(System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.MarkVisibleRealizationsRecursive(System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Visual.OpacityMaskChangedHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Visual.ReleaseOnChannelCore(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.ReleaseOnChannelForBitmapEffect(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.ReleaseOnChannelForVisualBrush(System.Windows.Media.VisualBrush,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="visualBrush">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.Render(System.Windows.Media.RenderContext,System.UInt32)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.RenderContent(System.Windows.Media.RenderContext,System.Boolean)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.RenderForBitmapEffect(System.Windows.Media.RenderContext,System.UInt32)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.RenderRecursive(System.Windows.Media.RenderContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.System#Windows#Media#Composition#DUCE#IResource#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.System#Windows#Media#Composition#DUCE#IResource#GetChannel(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Visual.System#Windows#Media#Composition#DUCE#IResource#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.System#Windows#Media#Composition#DUCE#IResource#RemoveChildFromParent(System.Windows.Media.Composition.DUCE.IResource,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.Visual.TransformChangedHandler">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.TransformToAncestor(System.Windows.Media.Visual)">
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.TransformToDescendant(System.Windows.Media.Visual)">
    <parameter name="descendant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.TransformToOuterSpace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Visual.TransformToVisual(System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.TrySimpleTransformToAncestor(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.Media3D.GeneralTransform2DTo3D@)">
    <parameter name="ancestor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateBitmapEffectRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateChildren(System.Windows.Media.RenderContext,System.Windows.Media.Composition.DUCE.ResourceHandle)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateClip(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateContent(System.Windows.Media.RenderContext,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateEffect(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateGuidelines(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateOffset(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateOpacity(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateOpacityMask(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateRealizations(System.Windows.Media.RealizationContext)">
    <parameter name="ctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateRenderOptions(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Visual.UpdateTransform(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.ResourceHandle,System.Windows.Media.VisualProxyFlags,System.Boolean)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.AddRefResource(System.Windows.Media.Visual,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.AutoLayoutContentPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.VisualBrush.BrushRegisterToken">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VisualBrush.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VisualBrush.DoLayout(System.Windows.UIElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.LayoutCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VisualBrush.ReleaseResource(System.Windows.Media.Visual,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.Render(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.RenderForVisualBrush(System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.VisualBrushRegisterToken.Render(System.Boolean,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.VisualBrushRegisterToken.System#Windows#Media#ICompositionTarget#AddRefOnChannel(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="outOfBandChannel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.VisualBrushRegisterToken.System#Windows#Media#ICompositionTarget#ReleaseOnChannel(System.Windows.Media.Composition.DUCE.Channel,System.Windows.Media.Composition.DUCE.Channel)">
    <parameter name="outOfBandChannel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="channel">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualBrush.VisualPropertyChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualCollection.#ctor(System.Windows.Media.Visual)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualCollection.ConnectChild(System.Int32,System.Windows.Media.Visual)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualCollection.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualCollection.CopyTo(System.Windows.Media.Visual[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualCollection.Enumerator.#ctor(System.Windows.Media.VisualCollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Media.VisualCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Media.VisualCollection.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VisualCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VisualTarget.#ctor(System.Windows.Media.HostVisual)">
    <parameter name="hostVisual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.CheckVisualReferenceArgument()">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.FindCommonAncestor(,)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="otherVisual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetChild(,System.Int32)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount()">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetContainingVisual2D()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetContainingVisual3D()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetParent()">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,,System.Boolean)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hitTestParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.VisualTreeHelper.IsAncestorOf(,)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="descendant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.ConvertPackUriToAbsoluteExternallyVisibleUri(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="packUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.FixFileUri(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.GetAssemblyAndPartNameFromPackAppUri(System.Uri,System.Reflection.Assembly@,System.String@)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.GetBaseUri()">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.GetBaseUriCore()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.GetLoadedAssembly(System.String,System.String,System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.GetResolvedUri(System.Uri,System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="orgUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.IsComponentEntryAssembly(System.String)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.IsPackApplicationUri(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Navigation.BaseUriHelper.MakeRelativeToSiteOfOriginIfPossible(System.Uri)">
    <parameter name="sUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.OleDragSource.OnDefaultGiveFeedback(System.Windows.GiveFeedbackEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.OleDragSource.OnDefaultQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.OleDragSource.RaiseGiveFeedbackEvent(System.Windows.GiveFeedbackEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.OleDragSource.RaiseQueryContinueDragEvent(System.Windows.QueryContinueDragEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.OleDropTarget.GetClientPointFromScreenPoint(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.OleDropTarget.GetCurrentTarget(System.Int64,@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.OleDropTarget.GetDataObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.OleDropTarget.OnDefaultDragEnter(System.Windows.DragEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.OleDropTarget.OnDefaultDragOver(System.Windows.DragEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.OleDropTarget.RaiseDragEvent(System.Windows.RoutedEvent,System.Int32,System.Int32@,,)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.OleServicesContext.CurrentOleServicesContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.PresentationSource.CompositionTarget">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PresentationSource.CriticalFromVisual()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PresentationSource.CriticalFromVisual(,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PresentationSource.CriticalGetPresentationSourceFromElement(,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PresentationSource.FindSource()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PresentationSource.FindSource(,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PresentationSource.FireContentRendered(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PresentationSource.FromDependencyObject()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="dependencyObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
    <parameter name="visual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PresentationSource.GetCompositionTargetCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PresentationSource.GetInputProvider(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PresentationSource.OnAncestorChanged(System.Windows.ContentElement)">
    <parameter name="ce">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PresentationSource.OnVisualAncestorChanged(,System.Windows.Media.AncestorChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uie">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PresentationSource.UpdateSourceOfElement(,,)">
    <parameter name="doTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.QueryContinueDragEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ReverseInheritProperty.FirePropertyChangeInAncestry(,System.Boolean,MS.Internal.DeferredElementTreeState)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ReverseInheritProperty.SetCacheFlagInAncestry(,System.Boolean,MS.Internal.DeferredElementTreeState)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.RoutedEvent.AddOwner(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.RoutedEvent.IsLegalHandler(System.Delegate)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.RoutedEventArgs.InvokeHandler(System.Delegate,System.Object)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.RoutedEventHandlerInfo.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.RoutedEventHandlerInfo.InvokeHandler(System.Object,System.Windows.RoutedEventArgs)">
    <parameter name="routedEventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.RouteItem.InvokeHandler(System.Windows.RoutedEventArgs)">
    <parameter name="routedEventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.SourceChangedEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
    <parameter name="genericTarget">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.StrokeCollectionConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecoration.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.TextDecorationCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.Add(System.Collections.Generic.IEnumerable{System.Windows.TextDecoration})">
    <parameter name="textDecorations">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.Add(System.Windows.TextDecoration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.AddHelper(System.Windows.TextDecoration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.AddWithoutFiringPublicEvents(System.Windows.TextDecoration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.Cast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.CloneCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.CloneCurrentValueCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.Contains(System.Windows.TextDecoration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.CopyTo(System.Windows.TextDecoration[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.CreateInstanceCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.TextDecorationCollection.Enumerator.#ctor(System.Windows.TextDecorationCollection)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.TextDecorationCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.TextDecorationCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.TextDecorationCollection.GetAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.GetCurrentValueAsFrozenCore()">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.IndexOf(System.Windows.TextDecoration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.Insert(System.Int32,System.Windows.TextDecoration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.Remove(System.Windows.TextDecoration)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.System#Collections#Generic#IEnumerable{System#Windows#TextDecoration}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.TextDecorationCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.TextDecorationCollection.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.TextDecorationCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.TextDecorationCollection.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollection.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollectionConverter.AdvanceToNextNameStart(System.String,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollectionConverter.AdvanceToNextNonWhiteSpace(System.String,System.Int32)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.TextDecorationCollectionConverter.ConvertFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.TextDecorationCollectionConverter.Match(System.String,System.String,System.Int32)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.AddHandler(,System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.addLayoutUpdatedHandler(System.EventHandler,System.Windows.LayoutEventList.ListItem)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
    <parameter name="route">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.AdjustEventSource(System.Windows.RoutedEventArgs)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.ApplyAnimationClock(,System.Windows.Media.Animation.AnimationClock)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.ApplyAnimationClock(,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.BeginAnimation(,System.Windows.Media.Animation.AnimationTimeline)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.BeginAnimation(,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.BitmapScalingMode_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.BuildRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="route">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.BuildRouteHelper(,System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
    <parameter name="route">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.Clip_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.ClipToBounds_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.CoerceIsEnabled(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.CoerceIsHitTestVisible(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.UIElement.CommandBindings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.CrackMouseButtonEvent(System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.CrackMouseButtonEventAndReRaiseEvent(,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.EdgeMode_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.EventHandlersStoreAdd(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.EventHandlersStoreRemove(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.GetAnimationBaseValue()">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.GetHitTestBounds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.GetIsVisible(,@)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.GetLayoutClip()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.getLayoutUpdatedHandler(System.EventHandler)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.GetUIParent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.GetUIParent(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.GetUIParentCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.GetUIParentWithinLayoutIsland">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.UIElement.InputBindings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.InputHitTestFilterCallback()">
    <parameter name="currentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.InvalidateForceInheritPropertyOnChildren(System.Windows.Media.Visual,)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.IsFocused_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.IsKeyboardFocused_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.IsMouseCaptured_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.IsMouseDirectlyOver_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.IsStylusCaptured_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.IsStylusDirectlyOver_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.MeasureCore()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.OnBitmapEffectChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnBitmapEffectInputChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnCanExecuteThunk(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnCommandDeviceThunk(System.Object,System.Windows.Input.CommandDeviceEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnCreateAutomationPeer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.OnDragEnterThunk(System.Object,System.Windows.DragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnDragLeaveThunk(System.Object,System.Windows.DragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnDragOverThunk(System.Object,System.Windows.DragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnDropThunk(System.Object,System.Windows.DragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnEffectChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnExecutedThunk(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnFocusableChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnGiveFeedbackThunk(System.Object,System.Windows.GiveFeedbackEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnGotKeyboardFocusThunk(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnGotMouseCaptureThunk(System.Object,System.Windows.Input.MouseEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnGotStylusCaptureThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnIsEnabledChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnIsHitTestVisibleChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnIsVisibleChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnKeyDownThunk(System.Object,System.Windows.Input.KeyEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnKeyUpThunk(System.Object,System.Windows.Input.KeyEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnLostKeyboardFocusThunk(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnLostMouseCaptureThunk(System.Object,System.Windows.Input.MouseEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnLostStylusCaptureThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseDownThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseEnterThunk(System.Object,System.Windows.Input.MouseEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseLeaveThunk(System.Object,System.Windows.Input.MouseEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseLeftButtonDownThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseLeftButtonUpThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseMoveThunk(System.Object,System.Windows.Input.MouseEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseRightButtonDownThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseRightButtonUpThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseUpThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnMouseWheelThunk(System.Object,System.Windows.Input.MouseWheelEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewCanExecuteThunk(System.Object,System.Windows.Input.CanExecuteRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewDragEnterThunk(System.Object,System.Windows.DragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewDragLeaveThunk(System.Object,System.Windows.DragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewDragOverThunk(System.Object,System.Windows.DragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewDropThunk(System.Object,System.Windows.DragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewExecutedThunk(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewGiveFeedbackThunk(System.Object,System.Windows.GiveFeedbackEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewGotKeyboardFocusThunk(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewKeyDownThunk(System.Object,System.Windows.Input.KeyEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewKeyUpThunk(System.Object,System.Windows.Input.KeyEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewLostKeyboardFocusThunk(System.Object,System.Windows.Input.KeyboardFocusChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewMouseDownThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDownThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUpThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewMouseMoveThunk(System.Object,System.Windows.Input.MouseEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewMouseRightButtonDownThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewMouseRightButtonUpThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewMouseUpThunk(System.Object,System.Windows.Input.MouseButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewMouseWheelThunk(System.Object,System.Windows.Input.MouseWheelEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewQueryContinueDragThunk(System.Object,System.Windows.QueryContinueDragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusButtonDownThunk(System.Object,System.Windows.Input.StylusButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusButtonUpThunk(System.Object,System.Windows.Input.StylusButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusDownThunk(System.Object,System.Windows.Input.StylusDownEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusInAirMoveThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusInRangeThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusMoveThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusOutOfRangeThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusSystemGestureThunk(System.Object,System.Windows.Input.StylusSystemGestureEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewStylusUpThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnPreviewTextInputThunk(System.Object,System.Windows.Input.TextCompositionEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnQueryContinueDragThunk(System.Object,System.Windows.QueryContinueDragEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnQueryCursorThunk(System.Object,System.Windows.Input.QueryCursorEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusButtonDownThunk(System.Object,System.Windows.Input.StylusButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusButtonUpThunk(System.Object,System.Windows.Input.StylusButtonEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusDownThunk(System.Object,System.Windows.Input.StylusDownEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusEnterThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusInAirMoveThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusInRangeThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusLeaveThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusMoveThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusOutOfRangeThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusSystemGestureThunk(System.Object,System.Windows.Input.StylusSystemGestureEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnStylusUpThunk(System.Object,System.Windows.Input.StylusEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnTextInputThunk(System.Object,System.Windows.Input.TextCompositionEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnVisibilityChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnVisualAncestorChanged(System.Object,System.Windows.Media.AncestorChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OnVisualAncestorChanged_ForceInherit(System.Object,System.Windows.Media.AncestorChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.Opacity_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.OpacityMask_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.PredictFocus()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.PropagateResumeLayout(System.Windows.Media.Visual,System.Windows.Media.Visual)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.PropagateSuspendLayout(System.Windows.Media.Visual)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RaiseDependencyPropertyChanged(System.Windows.EventPrivateKey,)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs,System.Boolean)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RaiseEventImpl(,System.Windows.RoutedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RegisterEvents(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RemoveHandler(,System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.removeLayoutUpdatedHandler(System.EventHandler)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RenderOpen">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.RenderTransform_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.RenderTransformOrigin_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.ReRaiseEventAs(,System.Windows.RoutedEventArgs,System.Windows.RoutedEvent)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.SnapsToDevicePixels_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.UIElement.StylusPlugIns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement.ValidateVisibility(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement.WalkContent(System.Windows.Media.DrawingContextWalker)">
    <parameter name="walker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)">
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
    <parameter name="route">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.AdjustEventSource(System.Windows.RoutedEventArgs)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement3D.BuildRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)">
    <parameter name="route">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.CallRenderCallback(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement3D.CoerceIsEnabled(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.CoerceIsHitTestVisible(,System.Object)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.UIElement3D.CommandBindings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement3D.EventHandlersStoreAdd(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.EventHandlersStoreRemove(System.Windows.EventPrivateKey,System.Delegate)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.GetIsVisible(,@)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.GetUIParent(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement3D.GetUIParentCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.UIElement3D.InputBindings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement3D.InvalidateForceInheritPropertyOnChildren(System.Windows.Media.Media3D.Visual3D,)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.IsFocused_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.IsKeyboardFocused_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.IsMouseCaptured_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.IsMouseDirectlyOver_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.IsStylusCaptured_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.IsStylusDirectlyOver_Changed(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnCreateAutomationPeer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement3D.OnFocusableChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnIsEnabledChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnIsHitTestVisibleChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnIsVisibleChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnVisibilityChanged(,)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnVisualAncestorChanged(System.Object,System.Windows.Media.AncestorChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.OnVisualAncestorChanged_ForceInherit(System.Object,System.Windows.Media.AncestorChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.PredictFocus()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.UIElement3D.RaiseDependencyPropertyChanged(System.Windows.EventPrivateKey,)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs,System.Boolean)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="routedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIElement3D.ValidateVisibility(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UIPropertyMetadata.CreateInstance">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.ValidateEnums.IsTextDecorationLocationValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ValidateEnums.IsTextDecorationUnitValid(System.Object)">
    <parameter name="valueObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
</assembly>