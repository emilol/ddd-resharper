<?xml version="1.0" encoding="utf-8"?>
<assembly name="System.Data.Entity, Version=4.0.0.0">
  <member name="M:EntityBid.DTRACE(System.String,System.Object[])">
    <parameter name="clrFormatString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:EntityBid.getAppDomainFriendlyName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:EntityBid.getIdentity(System.Reflection.Module)">
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:EntityBid.getModulePath(System.Reflection.Module)">
    <parameter name="mod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:EntityBid.PlanCompilerPutStr(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:EntityBid.PutStrChunked(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:EntityBid.RawPutStrChuncked(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:EntityBid.TraceBin(System.String,System.Byte[],System.UInt16)">
    <parameter name="buff">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:EntityBid.TraceBinEx(System.Byte[],System.UInt16)">
    <parameter name="buff">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicCommandTreeVisitor.VisitCommandTree(System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicCommandTreeVisitor.VisitDeleteCommandTree(System.Data.Common.CommandTrees.DbDeleteCommandTree)">
    <parameter name="deleteTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicCommandTreeVisitor.VisitInsertCommandTree(System.Data.Common.CommandTrees.DbInsertCommandTree)">
    <parameter name="insertTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicCommandTreeVisitor.VisitModificationClause(System.Data.Common.CommandTrees.DbModificationClause)">
    <parameter name="modificationClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicCommandTreeVisitor.VisitModificationClauses(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbModificationClause})">
    <parameter name="modificationClauses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicCommandTreeVisitor.VisitQueryCommandTree(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <parameter name="queryTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicCommandTreeVisitor.VisitSetClause(System.Data.Common.CommandTrees.DbSetClause)">
    <parameter name="setClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicCommandTreeVisitor.VisitUpdateCommandTree(System.Data.Common.CommandTrees.DbUpdateCommandTree)">
    <parameter name="updateTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitAggregateList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate})">
    <parameter name="aggregates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitBinaryExpression(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionBindingPre(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="expressionList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingPre(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitRelatedEntityReference(System.Data.Common.CommandTrees.DbRelatedEntityRef)">
    <parameter name="relatedEntityRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitRelatedEntityReferenceList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbRelatedEntityRef})">
    <parameter name="relatedEntityReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbAndExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbApplyExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="resultRowCollectionTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbArithmeticExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.Internal.DbExpressionList)">
    <parameter name="numericResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbBinaryExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCaseExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.Internal.DbExpressionList,System.Data.Common.CommandTrees.Internal.DbExpressionList,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="commonResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCastExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.Dump(System.Data.Common.CommandTrees.Internal.ExpressionDumper)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.DumpStructure(System.Data.Common.CommandTrees.Internal.ExpressionDumper)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.DumpXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.IsValidParameterName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.Print">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.PrintTree(System.Data.Common.CommandTrees.Internal.ExpressionPrinter)">
    <parameter name="printer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbComparisonExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbConstantExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <parameter name="collectionOfRowResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbDeleteCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbDerefExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="entityResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbDistinctExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbElementExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbElementExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbEntityRefExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="refResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExceptExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpression.Print">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbFilterExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbFunctionCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}})">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbFunctionExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.Internal.DbExpressionList)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbGroupByExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Data.Common.CommandTrees.Internal.DbExpressionList,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.CommandTrees.DbAggregate})">
    <parameter name="collectionOfRowResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupAggregate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbInsertCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.CommandTrees.DbModificationClause},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbIntersectExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbIsNullExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbIsOfExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbJoinExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="collectionOfRowResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbLambdaExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.Internal.DbExpressionList)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbLikeExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbLimitExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbModificationClause.DumpStructure(System.Data.Common.CommandTrees.Internal.ExpressionDumper)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbModificationClause.Print(System.Data.Common.CommandTrees.DbExpressionVisitor{System.Data.Common.Utils.TreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbModificationCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbModificationCommandTree.GetParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.Internal.DbExpressionList)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.Internal.DbExpressionList,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.CommandTrees.DbRelatedEntityRef})">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNotExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNullExpression.#ctor(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbOfTypeExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="collectionResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbOrExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbProjectExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EdmMember,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbQuantifierExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="booleanResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbQueryCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbQueryCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbQueryCommandTree.FromValidExpression(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbQueryCommandTree.GetParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRefExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="refResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRefKeyExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="rowResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelatedEntityRef.#ctor(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="sourceEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntityRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.RelationshipType,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbScanExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="collectionOfEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbSkipExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbSortExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbTreatExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="asType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbUnaryExpression.#ctor(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbUnionAllExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbUpdateCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Common.CommandTrees.DbModificationClause},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.#ctor(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.EnterScope(System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
    <parameter name="scopeVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.OnEnterScope(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
    <parameter name="scopeVariables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.RebindVariable(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitExpressionBindingEnterScope(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitLambda(System.Data.Common.CommandTrees.DbLambda)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitList``1(System.Collections.Generic.IList{``0},System.Func{``0,``0})">
    <parameter name="map">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitRelatedEntityRef(System.Data.Common.CommandTrees.DbRelatedEntityRef)">
    <parameter name="entityRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitRelationshipEnds(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember@,System.Data.Metadata.Edm.RelationshipEndMember@)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTerminal(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reconstructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitType(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DefaultExpressionVisitor.VisitUnary(System.Data.Common.CommandTrees.DbUnaryExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="elseExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constantType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ConvertToBinding``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0},System.String,``0@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ConvertToBinding``1(System.Data.Common.CommandTrees.DbExpression,System.String,System.Func{System.Data.Common.CommandTrees.DbExpression,``0},System.String,``0@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateApplyExpressionByKind(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateArithmetic(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateComparison(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateElementExpressionUnwrapSingleProperty(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateFunctionAggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateIsNullExpressionAllowingRowTypeArgument(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateJoinExpressionByKind(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="input2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateLambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateNewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateNewEntityWithRelationshipsExpression(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbRelatedEntityRef})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRefExpression(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRefExpression(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRelatedEntityRef(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Boolean,System.String,System.Boolean)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ExtractAlias(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ExtractAliases(System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupAggregate(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
    <parameter name="groupVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InvokeFunction(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InvokeLambda(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="outerKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="innerKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="escape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigateFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="navigateFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instanceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instanceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="collectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewInstance(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instanceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nullType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigationProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.PropertyByName(System.Data.Common.CommandTrees.DbExpression,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.PropertyFromMember(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmMember,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.PropertyIgnoreCase(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="treatType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TryResolveToConstant(System.Type,System.Object,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.InvokeCanonicalFunction(System.String,System.Data.Common.CommandTrees.DbExpression[])">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ResolveCanonicalFunction(System.String,System.Data.Metadata.Edm.TypeUsage[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argumentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.#ctor(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding},System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.#ctor(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckDataSpace(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckDataSpace(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckEntitySet(System.Data.Metadata.Edm.EntitySetBase,System.String)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckMember(System.Data.Metadata.Edm.EdmMember,System.String)">
    <parameter name="memberMeta">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckNamed``1(System.Collections.Generic.KeyValuePair{System.String,``0},System.String,System.Int32)">
    <parameter name="argumentName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckParameter(System.Data.Metadata.Edm.FunctionParameter,System.String)">
    <parameter name="paramMeta">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckReadOnly(System.Data.Metadata.Edm.EntitySetBase,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckReadOnly(System.Data.Metadata.Edm.GlobalItem,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckReadOnly(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckType(System.Data.Metadata.Edm.EdmType,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CheckType(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CreateCollectionOfRowResultType(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}})">
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CreateCollectionResultType(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CreateCollectionResultType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CreateReferenceResultType(System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="referencedEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CreateResultType(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.CreateResultType(System.Data.Metadata.Edm.RelationshipEndMember)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.GetExpectedParameters(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.GetStructuralMemberTypes(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instanceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.IsConstantNegativeInteger(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequireCollectionArgument``1(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequireCollectionArguments``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequireComparableCollectionArguments``1(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequireCompatibleType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.PrimitiveTypeKind,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequireCompatibleType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.PrimitiveTypeKind,System.String,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequireCompatibleType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequireCompatibleType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequireCompatibleType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage,System.String,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.RequirePolymorphicType(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateAnd(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateApply(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateArithmetic(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateArithmetic(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateBinary(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateBindAs(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateCase(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.Internal.DbExpressionList@,System.Data.Common.CommandTrees.Internal.DbExpressionList@)">
    <parameter name="elseExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateCastTo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateComparison(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateConstant(System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <parameter name="constantType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateConstant(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateCreateRef(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateCreateRef(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateDeref(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateDistinct(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateElement(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateExcept(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateFilter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateFunction(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.Internal.DbExpressionList@)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateFunctionAggregate(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateGetEntityRef(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateGetRefKey(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateGroupAggregate(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateGroupBindAs(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateIntersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateInvoke(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.Internal.DbExpressionList@)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateIsEmpty(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateIsNull(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateIsNull(System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateIsOf(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateJoin(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateLike(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateLike(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="escape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateLimit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateNavigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipType@)">
    <parameter name="navigateFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateNavigate(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Metadata.Edm.RelationshipEndMember@,System.Data.Metadata.Edm.RelationshipEndMember@)">
    <parameter name="navigateFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateNew(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.Internal.DbExpressionList@)">
    <parameter name="instanceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateNewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.Internal.DbExpressionList@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateNewEmptyCollection(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.Internal.DbExpressionList@)">
    <parameter name="collectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateNewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Data.Common.CommandTrees.Internal.DbExpressionList@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateNot(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateNull(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="nullType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateOfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateOr(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateParameter(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateProject(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateProperty(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmMember,System.String)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateProperty(System.Data.Common.CommandTrees.DbExpression,System.String,System.Boolean,System.Data.Metadata.Edm.EdmMember@)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateQuantifier(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateRefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateRefFromKey(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateScan(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateSortClause(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateSortClause(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateTreatAs(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="asType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateTypeUnary(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateUnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Internal.ArgumentValidation.ValidateVariable(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.#ctor(System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}[])">
    <parameter name="columnValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.ExpressionBuilder.Row.ToExpression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionList.#ctor(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionRebinder.BindToWorkspace(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionRebinder.TryGetMember``1(System.Data.Common.CommandTrees.DbExpression,System.String,``0@)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionRuleProcessingVisitor.ProcessRules(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.List{System.Data.Common.CommandTrees.Internal.DbExpressionRule})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionRuleProcessingVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionValidator.ValidateExpression(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionValidator.ValidateMetadata``1(``0,System.Func{``0,``0},System.Func{``0,System.Data.Metadata.Edm.DataSpace},System.Data.Metadata.Edm.DataSpace[])">
    <parameter name="map">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getDataSpace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="allowedSpaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionValidator.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionValidator.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionValidator.VisitEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionValidator.VisitFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionValidator.VisitType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.DbExpressionValidator.VisitTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.Data.Common.CommandTrees.DbExpression,System.String,System.Object)">
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.String,System.String,System.Object)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.String,System.String,System.Object,System.String,System.Object)">
    <parameter name="attributeName2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.String,System.String,System.Object,System.String,System.Object,System.String,System.Object)">
    <parameter name="attributeName1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.BeginBinary(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.BeginUnary(System.Data.Common.CommandTrees.DbUnaryExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.String,System.String)">
    <parameter name="singularName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pluralName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.FunctionParameter})">
    <parameter name="paramList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbExpressionBinding,System.String)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.String)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbLambda)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.EdmType,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.NavigationProperty,System.String)">
    <parameter name="navProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.RelationshipEndMember,System.String)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.RelationshipType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.RelationshipType,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.End(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.CreateParametersNode(System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbDeleteCommandTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbFunctionCommandTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbInsertCommandTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbUpdateCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendArguments(System.Data.Common.Utils.TreeNode,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paramNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendFullName(System.Text.StringBuilder,System.Data.Metadata.Edm.EdmType)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendParameters(System.Data.Common.Utils.TreeNode,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paramInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendType(System.Data.Common.Utils.TreeNode,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendTypeSpecifier(System.Data.Common.Utils.TreeNode,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.BuildTypeName(System.Text.StringBuilder,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.CreateNavigationNode(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.CreateRelationshipNode(System.Data.Metadata.Edm.RelationshipType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.InitializeOpMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.NodeFromExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.String,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="exprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitBinary(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitBinding(System.String,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitBindingList(System.String,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitCastOrTreat(System.String,System.Data.Common.CommandTrees.DbUnaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitExpression(System.String,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitGroupBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="groupBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitInfix(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitParams(System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="paramInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitUnary(System.Data.Common.CommandTrees.DbUnaryExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitUnary(System.Data.Common.CommandTrees.DbUnaryExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitWithLabel(System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="def">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ParameterRetriever.GetParameters(System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.PatternMatchRule.Create(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.PatternMatchRule.Create(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.Internal.DbExpressionRule.ProcessedAction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.PatternMatchRuleProcessor.Create(System.Data.Common.CommandTrees.Internal.PatternMatchRule[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.And(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pattern1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.And(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pattern1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.Internal.Patterns.AnyExpression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.CommandTrees.Internal.Patterns.AnyExpressions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.MatchBinary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.MatchCase(System.Func{,System.Boolean},System.Func{,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="whenPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thenPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elsePattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.Internal.Patterns.MatchComplexType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.CommandTrees.Internal.Patterns.MatchEntityType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.MatchFilter(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicatePattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.MatchForAll(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.MatchKind(System.Data.Common.CommandTrees.DbExpressionKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.MatchNewInstance">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.MatchNewInstance(System.Func{,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argumentsPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.MatchProject(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectionPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.Internal.Patterns.MatchRowType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.Or(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pattern1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Patterns.Or(System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pattern1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern3">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.AddFkRelatedEntityRefs(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="viewConstructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.CollapseNestedProjection(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.ProjectionCollapser.CollapseProjection(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.ProjectionCollapser.IsOuterBindingVarRef(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="varRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.RelatedEntityRefFromAssociationSetEnd(System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbNewInstanceExpression,System.Data.Metadata.Edm.AssociationSetEnd,System.Data.Metadata.Edm.ReferentialConstraint)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="constructedEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityConstructor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="principalSetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fkConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.Simplify(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.SimplifyCaseStatement(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.SimplifyNestedTphDiscriminator(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.SimplifyView(System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.TryMatchConstant(System.Data.Common.CommandTrees.DbExpression,System.Object@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.TryMatchDiscriminatorPredicate(System.Data.Common.CommandTrees.DbFilterExpression,System.Action{System.Data.Common.CommandTrees.DbComparisonExpression,System.Object})">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="onMatchedComparison">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.TryMatchPropertyEqualsValue(System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.CommandTrees.DbPropertyExpression@,System.Object@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.TrySimplifyPredicate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.ValueSubstituter.Substitute(System.Data.Common.CommandTrees.DbExpression,System.String,System.Collections.Generic.Dictionary{System.String,System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.XmlExpressionDumper.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.XmlExpressionDumper.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DataRecordInfo.#ctor(System.Data.Common.DataRecordInfo)">
    <parameter name="recordInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DataRecordInfo.#ctor(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DataRecordInfo.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember})">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.CreateCommand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.CreateCommandDefinition(System.Data.Common.DbCommand)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prototype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateBinaryParameter(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Data.DbType,System.Boolean)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateDateTimeParameter(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Data.DbType)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateDecimalParameter(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Data.DbType)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateParameterFromTypeUsage(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateStringParameter(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.SetParameterSize(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.EscapeLikeArgument(System.String)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="storeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateCommand(System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prototype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="providerManifestToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.DatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.DbCreateDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="storeItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="storeItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="providerManifestToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.DbDatabaseExists(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.DbDeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.DeleteDatabase(System.Data.Common.DbConnection,System.Nullable{System.Int32},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetConceptualSchemaDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)">
    <parameter name="manifestToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.String)">
    <parameter name="providerInvariantName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manifestToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbProviderFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetXmlResource(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.SetDbParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.SetParameterValue(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.ValidateDataSpace(System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.Load(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntityRecordInfo.#ctor(System.Data.Common.DataRecordInfo,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntityRecordInfo.#ctor(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntityRecordInfo.ValidateEntityType(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.AliasedExpr.#ctor(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.AST.Identifier)">
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.BuiltInExpr.#ctor(System.Data.Common.EntitySql.AST.BuiltInKind,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.BuiltInExpr.#ctor(System.Data.Common.EntitySql.AST.BuiltInKind,System.String,System.Data.Common.EntitySql.AST.Node)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.BuiltInExpr.#ctor(System.Data.Common.EntitySql.AST.BuiltInKind,System.String,System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.AST.Node)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.BuiltInExpr.#ctor(System.Data.Common.EntitySql.AST.BuiltInKind,System.String,System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.AST.Node)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.BuiltInExpr.#ctor(System.Data.Common.EntitySql.AST.BuiltInKind,System.String,System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.AST.Node)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Identifier.#ctor(System.String,System.Boolean,System.String,System.Int32)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.ConvertBooleanLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.ConvertDateTimeLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="datetimeLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.ConvertDateTimeOffsetLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="datetimeLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.ConvertGuidLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="guidLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.ConvertNumericLiteral(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="numericString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.ConvertTimeLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="datetimeLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.DefaultNumericConversion(System.String,System.Data.Common.EntitySql.ErrorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="numericString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.GetDateParts(System.String,System.String[],System.Int32@,System.Int32@,System.Int32@)">
    <parameter name="datetimeParts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.GetStringLiteralValue(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stringLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.GetTimeParts(System.String,System.String[],System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
    <parameter name="datetimeParts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.Literal.NewBooleanLiteral(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.NamespaceImport.#ctor(System.Data.Common.EntitySql.AST.BuiltInExpr)">
    <parameter name="bltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.NodeList`1.Add(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.NodeList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.NodeList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.AST.QueryParameter.#ctor(System.String,System.String,System.Int32)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.GetReadableTypeKind(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.GetReadableTypeKind(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.GetReadableTypeName(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.GetReadableTypeName(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportAliasAlreadyUsedError(System.String,System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportFunctionOverloadError(System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.List{System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="functionExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportIncompatibleCommonType(System.Data.Common.EntitySql.ErrorContext,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="leftType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportIncompatibleCommonType(System.Data.Common.EntitySql.ErrorContext,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="rootLeftType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootRightType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.#ctor(System.IO.FileStream)">
    <parameter name="instream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.#ctor(System.IO.TextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.#ctor(System.String,System.Data.Common.EntitySql.ParserOptions)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_10">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_11">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_12">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_13">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_14">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_15">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_16">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_17">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_18">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_21">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_22">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_23">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_26">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_27">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_28">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_31">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_32">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_35">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_37">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_4">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_5">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_6">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_7">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_8">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_9">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.GetLiteralSingleQuotePayload(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsCanonicalFunctionCall(System.String,System.Char)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsEscapedIdentifier(System.String,System.Data.Common.EntitySql.CqlLexer.Token@)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsKeyword(System.String,System.Data.Common.EntitySql.CqlLexer.Token@)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsLetterOrDigitOrUnderscore(System.String,System.Boolean@)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsReservedKeyword(System.String)">
    <parameter name="term">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsValidDateTimeOffsetValue(System.String)">
    <parameter name="datetimeOffsetValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsValidDateTimeValue(System.String)">
    <parameter name="datetimeValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsValidGuidValue(System.String)">
    <parameter name="guidValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsValidTimeValue(System.String)">
    <parameter name="timeValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapDoubleQuotedString(System.String)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapIdentifierOrKeyword(System.String)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapOperator(System.String)">
    <parameter name="oper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapPunctuator(System.String)">
    <parameter name="punct">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapUnescapedIdentifier(System.String)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.NewLiteralToken(System.String,System.Data.Common.EntitySql.AST.LiteralKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.NewParameterToken(System.String)">
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.NewToken(System.Int16,System.Data.Common.EntitySql.AST.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.NewToken(System.Int16,System.Data.Common.EntitySql.CqlLexer.TerminalToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.yy_double(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="buf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.yylex">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.yytext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.EntitySql.CqlLexer.YYText">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.AstNodePos(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.debug(System.String)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.Parse(System.String)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.SetErrCtx(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.CqlLexer.TerminalToken,System.String)">
    <parameter name="tokenValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.SetErrCtx(System.Data.Common.EntitySql.AST.Node,System.Int32,System.String)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.TerminalPos(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.yyerror(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlQuery.Parse(System.String,System.Data.Common.EntitySql.ParserOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parserOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.EntitySql.EntityContainerExpression.EntityContainerClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.EntitySql.ExpressionResolution.ExpressionClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.FreeVariableScopeEntry.GetExpression(System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.FunctionAggregateInfo.AttachToAstNode(System.String,System.Data.Common.CommandTrees.DbAggregate)">
    <parameter name="aggregateDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.FunctionOverloadResolver.GetPromotionRank(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.FunctionOverloadResolver.ResolveFunctionOverloads(System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction},System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Boolean,System.Boolean@)">
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionsMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.FunctionOverloadResolver.ResolveFunctionOverloads``2(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Func{``0,System.Collections.Generic.IList{``1}},System.Func{``1,System.Data.Metadata.Edm.TypeUsage},System.Func{``1,System.Data.Metadata.Edm.ParameterMode},System.Boolean,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="functionsMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getSignatureParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getParameterTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getParameterMode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.FunctionOverloadResolver.TryRankFunctionParameters``1(System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.IList{``0},System.Func{``0,System.Data.Metadata.Edm.TypeUsage},System.Func{``0,System.Data.Metadata.Edm.ParameterMode},System.Boolean,System.Int32@,System.Int32[]@)">
    <parameter name="argumentList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="flatArgumentList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="overloadParamList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getParameterTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getParameterMode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.GroupAggregateInfo.AttachToAstNode(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.GroupAggregateInfo.UpdateScopeIndex(System.Int32,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.GroupAggregateInfo.ValidateAndComputeEvaluatingScopeRegion(System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.GroupKeyDefinitionScopeEntry.GetExpression(System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.GroupPartitionInfo.AttachToAstNode(System.String,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="aggregateDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.EntitySql.InlineFunctionGroup.InlineFunctionGroupClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.InlineFunctionInfo.GetLambda(System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.EntitySql.MetadataFunctionGroup.FunctionGroupClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.MetadataMember.CreateMetadataMemberNameEqualityComparer(System.StringComparer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.EntitySql.MetadataMember.MetadataMemberClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.EntitySql.MetadataMember.MetadataMemberExpressionClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.MetadataMember.MetadataMemberNameEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Data#Common#EntitySql#MetadataMember}#Equals(System.Data.Common.EntitySql.MetadataMember,System.Data.Common.EntitySql.MetadataMember)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.MetadataMember.MetadataMemberNameEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Data#Common#EntitySql#MetadataMember}#GetHashCode(System.Data.Common.EntitySql.MetadataMember)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.EntitySql.MetadataNamespace.NamespaceClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.EntitySql.MetadataType.TypeClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.ParserOptions.MakeReadOnly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.ProjectionItemDefinitionScopeEntry.GetExpression(System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.Add(System.String,System.Data.Common.EntitySql.ScopeEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.Contains(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.Remove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.Replace(System.String,System.Data.Common.EntitySql.ScopeEntry)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Data#Common#EntitySql#ScopeEntry}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.TryLookup(System.String,System.Data.Common.EntitySql.ScopeEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeEntry.GetExpression(System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeManager.IsInCurrentScope(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeRegion.ApplyToScopeEntries(System.Action{System.Data.Common.EntitySql.ScopeEntry})">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeRegion.ApplyToScopeEntries(System.Func{System.Data.Common.EntitySql.ScopeEntry,System.Data.Common.EntitySql.ScopeEntry})">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeRegion.ContainsGroupAggregate(System.String)">
    <parameter name="groupAggregateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeRegion.RegisterGroupAggregateName(System.String)">
    <parameter name="groupAggregateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.#ctor(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext,System.Func{System.String})">
    <parameter name="leftExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="formatMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.#ctor(System.Data.Common.EntitySql.AST.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.AnalyzeCommand(System.Data.Common.EntitySql.AST.Node)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.AnalyzeQueryCommand(System.Data.Common.EntitySql.AST.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.Convert(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertAggregateFunctionInGroupScope(System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Common.EntitySql.MetadataFunctionGroup,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataFunctionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertAndRegisterNamespaceImports(System.Data.Common.EntitySql.AST.NodeList{System.Data.Common.EntitySql.AST.NamespaceImport},System.Data.Common.EntitySql.ErrorContext,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdErrCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertBetweenExpr(System.Data.Common.EntitySql.AST.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertBuiltIn(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertCaseExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertCreateRefExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertDeRefExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertDotExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertFunctionArguments(System.Data.Common.EntitySql.AST.NodeList{System.Data.Common.EntitySql.AST.Node},System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertGroupPartitionExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertIdentifier(System.Data.Common.EntitySql.AST.Identifier,System.Boolean,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertIdentifier(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertInlineFunctionDefinition(System.Data.Common.EntitySql.InlineFunctionInfo,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertInlineFunctionDefinitions(System.Data.Common.EntitySql.AST.NodeList{System.Data.Common.EntitySql.AST.FunctionDefinition},System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertInlineFunctionParameterDefs(System.Data.Common.EntitySql.AST.NodeList{System.Data.Common.EntitySql.AST.PropDefinition},System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertKeyExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertLiteral(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertMethodExpr(System.Data.Common.EntitySql.AST.MethodExpr,System.Boolean,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertMethodExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertMethodExpr_TryEnterBackwardCompatibilityResolution(System.Data.Common.EntitySql.AST.DotExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertMethodExpr_TryEnterIgnoreEntityContainerNameResolution(System.Data.Common.EntitySql.AST.DotExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertModelFunctionCall(System.Data.Common.EntitySql.MetadataFunctionGroup,System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="metadataFunctionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertMultisetConstructor(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertParameter(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertParenExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertQuery(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertQueryStatementToDbCommandTree(System.Data.Common.EntitySql.AST.Statement,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="astStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertQueryStatementToDbExpression(System.Data.Common.EntitySql.AST.Statement,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRefExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRelatedEntityRef(System.Data.Common.EntitySql.AST.RelshipNavigationExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relshipExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRelshipNavigationExpr(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRowConstructor(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertSelectClauseItems(System.Data.Common.EntitySql.AST.QueryExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="queryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertSimpleInExpression(System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertStatement(System.Data.Common.EntitySql.AST.Statement,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="astStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertTypeConstructorCall(System.Data.Common.EntitySql.MetadataType,System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="metadataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertTypeDefinition(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDefinitionExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertTypeFacetValue(System.Data.Metadata.Edm.PrimitiveType,System.Data.Common.EntitySql.AST.Literal,System.String,System.Byte@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertTypeName(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertTypeSpecArgs(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.EntitySql.AST.NodeList{System.Data.Common.EntitySql.AST.Node},System.Data.Common.EntitySql.ErrorContext,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="parameterizedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSpecArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertUntypedNullsInArguments``1(System.Collections.Generic.List{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IList{``0},System.Func{``0,System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parametersMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getParameterTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertValueExpression(System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.CreateAstExprConverters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.CreateBuiltInExprConverter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.CreateConstructorCallExpression(System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.List{System.Data.Common.CommandTrees.DbRelatedEntityRef},System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.CreateModelFunctionCallExpression(System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Common.EntitySql.MetadataFunctionGroup,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataFunctionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.CreateProjectExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.AST.SelectClause,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="selectClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectionItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.GetLiteralTypeUsage(System.Data.Common.EntitySql.AST.Literal)">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.GroupKeyInfo.#ctor(System.String,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="varBasedKeyExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.IsSubOrSuperType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.IsTrivialInputProjection(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="lambdaBody">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.IsUntypedNullExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessAliasedFromClauseItem(System.Data.Common.EntitySql.AST.AliasedExpr,System.Data.Common.EntitySql.SemanticResolver,System.Collections.Generic.List{System.Data.Common.EntitySql.SourceScopeEntry}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="aliasedExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessApplyClauseItem(System.Data.Common.EntitySql.AST.ApplyClauseItem,System.Data.Common.EntitySql.SemanticResolver,System.Collections.Generic.List{System.Data.Common.EntitySql.SourceScopeEntry}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="applyClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessFromClause(System.Data.Common.EntitySql.AST.FromClause,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="fromClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessFromClauseItem(System.Data.Common.EntitySql.AST.FromClauseItem,System.Data.Common.EntitySql.SemanticResolver,System.Collections.Generic.List{System.Data.Common.EntitySql.SourceScopeEntry}@)">
    <parameter name="fromClauseItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessGroupByClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.AST.QueryExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessGroupPartitionDefinitions(System.Collections.Generic.List{System.Data.Common.EntitySql.GroupAggregateInfo},System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="groupAggregateInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupAggregateVarRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessHavingClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.AST.HavingClause,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessJoinClauseItem(System.Data.Common.EntitySql.AST.JoinClauseItem,System.Data.Common.EntitySql.SemanticResolver,System.Collections.Generic.List{System.Data.Common.EntitySql.SourceScopeEntry}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="joinClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessOrderByClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.AST.QueryExpr,System.Boolean@,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessSelectClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.AST.QueryExpr,System.Boolean,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessWhereClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessWhereHavingClausePredicate(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.AST.Node,System.Data.Common.EntitySql.ErrorContext,System.String,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.TryConvertAsCollectionFunction(System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Common.EntitySql.MetadataFunctionGroup,System.Data.Common.EntitySql.SemanticResolver,System.Collections.Generic.List{System.Data.Metadata.Edm.TypeUsage}@,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataFunctionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.TryConvertAsFunctionAggregate(System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Common.EntitySql.MetadataFunctionGroup,System.Collections.Generic.List{System.Data.Metadata.Edm.TypeUsage},System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataFunctionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.TryConvertAsResolvedGroupAggregate(System.Data.Common.EntitySql.AST.GroupAggregateExpr,System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="groupAggregateExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.TryConvertInlineFunctionCall(System.Data.Common.EntitySql.InlineFunctionGroup,System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.EntitySql.ValueExpression@)">
    <parameter name="inlineFunctionGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateAndCompensateQuery(System.Data.Common.EntitySql.AST.QueryExpr)">
    <parameter name="queryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateDistinctProjection(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.EntitySql.AST.SelectClause)">
    <parameter name="selectClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectExpressionResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateDistinctProjection(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.EntitySql.ErrorContext,System.Collections.Generic.List{System.Data.Common.EntitySql.ErrorContext})">
    <parameter name="defaultErrCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectExpressionResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateExpressionIsCommandParamOrNonNegativeIntegerConstant(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext,System.String,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateIsNotUntypedNull(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateQueryCommandAst(System.Data.Common.EntitySql.AST.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateQueryResultType(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateRelationshipTraversal(System.Data.Common.EntitySql.AST.RelshipNavigationExpr,System.Boolean,System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipType@,System.Data.Metadata.Edm.RelationshipEndMember@,System.Data.Metadata.Edm.RelationshipEndMember@)">
    <parameter name="relshipExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateTypeForNullExpression(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.CloneForInlineFunctionConversion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.Create(System.Data.Metadata.Edm.Perspective,System.Data.Common.EntitySql.ParserOptions,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbParameterReferenceExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnterFunctionAggregate(System.Data.Common.EntitySql.AST.MethodExpr,System.Data.Common.EntitySql.ErrorContext,System.Data.Common.EntitySql.FunctionAggregateInfo@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnterGroupAggregate(System.Data.Common.EntitySql.GroupAggregateInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="aggregateInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnterGroupKeyDefinition(System.Data.Common.EntitySql.GroupAggregateKind,System.Data.Common.EntitySql.ErrorContext,System.Data.Common.EntitySql.GroupKeyAggregateInfo@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnterGroupPartition(System.Data.Common.EntitySql.AST.GroupPartitionExpr,System.Data.Common.EntitySql.ErrorContext,System.Data.Common.EntitySql.GroupPartitionInfo@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnterIgnoreEntityContainerNameResolution">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnterScopeRegion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.GetExpressionFromScopeEntry(System.Data.Common.EntitySql.ScopeEntry,System.Int32,System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="scopeEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.InferAliasName(System.Data.Common.EntitySql.AST.AliasedExpr,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="aliasedExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ProcessParameters(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbParameterReferenceExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ProcessVariables(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveEntitySetAccess(System.Data.Metadata.Edm.EntityContainer,System.String,System.Data.Common.EntitySql.ErrorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveMetadataMemberAccess(System.Data.Common.EntitySql.MetadataMember,System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="metadataMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveMetadataMemberName(System.String[],System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolvePropertyAccess(System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.EntitySql.ErrorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="valueExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveSimpleName(System.String,System.Boolean,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryResolveAsPropertyAccess(System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.EntitySql.ErrorContext,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="valueExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryResolveAsRefPropertyAccess(System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.EntitySql.ErrorContext,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="valueExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryResolveDotExprAsGroupKeyAlternativeName(System.Data.Common.EntitySql.AST.DotExpr,System.Data.Common.EntitySql.ValueExpression@)">
    <parameter name="dotExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryResolveInternalAggregateName(System.String,System.Data.Common.EntitySql.ErrorContext,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryScopeLookup(System.String,System.Data.Common.EntitySql.ScopeEntry@,System.Int32@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SourceScopeEntry.AddParentVar(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentVarRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SourceScopeEntry.AdjustToGroupVar(System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="parentVarRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentGroupVarRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupAggRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SourceScopeEntry.GetExpression(System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SourceScopeEntry.ReplaceParentVar(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="parentVarRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SourceScopeEntry.RollbackAdjustmentToGroupVar(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="pregroupParentVarRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.AddAliasedNamespaceImport(System.String,System.Data.Common.EntitySql.MetadataNamespace,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.AddNamespaceImport(System.Data.Common.EntitySql.MetadataNamespace,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="namespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.AmbiguousMetadataMemberName(System.Data.Common.EntitySql.ErrorContext,System.String,System.Data.Common.EntitySql.MetadataNamespace,System.Data.Common.EntitySql.MetadataNamespace)">
    <parameter name="ns1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.DeclareInlineFunction(System.String,System.Data.Common.EntitySql.InlineFunctionInfo)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.EnterBackwardCompatibilityResolution">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.EnterFunctionNameResolution(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.GetFullName(System.String[])">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ResolveFullyQualifiedName(System.String[],System.Int32,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ResolveMetadataMemberAccess(System.Data.Common.EntitySql.MetadataMember,System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="qualifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ResolveMetadataMemberName(System.String[],System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ResolveUnqualifiedName(System.String,System.Boolean,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetFunctionFromMetadata(System.String,System.Data.Common.EntitySql.MetadataFunctionGroup@)">
    <parameter name="functionFullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetInlineFunction(System.String,System.Data.Common.EntitySql.InlineFunctionGroup@)">
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetTypeFromMetadata(System.String,System.Data.Common.EntitySql.MetadataType@)">
    <parameter name="typeFullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TypeUsageStructuralComparer.Equals(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TypeUsageStructuralComparer.GetHashCode(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.UntypedNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.UntypedNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.EntitySql.ValueExpression.ValueClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.FieldMetadata.#ctor(System.Int32,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="fieldType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.DbTypeMap.CreateType(System.Data.Metadata.Edm.PrimitiveTypeKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.DbTypeMap.CreateType(System.Data.Metadata.Edm.PrimitiveTypeKind,System.Data.Metadata.Edm.FacetValues)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.Append(System.String,System.Data.Query.InternalTrees.EntityIdentity)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.Append(System.String,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.GetColumnMapKey(System.Data.Query.InternalTrees.ColumnMap,System.Data.Objects.Internal.SpanIndex)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.Visit(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,System.Int32)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,System.Int32)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CompensatingCollection`1.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CompensatingCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CompensatingCollection`1.System#Linq#IOrderedEnumerable{TElement}#CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.CompensatingCollection`1.System#Linq#IQueryable#ElementType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Coordinator.Initialize(System.Data.Common.Internal.Materialization.Shaper)">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Coordinator`1.#ctor(System.Data.Common.Internal.Materialization.CoordinatorFactory{`0},System.Data.Common.Internal.Materialization.Coordinator,System.Data.Common.Internal.Materialization.Coordinator)">
    <parameter name="coordinator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory.#ctor(System.Int32,System.Int32,System.Func{System.Data.Common.Internal.Materialization.Shaper,System.Boolean},System.Func{System.Data.Common.Internal.Materialization.Shaper,System.Boolean},System.Func{System.Data.Common.Internal.Materialization.Shaper,System.Boolean},System.Data.Common.Internal.Materialization.CoordinatorFactory[],System.Data.Common.Internal.Materialization.RecordStateFactory[])">
    <parameter name="nestedCoordinators">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="recordStateFactories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator,System.Data.Common.Internal.Materialization.Coordinator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory`1.#ctor(System.Int32,System.Int32,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Data.Common.Internal.Materialization.CoordinatorFactory[],System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Data.Common.Internal.Materialization.RecordStateFactory[])">
    <parameter name="recordStateFactories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nestedCoordinators">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory`1.CompilePredicate(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory`1.DescribeExpression(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory`1.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper{System.Data.Common.Internal.Materialization.RecordState})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorScratchpad.AddExpressionWithErrorHandling(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorScratchpad.AddInlineDelegate(System.Linq.Expressions.LambdaExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorScratchpad.AddNestedCoordinator(System.Data.Common.Internal.Materialization.CoordinatorScratchpad)">
    <parameter name="nested">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorScratchpad.CreateRecordStateScratchpad">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordState.#ctor(System.Data.Common.Internal.Materialization.RecordStateFactory,System.Data.Common.Internal.Materialization.CoordinatorFactory)">
    <parameter name="recordStateFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordState.GatherData(System.Data.Common.Internal.Materialization.Shaper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordState.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordState.SetNullRecord(System.Data.Common.Internal.Materialization.Shaper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.RecordStateEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.RecordStateEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordStateFactory.#ctor(System.Int32,System.Int32,System.Data.Common.Internal.Materialization.RecordStateFactory[],System.Data.Common.DataRecordInfo,System.Linq.Expressions.Expression,System.String[],System.Data.Metadata.Edm.TypeUsage[])">
    <parameter name="gatherData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeUsages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordStateFactory.Create(System.Data.Common.Internal.Materialization.CoordinatorFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RowNestedResultEnumerator.#ctor(System.Data.Common.Internal.Materialization.Shaper{})">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.RowNestedResultEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.RowNestedResultEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.CheckClearedEntryOnSpan(System.Data.EntityKey,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="sourceKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.CheckClearedEntryOnSpan(System.Object,System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="wrappedSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.ColumnErrorHandlingValueReader`1.CreateWrongTypeException(System.Type)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.CreateNullValueException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.CreateWrongTypeException(System.Type)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.GetValue(System.Data.Common.DbDataReader,System.Int32)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.FullSpanAction``1(System.Data.Objects.Internal.IEntityWrapper,System.Collections.Generic.IList{``0},System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="wrappedSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleEntity``1(System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleEntityAppendOnly``1(System.Func{System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper},System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="constructEntityDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleEntityNoTracking``1(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleFullSpanCollection``2(System.Data.Objects.Internal.IEntityWrapper,System.Data.Common.Internal.Materialization.Coordinator{``1},System.Data.Metadata.Edm.AssociationEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="coordinator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleFullSpanElement``2(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.AssociationEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrappedSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedSpannedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleIEntityWithKey``1(System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleRelationshipSpan``1(System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.RegisterMaterializedEntityForEvent(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.SetIsLoadedForSpan(System.Data.Objects.DataClasses.RelatedEnd,System.Boolean)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.TryGetRelatedEnd(System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.AssociationType,System.String,System.String,System.Data.Objects.DataClasses.RelatedEnd@)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.UpdateEntry``1(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.EntityEntry)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="existingEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper`1.#ctor(System.Data.Common.DbDataReader,System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.MergeOption,System.Int32,System.Data.Common.Internal.Materialization.CoordinatorFactory{`0},System.Action,System.Boolean)">
    <parameter name="rootCoordinatorFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper`1.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory)">
    <parameter name="coordinatorFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.Shaper`1.ObjectQueryNestedEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.Shaper`1.ObjectQueryNestedEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.Shaper`1.RootEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ShaperFactory.Create(System.Type,System.Data.Common.QueryCache.QueryCacheManager,System.Data.Query.InternalTrees.ColumnMap,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.Internal.SpanIndex,System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cacheManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ShaperFactory.ShaperFactoryCreator.TypedCreate(System.Data.Common.QueryCache.QueryCacheManager,System.Data.Query.InternalTrees.ColumnMap,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.Internal.SpanIndex,System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cacheManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ShaperFactory`1.Create(System.Data.Common.DbDataReader,System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.MergeOption,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.SimpleEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.SimpleEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.AcceptWithMappedType(System.Data.Common.Internal.Materialization.Translator,System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.InternalTrees.ColumnMap)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.BuildExpressionToGetCoordinator(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[],System.Linq.Expressions.Expression,System.Object,System.Data.Common.Internal.Materialization.CoordinatorScratchpad)">
    <parameter name="keyReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="coordinatorScratchpad">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.BuildExpressionToGetRecordState(System.Data.Query.InternalTrees.StructuredColumnMap,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.CheckedConvert``2(``0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Compile``1(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.CreateEntityWrapper(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type,System.Type,System.Data.Objects.MergeOption,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.CreateInlineDelegate(System.Linq.Expressions.Expression)">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.CreatePropertyBindings(System.Data.Query.InternalTrees.StructuredColumnMap,System.Type,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.DetermineClrType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.DetermineClrType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.DetermineElementType(System.Type,System.Data.Query.InternalTrees.CollectionColumnMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_AndAlso(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <parameter name="operands">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_BitwiseOr(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <parameter name="operands">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_ConstructEntity(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Linq.Expressions.MemberBinding},System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Data.Common.Internal.Materialization.TranslatorArg,System.Data.Objects.Internal.EntityProxyTypeInfo)">
    <parameter name="oSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_EnsureType(System.Linq.Expressions.Expression,System.Type)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_EnsureTypeAndWrap(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Type,System.Type,System.Type,System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="requestedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="actualType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_EntityKey_ctor(System.Data.Common.Internal.Materialization.Translator,System.Data.Query.InternalTrees.EntityIdentity,System.Boolean,System.Linq.Expressions.Expression@)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_EntityKey_HasValue(System.Data.Query.InternalTrees.SimpleColumnMap[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_NullConstant(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Reader_GetValue(System.Int32,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Reader_GetXXX(System.Int32,System.Type,System.Reflection.MethodInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dataReaderMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Reader_IsDBNull(System.Data.Query.InternalTrees.ColumnMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Reader_IsDBNull(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_GetColumnValueWithErrorHandling(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_GetPropertyValueWithErrorHandling(System.Type,System.Int32,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_GetState(System.Int32,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_SetState(System.Int32,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_SetStatePassthrough(System.Int32,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_UnwrapAndEnsureType(System.Linq.Expressions.Expression,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_WrappedNullConstant(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.EnterCoordinatorTranslateScope(System.Data.Common.Internal.Materialization.CoordinatorScratchpad)">
    <parameter name="coordinatorScratchpad">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.GetCheckPermissionsDelegate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.GetConstructor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.GetProperty(System.Reflection.MethodInfo,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="setterMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.GetReaderMethod(System.Type,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.HandleLinqRecord(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Objects.ELinq.InitializerMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="initializerMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.HandleRegularRecord(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg,System.Data.Metadata.Edm.RowType)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="spanRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.HandleSpandexRecord(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg,System.Data.Metadata.Edm.RowType)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="spanRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.LookupObjectMapping(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.MultipleDiscriminatorPolymorphicColumnMapHelper``1(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.ProcessCollectionColumnMap(System.Data.Query.InternalTrees.CollectionColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.ProcessCollectionColumnMap(System.Data.Query.InternalTrees.CollectionColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg,System.Data.Query.InternalTrees.ColumnMap,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.RegisterUserExpression(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.ResolveSpanType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.TranslateColumnMap``1(System.Data.Common.QueryCache.QueryCacheManager,System.Data.Query.InternalTrees.ColumnMap,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.Internal.SpanIndex,System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="queryCacheManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.TypedCreateInlineDelegate``1(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.VerifyUserExpressions(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{System.Object}}})">
    <parameter name="userExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.ComplexTypeColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.DiscriminatedCollectionColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.EntityColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.RefColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.SimpleCollectionColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.SimplePolymorphicColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.TranslatorResult.Expression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Util.GetObjectMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.CompiledQueryCacheEntry.SetExecutionPlan(System.Data.Objects.Internal.ObjectQueryExecutionPlan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="newPlan">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.EntityClientCacheKey.#ctor(System.Data.EntityClient.EntityCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.EntityClientCacheKey.GetParametersToken(System.Data.EntityClient.EntityCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.EntityClientCacheKey.GetTypeUsageToken(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.EntitySqlQueryCacheKey.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.Data.Objects.MergeOption,System.Type)">
    <parameter name="eSqlStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.CacheRecyclerHandler(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.Create">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryCacheLookup(System.Data.Common.QueryCache.CompiledQueryCacheKey,System.Data.Common.QueryCache.CompiledQueryCacheEntry@)">
    <parameter name="objectQueryCacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryCacheLookup(System.Data.Common.QueryCache.EntityClientCacheKey,System.Data.EntityClient.EntityCommandDefinition@)">
    <parameter name="entityClientCacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryCacheLookup(System.Data.Common.QueryCache.EntitySqlQueryCacheKey,System.Data.Objects.Internal.ObjectQueryExecutionPlan@)">
    <parameter name="objectQueryCacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryCacheLookup``1(System.Data.Common.QueryCache.ShaperFactoryQueryCacheKey{``0},System.Data.Common.Internal.Materialization.ShaperFactory{``0}@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryInternalCacheLookup(System.Data.Common.QueryCache.QueryCacheKey,System.Data.Common.QueryCache.QueryCacheEntry@)">
    <parameter name="queryCacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryLookupAndAdd(System.Data.Common.QueryCache.QueryCacheEntry,System.Data.Common.QueryCache.QueryCacheEntry@)">
    <parameter name="inQueryCacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.ShaperFactoryQueryCacheKey`1.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.AssertEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.ConvertClrTypeToDbType(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateCollectionType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateCollectionTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateCollectionTypeUsage(System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateKeyRowType(System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateReferenceType(System.Data.Metadata.Edm.EntityTypeBase)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateReferenceTypeUsage(System.Data.Metadata.Edm.EntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateRowType(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateRowTypeUsage(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetAllStructuralMembers(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetAllStructuralMembers(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetCommonTypeUsage(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.TypeUsage})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetCommonTypeUsage(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeUsage2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetDeclaredStructuralMembers(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetDeclaredStructuralMembers(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetEdmType``1(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetElementTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetFullName(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetFullName(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetFullName(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetFullName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetLiteralTypeUsage(System.Data.Metadata.Edm.PrimitiveTypeKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetLiteralTypeUsage(System.Data.Metadata.Edm.PrimitiveTypeKind,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetProperties(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetProperties(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetReadOnlyType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsCanonicalFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsFacetValueConstant(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsIntegerConstant(System.Data.Metadata.Edm.TypeUsage,System.Object,System.Int64)">
    <parameter name="valueType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsSetComparableOpType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidDistinctOpType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidGroupKeyType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidInOpType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidIsNullOpType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidSortOpKeyType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetBooleanFacetValue(System.Data.Metadata.Edm.TypeUsage,System.String,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetByteFacetValue(System.Data.Metadata.Edm.TypeUsage,System.String,System.Byte@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetClosestPromotableType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetCollectionElementType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetEdmType``1(System.Data.Metadata.Edm.TypeUsage,``0@)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetIntFacetValue(System.Data.Metadata.Edm.TypeUsage,System.String,System.Int32@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetIsFixedLength(System.Data.Metadata.Edm.TypeUsage,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetIsUnicode(System.Data.Metadata.Edm.TypeUsage,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetMaxLength(System.Data.Metadata.Edm.TypeUsage,System.Int32@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetPrecision(System.Data.Metadata.Edm.TypeUsage,System.Byte@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetRefEntityType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EntityType@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetScale(System.Data.Metadata.Edm.TypeUsage,System.Byte@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BasicVisitor`1.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BasicVisitor`1.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BasicVisitor`1.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BooleanExpressionTermRewriter`2.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BooleanExpressionTermRewriter`2.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BooleanExpressionTermRewriter`2.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BooleanExpressionTermRewriter`2.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.Accept``1(System.Data.Common.Utils.Boolean.Visitor{`0,``0})">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.ChooseCandidate(System.Data.Common.Utils.Boolean.BoolExpr{`0}[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="candidates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.Equals(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.EquivalentTypeEquals(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.MakeNegated">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Clause`1.ConvertLiteralToExpression(System.Data.Common.Utils.Boolean.Literal{`0})">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.CnfClause`1.Equals(System.Data.Common.Utils.Boolean.CnfClause{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.ConversionContext`1.GetSuccessors(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.ConversionContext`1.TranslateTermToVertex(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="term">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Converter`1.#ctor(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.ConversionContext{`0})">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DnfClause`1.Equals(System.Data.Common.Utils.Boolean.DnfClause{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainConstraint`2.#ctor(System.Data.Common.Utils.Boolean.DomainVariable{`0,`1},System.Data.Common.Utils.Set{`1})">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainConstraint`2.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainConstraint`2.InvertDomainConstraint">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainConstraintConversionContext`2.GetSuccessors(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainVariable`2.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.FalseExpr`1.EquivalentTypeEquals(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.GenericConversionContext`1.GetSuccessors(System.Data.Common.Utils.Boolean.Vertex)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.IdentifierService`1.CreateConversionContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.IdentifierService`1.LocalSimplify(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.IdentifierService`1.NegateLiteral(System.Data.Common.Utils.Boolean.Literal{`0})">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.AddEquivalence(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.AddFact(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="fact">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.AddImplication(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.AddKnowledgeBase(System.Data.Common.Utils.Boolean.KnowledgeBase{`0})">
    <parameter name="kb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.Equivalence.#ctor(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.Implication.#ctor(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.LeafVisitor`1.GetLeaves(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.LeafVisitor`1.GetTerms(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.LeafVisitor`1.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.LeafVisitor`1.VisitTree(System.Data.Common.Utils.Boolean.TreeExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Literal`1.Equals(System.Data.Common.Utils.Boolean.Literal{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Literal`1.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Literal`1.MakeNegated">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NegationPusher.EliminateNot``2(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{``0,``1}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NegationPusher.NegatedTreeVisitor`1.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NegationPusher.NegatedTreeVisitor`1.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NegationPusher.NegatedTreeVisitor`1.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NormalFormNode`1.#ctor(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NormalFormNode`1.ExprSelector``1(``0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Simplifier`1.SimplifyTree(System.Data.Common.Utils.Boolean.TreeExpr{`0})">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.And(System.Collections.Generic.IEnumerable{System.Data.Common.Utils.Boolean.Vertex})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.And(System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.AssertVertexValid(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.AssertVerticesValid(System.Collections.Generic.IEnumerable{System.Data.Common.Utils.Boolean.Vertex})">
    <parameter name="vertices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.DetermineTopVariable(System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex,System.Int32@)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="then">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="else">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.EvaluateFor(System.Data.Common.Utils.Boolean.Vertex,System.Int32,System.Int32)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.IfThenElse(System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="then">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="else">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.Not(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.Or(System.Collections.Generic.IEnumerable{System.Data.Common.Utils.Boolean.Vertex})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.VertexValueComparer.Equals(System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.VertexValueComparer.GetHashCode(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermCounter`1.CountTerms(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermCounter`1.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermCounter`1.VisitTree(System.Data.Common.Utils.Boolean.TreeExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermExpr`1.Equals(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermExpr`1.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermExpr`1.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.ToDecisionDiagramConverter`1.TranslateToRobdd(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.ConversionContext{`0})">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TreeExpr`1.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TreeExpr`1.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Triple`3.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TrueExpr`1.EquivalentTypeEquals(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Vertex.AssertConstructorArgumentsValid(System.Int32,System.Data.Common.Utils.Boolean.Vertex[])">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Vertex.Equals(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Visitor`2.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Visitor`2.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Visitor`2.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Visitor`2.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ByValueComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ByValueEqualityComparer.CompareBinaryValues(System.Byte[],System.Byte[])">
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ByValueEqualityComparer.ComputeBinaryHashCode(System.Byte[],System.Int32)">
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ByValueEqualityComparer.Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ByValueEqualityComparer.GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.FindFunctionImport(System.Data.Metadata.Edm.MetadataWorkspace,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.GetEntityTransaction(System.Data.EntityClient.EntityCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.ParseFunctionImportCommandText(System.String,System.String,System.String@,System.String@)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.SetEntityParameterValues(System.Data.EntityClient.EntityCommand,System.Data.Common.DbCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeProviderCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.SetStoreProviderCommandState(System.Data.EntityClient.EntityCommand,System.Data.EntityClient.EntityTransaction,System.Data.Common.DbCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeProviderCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.DisposableCollectionWrapper`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.DisposableCollectionWrapper`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Helpers.FormatTraceLine(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Helpers.Prepend``1(``0[],``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Helpers.StringTrace(System.String)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Helpers.StringTraceLine(System.String)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.InternalBase.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.InternalBase.ToFullString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.InternalBase.ToFullString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.Add(`0,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Utils.KeyToListMap`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.ListForKey(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.RemoveKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.TryGetListForKey(`0,System.Collections.ObjectModel.ReadOnlyCollection{`1}@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Memoizer`2.Evaluate(`0)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.#ctor(System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="edmItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.CheckIfAllErrorsAreWarnings(System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="schemaErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.ConvertStoreTypeUsageToEdmTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="storeTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.CreateMetadataHashAlgorithm(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.CreateSHA256HashAlgorithm">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.DoesEndFormKey(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.DoesEndKeySubsumeAssociationSetKey(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Collections.Generic.HashSet{System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EdmMember,System.Data.Metadata.Edm.EntityType}})">
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationkeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.DoesMemberExist(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GenerateHashForAllExtentViewsContent(System.Double,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <parameter name="extentViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetAndCheckFunctionImportReturnType``1(System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetAssociationsForEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetAssociationsForEntitySetAndAssociationType(System.Data.Metadata.Edm.EntityContainer,System.String,System.Data.Metadata.Edm.AssociationType,System.String,System.Data.Metadata.Edm.EntitySet@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetAssociationsForEntitySets(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetConcurrencyMode(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetConcurrencyMode(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetElementType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetEntitySetAtEnd(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetEntityTypeForEnd(System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetFacetValue``1(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetFunctionImport(System.String,System.String,System.Data.Metadata.Edm.MetadataWorkspace,System.String@,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetInfluencingEntitySetsForTable(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetMaxLength(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetNavigationPropertyAccessor(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetNavigationPropertyAccessor(System.Data.Metadata.Edm.EntityType,System.String,System.String,System.String)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetOppositeEnd(System.Data.Metadata.Edm.AssociationSetEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetOtherAssociationEnd(System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetPrecision(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetPrimitiveTypeKind(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetScale(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetSomeEndForEntitySet(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetStoreGeneratedPattern(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetTypeAndSubtypesOf(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.MetadataWorkspace,System.Boolean)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetUpperBoundOfMultiplicity(System.Data.Metadata.Edm.RelationshipMultiplicity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.HasDiscreteDomain(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsAssociationValidForEntityType(System.Data.Metadata.Edm.AssociationSetEnd,System.Data.Metadata.Edm.EntityType)">
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsComposable(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsEveryOtherEndAtLeastOne(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsExtentAtSomeRelationshipEnd(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsMemberNullable(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsNonRefSimpleMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsParentOf(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.EntityType)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsPartOfEntityTypeKey(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsSuperTypeOf(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="superType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.TryDetermineCSpaceModelType(System.Type,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.TryDetermineCSpaceModelType``1(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.TryGetFunctionImportReturnCollectionType(System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.CollectionType@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.TryGetFunctionImportReturnType``1(System.Data.Metadata.Edm.EdmFunction,``0@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.TryGetWrappedReturnEdmTypeFromFunctionImport``1(System.Data.Metadata.Edm.EdmFunction,``0@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ModifiableIteratorCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Pair`2.Equals(System.Data.Common.Utils.Pair{`0,`1})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Pair`2.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Pair`2.PairComparer.Equals(System.Data.Common.Utils.Pair{`0,`1},System.Data.Common.Utils.Pair{`0,`1})">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Pair`2.PairComparer.GetHashCode(System.Data.Common.Utils.Pair{`0,`1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Add(`0)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Contains(`0)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Utils.Set`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Utils.Set`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Remove(`0)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Subtract(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Unite(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.BuildDelimitedList``1(System.Collections.Generic.IEnumerable{``0},System.Data.Common.Utils.StringUtil.ToStringConverter{``0},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.FormatIndex(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arrayVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.FormatInvariant(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.FormatStringBuilder(System.Text.StringBuilder,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.IndentNewLine(System.Text.StringBuilder,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.InvariantConvertToString``1(``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.MembersToCommaSeparatedString(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToCommaSeparatedString(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToCommaSeparatedString(System.Text.StringBuilder,System.Collections.IEnumerable)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToCommaSeparatedStringSorted(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToCommaSeparatedStringSorted(System.Text.StringBuilder,System.Collections.IEnumerable)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedString(System.Collections.IEnumerable,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedString(System.Text.StringBuilder,System.Collections.IEnumerable,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedString(System.Text.StringBuilder,System.Collections.IEnumerable,System.String,System.String)">
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedStringPrivate(System.Text.StringBuilder,System.Collections.IEnumerable,System.String,System.String,System.Boolean)">
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedStringSorted(System.Collections.IEnumerable,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedStringSorted(System.Text.StringBuilder,System.Collections.IEnumerable,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceStringComparer.Equals(System.String,System.String)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceStringComparer.GetHashCode(System.String)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceStringComparer.NormalizeString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.TreePrinter.IndentLine(System.Text.StringBuilder)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TreePrinter.Print(System.Data.Common.Utils.TreeNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TreePrinter.PrintChildren(System.Text.StringBuilder,System.Data.Common.Utils.TreeNode)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TreePrinter.PrintNode(System.Text.StringBuilder,System.Data.Common.Utils.TreeNode)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Entity.Error.ArgumentNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Error.ArgumentOutOfRange(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Error.NotImplemented">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Error.NotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_ClosedDataReaderError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_CollectionParameterElementIsNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_CollectionParameterElementIsNullOrEmpty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_DataReaderClosed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_GetSchemaTableIsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_ImplicitlyClosedDataReaderError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InternalProviderError(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidBufferSizeOrIndex(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataLength(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_InvalidDataReaderFieldCountForPrimitiveType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataReaderMissingColumnForType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataReaderMissingDiscriminatorColumn(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_InvalidDataReaderUnableToDetermineType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataReaderUnableToMaterializeNonPrimitiveType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDestinationBufferIndex(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidEnumerationValue(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidSourceBufferIndex(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_KeysRequiredForJoinOverNest(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_KeysRequiredForNesting">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_MustUseSequentialAccess">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_NestingNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_NoData">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_NonSequentialChunkAccess(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_NonSequentialColumnAccess(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_NoQueryMappingView(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_ProviderDoesNotSupportCommandTrees">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_UnknownDataTypeCode(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AliasNameAlreadyUsed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AliasNameIsAlreadyDefined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AllArtifactsMustTargetSameProvider_InvariantName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AllArtifactsMustTargetSameProvider_ManifestToken(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.AllElementsMustBeInSchema">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousEntityContainerEnd(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousFunctionAndType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.AmbiguousFunctionArguments">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousFunctionOverload(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousMetadataMemberName(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ArgumentMustBeCSpaceType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ArgumentMustBeOSpaceType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ArgumentOutOfRange(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ArgumentOutOfRangeExpectedPostiveNumber(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ArgumentTypesAreIncompatible(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ArrayTooSmall">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AssemblyMissingFromAssembliesToConsider(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.AtleastOneSSDLNeeded">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadNamespaceOrAlias(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadNavigationPropertyBadFromRoleType(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadNavigationPropertyRelationshipNotRelationship(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.BadNavigationPropertyRolesCannotBeTheSame">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadNavigationPropertyUndefinedRole(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadParameterDirection(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadPrecisionAndScale(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.BetweenLimitsCannotBeUntypedNulls">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BetweenLimitsTypesAreNotCompatible(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BetweenLimitsTypesAreNotOrderComparable(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BetweenValueIsNotOrderComparable(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BothMinAndMaxValueMustBeSpecifiedForNonConstantFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotConvertNumericLiteral(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CannotCreateEmptyMultiset">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CannotCreateMultisetofNulls">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotInstantiateAbstractType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CannotLoadDifferentVersionOfSchemaInTheSameItemCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotResolveNameToTypeOrFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotUseSystemNamespaceAsAlias(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CheckArgumentContainsNullFailed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CodeGen_ConstructorNoParameterless(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyDeclaringTypeIsValueType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyIsIndexed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyIsStatic">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyNoGetter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyNoSetter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyStrongNameIdentity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyUnsupportedForm">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyUnsupportedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Collections_CannotFillTryDifferentMergeOption(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Collections_ExpectedCollectionGotReference(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Collections_InvalidEntityStateLoad(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Collections_InvalidEntityStateSource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Collections_NoRelationshipSetMatched(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Collections_UnableToMergeCollections">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CommandTextFunctionsCannotDeclareStoreFunctionName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CommandTextFunctionsNotComposable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CompiledELinq_UnsupportedNamedParameterType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CompiledELinq_UnsupportedNamedParameterUseAsType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CompiledELinq_UnsupportedParameterTypes(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ComplexObject_ComplexChangeRequestedOnScalarProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ComplexObject_ComplexObjectAlreadyAttachedToParent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ComplexObject_NullableComplexTypesNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ComplexTypeAsReturnTypeAndDefinedEntitySet(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ComplexTypeAsReturnTypeAndNestedComplexProperty(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ComposableFunctionMustDeclareReturnType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ConcatBuiltinNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ConcurrencyRedefinedOnSubTypeOfEntitySetType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ConstantFacetSpecifiedInSchema(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CouldNotResolveIdentifier(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Aggregate_InvalidFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_And_BooleanArgumentsRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Apply_DuplicateVariableNames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Arithmetic_InvalidUnsignedTypeForUnaryMinus(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Arithmetic_NumericCommonType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Binary_CollectionsRequired(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Binding_CollectionRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Binding_VariableNameNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Case_InvalidResultType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Case_WhensMustEqualThens">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Cast_InvalidCast(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_CommandTree_InvalidDataSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_CommandTree_InvalidParameterName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Comparison_ComparableRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Constant_InvalidConstantType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Constant_InvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Constant_InvalidValueForType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_EndNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_EntityContainerNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_EntitySetNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_FunctionNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_NavPropertyNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_PropertyNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_TypeNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_CrossJoin_AtLeastTwoInputs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_CrossJoin_DuplicateVariableNames(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_DeRef_RefRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Distinct_InvalidCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Element_InvalidArgumentForUnwrapSingleProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Except_LeftNullTypeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Exceptions_InvalidCommandTree">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_ExpressionLink_TypeMismatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_ExpressionList_IncorrectElementCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Factory_IncompatibleRelationEnds">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Factory_MethodResultTypeNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Factory_NewCollectionInvalidCommonType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Factory_NoSuchProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Factory_NoSuchRelationEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Function_CanonicalFunction_AmbiguousMatch(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Function_CanonicalFunction_NotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Function_CommandTextInExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Function_NonComposableInExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Function_VoidResultInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_MetadataNotReadOnly">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_NoProviderBooleanType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_NoProviderIntegerType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_NoProviderStringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_NullTypeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_General_PolymorphicArgRequired(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_General_PolymorphicTypeRequired(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_General_UnsupportedExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GetEntityRef_EntityRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GetRefKey_RefRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GroupBinding_CollectionRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GroupBinding_GroupVariableNameNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_GroupBy_AggregateColumnExistsAsGroupColumn(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GroupBy_AtLeastOneKeyOrAggregate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_GroupBy_KeyNotEqualityComparable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GroupBy_MoreThanOneGroupAggregate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_InvalidTypeForSetOperation(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_IsNull_CollectionNotAllowed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_IsNull_InvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Join_DuplicateVariableNames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Limit_ConstantOrParameterRefRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Limit_IntegerRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Limit_NonNegativeLimitRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EdmMemberIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntitySetEntityContainerNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntitySetIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntityTypeEmptyKeyMembersInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntityTypeNullKeyMembersInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionParameterIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionReturnParameterNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_TypeUsageIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_NewInstance_CannotInstantiateAbstractType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_NewInstance_CannotInstantiateMemberlessType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_NewInstance_CollectionTypeRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_NewInstance_IncompatibleRelatedEntity_SourceTypeNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_NewInstance_StructuralTypeRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Not_BooleanArgumentRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Or_BooleanArgumentsRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Property_InstanceRequiredForInstance">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Ref_PolymorphicArgRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEndFromDifferentRelationship">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEndMustBeAtMostOne">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEndSameAsSourceEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEntityNotCompatible">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEntityNotRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelNav_NoCompositions">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_RelNav_WrongSourceType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Skip_ConstantOrParameterRefRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Skip_IntegerRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Skip_NonNegativeCountRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Sort_EmptyCollationInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Sort_NonStringCollationInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Sort_OrderComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_UDF_FunctionDefinitionGenerationFailed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_UDF_FunctionDefinitionResultTypeMismatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_UDF_FunctionDefinitionWithCircularReference(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Unary_CollectionRequired(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Util_CheckListDuplicateName(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Util_CheckListEmptyInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Validator_InvalidIncompatibleParameterReferences(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Validator_InvalidIncorrectDataSpaceMetadata(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Validator_InvalidOtherWorkspaceMetadata(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Validator_VarRefInvalid(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Validator_VarRefTypeMismatch(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CreateRefTypeIdentifierMustBeASubOrSuperType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CreateRefTypeIdentifierMustSpecifyAnEntityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxAliasedNamespaceImport">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxAnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxAnyElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxApplyClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxBetween">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCase">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCaseElse">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCaseWhenThen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCast">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCollatedOrderByClauseItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCollectionTypeDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCommandExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCreateRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxDeref">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxDivide">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxEquals">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxEscapedIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxExcept">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxExists">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxExpressionList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFlatten">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromApplyClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromClauseItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromClauseList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromJoinClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CtxFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFunctionDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGreaterThan">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGreaterThanEqual">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGroupByClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGroupPartition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxHavingClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIntersect">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIsNotNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIsNotOf">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIsNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIsOf">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxJoinClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxJoinOnClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLessThan">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLessThanEqual">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLike">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLimitSubClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMemberAccess">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMinus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxModulus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMultiply">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMultisetCtor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNamespaceImport">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNamespaceImportList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNavigate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNotBetween">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNotEqual">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNotIn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNotLike">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNullLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOfType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOfTypeOnly">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOr">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOrderByClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOrderByClauseItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOverlaps">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxParen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxPlus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxQueryExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxQueryStatement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRefTypeDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRelationship">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRelationshipList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRowCtor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRowTypeDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSelectRowClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSelectValueClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSimpleIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSkipSubClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxTopSubClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxTreat">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CtxTypeCtor(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxTypeName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxTypeNameWithTypeSpec">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxUnaryMinus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxUnaryPlus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxUnion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxUnionAll">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxWhereClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CycleInTypeHierarchy(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DataCategory_Data">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DataCategory_Update">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_Direction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_Size">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_SourceColumn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_SourceVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DefaultNotAllowed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DeRefArgIsNotOfRefType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DifferentSchemaVersionInCollection(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateAnnotation(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicatedFunctionoverloads(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicatedInlineFunctionOverload(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateEndName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateEntityContainerMemberName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateEntitySetTable(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateMemberName(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateMemberNameInExtendedEntityContainer(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicatePropertyNameSpecifiedInEntityKey(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicationOperation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EdmMembersDefiningTypeDoNotAgreeWithMetadataType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EdmVersionNotSupportedByRuntime(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ElementOperatorIsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_AnonymousType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_ClosureType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_CreateOrderedEnumerableNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_CycleDetected">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_EdmFunctionAttributedFunctionWithWrongInstance(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_EdmFunctionAttributedFunctionWithWrongReturnType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_EdmFunctionAttributeParameterNameNotValid(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_EdmFunctionDirectCall">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_ExpressionMustBeIQueryable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_InvalidOfTypeResult(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_MethodNotDirectlyCallable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_NotPropertyOrField(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_PrimitiveTypesSample">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_PropertyIndexNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_SkipWithoutOrder">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_ThenByDoesNotFollowOrderBy">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnboundParameterExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnexpectedTypeForNavigationProperty(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnhandledBindingType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnhandledExpressionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnrecognizedMember(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableFunctionForExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableFunctionForMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableFunctionForMethod(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableFunctionForMethodAmbiguousMatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableFunctionForMethodNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableStoreFunctionForExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableStoreFunctionForMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedAsUnicodeAndAsNonUnicode(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedBinding">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedCast(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedCastToDecimal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedComparison(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedConstant(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedConstructor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedDifferentContexts">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedEnumerableType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedExpressionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedHeterogeneousInitializers(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedInclude">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedInitializers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedIsOrAs(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedKeySelector(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedMergeAs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedMethod(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedMethodSuggestedAlternative(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedNestedFirst">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedNestedSingle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedNominalType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedPassthrough(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedQueryableMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedRefComparison(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedRowComparison(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedRowMemberComparison(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedRowTypeComparison(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedStringRemoveCase(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedTrimStartTrimEndCase(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedUseOfContextParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedVBDatePartInvalidInterval(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedVBDatePartNonConstantInterval(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EmptyCommandText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EmptyDefiningQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EmptyFile(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EmptyName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EmptySchemaTextReader">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EndNameAlreadyDefinedDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EndWithManyMultiplicityCannotHaveOperationsSpecified(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Entity_EntityCantHaveMultipleChangeTrackers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CannotCloneStoreProvider">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CannotDeduceDbType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CannotReopenConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CannotReprepareCommandDefinitionBasedCommand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ClosedConnectionForUpdate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CommandDefinitionExecutionFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CommandDefinitionPreparationFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CommandExecutionFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CommandTreeMetadataIncompatible">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionMustBeClosed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionNotOpen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionStateBroken">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionStateClosed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ConnectionStringMissingInfo(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionStringNeededBeforeOperation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_DataReaderIsStillOpen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_DbConnectionHasNoProvider(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_DoesNotImplementIServiceProvider(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_DuplicateParameterNames(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_EmptyParameterName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ErrorInBeginningTransaction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ErrorInClosingConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ExecutingOnClosedConnection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ExtraParametersWithNamedConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_FailedToGetInformation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_FunctionImportEmptyCommandText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_IncompatibleNavigationPropertyResult(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_InvalidNamedConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_InvalidParameterDirection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_InvalidParameterName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_InvalidStoredProcedureCommandText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_InvalidStoreProvider">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_InvalidTransactionForCommand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ItemCollectionsNotRegisteredInWorkspace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_KeywordNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_NestedNamedConnection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_NoCommandText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_NoConnectionForAdapter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_NoConnectionForCommand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_NoStoreConnectionForUpdate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ProviderGeneralError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ProviderSpecificError(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_RequiresNonStoreCommandTree">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ReturnedNullOnProviderMethod(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_SettingsCannotBeChangedOnOpenConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_StoreReaderFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_TooFewColumns">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_TransactionAlreadyStarted">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_UnableToFindFunctionImport(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_UnableToFindFunctionImportContainer(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_UnknownParameterType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_UnmappedFunctionImport">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_UnsupportedCommandType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_UnsupportedDbType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ValueNotString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityConnectionString_Metadata">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityConnectionString_Name">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityConnectionString_Provider">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityConnectionString_ProviderConnectionString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityContainerAlreadyExists(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityContainerCannotExtendItself(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityDataCategory_Context">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityDataCategory_NamedConnectionString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityDataCategory_Source">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_CannotChangeKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_DataRecordMustBeEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_DoesntMatchKeyOnEntity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_EntityKeyMustHaveValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_EntitySetDoesNotMatch(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_EntityTypesDoNotMatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_IncorrectNumberOfKeyValuePairs(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_IncorrectValueType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_InvalidName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_InvalidQualifiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_MissingEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_MissingKeyValue(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_NoNullsAllowedInKeyValuePairs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_NullKeyValue(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_UnexpectedNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKeyMustBeScalar(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKeyTypeCurrentlyNotSupported(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKeyTypeCurrentlyNotSupportedInSSDL(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityProxyTypeInfo_CannotSetEntityCollectionProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityProxyTypeInfo_DuplicateOSpaceType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityProxyTypeInfo_ProxyHasWrongWrapper">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityProxyTypeInfo_ProxyMetadataIsUnavailable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityReference_CannotAddMoreThanOneEntityToEntityReference(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_CannotChangeReferentialConstraintProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_CannotSetSpecialKeys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_EntityKeyValueMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityReference_ExpectedReferenceGotCollection(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_LessThanExpectedRelatedEntitiesFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_MoreThanExpectedRelatedEntitiesFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntitySetDoesNotBelongToEntityContainer(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntitySetInAnotherContainer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntitySetNotInCSPace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntitySetTypeHasNoKeys(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityTypesDoNotAgree">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionCannotBeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionMustBeCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionMustBeNumericType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionTypeMustBeBoolean">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ExpressionTypeMustBeEntityType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionTypeMustBeEqualComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ExpressionTypeMustBeNominalType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionTypeMustNotBeCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExprIsNotValidEntitySetForCreateRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExtraInfo">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.FacetDeclarationRequiresTypeAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FacetNotAllowed(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FacetsOnNonScalarType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FailedToFindClrTypeMapping(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FailedToFindCSpaceTypeMapping(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FailedToFindOSpaceTypeMapping(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FailedToResolveAggregateFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.FailedToRetrieveProviderManifest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportEntityTypeDoesNotMatchEntitySet(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportReturnEntitiesButDoesNotSpecifyEntitySet(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportSpecifiesEntitySetButNotEntityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportUnknownEntitySet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportWithUnsupportedReturnTypeV1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportWithUnsupportedReturnTypeV1_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportWithUnsupportedReturnTypeV2(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionWithNonEdmTypeNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionWithNonScalarTypeNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.GeneralExceptionAsQueryInnerException(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GeneralQueryError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Generated_View_Type_Super_Class_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Generated_Views_Changed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Generated_Views_Invalid_Extent_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GeneratorErrorSeverityError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GeneratorErrorSeverityUnknown">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GeneratorErrorSeverityWarning">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GenericSyntaxError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GroupingKeysMustBeEqualComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GroupPartitionOutOfContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GroupVarNotFoundInScope">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.HavingRequiresGroupClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ImcompatibleCreateRefKeyElementType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ImcompatibleCreateRefKeyType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.IncorrectProviderManifest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InferRelationshipEndAmbiguous(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InferRelationshipEndFailedNoEntitySetMatch(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InferRelationshipEndGivesAlreadyDefinedEnd(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InFromClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InGroupClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InnerJoinMustHaveOnPredicate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InRowCtor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InSelectProjectionList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidAction(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidAliasName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidArgumentTypeForAggregateFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidAssociationTypeForUnion(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidBaseTypeForItemType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidBaseTypeForNestedType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidBaseTypeForStructuredType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCaseElseType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCaseThenNullType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCaseThenTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCaseWhenThenNullType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCast(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCastExpressionType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCastType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCollectionForMapping(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCollectionSpecified(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidComplexType(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCreateRefKeyType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCtorArgumentType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCtorUseOnType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDateTimeOffsetLiteral(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDay(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDayInMonth(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultBinaryWithNoMaxLength(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultBoolean(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultDateTime(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultDateTimeOffset(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultDecimal(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultFloatingPoint(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultGuid(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultIntegral(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultTime(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDeRefProperty(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidDistinctArgumentInCtor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidDistinctArgumentInNonAggFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidDocumentationBothTextAndStructure">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEmptyIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEmptyQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEmptyQueryTextArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEndEntitySetTypeMismatch(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEndRoleInRelationshipConstraint(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntityContainerNameInExtends(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntityEndName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntityRootTypeArgument(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntitySetName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntitySetNameReference(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntitySetType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntityTypeArgument(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEscapedIdentifier(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEscapedIdentifierEOF">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEscapedIdentifierUnbalanced(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidExpressionResolutionClass(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidFileExtension(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidFlattenArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidFromPropertyInRelationshipConstraint(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidGroupIdentifierReference(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidHour(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidImplicitRelationshipFromEnd(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidImplicitRelationshipToEnd(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidInExprArgs(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidJoinLeftCorrelation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyArgument(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyKeyDefinedInBaseClass(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyMember(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyNoProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyNullablePart(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyTypeForCollation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidLiteralFormat(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidMaxLengthSize">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMemberNameMatchesTypeName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMetadataMemberClassResolution(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidMetadataMemberName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidMetadataPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMinute(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidModeForWithRelationshipClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMonth(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityFromRoleToPropertyNonNullableV1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityFromRoleToPropertyNonNullableV2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityFromRoleToPropertyNullableV1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityFromRoleUpperBoundMustBeOne(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityToRoleLowerBoundMustBeZero(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityToRoleUpperBoundMustBeMany(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityToRoleUpperBoundMustBeOne(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidNamespaceAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidNamespaceInUsing(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidNamespaceOrAliasSpecified(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidNullArithmetic">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidNullComparison">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidNullLiteralForNonNullableMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidNumberOfParametersForAggregateFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidOperationMultipleEndsInAssociation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidOperatorSymbol">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidParameterFormat(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidParameterTypeForAggregateFunction(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPlaceholderRootTypeArgument(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPlaceholderTypeArgument(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidPredicateForCrossJoin">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPrimitiveTypeKind(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPropertyInRelationshipConstraint(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPropertyType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidPunctuatorSymbol">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidQueryResultType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipEndMultiplicity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipEndType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipSetName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipSetType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidRelationshipSourceType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRootComplexType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRootRowType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRowType(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidSavePoint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSchemaEncountered(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidScopeIndex">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSecond(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidSelectValueAliasedExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidSelectValueList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSimpleIdentifier(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSimpleIdentifierNonASCII(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSize(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidStringArgument(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidToPropertyInRelationshipConstraint(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidUnarySetOpArgument(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidUnsignedTypeForUnaryMinusOperation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidUseOfWebPath(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidValueForParameterTypeSemanticsAttribute(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidWithRelationshipTargetEndMultiplicity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidYear(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Iqt_CTGen_UnexpectedAggregate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Iqt_CTGen_UnexpectedVarDef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Iqt_CTGen_UnexpectedVarDefList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Iqt_General_UnsupportedOp(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.IsNullInvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ItemCollectionAlreadyRegistered(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ItemDuplicateIdentity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ItemInvalidIdentity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.KeyMissingOnEntityType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.KeyMustBeCorrelated(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LeftSetExpressionArgsMustBeCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LikeArgMustBeStringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.LiteralTypeNotFoundInMetadata(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.LiteralTypeNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedColumn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedComplex">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedEntityContainerExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedInlineFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedKeyword">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedLeft">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedLine">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedMetadataMemberExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedNamespace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedNear">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedPrimitive">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedReference">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedRight">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedRow">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedTerm">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedValueExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MalformedSingleQuotePayload">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MalformedStringLiteralPayload">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MalformedXml(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_AbstractTypeMappingToNonAbstractType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_AllQueryViewAtCompileTime(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_AlreadyMapped_StorageEntityContainer_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_CannotMapCLRTypeMultipleTimes(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_ConditionValueTypeMismatch_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Clr_Member_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Clr_Member_4(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Invalid_MemberType_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Member_Count_Mismatch_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Member_Type_Mismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_MemberKind_Mismatch_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_MultiplicityMismatch_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_DifferentEdmStoreVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_DifferentMappingEdmStoreVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_DistinctFlagInReadWriteContainer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Duplicate_CdmAssociationSet_StorageMap_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Duplicate_PropertyMap_CaseInsensitive(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Duplicate_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Empty_QueryView_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Empty_QueryView_OfType_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Empty_QueryView_OfTypeOnly_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_EntitySetMismatchOnAssociationSetEnd_QueryView_4(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Enum_EmptyValue_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Enum_InvalidValue_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_ConditionValueTypeMismatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_DuplicateMemberName(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_EntityTypeMappingForFunctionNotReturningEntitySet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_FunctionImportDoesNotExist(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_FunctionImportMappedMultipleTimes(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_ImportParameterHasNoCorrespondingTargetParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_IncompatibleParameterMode(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_IncompatibleParameterType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_InvalidComplexTypeName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_InvalidContentEntityTypeForEntitySet(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_InvalidMemberName(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_MultipleConditionsOnSingleColumn(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_RowsAffectedParameterDoesNotExist_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_RowsAffectedParameterHasWrongMode_4(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_RowsAffectedParameterHasWrongType_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_StoreFunctionAmbiguous(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_StoreFunctionDoesNotExist(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_TargetFunctionMustBeComposable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_TargetParameterHasNoCorrespondingImportParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_UnreachableIsTypeOf(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_UnreachableType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_UnsupportedType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_General_Error_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Association_Type_For_Association_Set_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_CSide_ScalarProperty_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_CSRootElementMissing_0(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AmbiguousFunction_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AmbiguousResultBinding_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationEndMappingForeignKeyAssociation_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationEndMappingInvalidForEntityType_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetAmbiguous_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetCardinality_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetDoesNotExist_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetFromRoleIsNotEntitySet_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetNotMappedForOperation_4(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetRoleDoesNotExist_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_ComplexTypeNotFound_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_In_Table_Context_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MissingEntityType_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MissingParameter_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MissingSetClosure_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MissingVersion_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_Multiple_Types_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MultipleEndsOfAssociationMapped_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_NotValidFunction_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_NotValidFunctionParameter_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_ParameterBoundTwice_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_ParameterNotFound_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_PropertyNotFound_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_PropertyNotKey_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_PropertyParameterTypeMismatch_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_RedundantEntityTypeMapping_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_UnknownFunction_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_VersionMustBeCurrent_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_VersionMustBeOriginal_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_WrongComplexType_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Member_Mapping_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Query_Views_MissingSetClosure_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_QueryView_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_QueryView_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_AbstractEntity_FunctionMapping_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_AbstractEntity_IsOfType_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_AbstractEntity_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Association_Set_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Association_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_Association_Type_Empty_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_AssociationSet_Condition_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Cdm_Member_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Column_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Complex_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Both_Members_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Both_Values_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Computed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Either_Members_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Either_Values_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_InvalidMember_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_InvalidPrimitiveTypeKind_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_NonScalar_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Duplicate_Condition_Member_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Emtpty_SetMap_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_End_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_EndProperty_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Entity_Set_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Entity_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Entity_Type_For_Entity_Set_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_EntityContainer_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ForeignKey_Association_Set_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_General_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ImplicitMappingForAbstractReturnType_FunctionMapping_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_IsTypeOfNotTerminated">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_Set_Mapping_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_StorageEntityContainer_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Table_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_Table_Expected_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_TypeMapping_QueryView">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidMappingSchema_Parsing_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidMappingSchema_validation_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_ItemWithSameNameExistsBothInCSpaceAndSSpace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_NotFound_EntityContainer(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Object_InvalidType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Provider_WrongConnectionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Provider_WrongManifestType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_ProviderReturnsNullType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_Duplicate_OfType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_Duplicate_OfTypeOnly(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_For_Base_Type(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_PropertyMaps_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_TypeName_Not_Defined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryViewMultipleTypeInTypeName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Storage_InvalidSpace_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_StoreTypeMismatch_ScalarPropertyMapping_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_TableName_QueryView_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_TypeName_For_First_QueryView">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_UnsupportedExpressionKind_QueryView_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_UnsupportedInitialization_QueryView_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_UnsupportedPropertyKind_QueryView_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_UnsupportedScanTarget_QueryView_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Views_For_Extent_Not_Generated(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_AddedEntityAlreadyExists(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Materializer_CannotReEnumerateQueryResults">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_InvalidCastNullable(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_InvalidCastReference(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_NullReferenceCast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Materializer_PropertyIsNotNullable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_PropertyIsNotNullableWithName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_RecyclingEntity(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_SetInvalidValue(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Materializer_UnsupportedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MemberInvalidIdentity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Metadata_General_Error">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MethodInvocationNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MinAndMaxMustBePositive(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MinAndMaxValueMustBeDifferentForNonConstantFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MinAndMaxValueMustBeSameForConstantFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MinMustBeLessThanMax(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MismatchNumberOfPropertiesinRelationshipConstraint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingConstraintOnRelationshipType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingDefaultValueForConstantFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingEntityContainerEnd(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingFacetDescription(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MissingName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MoreThanOneItemMatchesIdentity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MultipleDefinitionsOfParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MultipleDefinitionsOfVariable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MultisetElemsAreNotTypeCompatible">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NamespaceAliasAlreadyUsed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NamespaceAlreadyImported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NavigationPropertyRelationshipEndTypeMismatch(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NeedNotUseSystemNamespaceInUsing(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NestedAggregateCannotBeUsedInAggregate(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NestedClassNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NewTypeConflictsWithExistingType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoAggrFunctionOverloadMatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoCanonicalAggrFunctionOverloadMatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoCanonicalFunctionOverloadMatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoCodeGenNamespaceInStructuralAnnotation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoCollectionForSpace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoFunctionOverloadMatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NonComposableFunctionHasDisallowedAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NonComposableFunctionMustNotDeclareReturnType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoStoreTypeForEdmType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotAMemberOfCollection(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotAMemberOfType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotASuperOrSubType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotBinaryTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotDateTimeOffsetTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotDateTimeTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotDecimalTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotInNamespaceAlias(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotInNamespaceNoAlias(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotNamespaceQualified(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotStringTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotTimeTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotValidInputPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NullableComplexType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NullLiteralCannotBePromotedToCollectionOfNulls">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NullParameterForEdmRelationshipAttribute(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NullRelationshipNameforEdmRelationshipAttribute(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NumberOfTypeCtorIsLessThenFormalSpec(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NumberOfTypeCtorIsMoreThenFormalSpec(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_AcceptAllChangesFailure(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotAttachEntityWithoutKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotAttachEntityWithTemporaryKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotDeleteEntityNotInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotDetachEntityNotInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_CannotExplicitlyLoadDetachedRelationships(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_CannotLoadReferencesUsingDifferentContext(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotSetDefaultContainerName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ClientEntityRemovedFromStore(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CommitWithConceptualNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_ContainerQualifiedEntitySetNameRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntitiesHaveDifferentType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_EntityAlreadyExistsInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntityContainerNotFoundForName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntityMustBeUnchangedOrModified(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntityMustBeUnchangedOrModifiedOrDeleted(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntityNotInObjectSet_Delete(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntityNotInObjectSet_Detach(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_EntityNotTrackedOrHasTempKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_EntitySetNameOrEntityKeyRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntitySetNotFoundForName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_ExecuteCommandWithMixOfDbParameterAndValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ExecuteFunctionCalledWithNonQueryFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ExecuteFunctionCalledWithNullParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ExecuteFunctionCalledWithScalarFunction(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ExecuteFunctionTypeMismatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidCommandTimeout">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidConnectionString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidDataAdapter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidDefaultContainerName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidEntitySetForStoreQuery(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidEntitySetInKey(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidEntitySetInKeyFromName(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidEntitySetOnEntity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidEntityState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidObjectSetTypeForEntitySet(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidRelationshipState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidTypeForStoreQuery(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_MetadataHasChanged">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_MultipleEntitySetsFoundInAllContainers(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_MultipleEntitySetsFoundInSingleContainer(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NoEntitySetFoundForType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NoMappingForEntityType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NthElementInAddedState(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NthElementIsDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NthElementIsNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NthElementNotInObjectStateManager(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_ObjectDisposed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_ObjectNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_QualfiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_RequiredMetadataNotAvailble">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_SelectorExpressionMustBeMemberAccess">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_StoreEntityNotPresentInClient">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_TwoPropertiesMappedToSameColumn(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameter_InvalidParameterName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameter_InvalidParameterType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameterCollection_DuplicateParameterName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameterCollection_ParameterAlreadyExists(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameterCollection_ParameterNameNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectParameterCollection_ParametersLocked">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_InvalidConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_InvalidEmptyQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectQuery_InvalidQueryName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidFilterPredicate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidGroupKeyList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidProjectionList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidQueryArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidResultType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidSkipCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidSortKeyList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidTopCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_NotSupportedLinqSource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_Span_IncludeRequiresEntityOrEntityCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectQuery_Span_NoNavProp(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_Span_SpanPathSyntaxError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_UnableToMapResultType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectQuery_UnableToMaterializeArbitaryProjectionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectQuery_UnableToMaterializeArray(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CannotAccessKeyEntryValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CannotDeleteOnKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CannotModifyKeyEntryState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_CannotModifyKeyProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CantModifyDetachedDeletedEntries">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CantModifyRelationState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CantModifyRelationValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CantSetEntityKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_ChangedInDifferentStateFromChanging(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_ChangeOnUnmappedComplexProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_ChangeOnUnmappedProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_ComplexObjectUsedMultipleTimes(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CurrentValuesDoesNotExist">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_EntityMemberChangedWithoutEntityMemberChanging">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_InvalidState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_InvalidTypeForComplexTypeProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_NullOriginalValueForNonNullableProperty(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_OriginalValuesDoesNotExist">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_RelationshipAndKeyEntriesDoNotHaveRelationshipManagers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_SetModifiedOnInvalidProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_SetModifiedStates">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_SetOriginalComplexProperties(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_SetOriginalPrimaryKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_UnableToEnumerateCollection(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_AcceptChangesEntityKeyIsNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_CannotChangeRelationshipStateEntityAdded">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_CannotChangeRelationshipStateEntityDeleted">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_CannotChangeRelationshipStateKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_CannotFixUpKeyToExistingValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_CannotGetRelationshipManagerForDetachedPocoEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_ChangeRelationshipStateNotSupportedForForeignKeyAssociations">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_ConflictingChangesOfRelationshipDetected(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_DetachedObjectStateEntriesDoesNotExistInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_DoesnotAllowToReAddUnchangedOrModifiedOrDeletedEntity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_EntityConflictsWithKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_EntityNotTracked">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_EntityTypeDoesnotMatchtoEntitySetType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_GetEntityKeyRequiresObjectToHaveAKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_InvalidKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_KeyPropertyDoesntMatchValueInKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_KeyPropertyDoesntMatchValueInKeyForAttach">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_NoEntryExistForEntityKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_NoEntryExistsForObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_ObjectStateManagerContainsThisEntityKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_AddNewOperationNotAllowedOnAbstractBindingList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_CannotReplacetheEntityorRow">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectView_CannotResolveTheEntitySet(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_IncompatibleArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_IndexBasedInsertIsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_WriteOperationNotAllowedOnReadOnlyBindingList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.OfTypeExpressionElementTypeMustBeEntityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.OfTypeExpressionElementTypeMustBeNominalType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.OfTypeOnlyTypeArgumentCannotBeAbstract(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OnlyStoreConnectionsSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OperationOnReadOnlyCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OperationOnReadOnlyItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OrderByKeyIsNotOrderComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ParameterNameAlreadyDefinedDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ParameterTypeNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ParameterWasNotDefined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ParserFatalError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ParserInputError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PlaceholderExpressionMustBeCompatibleWithEdm64(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PlaceholderExpressionMustBeConstant(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PlaceholderExpressionMustBeGreaterThanOrEqualToZero(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PlaceholderSetArgTypeIsNotEqualComparable(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.PlusLeftExpressionInvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.PlusRightExpressionInvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PocoEntityWrapper_UnableToMaterializeArbitaryNavPropType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PocoEntityWrapper_UnableToSetFieldOrProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PocoEntityWrapper_UnexpectedTypeForNavigationProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PrecisionMustBeGreaterThanScale(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PrecisionOutOfRange(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.PropertyCannotBeChangedAtThisTime">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PropertyNameAlreadyDefinedDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PropertyTypeAlreadyDefined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDidNotCreateACommandDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDidNotReturnAProviderManifest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDidNotReturnAProviderManifestToken">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDoesNotSupportCreateDatabase">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDoesNotSupportCreateDatabaseScript">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDoesNotSupportDatabaseExists">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDoesNotSupportDeleteDatabase">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ProviderDoesNotSupportType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderEscapeLikeArgumentReturnedNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderManifestTokenNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderRequiresStoreCommandTree">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderReturnedNullForCreateCommandDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ProviderReturnedNullForGetDbInformation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderShouldOverrideEscapeLikeArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RefArgIsNotOfEntityType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ReferenceToNonEntityType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RefTypeIdentifierMustSpecifyAnEntityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_CannotAddToFixedSizeArray(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_CannotCreateRelationshipBetweenTrackedAndNoTrackedEntities(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_CannotCreateRelationshipEntitiesInDifferentContexts">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_CannotRemoveFromFixedSizeArray(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_CannotSerialize(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_ConflictingChangeOfRelationshipDetected">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_EntitySetIsNotValidForRelationship(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidContainedType_Collection(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidContainedType_Reference(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_InvalidEntityContextForAttach">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_InvalidEntityStateForAttach">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidNthElementContextForAttach(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidNthElementNullForAttach(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidNthElementStateForAttach(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_InvalidOwnerStateForAttach">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidRelationshipFixupDetected(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_LoadCalledOnAlreadyLoadedNoTrackedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_LoadCalledOnNonEmptyNoTrackedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_MismatchedMergeOptionOnLoad(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_OwnerIsNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_RelatedEndNotAttachedToContext(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_RelatedEndNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_UnableToAddEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_UnableToAddRelationshipWithDeletedEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_UnableToRemoveEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipFromEndIsAmbiguos">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_CannotGetRelatEndForDetachedPocoEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_CircularRelationshipsWithReferentialConstraints">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_CollectionAlreadyInitialized(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_CollectionInitializeIsForDeserialization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_CollectionRelationshipManagerAttached(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_InconsistentReferentialConstraintProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_InitializeIsForDeserialization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_InvalidRelationshipManagerOwner">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_InvalidTargetRole(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_NavigationPropertyNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_OwnerIsNotSourceType(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_ReferenceAlreadyInitialized(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_RelationshipManagerAttached(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_UnableToFindRelationshipTypeInMetadata(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_UnableToRetrieveReferentialConstraintProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_UnexpectedNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_UnexpectedNullContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipNameInNavigationPropertyNotValid(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipTargetMustBeUnique(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipTypeIsNotCompatibleWithEntity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RequiredFacetMissing(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ResultingExpressionTypeCannotBeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ReturnTypeDeclaredAsAttributeAndElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ReturnTypeMustBeDeclared(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RightSetExpressionArgsMustBeCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RoleTypeInEdmRelationshipAttributeIsInvalidType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RowCtorElementCannotBeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RowTypeWithoutProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SameRoleNameOnRelationshipAttribute(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SameRoleReferredInReferentialConstraint(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ScaleOutOfRange(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SelectDistinctMustBeEqualComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SimilarRelationshipEnd(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SourceTypeMustBePromotoableToFromEndRelationType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SourceUriUnknown">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SqlGen_ApplyNotSupportedOnSql8">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SqlGen_CanonicalFunctionNotSupportedPriorSql10(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SqlGen_InvalidDatePartArgumentExpression(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SqlGen_InvalidDatePartArgumentValue(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SqlGen_NiladicFunctionsCannotHaveParameters">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SqlGen_ParameterForLimitNotSupportedOnSql8">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SqlGen_ParameterForSkipNotSupportedOnSql8">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SqlGen_PrimitiveTypeNotSupportedPriorSql10(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SqlGen_TypedNaNNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SqlGen_TypedNegativeInfinityNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SqlGen_TypedPositiveInfinityNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SqlProvider_CredentialsMissingForMasterConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SqlProvider_DdlGeneration_MissingInitialCatalog">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SqlProvider_DdlGeneration_StoreGeneratedPatternNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SqlProvider_IncompleteCreateDatabase">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.StackOverflowInParser">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.StorageEntityContainerNameMismatchWhileSpecifyingPartialMapping(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.StoreItemCollectionMustHaveOneArtifact(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SystemNamespaceEncountered(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TableAndSchemaAreMutuallyExclusiveWithDefiningQuery(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TargetRoleNameInNavigationPropertyNotValid(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TextNotAllowed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TooManyAssociationEnds(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TopAndLimitCannotCoexist">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TopAndSkipCannotCoexist">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeArgumentBelowMin(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeArgumentCountMismatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeArgumentExceedsMax(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeArgumentIsNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeArgumentMustBeLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeDeclaredAsAttributeAndElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeDoesNotSupportFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeDoesNotSupportSpec(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeKindMismatch(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeMismatchRelationshipConstaint(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeMustBeDeclared">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeMustBeEntityType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeMustBeInheritableType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeMustBeNominalType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeNameAlreadyDefinedDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeNameNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeNotInAssociationSet(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeNotInEntitySet(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnableToDetermineApplicationContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnableToDetermineStoreVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnableToFindReflectedType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnableToLoadResource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnableToResolveAssembly(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnacceptableUri(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedRootElement(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedRootElementNoNamespace(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedTypeInCollection(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedXmlAttribute(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedXmlElement(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedXmlNodeType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnknownAstCommandExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnknownAstExpressionType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnknownBuiltInAstExpressionType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnknownExpressionResolutionClass(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_AmbiguousForeignKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_AmbiguousServerGenIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_CircularRelationships">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_ConcurrencyError(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_ConstraintCycle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_DuplicateKeys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_ErrorLoadingRecord">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_GeneralExecutionException">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_GeneratedDependent(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_InsertingOrUpdatingReferenceToDeletedEntity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_InvalidChanges">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MappingNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingEntity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingFunctionMapping(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingRequiredEntity(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingRequiredRelationshipValue(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingResultColumn(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_ModifyingIdentityColumn(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NotSupportedComputedKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NotSupportedIdentityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NotSupportedServerGenKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NullReturnValueForNonNullableMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NullValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_ReferentialConstraintIntegrityViolation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_RelationshipCardinalityConstraintViolation(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_RelationshipCardinalityConstraintViolationSingleValue(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_RelationshipCardinalityViolation(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_ReturnValueHasUnexpectedType(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_SqlEntitySetWithoutDmlFunctions(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnableToConvertRowsAffectedParameterToInt32(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedCastArgument(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedExpressionKind(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedExtentType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedJoinType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedProjection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_WorkspaceMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_BaseTypeHasMemberOfSameName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_CollectionHasNoTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_CollectionTypesCannotHaveBaseType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_EmptyIdentity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_FacetHasNoName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_FacetTypeIsNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_ItemAttributeHasNullTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_MemberHasNoName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_MemberHasNullDeclaringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_MemberHasNullTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_MetadataPropertyHasNoName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_NoKeyMembers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_NullableEntityKeyProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_ComplexPropertyNotComplex(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_AmbiguousClrType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_AttributeAssemblyReferenced(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_BaseTypeIncompatible(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_BaseTypeNotLoaded(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_MissingOSpaceType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_MissingRequiredProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_MultipleTypesWithSameName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_NonPrimitiveTypeProperty(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_RelationshipNotLoaded(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_ScalarPropertyMissginGetterOrSetter(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_Convention_Struct(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_InvalidNavPropReturnType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_ScalarPropertyNotPrimitive(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_RefTypeHasNullEntityType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_RefTypesCannotHaveBaseType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_TypeHasNoName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_TypeHasNoNamespace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_TypeUsageHasNullEdmType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ValueNotUnderstood(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen__AssociationEndShouldBeMappedToKey(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_AND">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_AssociationSet_AsUserString(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_AssociationSet_AsUserString_Negated(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_AssociationSetKey_Missing_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Cannot_Disambiguate_MultiConstant_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Cannot_Recover_Attributes_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Cannot_Recover_Types_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_CannotGenerateQueryViewUnderNoValidation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_CommaBlank">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Concurrency_Derived_Class_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Concurrency_Invalid_Condition_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ConfigurationErrorMsg(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_CQ_DomainConstraint_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_CQ_PartitionConstraint_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Duplicate_CProperties_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Duplicate_CProperties_IsMapped_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Entities">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_EntityInstanceToken">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_EntitySet_AsUserString(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_EntitySet_AsUserString_Negated(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_EntitySetKey_Missing_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Error">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_ErrorLog_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_ErrorLog_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ErrorPattern_ConditionMemberIsMapped(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ErrorPattern_DuplicateConditionValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ErrorPattern_NotNullConditionMappedToNullableMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Disj_Eq">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Disj_Subs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Disj_Subs_Ref">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Disj_Unk">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Disj">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Subs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Subs_Ref">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Unk">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Unk_Association">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_MultipleTypesMappedToSameTable_WithoutCondition(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Sub_Disj">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Sub_Eq">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Sub_Eq_Ref">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Sub_Unk">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ErrorPattern_TableMappedToMultipleES(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Extent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Failure">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_4(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_ColumnOrder_Incorrect_8(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_LowerBound_MustBeOne_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_Missing_Relationship_Mapping_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_Missing_Table_Mapping_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_Not_Guaranteed_InCSpace_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_ParentTable_NotMappedToEnd_5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_UpperBound_MustBeOne_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_HashOnMappingClosure_Not_Matching(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_InvalidCondition_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_KeyConstraint_Update_Violation_AssociationSet_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_KeyConstraint_Update_Violation_EntitySet_3(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_KeyConstraint_Violation_5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Missing_Set_Mapping_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Missing_Sets_Mapping_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Missing_Type_Mapping_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_MultipleFragmentsBetweenCandSExtentWithDistinct(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_NegatedCellConstant_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_No_Default_Value_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_No_Default_Value_For_Configuration_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_NoJoinKeyOrFK">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_NonKeyProjectedWithOverlappingPartitions_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_NotNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_NotNull_No_Projected_Slot_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Null">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_NullableMappingForNonNullableColumn(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsEqualTo_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsNonNullable_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsNotEqualTo_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsNotOneOf_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsOneOf_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsOneOfTypes_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustBeEqualTo_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustBeNonNullable_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustBeNull_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustBeOneOf_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustNotBeEqualTo_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustNotBeOneOf_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_QV_RewritingNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_RightSideNotDisjoint(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_TableKey_Missing_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Tuples">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.WildcardEnumeratorReturnedNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityAdapter.IsStateManagerDirty(System.Data.IEntityStateManager)">
    <parameter name="entityCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityAdapter.Update(System.Data.IEntityStateManager)">
    <parameter name="entityCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.Data.EntityClient.EntityCommandDefinition)">
    <parameter name="commandDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.Data.EntityClient.EntityConnection,System.Data.EntityClient.EntityCommandDefinition)">
    <parameter name="entityCommandDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.CreateCommandDefinition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.CreateParameter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.DetermineFunctionImport">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.ExecuteReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.ExecuteReader(System.Data.CommandBehavior)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.ExecuteScalar``1(System.Func{System.Data.Common.DbDataReader,``0})">
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.GetParameterTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.#ctor(System.Data.Common.DbProviderFactory,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="storeProviderFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.ConstantColumnMapGenerator.System#Data#EntityClient#EntityCommandDefinition#IColumnMapGenerator#CreateColumnMap(System.Data.Common.DbDataReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.CreateColumnMap(System.Data.Common.DbDataReader)">
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.CreateCommand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.DetermineStoreResultType(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.FunctionImportMapping,System.Data.EntityClient.EntityCommandDefinition.IColumnMapGenerator@)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.Execute(System.Data.EntityClient.EntityCommand,System.Data.CommandBehavior)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.ExecuteStoreCommands(System.Data.EntityClient.EntityCommand,System.Data.CommandBehavior)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.FunctionColumnMapGenerator.System#Data#EntityClient#EntityCommandDefinition#IColumnMapGenerator#CreateColumnMap(System.Data.Common.DbDataReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.GetTargetFunctionMapping(System.Data.Common.CommandTrees.DbFunctionCommandTree)">
    <parameter name="functionCommandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityClient.EntityCommandDefinition.MappedCommands">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.SyncParameterProperties(System.Data.EntityClient.EntityParameter,System.Data.Common.DbParameter,System.Data.Common.DbProviderServices)">
    <parameter name="entityParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeProviderServices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.ValidateEdmResultType(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
    <parameter name="databaseName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.CreateCommand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityClient.EntityConnection.Database">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.FormatProviderString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="providerString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetErrorMessageWorthyProviderName(System.Data.Common.DbProviderFactory)">
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetFactory(System.String)">
    <parameter name="providerString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetStoreConnection(System.Data.Common.DbProviderFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.LoadEdmItemCollection(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="artifactLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.LoadStoreItemCollections(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection,System.Data.Common.DbProviderFactory,System.Data.Common.DbConnectionOptions,System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connectionOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="artifactLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(System.Boolean,System.Data.Common.DbConnection,System.Data.Common.DbConnection,System.String,System.String,System.Boolean@)">
    <parameter name="storeConnectionToOpen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exceptionCode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.ShouldRecalculateMetadataArtifactLoader(System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoader})">
    <parameter name="loaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.ValidateValueForTheKeyword(System.Data.Common.DbConnectionOptions,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="effectiveConnectionOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keywordName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)">
    <parameter name="keyword">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
    <parameter name="keyword">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityClient.EntityDataReader.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.Data.EntityClient.EntityParameter)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.CloneHelper(System.Data.EntityClient.EntityParameter)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.CloneHelperCore(System.Data.EntityClient.EntityParameter)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.CopyTo(System.Data.Common.DbParameter)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityClient.EntityParameterCollection.InnerList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityParameterCollection.Replace(System.Int32,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameterCollection.Validate(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameterCollection.ValidateType(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateCommand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateConnection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateConnectionStringBuilder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateParameter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.System#IServiceProvider#GetService(System.Type)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderFactory,System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeProviderFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderServices.GetDbProviderManifest(System.String)">
    <parameter name="versionHint">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityCommandCompilationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityCommandExecutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.Data.Metadata.Edm.EntitySet,System.Data.IExtendedDataRecord)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Object)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Object[])">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.String)">
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
    <parameter name="keyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.AddHashValue(System.Int32,System.Object)">
    <parameter name="keyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.CheckKeyValues(System.Data.Metadata.Edm.EntitySet,System.Data.IExtendedDataRecord,System.String[]@,System.Object@,System.Object[]@)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.CheckValue(System.String,System.String,System.Object,System.Data.Metadata.Edm.PrimitiveType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expectedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.CompositeValuesEqual(System.Data.EntityKey,System.Data.EntityKey)">
    <parameter name="key1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.CompositeValuesWithBinaryEqual(System.Data.EntityKey,System.Data.EntityKey)">
    <parameter name="key1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.ConcatKeyValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="metadataWorkspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityKey.GetEntitySetName(System.String,System.String@,System.String@)">
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.GetKeyValueExpressions(System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.KeyValueReader.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityKey.KeyValueReader.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityKey.ValuesEqual(System.String,System.Object,System.Data.EntityKey)">
    <parameter name="key2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.ValuesWithBinaryEqual(System.String,System.Object,System.Data.EntityKey)">
    <parameter name="key2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.AliasResolver.#ctor(System.Data.EntityModel.SchemaObjectModel.Schema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.AliasResolver.Add(System.Data.EntityModel.SchemaObjectModel.UsingElement)">
    <parameter name="usingElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.AliasResolver.CheckForSystemNamespace(System.Data.EntityModel.SchemaObjectModel.UsingElement,System.String,System.Data.EntityModel.SchemaObjectModel.AliasResolver.NameKind)">
    <parameter name="refSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.AliasResolver.TryResolveAlias(System.String,System.String@)">
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.CollectionTypeElement.HandleCollectionTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.CollectionTypeElement.HandleElementTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.CollectionTypeElement.HandleReferenceTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.CollectionTypeElement.HandleRowTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.CollectionTypeElement.HandleTypeRefElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.DocumentationElement.HandleLongDescriptionElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.DocumentationElement.HandleSummaryElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.AreRelationshipEndsEqual(System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSetEnd,System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSetEnd)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.CheckForDuplicateTableMapping(System.Collections.Generic.HashSet{System.String},System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet)">
    <parameter name="tableKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.DuplicateOrEquivalentMemberNameWhileExtendingEntityContainer(System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.EntityModel.SchemaObjectModel.AddErrorKind)">
    <parameter name="schemaElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityContainer.EntitySets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.FindEntitySet(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityContainer.FunctionImports">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.HandleAssociationSetElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.HandleEntitySetElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.HandleExtendsAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.HandleFunctionImport(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityContainer.Members">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityContainer.RelationshipSets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.TypeDefinesNewConcurrencyProperties(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.TypeIsSubTypeOf(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet},System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet@)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseEntitySetTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSet.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSet.HandleEndElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSetEnd.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSetEnd.HandleRoleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSetEnd.InferRelationshipEnd(System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet.HandleDbSchemaAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet.HandleDefiningQueryElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet.HandleTableAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSet.AddEnd(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd,System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet)">
    <parameter name="relationshipEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSet.HasEnd(System.String)">
    <parameter name="role">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSet.InferEntitySet(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="relationshipEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSetEnd.HandleEntitySetAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityKeyElement.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityKeyElement.HandlePropertyRefElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityKeyElement.KeyProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.HandleConstantAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.HandleDefaultAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.HandleMaximumAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.HandleMinimumAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.MaxValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.MinValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FacetEnabledSchemaElement.ParentElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FacetEnabledSchemaElement.TypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetEnabledSchemaElement.ValidateAndSetTypeUsage(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FilteredSchemaElementLookUpTable`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FilteredSchemaElementLookUpTable`2.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FilteredSchemaElementLookUpTable`2.LookUpEquivalentKey(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FilteredSchemaElementLookUpTable`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.#ctor(System.Data.EntityModel.SchemaObjectModel.EntityContainer)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.GetReturnTypeErrorMessage(System.Double,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleAggregateAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleBuiltInAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleCommandTextFunctionElment(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleDbSchemaAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleEntitySetAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleIsComposableFunctionAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleNiladicFunctionAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleParameterElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleParameterTypeSemanticsAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleReturnTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleReturnTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleStoreFunctionNameAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Function.Identity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Function.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.RemoveTypeModifier(System.String@,System.Data.EntityModel.SchemaObjectModel.TypeModifier@,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FunctionImportElement.#ctor(System.Data.EntityModel.SchemaObjectModel.EntityContainer)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ModelFunction.HandleDefiningExpressionElment(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.ModelFunction.TypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ModelFunction.ValidateAndSetTypeUsage(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ModelFunctionTypeElement.GetTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ModelFunctionTypeElement.ResolveNameAndSetTypeUsage(System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ModelFunctionTypeElement.WriteIdentity(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.NavigationProperty.HandleAssociationAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.NavigationProperty.HandleFromRoleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.NavigationProperty.HandleToRoleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.NavigationProperty.ParentElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.OnOperation.HandleActionAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.HandleCollectionTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.HandleModeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.HandleReferenceTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.HandleRowTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.HandleTypeRefElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.ResolveNestedTypeNames(System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.WriteIdentity(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.PrimitiveSchema.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Property.Type">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.PropertyRefElement.ResolveNames(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferenceTypeElement.HandleTypeElementAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraint.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraint.HandleReferentialConstraintDependentRoleElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraint.HandleReferentialConstraintPrincipalRoleElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraint.IsKeyProperty(System.Data.EntityModel.SchemaObjectModel.ReferentialConstraintRoleElement,System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
    <parameter name="roleElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraintRoleElement.HandlePropertyRefElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraintRoleElement.HandleRoleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraintRoleElement.RoleProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Relationship.Constraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Relationship.Ends">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Relationship.HandleConstraintElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Relationship.HandleEndElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Relationship.TryGetEnd(System.String,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd@)">
    <parameter name="roleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.HandleMultiplicityAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.HandleOnDeleteElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.HandleOnOperationElement(System.Xml.XmlReader,System.Data.EntityModel.SchemaObjectModel.Operation)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.Operations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Add(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Contains(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Contains(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.CopyTo(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd[],System.Int32)">
    <parameter name="ends">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.EndLookup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Enumerator.#ctor(System.Collections.Generic.Dictionary{System.String,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd},System.Collections.Generic.List{System.String})">
    <parameter name="keysInDefOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.IsEndValid(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.KeysInDefOrder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Remove(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.System#Collections#Generic#IList{System#Data#EntityModel#SchemaObjectModel#IRelationshipEnd}#IndexOf(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.System#Collections#Generic#IList{System#Data#EntityModel#SchemaObjectModel#IRelationshipEnd}#Insert(System.Int32,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.TryGetEnd(System.String,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.ValidateUniqueName(System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.String)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.HandleCollectionTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.HandleReferenceTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.HandleRowTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.HandleTypeRefElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.ResolveNestedTypeNames(System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.WriteIdentity(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RowTypeElement.GetTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RowTypeElement.HandlePropertyElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RowTypeElement.ResolveNameAndSetTypeUsage(System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RowTypePropertyElement.HandleCollectionTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RowTypePropertyElement.HandleReferenceTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RowTypePropertyElement.HandleRowTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RowTypePropertyElement.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RowTypePropertyElement.HandleTypeRefElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ScalarType.ConvertToByteArray(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ScalarType.TryParse(System.String,System.Object@)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ScalarType.TryParseBinary(System.String,System.Object@)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ScalarType.TryParseGuid(System.String,System.Object@)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.AddAllSchemaResourceNamespaceNames(System.Collections.Generic.HashSet{System.String},System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource)">
    <parameter name="hashSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.AddFunctionType(System.Data.EntityModel.SchemaObjectModel.Function)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Schema.AliasResolver">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.CreateEdmStandardXmlReaderSettings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.CreateXmlReaderSettings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Schema.Functions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleAliasAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleAssociationElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleEntityContainerTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleEntityTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleFunctionElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleInlineTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleModelFunctionElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleProviderAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleProviderManifestTokenAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleTopLevelSchemaElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleTypeInformationElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleUsingElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.InternalParse(System.Xml.XmlReader,System.String)">
    <parameter name="sourceReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.OnSchemaValidationEvent(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.Parse(System.Xml.XmlReader,System.String)">
    <parameter name="sourceReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.ResolveTypeName(System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.String,System.Data.EntityModel.SchemaObjectModel.SchemaType@)">
    <parameter name="usingElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Schema.SchemaSource">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Schema.SchemaTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.AddXmlSchemaToSet(System.Xml.Schema.XmlSchemaSet,System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource,System.Collections.Generic.HashSet{System.String})">
    <parameter name="schemaSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schemasAlreadyAdded">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.ComputeSchemaSet(System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.GetPrimarySchemaNamespaces(System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.TryAddContainer(System.Data.EntityModel.SchemaObjectModel.SchemaType,System.Boolean)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.TryAddType(System.Data.EntityModel.SchemaObjectModel.SchemaType,System.Boolean)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Object)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Int32,System.Int32,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.String,System.Int32,System.Int32,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Xml.XmlReader,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddOtherContent(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.CanHandleAttribute(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.CanHandleElement(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.CreateMetadataPropertyFromOtherNamespaceXmlArtifact(System.String,System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElement.FQName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleBoolAttribute(System.Xml.XmlReader,System.Boolean@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleByteAttribute(System.Xml.XmlReader,System.Byte@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleDocumentationElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleDottedNameAttribute(System.Xml.XmlReader,System.String,System.Func{System.Object,System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleIntAttribute(System.Xml.XmlReader,System.Int32@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleNameAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleText(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleUndottedNameAttribute(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElement.OtherContent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.Parse(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.ParseAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.ParseElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.ParseText(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.SkipThroughElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.Add(`0,System.Boolean,System.Func{System.Object,System.String})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="duplicateKeyErrorFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.GetFilteredEnumerator``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.KeyFromElement(`0)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.KeyToType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.LookUpEquivalentKey(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.TryAdd(`0)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTableEnumerator`2.#ctor(System.Collections.Generic.Dictionary{System.String,`1},System.Collections.Generic.List{System.String})">
    <parameter name="keysInOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTableEnumerator`2.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTableEnumerator`2.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaEntityType.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaEntityType.HandleKeyElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaEntityType.HandleNavigationPropertyElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaEntityType.NavigationProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.AddSchema(System.Data.EntityModel.SchemaObjectModel.Schema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.CheckIsSameVersion(System.Data.EntityModel.SchemaObjectModel.Schema,System.Collections.Generic.IEnumerable{System.Data.EntityModel.SchemaObjectModel.Schema},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="schemaToBeAdded">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schemaCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.IsValidNamespaceName(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.LoadProviderManifest(System.Xml.XmlReader,System.String,System.Boolean,System.Data.EntityModel.SchemaObjectModel.Schema@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.ParseAndValidate(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IEnumerable{System.String},System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.Data.Common.DbProviderManifest,System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema}@)">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.ParseAndValidate(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IEnumerable{System.String},System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.Data.EntityModel.SchemaObjectModel.AttributeValueNotification,System.Data.EntityModel.SchemaObjectModel.AttributeValueNotification,System.Data.EntityModel.SchemaObjectModel.ProviderManifestNeeded,System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.TryGetBaseUri(System.Xml.XmlReader,System.String@)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.UpdateErrorCollectionAndCheckForMaxErrors(System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError},System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError},System.Boolean@)">
    <parameter name="errorCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredProperty.HandleCollectionKindAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredProperty.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredProperty.ResolveType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredType.AddMember(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <parameter name="newMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredType.HandleAbstractAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredType.HandleBaseTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredType.HandlePropertyElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.StructuredType.NamedMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.StructuredType.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TextElement.TextElementTextHandler(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandleFixedLengthElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandleMaxLengthElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandlePrecisionElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandlePrimitiveTypeKindAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandleScaleElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandleUnicodeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeRefElement.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleCollationAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleConcurrencyModeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleDefaultAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleIsFixedLengthAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleMaxLengthAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleNullableAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandlePrecisionAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleScaleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleStoreGeneratedPatternAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleUnicodeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.InternalHandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.TryGetFacets(System.Data.Metadata.Edm.EdmType,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet}@)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetBinaryFacets(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetDecimalFacets(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetStringFacets(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetTypeUsage(System.Data.EntityModel.SchemaObjectModel.ScalarType,System.Boolean)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetTypeUsage(System.Data.Metadata.Edm.EdmType,System.Boolean)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateBinaryDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateBooleanDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateDateTimeDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateDateTimeOffsetDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateDecimalDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateFloatingPointDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType,System.Double,System.Double)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateGuidDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateIntegralDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType,System.Int64,System.Int64)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateLengthFacets(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidatePrecisionFacetsForDateTimeFamily(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateTimeDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.UsingElement.HandleAliasAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.ExtractNamespaceAndName(System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.String,System.String@,System.String@)">
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.ExtractTypeName(System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.String)">
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetBeforeAndAfterLastPeriod(System.String,System.String@,System.String@)">
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetBool(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.Boolean@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetByte(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.Byte@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetDottedName(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.String@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetEverythingAfterLastPeriod(System.String)">
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetEverythingBeforeLastPeriod(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetInt(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.Int32@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetString(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.String@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetUndottedName(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.String@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.IsValidLanguageIndependentIdentifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.ValidateDottedName(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.String)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource.AddEdmSchemaResourceMapEntries(System.Collections.Generic.Dictionary{System.String,System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource},System.Double)">
    <parameter name="schemaResourceMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource.AddMappingSchemaResourceMapEntries(System.Collections.Generic.Dictionary{System.String,System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource},System.Double)">
    <parameter name="schemaResourceMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource.AddStoreSchemaResourceMapEntries(System.Collections.Generic.Dictionary{System.String,System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource},System.Double)">
    <parameter name="schemaResourceMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.XmlSchemaResource.GetMetadataSchemaResourceMap(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityRes.Culture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityRes.GetObject(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityRes.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityRes.GetString(System.String,System.Boolean@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityRes.GetString(System.String,System.Object[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntitySqlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntitySqlException.Create(System.Data.Common.EntitySql.ErrorContext,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntitySqlException.Create(System.String,System.String,System.Int32,System.String,System.Boolean,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntitySqlException.ErrorContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntitySqlException.ErrorDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntitySqlException.FormatErrorContext(System.String,System.Int32,System.String,System.Boolean,System.Int32@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntitySqlException.FormatQueryError(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntitySqlException.GetGenericErrorMessage(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntitySqlException.Message">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AcceptAllChangesFailure(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AcceptChangesEntityKeyIsNotValid">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AddedEntityAlreadyExists(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AddNewOperationNotAllowedOnAbstractBindingList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Argument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Argument(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Argument(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Argument(System.String,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ArgumentNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ArgumentOutOfRange(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ArgumentOutOfRange(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ArrayTooSmall(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AssociationSetNotInCSpace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.BothMinAndMaxValueMustBeSpecifiedForNonConstantFacet(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAccessKeyEntryValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAddMoreThanOneEntityToEntityReference(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAddToFixedSizeArray(System.Object)">
    <parameter name="collectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAttachEntityWithoutKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAttachEntityWithTemporaryKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCallDeleteOnKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotChangeEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotChangeReferentialConstraintProperty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCloneStoreProvider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCreateRelationshipBetweenTrackedAndNoTrackedEntities(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCreateRelationshipEntitiesInDifferentContexts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotDeleteEntityNotInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotDetachEntityNotInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotFillTryDifferentMergeOption(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotFixUpKeyToExistingValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotModifyKeyEntryState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotModifyKeyProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotReEnumerateQueryResults">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotRemergeCollections">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotRemoveFromFixedSizeArray(System.Object)">
    <parameter name="collectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotReplacetheEntityorRow">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotResolveTheEntitySetforGivenEntity(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotSetDefaultContainerName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotSetSpecialKeys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CantModifyRelationState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CantModifyRelationValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CantSetEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ChangedInDifferentStateFromChanging(System.Data.EntityState,System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ChangeOnUnmappedComplexProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ChangeOnUnmappedProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CheckArgumentContainsNull``1(System.Collections.Generic.IEnumerable{``0}@,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CheckArgumentEmpty``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{System.String,System.String},System.String)">
    <parameter name="errorMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckArgumentNull``1(``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CheckArgumentOutOfRange``1(``0[],System.Int32,System.String)">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckContextNull(System.Data.Objects.ObjectContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckEntityKeyNull(System.Data.EntityKey)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckEntityKeysMatch(System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckStringArgument(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CircularRelationshipsWithReferentialConstraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ClientEntityRemovedFromStore(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ClosedDataReaderError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CollectionAlreadyInitialized">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CollectionParameterElementIsNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CollectionParameterElementIsNullOrEmpty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CollectionRelationshipManagerAttached">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandCompilation(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecution(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecution(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecutionDataReaderFieldCountForPrimitiveType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecutionDataReaderMissinDiscriminatorColumn(System.String,System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecutionDataReaderMissingColumnForType(System.Data.Metadata.Edm.EdmMember,System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ComplexChangeRequestedOnScalarProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ComplexObjectAlreadyAttachedToParent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ConflictingChangeOfRelationshipDetected">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Constraint(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ContainerQualifiedEntitySetNameRequired(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ContextMetadataHasChanged">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CurrentValuesDoesNotExist">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.DataReaderClosed(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.DataRecordMustBeEntity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.DetachedObjectStateEntriesDoesNotExistInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.DetermineCollectionType(System.Type)">
    <parameter name="requestedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.DifferentSchemaVersionInCollection(System.String,System.Double,System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.DuplicateTypeForProxyType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitiesHaveDifferentType(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityAlreadyExistsInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityCantHaveMultipleChangeTrackers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityConflictsWithKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityContainterNotFoundForName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityKeyDoesntMatchKeySetOnEntity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.EntityKeyInvalidName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityKeyMustHaveValues(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityKeyValueMismatch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityMustBeUnchangedOrModified(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityMustBeUnchangedOrModifiedOrDeleted(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityNotInObjectSet_Delete(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityNotInObjectSet_Detach(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityNotTracked">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityNotTrackedOrHasTempKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetDoesNotMatch(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetInAnotherContainer(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetIsNotValidForRelationship(System.String,System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetNameOrEntityKeyRequired">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetNotFoundForName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetNotInCSpace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.Data.Common.EntitySql.ErrorContext,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.String,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="queryText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.String,System.String,System.Int32,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="queryText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.EntityTypeDoesNotMatchEntitySet(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityTypesDoNotMatch(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityValueChangedWithoutEntityValueChanging">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ExecuteFunctionCalledWithNonReaderFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ExecuteFunctionTypeMismatch(System.Type,System.Data.Metadata.Edm.EdmType)">
    <parameter name="typeArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expectedElementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ExpectedCollectionGotReference(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ExpectedReferenceGotCollection(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.FunctionDefinitionResultTypeMismatch(System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="generatedDefinitionResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.GenericCheckArgumentNull``1(``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.GetCheapestSafeEnumerableAsCollection``1(System.Collections.Generic.IEnumerable{``0}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="enumerable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.GetCollectionElementType(System.Type)">
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.GetEntityIdentityType(System.Type)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.GetTopProperty(System.Type,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.GetTopProperty(System.Type@,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ImplicitlyClosedDataReaderError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncompatibleArgument">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InconsistentReferentialConstraintProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncorrectNumberOfKeyValuePairs(System.String,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncorrectNumberOfKeyValuePairsInvalidOperation(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncorrectValueType(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncorrectValueTypeInvalidOperation(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IndexBasedInsertIsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IndexOutOfRange(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InternalError(System.Data.EntityUtil.InternalErrorCode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InternalError(System.Data.EntityUtil.InternalErrorCode,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InternalError(System.Data.EntityUtil.InternalErrorCode,System.Int32,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidBufferSizeOrIndex(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidCollectionForMapping(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidCollectionSpecified(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidCommandTimeout(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidConnection(System.Boolean,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidConnection(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidConnectionString(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidContainedTypeCollection(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidContainedTypeReference(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDataAdapter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDataLength(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDataType(System.TypeCode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDefaultContainerName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDestinationBufferIndex(System.Int32,System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityContextForAttach">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntitySetInKey(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntitySetInKeyFromName(System.String,System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntitySetName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntitySetOnEntity(System.String,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityStateArgument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityStateForAttach">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityStateLoad(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityStateSource">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityTypeForObjectSet(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEnumerationValue(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.InvalidKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidMergeOption(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidModifiedPropertyName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidNthElementContextForAttach(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidNthElementNullForAttach(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidNthElementStateForAttach(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidOperation(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidOperation(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidOwnerStateForAttach">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidQualifiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidRefreshMode(System.Data.Objects.RefreshMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidRelationshipFixupDetected(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidRelationshipManagerOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidRelationshipSetName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidRelationshipStateArgument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidSchemaEncountered(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidSourceBufferIndex(System.Int32,System.Int64,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidStringArgument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidTargetRole(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidTypeForComplexTypeProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IsAnICollection(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.IsCatchableEntityExceptionType(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.IsCatchableExceptionType(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ItemCollectionAlreadyRegistered(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ItemDuplicateIdentity(System.String,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ItemInvalidIdentity(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.KeyPropertyDoesntMatchValueInKey(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.KeysRequiredForJoinOverNest(System.Data.Query.InternalTrees.Op)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.KeysRequiredForNesting">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.KeywordNotSupported(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.LessThanExpectedRelatedEntitiesFound">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.LoadCalledOnAlreadyLoadedNoTrackedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.LoadCalledOnNonEmptyNoTrackedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MaterializerUnsupportedType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MemberInvalidIdentity(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Metadata(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Metadata(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MinAndMaxMustBePositive(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MinAndMaxValueMustBeDifferentForNonConstantFacet(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MinAndMaxValueMustBeSameForConstantFacet(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MinMustBeLessThanMax(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MismatchedMergeOptionOnLoad(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingDefaultValueForConstantFacet(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingKeyValue(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingKeyValue(System.String,System.String,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingKeyValueInvalidOperation(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingQualifiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MoreThanExpectedRelatedEntitiesFound">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MoreThanOneItemMatchesIdentity(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MultipleEntitySetsFoundInAllContainers(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MultipleEntitySetsFoundInSingleContainer(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MustUseSequentialAccess">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NestingNotSupported(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Op)">
    <parameter name="parentOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoCollectionForSpace(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoEntitySetFoundForType(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoEntryExistForEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoEntryExistsForObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.NonSequentialChunkAccess(System.Int64,System.Int64,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NonSequentialColumnAccess(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoNullsAllowedInKeyValuePairs(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoRelationshipSetMatched(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotBinaryTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotDateTimeOffsetTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotDateTimeTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotDecimalTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotStringTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotSupported(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotTimeTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NthElementInAddedState(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NthElementIsDuplicate(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NthElementIsNull(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NthElementNotInObjectStateManager(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NullableComplexTypesNotSupported(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NullKeyValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NullOriginalValueForNonNullableProperty(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectContextDisposed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectDisposed(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectDoesNotHaveAKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ObjectNotFound">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectNotFound(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectStateEntryinInvalidState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectStateManagerContainsThisEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectStateManagerDoesnotAllowToReAddUnchangedOrModifiedOrDeletedEntity(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OperationOnReadOnlyCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OperationOnReadOnlyItem">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OriginalValuesDoesNotExist">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OwnerIsNotSourceType(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OwnerIsNull">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProcessStateEntries(System.Collections.Generic.IEnumerable{System.Data.IEntityStateEntry})">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.Provider(System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Provider(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Provider(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProviderDoesNotSupportCommandTrees">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProviderExceptionWithMessage(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProviderIncompatible(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProviderIncompatible(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProxyMetadataIsUnavailable(System.Type,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.QualfiedEntitySetName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.QuoteIdentifier(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.RecyclingEntity(System.Data.EntityKey,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="existingEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ReferenceAlreadyInitialized">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RelatedEndNotAttachedToContext(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RelatedEndNotFound">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RelationshipManagerAttached">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RequiredMetadataNotAvailable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.SetOriginalComplexProperties(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.SetOriginalPrimaryKey(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.SpanPathSyntaxError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.StoreEntityNotPresentInClient">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ThreeValuedAnd(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ThreeValuedNot(System.Nullable{System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ThreeValuedOr(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ThrowSetInvalidValue(System.Object,System.Type,System.String,System.String)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.TryGetICollectionElementType(System.Type,System.Type@)">
    <parameter name="collectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.TryGetProviderInvariantName(System.Data.Common.DbProviderFactory,System.String@)">
    <parameter name="providerFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.TypeNotInAssociationSet(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.TypeNotInEntitySet(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToAddRelationshipWithDeletedEntity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToAddToDisconnectedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToFindRelationshipTypeInMetadata(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToRemoveFromDisconnectedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToRetrieveReferentialConstraintProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnexpectedNullContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnexpectedNullEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnexpectedNullRelationshipManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnknownDataTypeCode(System.Type,System.TypeCode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.Update(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.IEntityStateEntry})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.Update(System.String,System.Exception,System.Data.IEntityStateEntry[])">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UpdateConcurrency(System.Int64,System.Exception,System.Collections.Generic.IEnumerable{System.Data.IEntityStateEntry})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.UpdateEntityMissingConstraintViolation(System.String,System.String,System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UpdateMissingEntity(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UpdateRelationshipCardinalityConstraintViolation(System.String,System.Int32,System.Nullable{System.Int32},System.String,System.Int32,System.String,System.Data.IEntityStateEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ValidateEntitySetInKey(System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValidateEntitySetInKey(System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValidateNecessaryFunctionMapping(System.Data.Mapping.StorageFunctionMapping,System.String,System.Data.IEntityStateEntry,System.String,System.String)">
    <parameter name="functionMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValueInvalidCast(System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValueNullReferenceCast(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.WriteOperationNotAllowedOnReadOnlyBindingList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.FieldNameLookup.#ctor(System.Data.IDataRecord,System.Int32)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.FieldNameLookup.GetOrdinal(System.String)">
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.FieldNameLookup.IndexOf(System.String)">
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.FieldNameLookup.LinearIndexOf(System.String,System.Globalization.CompareOptions)">
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.InternalMappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.InvalidCommandTreeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageComplexPropertyMapping)">
    <parameter name="storageComplexPropertyMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageComplexTypeMapping)">
    <parameter name="storageComplexTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageConditionPropertyMapping)">
    <parameter name="storageConditionPropertyMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="storageEntityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageMappingFragment)">
    <parameter name="storageMappingFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StoragePropertyMapping)">
    <parameter name="storagePropertyMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageScalarPropertyMapping)">
    <parameter name="storageScalarPropertyMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageSetMapping)">
    <parameter name="storageSetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageTypeMapping)">
    <parameter name="storageTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="associationEndMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.AssociationSetEnd)">
    <parameter name="associationSetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.AssociationType)">
    <parameter name="associationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.CollectionType)">
    <parameter name="collectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.ComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="edmFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="edmProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EnumType)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.Facet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.FunctionParameter)">
    <parameter name="functionParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="navigationProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.ReferentialConstraint)">
    <parameter name="referentialConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.RefType)">
    <parameter name="refType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.RelationshipEndMember)">
    <parameter name="relationshipEndMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.CompressingHashBuilder.AppendObjectStartDump(System.Object,System.Int32)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.AddInternalMapping(System.Data.Mapping.ObjectTypeMapping)">
    <parameter name="objectMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.ContainsMap(System.Data.Metadata.Edm.GlobalItem,System.Data.Mapping.ObjectTypeMapping@)">
    <parameter name="cspaceItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.ConvertCSpaceToOSpaceType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="cdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.ConvertOSpaceToCSpaceType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetDefaultMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetObjectMember(System.Data.Metadata.Edm.EdmMember,System.Data.Metadata.Edm.StructuralType)">
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetOCMapForTransientType(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadAssociationTypeMapping(System.Data.Mapping.ObjectTypeMapping,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <parameter name="objectMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadComplexMemberMapping(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.EdmProperty,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingEdmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containingClrMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadEntityTypeOrComplexTypeMapping(System.Data.Mapping.ObjectTypeMapping,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <parameter name="objectMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadObjectMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadObjectMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadScalarPropertyMapping(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadTypeMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.ValidateAllMembersAreMapped(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType)">
    <parameter name="cdmStructuralType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectStructuralType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.ValidateMembersMatch(System.Data.Metadata.Edm.EdmMember,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportEntityTypeMapping.GetDiscriminatorColumns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.FunctionImportEntityTypeMappingConditionValue.ConditionValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.FunctionImportEntityTypeMappingConditionValue.GetConditionValue(System.Type)">
    <parameter name="columnValueType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.#ctor(System.Data.Common.Utils.Boolean.DomainConstraintConversionContext{System.String,System.Data.Mapping.ValueCondition},System.Data.Common.Utils.Boolean.Vertex[])">
    <parameter name="converter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mappingConditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.#ctor(System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Mapping.FunctionImportStructuralTypeMapping},System.Data.Metadata.Edm.ItemCollection)">
    <parameter name="structuralTypeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.ConstructDomainVariables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.ConvertMappingConditionsToVertices(System.Data.Common.Utils.Boolean.ConversionContext{System.Data.Common.Utils.Boolean.DomainConstraint{System.String,System.Data.Mapping.ValueCondition}},System.Data.Common.Utils.Boolean.DomainVariable{System.String,System.Data.Mapping.ValueCondition}[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="converter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="variables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.Discriminate(System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="discriminatorValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.GetExpectedTargetResultType(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.FunctionImportNormalizedEntityTypeMapping.#ctor(System.Data.Mapping.FunctionImportMapping,System.Collections.Generic.List{System.Data.Mapping.FunctionImportEntityTypeMappingCondition},System.Collections.BitArray)">
    <parameter name="columnConditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="impliedEntityTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportReturnTypeEntityTypeColumnsRenameBuilder.#ctor(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntityType,System.Collections.ObjectModel.Collection{System.Data.Mapping.FunctionImportReturnTypePropertyMapping}},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntityType,System.Collections.ObjectModel.Collection{System.Data.Mapping.FunctionImportReturnTypePropertyMapping}})">
    <parameter name="isOfTypeEntityTypeColumnsRenameMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityTypeColumnsRenameMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportReturnTypeEntityTypeColumnsRenameBuilder.SetStructuralTypeColumnsRename(System.Data.Metadata.Edm.EntityType,System.Collections.ObjectModel.Collection{System.Data.Mapping.FunctionImportReturnTypePropertyMapping},System.Boolean)">
    <parameter name="columnsRenameMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumnRenameMapping.AddRename(System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumn)">
    <parameter name="renamedColumn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumnRenameMapping.GetLowestParentInHierachy(System.Collections.Generic.IEnumerable{System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumn})">
    <parameter name="nodesInHierachy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.InputForComputingCellGroups.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.GetMap(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.AddObjectStartDumpToHashBuilder(System.Object,System.Int32)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.GetMappingClosureHash(System.Double,System.Data.Mapping.StorageEntityContainerMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storageEntityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.MetadataMappingHasherVisitor.HashValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.TryAddSeenItem(System.Object,System.Int32@)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.Visit(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="edmFunction">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.Visit(System.Data.Metadata.Edm.EnumType)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.Visit(System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="navigationProperty">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ObjectTypeMapping.#ctor(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ObjectTypeMapping.AddMemberMap(System.Data.Mapping.ObjectMemberMapping)">
    <parameter name="memberMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ObjectTypeMapping.GetPropertyMap(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageAssociationTypeMapping.IsOfTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageAssociationTypeMapping.Types">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageComplexPropertyMapping.TypeMappings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.AddConditionProperty(System.Data.Mapping.StorageConditionPropertyMapping)">
    <parameter name="conditionPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.AddIsOfType(System.Data.Metadata.Edm.ComplexType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.AddProperty(System.Data.Mapping.StoragePropertyMapping)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.AddType(System.Data.Metadata.Edm.ComplexType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageComplexTypeMapping.AllProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.GetOwnerType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageComplexTypeMapping.IsOfTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageComplexTypeMapping.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageComplexTypeMapping.Types">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageConditionPropertyMapping.IsNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageEndPropertyMapping.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.#ctor(System.Data.Metadata.Edm.EntityContainer,System.Data.Metadata.Edm.EntityContainer,System.Data.Mapping.StorageMappingItemCollection,System.Boolean,System.Boolean)">
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.AddAssociationSetMapping(System.Data.Mapping.StorageSetMapping)">
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.AddEntitySetMapping(System.Data.Mapping.StorageSetMapping)">
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.AddFunctionImportMapping(System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportMapping)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.ContainsAssociationSetMapping(System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEntityContainerMapping.EntitySetMaps">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetEntitySetMapping(System.String)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetPrettyPrintString(System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetRelationshipSetMapping(System.String)">
    <parameter name="relationshipSetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetRelationshipSetMappingsFor(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetSetMapping(System.String)">
    <parameter name="setName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.HasQueryViewForSetMap(System.String)">
    <parameter name="setName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEntityContainerMapping.RelationshipSetMaps">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.TryGetFunctionImportMapping(System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportMapping@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntitySetMapping.AddFunctionMapping(System.Data.Mapping.StorageEntityTypeFunctionMapping)">
    <parameter name="functionMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEntitySetMapping.FunctionMappings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageEntitySetMapping.ImplicitlyMappedAssociationSetEnds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityTypeMapping.AddIsOfType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityTypeMapping.AddType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityTypeMapping.GetContainerType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEntityTypeMapping.IsOfTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageEntityTypeMapping.Types">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageFunctionMapping.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Mapping.StorageFunctionParameterBinding},System.Data.Metadata.Edm.FunctionParameter,System.Collections.Generic.IEnumerable{System.Data.Mapping.StorageFunctionResultBinding})">
    <parameter name="parameterBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageFunctionMapping.GetReferencedAssociationSetEnds(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Mapping.StorageFunctionParameterBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameterBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingFragment.AddConditionProperty(System.Data.Mapping.StorageConditionPropertyMapping)">
    <parameter name="conditionPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageMappingFragment.AllProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageMappingFragment.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.List{System.String})">
    <parameter name="storeCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.List{System.String},System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
    <parameter name="storeCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.String[])">
    <parameter name="storeCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.AddInternal(System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="storageMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.CheckForDuplicateItems(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="edmItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.CheckIsSameVersion(System.Double,System.Double,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.FindIfPropertyRequiresOriginalValue(System.Data.Mapping.StoragePropertyMapping,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmMember}@)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetGeneratedView(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetUpdateViewLoader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetViews(System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.HasFixedConcurrencyModeInAnyChildProperty(System.Data.Mapping.StorageComplexPropertyMapping)">
    <parameter name="complexMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.HasMappingFragment(System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.Init(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.List{System.String},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.TryGetFunctionImportTarget(System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.FunctionImportMapping@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.GetGeneratedView(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.StorageMappingItemCollection)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageMappingItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedAddGeneratedViews(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.EntityViewContainer,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="viewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentMappingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedAddGeneratedViewsInEntityViewContainer(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.EntityViewContainer,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityViewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentMappingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedCollectViewsFromObjectCollection(System.Data.Metadata.Edm.MetadataWorkspace,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentMappingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedCollectViewsFromReferencedAssemblies(System.Data.Metadata.Edm.MetadataWorkspace,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentMappingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedGenerateViews(System.Data.Metadata.Edm.EntityContainer,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="resultDictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedGetGeneratedViews(System.Data.Metadata.Edm.EntityContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedVerifyHashOverMmClosure(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Mapping.EntityViewContainer)">
    <parameter name="entityViewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.TryGenerateQueryViewOfType(System.Data.Metadata.Edm.EntityContainer,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean,System.Data.Mapping.ViewGeneration.GeneratedView@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.TryGetCorrespondingStorageEntityContainerMapping(System.Data.Mapping.EntityViewContainer,System.Collections.Generic.IEnumerable{System.Data.Mapping.StorageEntityContainerMapping},System.Data.Mapping.StorageEntityContainerMapping@)">
    <parameter name="viewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerMappingList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.VerifyViewsHaveNotChanged(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.EntityViewContainer)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="viewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.#ctor(System.Xml.XmlReader,System.Data.Mapping.StorageMappingItemCollection,System.String,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EdmMember,System.Collections.Generic.KeyValuePair{System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage}})">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.AddResourceXsdToSchemaSet(System.Xml.Schema.XmlSchemaSet,System.String)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.AddToSchemaErrors(System.String,System.Data.Mapping.StorageMappingErrorCode,System.String,System.Xml.IXmlLineInfo,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.AddToSchemaErrorsWithMemberInfo(System.Func{System.Object,System.String},System.String,System.Data.Mapping.StorageMappingErrorCode,System.String,System.Xml.IXmlLineInfo,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="messageFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.AddToSchemaErrorWithMessage(System.String,System.Data.Mapping.StorageMappingErrorCode,System.String,System.Xml.IXmlLineInfo,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.#ctor(System.Data.Mapping.StorageMappingItemLoader,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="parentLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadAndValidateFunctionMetadata(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.FunctionParameter@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadAssociationEnd(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadAssociationSetFunctionMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EntitySetBase,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadComplexTypeProperty(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.ComplexType@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadEndProperty(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadEntityTypeFunctionMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EntitySetBase,System.Boolean,System.Boolean,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadParameterBindings(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.StructuralType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadResultBindings(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadScalarPropertyParameterBinding(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.StructuralType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetAliasResolvedAttributeValue(System.Xml.XPath.XPathNavigator,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetAttributeValue(System.Xml.XPath.XPathNavigator,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetBoolAttributeValue(System.Xml.XPath.XPathNavigator,System.String,System.Boolean)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetEnumAttributeValue(System.Xml.XPath.XPathNavigator,System.String,System.Data.Metadata.Edm.EnumType,System.String,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetFacetsForDisplay(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetSchemaValidatingReader(System.Xml.XmlReader)">
    <parameter name="innerReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetXmlReaderSettings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.IncrementCount``1(System.Collections.Generic.Dictionary{``0,System.Int32},``0)">
    <parameter name="counts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadAssociationMappingFragment(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageAssociationSetMapping,System.Data.Mapping.StorageAssociationTypeMapping,System.String,System.Data.Metadata.Edm.EntityContainer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadAssociationSetMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadAssociationTypeFunctionMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageAssociationSetMapping,System.Data.Mapping.StorageAssociationTypeMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadAssociationTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageAssociationSetMapping,System.String,System.String,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadComplexPropertyMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadComplexTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadConditionPropertyMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEndPropertyMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEntityContainerMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEntitySetMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEntityTypeFunctionMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntitySetMapping,System.Data.Mapping.StorageEntityTypeMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEntityTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntitySetMapping,System.String,System.Data.Metadata.Edm.EntityContainer,System.Boolean,System.Boolean)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadFunctionImportEntityTypeMappingCondition(System.Xml.XPath.XPathNavigator,System.Collections.Generic.List{System.Data.Mapping.FunctionImportEntityTypeMappingCondition})">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadFunctionImportMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadFunctionImportStructuralType(System.Xml.XPath.XPathNavigator,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.StructuralType},System.String,System.String,System.Collections.ObjectModel.Collection{System.Data.Mapping.FunctionImportReturnTypePropertyMapping},System.Collections.Generic.List{System.Data.Mapping.FunctionImportEntityTypeMappingCondition})">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnRenameMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadFunctionImportStructuralTypeMappingScalarProperty(System.Xml.XPath.XPathNavigator,System.Collections.ObjectModel.Collection{System.Data.Mapping.FunctionImportReturnTypePropertyMapping},System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.StructuralType},System.String,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnRenameMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadMappingChildNodes(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadMappingFragment(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityTypeMapping,System.String,System.Data.Metadata.Edm.EntityContainer,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadMappingItems(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="innerReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadMappingItems(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadQueryView(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageSetMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadScalarPropertyMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.MoveToRootElement(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryGetFunctionImportModelFunction(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EdmFunction@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryGetFunctionImportStoreFunction(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmFunction@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryGetTypedAttributeValue(System.Xml.XPath.XPathNavigator,System.String,System.Type,System.String,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError},System.Object@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryLoadFunctionImportComplexTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportStructuralTypeMapping@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryLoadFunctionImportEntityTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportStructuralTypeMapping@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryParseComplexTypeAttribute(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.ComplexType@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateAllEntityTypesHaveFunctionMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntitySetMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateAndUpdateScalarMemberMapping(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.EdmProperty,System.Xml.IXmlLineInfo)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateAssociationFunctionMappingConsistent(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateFunctionAssociationFunctionMappingUnique(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateFunctionImportMappingParameters(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateFunctionMappingClosure(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateQueryViewsClosure(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.XsdValidationCallBack(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageSetMapping.AddTypeSpecificQueryView(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}},System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageSetMapping.ContainsTypeSpecificQueryView(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}})">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageSetMapping.GetTypeSpecificQueryView(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}})">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageSetMapping.GetTypeSpecificQVKeys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageSetMapping.TypeMappings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageTypeMapping.MappingFragments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.Append(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.AppendLine(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.ComputeHash">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.ComputeHash(System.Security.Cryptography.HashAlgorithm,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.ConvertHashToString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="hash">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.InternalAppend(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.AssociationSetMetadata.#ctor(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.AssociationEndMember})">
    <parameter name="requiredEnds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.CompositeKeyComparer.Equals(System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.CompositeKey)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.CompositeKeyComparer.GetComponentHashCode(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="keyComponent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.CompositeKeyComparer.GetHashCode(System.Data.Mapping.Update.Internal.CompositeKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.CreateComparer(System.Data.Mapping.Update.Internal.KeyManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.Merge(System.Data.Mapping.Update.Internal.KeyManager,System.Data.Mapping.Update.Internal.CompositeKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.#ctor(System.Data.Mapping.Update.Internal.TableChangeProcessor,System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.ModificationOperator,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Common.CommandTrees.DbModificationCommandTree,System.Collections.Generic.Dictionary{System.Int32,System.String})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.CreateCommand(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Collections.Generic.Dictionary{System.Int32,System.Object})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifierValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.GetStateEntries(System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.RebuildCommandTree(System.Data.Common.CommandTrees.DbModificationCommandTree,System.Collections.Generic.Dictionary{System.Data.Common.CommandTrees.DbSetClause,System.Data.Common.CommandTrees.DbSetClause})">
    <parameter name="originalTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clauseMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.ReplaceClauses(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbModificationClause},System.Collections.Generic.Dictionary{System.Data.Common.CommandTrees.DbSetClause,System.Data.Common.CommandTrees.DbSetClause})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="originalClauses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.TryGetSetterExpression(System.Data.Common.CommandTrees.DbModificationCommandTree,System.Data.Metadata.Edm.EdmMember,System.Data.Mapping.Update.Internal.ModificationOperator,System.Data.Common.CommandTrees.DbSetClause@)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractedStateEntry.#ctor(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.IEntityStateEntry)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.StructuralType,System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.CreateEntityKeyResult(System.Data.IEntityStateEntry,System.Data.EntityKey)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.CreateSimpleResult(System.Data.IEntityStateEntry,System.Data.IExtendedDataRecord,System.Data.Mapping.Update.Internal.ExtractorMetadata.MemberInformation,System.Int32,System.Boolean,System.Int32,System.Object)">
    <parameter name="memberInformation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.ExtractResultFromRecord(System.Data.IEntityStateEntry,System.Boolean,System.Data.IExtendedDataRecord,System.Boolean,System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.ModifiedPropertiesBehavior)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.MemberInformation.#ctor(System.Int32,System.Nullable{System.Int32},System.Data.Mapping.Update.Internal.PropagatorFlags,System.Data.Metadata.Edm.EdmMember,System.Boolean,System.Boolean)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.RetrieveMember(System.Data.IEntityStateEntry,System.Data.IExtendedDataRecord,System.Boolean,System.Data.EntityKey,System.Int32,System.Data.Mapping.Update.Internal.ModifiedPropertiesBehavior)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.CreateAssociationSetFunctionMappingTranslator(System.Data.Mapping.StorageAssociationSetMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.CreateEntitySetFunctionMappingTranslator(System.Data.Mapping.StorageEntitySetMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.#ctor(System.Data.Mapping.StorageEntitySetMapping)">
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.BindFunctionParameters(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.ExtractedStateEntry,System.Data.Mapping.StorageFunctionMapping,System.Data.Mapping.Update.Internal.FunctionUpdateCommand,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.AssociationEndMember,System.Data.IEntityStateEntry},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.AssociationEndMember,System.Data.IEntityStateEntry})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentReferenceEnds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="originalReferenceEnds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.GetFunctionMapping(System.Data.Mapping.Update.Internal.ExtractedStateEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.ProcessReferenceCandidate(System.Data.EntityKey,System.Collections.Generic.HashSet{System.Data.IEntityStateEntry},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.AssociationEndMember,System.Data.IEntityStateEntry},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.AssociationEndMember,System.Data.IEntityStateEntry},System.Data.Metadata.Edm.AssociationEndMember,System.Data.IEntityStateEntry)">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentReferenceEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="originalReferenceEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="candidateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.Translate(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.ExtractedStateEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.Translate(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.ExtractedStateEntry)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionUpdateCommand.AddResultColumn(System.Data.Mapping.Update.Internal.UpdateTranslator,System.String,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionUpdateCommand.GetColumnOrdinal(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Common.DbDataReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionUpdateCommand.SetParameterValue(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.StorageFunctionParameterBinding,System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Graph`1.AddEdge(`0,`0)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Graph`1.AddVertex(`0)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.GetKeyIdentifierForMemberOffset(System.Data.EntityKey,System.Int32,System.Int32)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.GetPrincipalValue(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.Partition.AddNode(System.Data.Mapping.Update.Internal.KeyManager,System.Int32)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.Partition.CreatePartition(System.Data.Mapping.Update.Internal.KeyManager,System.Int32,System.Int32)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.Partition.Merge(System.Data.Mapping.Update.Internal.KeyManager,System.Data.Mapping.Update.Internal.KeyManager.Partition)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.RegisterIdentifierOwner(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.RegisterKeyValueForAddedEntity(System.Data.IEntityStateEntry)">
    <parameter name="addedEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.TryGetTempKey(System.Data.EntityKey,System.Data.EntityKey@)">
    <parameter name="valueKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.ValidateReferentialIntegrityGraphAcyclic(System.Int32,System.Byte[],System.Data.Mapping.Update.Internal.KeyManager.LinkedList{System.Int32})">
    <parameter name="color">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.BuildChangeNode(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Cast(System.Object,System.Type)">
    <parameter name="clrPrimitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.ConvertBoolToResult(System.Nullable{System.Boolean},System.Data.Mapping.Update.Internal.PropagatorResult[])">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.ConvertResultToBool(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.CreatePerservedAndKnownResult(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Evaluate(System.Data.Common.CommandTrees.DbExpression,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.Propagator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.EvaluatePredicate(System.Data.Common.CommandTrees.DbExpression,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.Propagator)">
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.PreservedAndKnown(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.PropagateUnknownAndPreserveFlags(System.Data.Mapping.Update.Internal.PropagatorResult,System.Collections.Generic.IEnumerable{System.Data.Mapping.Update.Internal.PropagatorResult})">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.CreateAssociationSetPlaceholder(System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.CreateEntitySetPlaceholder(System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.CreateMemberPlaceholder(System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.CreatePlaceholder(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.InitializeTypeDefaultMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.Visit(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.#ctor(System.Data.Mapping.Update.Internal.ChangeNode,System.Data.Mapping.Update.Internal.ChangeNode,System.Data.Common.CommandTrees.DbJoinExpression,System.Data.Mapping.Update.Internal.Propagator)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.CreateResultTuple(System.Tuple{System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.PropagatorResult},System.Tuple{System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.PropagatorResult},System.Data.Mapping.Update.Internal.ChangeNode)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.LeftPlaceholder(System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.PopulateMode)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.PlaceholderPopulator.Populate(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.PopulateMode,System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="placeholder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="placeholderKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.Propagate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.Propagate(System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.ChangeNode,System.Collections.Generic.Dictionary{System.Data.Mapping.Update.Internal.CompositeKey,System.Tuple{System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.PropagatorResult}},System.Collections.Generic.Dictionary{System.Data.Mapping.Update.Internal.CompositeKey,System.Tuple{System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.PropagatorResult}},System.Collections.Generic.Dictionary{System.Data.Mapping.Update.Internal.CompositeKey,System.Tuple{System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.PropagatorResult}},System.Collections.Generic.Dictionary{System.Data.Mapping.Update.Internal.CompositeKey,System.Tuple{System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.PropagatorResult}})">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftDeletes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftInserts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightDeletes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightInserts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.RightPlaceholder(System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.PopulateMode)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Project(System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Propagate(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <parameter name="umView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateKeyValue(System.Data.Mapping.Update.Internal.PropagatorFlags,System.Object,System.Data.IEntityStateEntry,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateServerGenKeyValue(System.Data.Mapping.Update.Internal.PropagatorFlags,System.Object,System.Data.IEntityStateEntry,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateServerGenSimpleValue(System.Data.Mapping.Update.Internal.PropagatorFlags,System.Object,System.Data.Objects.CurrentValueRecord,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateSimpleValue(System.Data.Mapping.Update.Internal.PropagatorFlags,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateStructuralValue(System.Data.Mapping.Update.Internal.PropagatorResult[],System.Data.Metadata.Edm.StructuralType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.GetMemberValue(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.KeyValue.Merge(System.Data.Mapping.Update.Internal.KeyManager,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.KeyValue.Record">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.KeyValue.ReplicateResultWithNewNext(System.Data.Mapping.Update.Internal.PropagatorResult.KeyValue)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.Merge(System.Data.Mapping.Update.Internal.KeyManager,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="keyManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.Next">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.Record">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.Replace(System.Func{System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult})">
    <parameter name="map">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.SimpleValue.ReplicateResultWithNewFlags(System.Data.Mapping.Update.Internal.PropagatorFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.SimpleValue.ReplicateResultWithNewValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.StateEntry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.StructuralType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.StructuralValue.Replace(System.Func{System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.StructuralValue.ReplaceValues(System.Func{System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="map">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.RecordConverter.ConvertCurrentValuesToPropagatorResult(System.Data.IEntityStateEntry,System.Data.Mapping.Update.Internal.ModifiedPropertiesBehavior)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.RecordConverter.ConvertOriginalValuesToPropagatorResult(System.Data.IEntityStateEntry,System.Data.Mapping.Update.Internal.ModifiedPropertiesBehavior)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.RecordConverter.ConvertStateEntryToPropagatorResult(System.Data.IEntityStateEntry,System.Boolean,System.Data.Mapping.Update.Internal.ModifiedPropertiesBehavior)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.SourceInterpreter.GetAllStateEntries(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.SourceInterpreter.RetrieveResultMarkup(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.#ctor(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.CompileCommands(System.Data.Mapping.Update.Internal.ChangeNode,System.Data.Mapping.Update.Internal.UpdateCompiler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="changeNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.DiagnoseKeyCollision(System.Data.Mapping.Update.Internal.UpdateCompiler,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="change">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.GetKeyConstants(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="row">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.InitializeKeyOrdinals(System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UndirectedGraph`1.AddEdge(`0,`0)">
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UndirectedGraph`1.AddVertex(`0)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UndirectedGraph`1.GenerateConnectedComponents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.AddReferencedEntities(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Common.Utils.KeyToListMap{System.Data.EntityKey,System.Data.Mapping.Update.Internal.UpdateCommand})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referencedEntities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.CompareTo(System.Data.Mapping.Update.Internal.UpdateCommand)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.CompareToType(System.Data.Mapping.Update.Internal.UpdateCommand)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.Equals(System.Data.Mapping.Update.Internal.UpdateCommand)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.Execute(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.EntityClient.EntityConnection,System.Collections.Generic.Dictionary{System.Int32,System.Object},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Data.Mapping.Update.Internal.PropagatorResult,System.Object}})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="generatedValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifierValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.GetRequiredAndProducedEntities(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Common.Utils.KeyToListMap{System.Data.EntityKey,System.Data.Mapping.Update.Internal.UpdateCommand},System.Data.Common.Utils.KeyToListMap{System.Data.EntityKey,System.Data.Mapping.Update.Internal.UpdateCommand},System.Data.Common.Utils.KeyToListMap{System.Data.EntityKey,System.Data.Mapping.Update.Internal.UpdateCommand},System.Data.Common.Utils.KeyToListMap{System.Data.EntityKey,System.Data.Mapping.Update.Internal.UpdateCommand})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="addedEntities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="deletedEntities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="addedRelationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="deletedRelationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.UpdateCommand.Table">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.Update.Internal.UpdateCommand},System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="commands">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.AddForeignKeyEdges(System.Data.Common.Utils.KeyToListMap{System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue,System.Data.Mapping.Update.Internal.UpdateCommand})">
    <parameter name="predecessors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.AddModelDependencies(System.Data.Common.Utils.KeyToListMap{System.Data.EntityKey,System.Data.Mapping.Update.Internal.UpdateCommand},System.Data.Common.Utils.KeyToListMap{System.Data.EntityKey,System.Data.Mapping.Update.Internal.UpdateCommand})">
    <parameter name="producedMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.DetermineForeignKeyPredecessors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue.#ctor(System.Data.Metadata.Edm.ReferentialConstraint,System.Data.Mapping.Update.Internal.PropagatorResult,System.Boolean,System.Boolean)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue.TryCreateSourceKey(System.Data.Metadata.Edm.ReferentialConstraint,System.Data.Mapping.Update.Internal.PropagatorResult,System.Boolean,System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue@)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue.TryCreateTargetKey(System.Data.Metadata.Edm.ReferentialConstraint,System.Data.Mapping.Update.Internal.PropagatorResult,System.Boolean,System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue@)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.InitializeForeignKeyMaps(System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntityContainer},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntitySet},System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.ReferentialConstraint}@,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.ReferentialConstraint}@)">
    <parameter name="containers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildDeleteCommand(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor)">
    <parameter name="oldRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildInsertCommand(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildPredicate(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor,System.Boolean@)">
    <parameter name="referenceRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildSetClauses(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor,System.Boolean,System.Collections.Generic.Dictionary{System.Int32,System.String}@,System.Data.Common.CommandTrees.DbExpression@,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="row">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="originalRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildUpdateCommand(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor)">
    <parameter name="newRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.GenerateEqualityExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Metadata.Edm.EdmProperty,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.GeneratePropertyExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.GenerateValueExpression(System.Data.Metadata.Edm.EdmProperty,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.GetTarget(System.Data.Mapping.Update.Internal.TableChangeProcessor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.ConstructNotSupportedException(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.#ctor(System.Data.IEntityStateManager,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.EntityClient.EntityConnection,System.Nullable{System.Int32})">
    <parameter name="metadataWorkspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.AcceptChanges(System.Data.IEntityAdapter)">
    <parameter name="adapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.AlignReturnValue(System.Object,System.Data.Metadata.Edm.EdmMember,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.UpdateTranslator.CommandTimeout">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.CreateCommand(System.Data.Common.CommandTrees.DbModificationCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.DependencyOrderingError(System.Collections.Generic.IEnumerable{System.Data.Mapping.Update.Internal.UpdateCommand})">
    <parameter name="remainder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GenerateCommandDefinition(System.Data.Mapping.StorageFunctionMapping)">
    <parameter name="functionMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetDynamicModifiedExtents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetExtentFunctionModifications(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetExtentModifications(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetExtractorMetadata(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.StructuralType)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetFunctionModifiedExtents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetKeyMemberOffset(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.EdmProperty,System.Int32@)">
    <parameter name="role">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetRelationships(System.Data.EntityKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.LoadStateEntry(System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RegisterEntityReferentialConstraints(System.Data.IEntityStateEntry,System.Boolean)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RegisterReferentialConstraints(System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.AddExistingRelationship(System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship.#ctor(System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationSet,System.Data.IEntityStateEntry)">
    <parameter name="toEntityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship.AddToEquivalenceSet(System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship.Equals(System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.GetDirectionalRelationshipCountDelta(System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship)">
    <parameter name="expectedRelationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.GetReferencingAssocationSets(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.RegisterAssociation(System.Data.Metadata.Edm.AssociationSet,System.Data.IExtendedDataRecord,System.Data.IEntityStateEntry)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.RegisterEntity(System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RequiresContext(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.SetServerGenValue(System.Data.Mapping.Update.Internal.PropagatorResult,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.Update(System.Data.IEntityStateManager,System.Data.IEntityAdapter)">
    <parameter name="adapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.ValidateAndRegisterStateEntry(System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.ValidateRecord(System.Data.Metadata.Edm.EntitySetBase,System.Data.IExtendedDataRecord,System.Data.IEntityStateEntry)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.VerifyExtent(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.GetAssociationSetMetadata(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.GetFunctionMappingTranslator(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.InitializeEntitySet(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.InitializeFunctionMappingTranslators(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.SyncGetValue``2(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace,System.Collections.Generic.Dictionary{``0,``1},``0)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.SyncInitializeEntitySet``2(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace,System.Func{``0,``1},``0)">
    <parameter name="evaluate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ValueCondition.Equals(System.Data.Mapping.ValueCondition)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.GroupByRightExtent(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsContainedIn(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="n1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsDisjoint(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="n1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsEquivalentTo(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="n1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsolateByOperator(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsolateUnions(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.TryAddChildToGroup(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode)">
    <parameter name="childNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.ExpandCells(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.ExtractProperties(System.Collections.Generic.IEnumerable{System.Data.Mapping.StoragePropertyMapping},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.BoolExpression@,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.BoolExpression@)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sRootExtent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.GenerateCells(System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.GetConditionExpression(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.StorageConditionPropertyMapping)">
    <parameter name="conditionMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.IsBooleanMember(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.TryCreateAdditionalCellWithCondition(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean,System.Data.Mapping.ViewGeneration.Structures.ViewTarget,System.Data.Mapping.ViewGeneration.Structures.Cell@)">
    <parameter name="originalCell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberToExpand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellGroupValidator.CheckImplication(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint},System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint})">
    <parameter name="cViewConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sViewConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellGroupValidator.CheckImplicationKeyConstraints(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint},System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint})">
    <parameter name="leftViewConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightViewConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellGroupValidator.ConstructCellRelationsWithConstraints(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint},System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <parameter name="cConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellGroupValidator.ExtentPair.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellGroupValidator.PopulateBaseConstraints(System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation,System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <parameter name="baseRelation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellGroupValidator.PropagateConstraints(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellPartitioner.AreCellsConnectedViaRelationship(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <parameter name="cell1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cell2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellPartitioner.GenerateConnectedComponents(System.Data.Mapping.Update.Internal.UndirectedGraph{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="graph">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellPartitioner.GroupRelatedCells">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellPartitioner.OverlapViaForeignKeys(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <parameter name="cell1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cell2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.#ctor(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.GroupLeafChildrenByExtent(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.GroupNonAssociativeLeafChildren(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.MergeBoolExpressions(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conjunct1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conjunct2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.MergeNodes(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.RestructureTreeForMerges(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.SimplifyTreeByMergingNodes(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellTreeSimplifier.TryMergeTwoCellQueries(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.CellQuery@)">
    <parameter name="query1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.AliasedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.AliasedSlot.CqlFieldAlias(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.AliasedSlot.FullCqlAlias">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.BooleanProjectedSlot.#ctor(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.BooleanProjectedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.BooleanProjectedSlot.CqlFieldAlias(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CaseCqlBlock.#ctor(System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Int32,System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock.#ctor(System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slotInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock.AsCql(System.Text.StringBuilder,System.Boolean,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock.GenerateProjectedtList(System.Text.StringBuilder,System.Int32,System.String,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock.GenerateProjectedtList(System.Text.StringBuilder,System.Int32,System.String,System.Data.Mapping.ViewGeneration.Structures.CellQuery.SelectDistinct,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlWriter.AppendEscapedName(System.Text.StringBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlWriter.AppendEscapedQualifiedName(System.Text.StringBuilder,System.String,System.String)">
    <parameter name="name1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlWriter.AppendEscapedTypeName(System.Text.StringBuilder,System.Data.Metadata.Edm.EdmType)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlWriter.GetQualifiedName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.ExtentCqlBlock.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.CellQuery.SelectDistinct,System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.JoinCqlBlock.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.JoinCqlBlock.OnClause},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slotInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.JoinCqlBlock.OnClause.AsCql(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.JoinCqlBlock.OnClause.SingleClause.AsCql(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo.AsCql(System.Text.StringBuilder,System.String,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo.CqlFieldAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.UnionCqlBlock.#ctor(System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slotInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.ConstructCaseBlocks(System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Int32,System.Boolean[],System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement})">
    <parameter name="parentRequiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.CreateSlotInfosForCaseStatement(System.Boolean[],System.Int32,System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.CaseStatement,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentRequiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childBlock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisCaseStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.FindNextCaseStatementSlot(System.Int32,System.Boolean[],System.Int32)">
    <parameter name="parentRequiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.GenerateCql">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.GetRequiredSlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.GetRequiredSlotsForCaseMember(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean[])">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.GetSlotIndex(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.#ctor(System.Data.Common.CommandTrees.DbPropertyExpression,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Object,System.Data.Metadata.Edm.EntityType}},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EdmProperty,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.RelProperty,System.Data.Common.CommandTrees.DbExpression},System.Data.Metadata.Edm.EntitySet)">
    <parameter name="typeMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.CheckForMissingRelProperties(System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.RelProperty,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntityType,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty}})">
    <parameter name="relPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeToRelPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.ExpressionsCompatible(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.TryCreateDiscriminatorMap(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Mapping.ViewGeneration.DiscriminatorMap@)">
    <parameter name="queryView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.TryMatchEntityTypeConstructor(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EdmProperty,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.RelProperty,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntityType,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty}},System.Data.Metadata.Edm.EntityType@)">
    <parameter name="then">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeToRelPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.GeneratedView.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EdmType,System.String,System.Data.Mapping.StorageMappingItemCollection,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cqlString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mappingItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.GeneratedView.GetCommandTree(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.GeneratedView.GetInternalTree(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.GeneratedView.ParseView(System.Data.Mapping.StorageMappingItemCollection,System.Boolean)">
    <parameter name="mappingItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.AntiSemiJoin(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.IsContainedIn(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.IsEquivalentTo(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.Join(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.Union(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.#ctor(System.String,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Create(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Create(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Create(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CellQuery)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cellQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Create(System.String,System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean,System.Data.Mapping.ViewGeneration.Structures.CellQuery)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cellQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="roleBoolean">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.CreateMemberCondition(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.Constant,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Description">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.FragmentQueryEqualityComparer.Equals(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.FragmentQueryEqualityComparer.GetHashCode(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="q">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.GetEqualityComparer(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateAssociationConstraints(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateEquivalenceConstraintForOneToOneForeignKeyAssociation(System.Data.Metadata.Edm.AssociationSet,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateIsOfTypeCondition(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmType},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="derivedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateVariableConstraints(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateVariableConstraintsRecursion(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.AttributeSetComparator.Equals(System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.AttributeSetComparator.GetHashCode(System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.IsContainedIn(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="q1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="q2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.IsDisjointFrom(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="q1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="q2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.IsEquivalentTo(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="q1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="q2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.IsSatisfiable(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.Merge(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="qp1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="qp2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.#ctor(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.#ctor(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.ViewGenerationMode)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.AddElseDefaultToCaseStatement(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CaseStatement,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="caseStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightDomainQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unionCaseRewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.AddRewritingToCaseStatement(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.Structures.CaseStatement,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.Constant)">
    <parameter name="caseStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.AddUnrecoverableAttributesError(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainAddedWhereClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CoverAttribute(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="projectedAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeConditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CoverAttributes(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="rewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeConditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateMemberCondition(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.Constant)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateMemberConditionQuery(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.Constant)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateMemberConditionQuery(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.Constant,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateTile(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.EnsureConfigurationIsFullyMapped(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.EnsureExtentIsFullyMapped(System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.FindRewriting(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath}@)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.FindRewritingAndUsedViews(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@)">
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.FindRewritingAndUsedViews(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath}@)">
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GenerateCaseStatements(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetConditionalComplexMembers(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetConditionalScalarMembers(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetDomain(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetDomainQuery(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fragmentQueries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetNonConditionalComplexMembers(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetNonConditionalScalarMembers(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetTopLevelWhereClause(System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetTypeBasedMemberPathList(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nonConditionalScalarAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetUsedViewsAndRemoveTrueSurrogate(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.IsDefaultValue(System.Data.Mapping.ViewGeneration.Structures.Constant,System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="domainValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.IsTrue(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.NonKeys(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.PrintStatistics(System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor{System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}})">
    <parameter name="qp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.RemapFromVariables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.RewriteQuery(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath}@,System.Boolean)">
    <parameter name="toFill">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.RewriteQueryCached(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@)">
    <parameter name="toFill">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.TileToBoolExpr(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.TileToCellTree(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.ViewgenContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.TraceVerbose(System.String,System.Object[])">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingPass`1.AvailableViews">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingPass`1.RewriteQueryInternal(`0,`0,`0@,System.Collections.Generic.List{`0},System.Collections.Generic.HashSet{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor{`0})">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="recentlyUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="qp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingPass`1.TryAntiSemiJoin(`0,`0@)">
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingPass`1.TryJoin(`0,`0@)">
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.GatherViews(`0,System.Collections.Generic.HashSet{`0})">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.IsContainedIn(`0,`0)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.IsDisjointFrom(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.IsEquivalentTo(`0,`0)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.Join(`0,`0)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.RandomPermutation``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.RewriteQuery(`0,`0,System.Collections.Generic.IEnumerable{`0},`0@)">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.RewriteQueryOnce(`0,`0,System.Collections.Generic.IEnumerable{`0},`0@)">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingSimplifier`1.GetRewritingHalf(`0,`0,System.Data.Mapping.ViewGeneration.QueryRewriting.TileOpKind)">
    <parameter name="remainingView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="halfRewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingSimplifier`1.SimplifyRewritingOnce(`0,System.Collections.Generic.HashSet{`0},`0@)">
    <parameter name="remainingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newRewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.AsNegatedUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.GetRequiredSlots(System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Boolean[])">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.Tile`1.Arg1">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.Tile`1.Arg2">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.Tile`1.Description">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.TileBinaryOperator`1.Description">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileBinaryOperator`1.Replace(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.AntiSemiJoin(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.GetArg1(`0)">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.GetArg2(`0)">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.GetOpKind(`0)">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.IsEmpty(`0)">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.Join(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.Union(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.CreateDerivedViewBySelectingConstantAttributes(`0)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.Difference(`0,`0)">
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.Intersect(`0,`0)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.IsSatisfiable(`0)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.Union(`0,`0)">
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.#ctor(System.Data.Common.Utils.Boolean.ExprType,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.BoolExpression})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AddConjunctionToBools(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.BoolExpression},System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bools">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsCqlVisitor.AsCql(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Text.StringBuilder,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsCqlVisitor.VisitAndOr(System.Data.Common.Utils.Boolean.TreeExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Data.Common.Utils.Boolean.ExprType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsCqlVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsUserStringVisitor.AsUserString(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Text.StringBuilder,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsUserStringVisitor.VisitAndOr(System.Data.Common.Utils.Boolean.TreeExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Data.Common.Utils.Boolean.ExprType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsUserStringVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.BoolComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.BoolComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CompactStringVisitor.ToBuilder(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Text.StringBuilder)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CompactStringVisitor.VisitAndOr(System.Data.Common.Utils.Boolean.TreeExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.Create(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.Create(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateAnd(System.Data.Mapping.ViewGeneration.Structures.BoolExpression[])">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateAndNot(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateLiteral(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateNot(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateOr(System.Data.Mapping.ViewGeneration.Structures.BoolExpression[])">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.FixRangeVisitor.FixRange(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.FixRangeVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.GetBoolLiteral(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="term">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.IsFinalVisitor.IsFinal(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.IsFinalVisitor.VisitAndOr(System.Data.Common.Utils.Boolean.TreeExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.MakeCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapBoolVisitor.RemapExtentTreeNodes(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapBoolVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapLiterals(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.BoolLiteral})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RequiredSlotsVisitor.GetRequiredSlots(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Boolean[])">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RequiredSlotsVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.GetTerms(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Boolean)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.VariableConstraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.Variables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.AsNegatedUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.BoolLiteralComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.BoolLiteralComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.FixRange(System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="memberDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.GetDomainBoolExpression(System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.GetRequiredSlots(System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Boolean[])">
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.IdentifierComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.IdentifierComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.MakeTermExpression(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Constant})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.MakeTermExpression(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.AddWhenThen(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.AppendWithBlock(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement},System.Data.Metadata.Edm.EdmType,System.String,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="withStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.AppendWithBlock(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement},System.String,System.Int32,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.AsCql(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement},System.String,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.CaseSlotValueAsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.MakeCaseWithAliasedSlots(System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.WhenThen.ReplaceWithAliasedSlot(System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatementProjectedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.#ctor(System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.Cell.CellNumberAsString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.CellsToBuilder(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.CreateCS(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellLabel,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.GetCSlotsForTableColumns(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.GetIdentifiers(System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.AsNegatedUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.SlotName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellLabel.#ctor(System.Data.Mapping.StorageMappingFragment)">
    <parameter name="fragmentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellLabel.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellLabel)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.#ctor(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CellQuery.SelectDistinct)">
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellQuery)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[])">
    <parameter name="existing">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.AreSlotsEquivalentViaRefConstraints(System.Collections.ObjectModel.ReadOnlyCollection{System.Int32})">
    <parameter name="cSideSlotIndexes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CheckForDuplicateFields(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="cQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CheckForProjectedNotNullSlots(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="sourceCell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CreateBasicCellRelation(System.Data.Mapping.ViewGeneration.Validation.ViewCellRelation)">
    <parameter name="viewCellRelation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CreateFieldAlignedCellQueries(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Data.Mapping.ViewGeneration.Structures.CellQuery@,System.Data.Mapping.ViewGeneration.Structures.CellQuery@)">
    <parameter name="otherQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetAllQuerySlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetAssociationEndSlots(System.Data.Metadata.Edm.AssociationEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetIdentifiers(System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetProjectedPosition(System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetProjectedPositions(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetProjectedPositions(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Collections.Generic.List{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="slotsToSearchFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetProjectedPositions(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.ToESqlString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.UpdateWhereClause(System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.VerifyKeysPresent(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Func{System.Object,System.Object,System.String},System.Func{System.Object,System.Object,System.Object,System.String},System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="formatEntitySetMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="formatAssociationSetMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.WhereClauseToUserString(System.Text.StringBuilder,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.Accept``2(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor{``0,``1},``0)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.Accept``2(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.SimpleCellTreeVisitor{``0,``1},``0)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.AssociativeOpFlatteningVisitor.Flatten(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.AssociativeOpFlatteningVisitor.VisitLeaf(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.AssociativeOpFlatteningVisitor.VisitOpNode(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitFullOuterJoin(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitInnerJoin(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitLeftAntiSemiJoin(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitLeftOuterJoin(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitUnion(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.DefaultCellTreeVisitor`1.AcceptChildren(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.FlatteningVisitor.Flatten(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.FlatteningVisitor.VisitLeaf(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.GetLeaves">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.GetProjectedSlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.LeafVisitor.GetLeaves(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.LeafVisitor.VisitLeaf(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.LeafVisitor.VisitOpNode(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.SimpleCellTreeVisitor`2.VisitLeaf(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.SimpleCellTreeVisitor`2.VisitOpNode(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.ToCqlBlock(System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32@,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.WithStatement}@)">
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="withStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Constant.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Constant.CellConstantComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.Constant,System.Data.Mapping.ViewGeneration.Structures.Constant)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Constant.CellConstantComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.Constant)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Constant.ConstantsToUserString(System.Text.StringBuilder,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant})">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Constant.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Constant.InternalToString(System.Text.StringBuilder,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Constant.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ConstantProjectedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ConstantProjectedSlot.IsEqualTo(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.AddIdentifier(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.GetBlockAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.GetBlockAlias(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.GetFromVariable(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.GetNonConflictingName(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Metadata.Edm.EdmItemCollection,System.Boolean)">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Constant})">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Constant})">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.#ctor(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmItemCollection,System.Boolean)">
    <parameter name="memberPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.#ctor(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmItemCollection,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.#ctor(System.Data.Metadata.Edm.EnumType)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.CheckTwoDomainInvariants(System.Data.Mapping.ViewGeneration.Structures.Domain,System.Data.Mapping.ViewGeneration.Structures.Domain)">
    <parameter name="domain1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domain2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.GetDefaultValueForMemberPath(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper},System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.GetNegatedConstant(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Constant})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.Intersect(System.Data.Mapping.ViewGeneration.Structures.Domain)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Domain.TryGetDefaultValueForMemberPath(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.Constant@)">
    <parameter name="memberPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Merge(System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.#ctor(System.Boolean,System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode,System.String,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.String)">
    <parameter name="sourceCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.#ctor(System.Data.Metadata.Edm.EdmSchemaError)">
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.GetUserLinesFromCells(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Text.StringBuilder,System.Boolean)">
    <parameter name="lineBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.Init(System.Boolean,System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode,System.String,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.String)">
    <parameter name="sourceCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.InternalToString(System.String,System.String,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.Cell},System.String,System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="keyFields">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.GetKeyForRelationType(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.AssociationType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.GetKeysForEntityType(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.GetPrimaryKeyForEntityType(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.#ctor(System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="cellWrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.#ctor(System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="cellWrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.Children">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.GetForeignKeyEndMapFromAssocitionMap(System.Data.Mapping.StorageAssociationSetMapping,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="colocatedAssociationSetMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.LeafCellTreeNodeComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.LeafCellTreeNodeComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.ToCompactString(System.Text.StringBuilder)">
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.TryGetWithStatement(System.Data.Mapping.StorageAssociationSetMapping,System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo}@,System.Data.Mapping.ViewGeneration.Structures.WithStatement@)">
    <parameter name="sRootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="colocatedAssociationSetMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisExtent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="foreignKeySlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.BoolWrapperComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.BoolWrapperComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.CellIdComparer.Compare(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.CreateRoleBoolean">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.GetCSideMappedSlotForSMember(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.GetExtentListAsUserString(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrappers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.GetLeftSideMappedSlotForRightSideMember(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.GetRightSideMappedSlotForLeftSideMember(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.LeftCellWrapperComparer.Compare(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.OriginalCellNumberString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper.WrappersToStringBuilder(System.Text.StringBuilder,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper},System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap.PropagateUpdateDomainToQueryDomain(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="updateDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.#ctor(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember})">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.AreAllMembersNullable(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.AreAssocationEndPathsEquivalentViaRefConstraint(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="assocPath0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assocPath1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.AsCql(System.Text.StringBuilder,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.MemberPath.CqlFieldAlias">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.Equals(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.GetCorrespondingAssociationPath(System.Data.Metadata.Edm.AssociationSet)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.GetIdentifiers(System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.GetKeyMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.IsEquivalentViaRefConstraint(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="path1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.MemberPathComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.MemberPathComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.PropertiesToUserString(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.ToCompactString(System.Text.StringBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot.GetKeySlots(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot.GetSlotForMember(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot.GetSlots(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot.IsEqualTo(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot.MemberProjectedSlotEqualityComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot,System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot.MemberProjectedSlotEqualityComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot.RemapSlot(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex.Create(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EdmItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex.CreateIndex(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex.GatherPartialSignature(System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Data.Metadata.Edm.EdmItemCollection,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean)">
    <parameter name="index">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex.GatherSignatureFromScalars(System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmType,System.Boolean)">
    <parameter name="index">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="possibleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex.GatherSignaturesFromNonScalars(System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Data.Metadata.Edm.EdmItemCollection,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmType,System.Boolean)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="possibleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="index">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex.IndexOf(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex.KeySlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberRestriction.CreateFullOneOfConst(System.Data.Mapping.ViewGeneration.Structures.MemberRestriction,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Constant})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="restriction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberRestriction.Factory(System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot,System.Data.Mapping.ViewGeneration.Structures.Domain,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberRestriction.ToUserString(System.Boolean,System.Text.StringBuilder,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedConstant.AsCql(System.Text.StringBuilder,System.String,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedConstant.AsUserString(System.Text.StringBuilder,System.String,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedConstant.Contains(System.Data.Mapping.ViewGeneration.Structures.Constant)">
    <parameter name="constant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedConstant.CreateNotNull">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedConstant.GenerateAndsForSlot(System.Text.StringBuilder,System.String,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedConstant.ToStringHelper(System.Text.StringBuilder,System.String,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.#ctor(System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.Accept``2(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor{``0,``1},``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.AddCaseForOuterJoins(System.Data.Mapping.ViewGeneration.Structures.CaseStatement,System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Int32,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="caseForOuterJoins">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.AndWith(System.Boolean[],System.Boolean[])">
    <parameter name="boolArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="another">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.GenerateFragmentQuery(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode},System.Boolean,System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType)">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.GetInnerJoinChildForSlot(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Int32)">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.GetJoinSlotInfo(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Boolean,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Int32,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.JoinToCqlBlock(System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32@,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.WithStatement}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.OpToCql(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.ToCqlBlock(System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32@,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.WithStatement}@)">
    <parameter name="withStatements">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.UnionToCqlBlock(System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32@,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.WithStatement}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.BoolIndexToSlot(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.CqlFieldAlias(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.Equals(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.GetMemberPath(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.IsBoolSlot(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.IsEqualTo(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.IsKeySlot(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.MakeAliasedSlot(System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.ProjectedSlotComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.ProjectedSlotComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.RemapSlot(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.SlotToBoolIndex(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.TryMergeRemapSlots(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[]@)">
    <parameter name="slots2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="slots1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.TryMergeSlots(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[]@)">
    <parameter name="slots1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="slots2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ScalarConstant.AppendEscapedScalar(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ScalarConstant.InternalToString(System.Text.StringBuilder,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ScalarConstant.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ScalarRestriction.ToStringHelper(System.Text.StringBuilder,System.String,System.Boolean,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.TypeConstant.InternalToString(System.Text.StringBuilder,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.TypeConstant.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.WithStatement.AsCql(System.Text.StringBuilder,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.WithStatement.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExceptionHelpers.ThrowMappingException(System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExceptionHelpers.ThrowMappingException(System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="errorRecord">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExternalCalls.CompileFunctionDefinition(System.String,System.String,System.Collections.Generic.IList{System.Data.Metadata.Edm.FunctionParameter},System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="functionParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExternalCalls.CompileView(System.String,System.Data.Mapping.StorageMappingItemCollection,System.Data.Common.EntitySql.ParserOptions.CompilationMode)">
    <parameter name="mappingItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExternalCalls.GetItemCollection(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExternalCalls.IsReservedKeyword(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Validation.ViewCellRelation,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot})">
    <parameter name="viewCellRelation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.AddKeyConstraints(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.ExtentKey},System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.PopulateKeyConstraints(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.PopulateKeyConstraintsForEntitySet(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.PopulateKeyConstraintsForRelationshipSet(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint.Propagate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ConditionComparer.Equals(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant}},System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="two">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="one">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ConditionComparer.GetHashCode(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.#ctor(System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.BuildCommaSeparatedErrorString``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.CheckForStoreConditions(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.Compare(System.Boolean,System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.ComparisonOP,System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftWrapper1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftWrapper2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.CompareC(System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.ComparisonOP,System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="leftWrapper2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftWrapper1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.CompareS(System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.ComparisonOP,System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="leftWrapper2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftWrapper1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.CreateRightFragmentQuery(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.CSideHasDifferentEntitySets(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.FindMappingErrors(System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.GetRightMemberPath(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="leftCellWrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conditionMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.GetTypesAndConditionForWrapper(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Boolean@,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmType}@)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.HasNotNullCondition(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="cellQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.IsMemberPartOfNotNullCondition(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <parameter name="wrappers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.RightSideEqual(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <parameter name="wrapper1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrapper2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.ToIEnum(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.#ctor(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty},System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty})">
    <parameter name="properties1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.#ctor(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty},System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty})">
    <parameter name="i_parentColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="i_childColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.CheckConstraintWhenOnlyParentMapped(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.CheckConstraintWhenParentChildMapped(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.CheckParentColumnsForForeignKey(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Metadata.Edm.AssociationEndMember,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record}@)">
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.FindEntitySetForColumnsMappedToEntityKeys(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GetForeignConstraints(System.Data.Metadata.Edm.EntityContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GetRelationEndForColumns(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GetSlotNumsForColumns(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GuaranteeForeignKeyConstraintInCSpace(System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="childRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GuaranteeMappedRelationshipForForeignKey(System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="childRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.IsConstraintRelevantForCells(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.#ctor(System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.AddNullConditionOnCSideFragment(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberMaps)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.CheckConstraintsOnNonNullableMembers(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.MemberValueBinding,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode},System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.CheckConstraintsOnProjectedConditionMembers(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.MemberValueBinding,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode},System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="memberValueTrees">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.CheckEquivalence(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.BoolExpression@)">
    <parameter name="cQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.CreateMemberValueTrees(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.DomainConstraintVisitor.CheckConstraints(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.EntityConfigurationToUserString(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.EntityConfigurationToUserString(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Text.StringBuilder,System.Boolean)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.MemberValueBinding.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.PropagateCellConstantsToWhereClause(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.Constant,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberMaps)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.ReportConstraintViolation(System.String,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper})">
    <parameter name="extraConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relevantWrappers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.WhereClauseVisitor.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.MemberValueBinding,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <parameter name="topLevelTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.WhereClauseVisitor.GetCellTreeNode(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="whereClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.WhereClauseVisitor.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.WhereClauseVisitor.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.Constant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints`1.ConstraintsToBuilder``1(System.Collections.Generic.IEnumerable{``0},System.Text.StringBuilder)">
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellRelation.#ctor(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot},System.Int32)">
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellRelation.LookupViewSlot(System.Data.Mapping.ViewGeneration.Structures.MemberProjectedSlot)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.IsEqualTo(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.SlotsToUserString(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.SlotToUserString(System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot,System.Boolean)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.ViewCellSlotEqualityComparer.Equals(System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot,System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.ViewCellSlotEqualityComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint.GetErrorRecord(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rightKeyConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint.GetErrorRecord(System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rightKeyConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint.Implies(System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint)">
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenContext.#ctor(System.Data.Mapping.ViewGeneration.Structures.ViewTarget,System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="updateDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenContext.AlignFields(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.MemberProjectionIndex,System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenContext.CreateConstraintsForForeignKeyAssociationsAffectingThisWarapper(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="rightKB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenContext.CreateLeftCellWrappers(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <parameter name="extentCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenContext.SetCachedRewriting(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenContext.TryGetCachedRewriting(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.CreateViewgenContext(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.ViewTarget,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateAllBidirectionalViews(System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateDirectionalViews(System.Data.Mapping.ViewGeneration.Structures.ViewTarget,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateDirectionalViewsForExtent(System.Data.Mapping.ViewGeneration.Structures.ViewTarget,System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateQueryViewForExtentAndType(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Data.Mapping.ViewGeneration.ViewGenerationMode)">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateQueryViewForSingleExtent(System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Data.Mapping.ViewGeneration.ViewGenerationMode)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateSimplifiedView(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper})">
    <parameter name="basicView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="usedCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateViewsForExtentAndType(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.ViewgenContext,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Data.Mapping.ViewGeneration.ViewGenerationMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="generatedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GroupCellsByExtent(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.SetConfiguration(System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.UpdateWhereClauseForEachCell(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="extentCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="updateDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenGatekeeper.EnsureAllCSpaceContainerSetsAreMapped(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Mapping.StorageEntityContainerMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenGatekeeper.GenerateTypeSpecificQueryView(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="containerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenGatekeeper.GenerateViewsFromCells(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenGatekeeper.GenerateViewsFromMapping(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="containerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewgenGatekeeper.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenResults.AddErrors(System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenResults.ErrorsToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.ValidateEntitySetsMappedForAssociationSetMapping(System.Data.Mapping.ViewValidator.DbExpressionStructuralTypeEntitySetInfo)">
    <parameter name="setInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.VisitExpressionBindingEnterScope(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.AssociationSetViewValidator.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.DbExpressionStructuralTypeEntitySetInfo.Add(System.String,System.Data.Mapping.ViewValidator.DbExpressionEntitySetInfo)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.DbExpressionStructuralTypeEntitySetInfo.GetEntitySetInfoForMember(System.String)">
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.ValidateQueryView(System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Mapping.StorageSetMapping,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)">
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.MappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AspProxy.MapWebPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.AssemblyCache.AquireLockedAssemblyCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.AssemblyCache.LoadAssembly(System.Reflection.Assembly,System.Boolean,System.Data.Metadata.Edm.KnownAssembliesSet,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.EdmType}@,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError}@)">
    <parameter name="knownAssemblies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssemblyCache.LoadAssembly(System.Reflection.Assembly,System.Boolean,System.Data.Metadata.Edm.KnownAssembliesSet,System.Data.Metadata.Edm.EdmItemCollection,System.Action{System.String},System.Object@,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.EdmType}@,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError}@)">
    <parameter name="knownAssemblies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssemblyCache.LoadAssembly(System.Reflection.Assembly,System.Boolean,System.Data.Metadata.Edm.ObjectItemLoadingSessionData)">
    <parameter name="loadingData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssemblyCache.UpdateCache(System.Data.Metadata.Edm.EdmItemCollection,System.Collections.Generic.Dictionary{System.Reflection.Assembly,System.Data.Metadata.Edm.MutableAssemblyCacheEntry})">
    <parameter name="edmItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssemblyCache.UpdateCache(System.Data.Metadata.Edm.LockedAssemblyCache,System.Collections.Generic.Dictionary{System.Reflection.Assembly,System.Data.Metadata.Edm.MutableAssemblyCacheEntry})">
    <parameter name="lockedAssemblyCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssociationEndMember.#ctor(System.String,System.Data.Metadata.Edm.RefType,System.Data.Metadata.Edm.RelationshipMultiplicity)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssociationSet.#ctor(System.String,System.Data.Metadata.Edm.AssociationType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssociationSet.AddAssociationSetEnd(System.Data.Metadata.Edm.AssociationSetEnd)">
    <parameter name="associationSetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssociationType.AddReferentialConstraint(System.Data.Metadata.Edm.ReferentialConstraint)">
    <parameter name="referentialConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CacheForPrimitiveTypes.Add(System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CacheForPrimitiveTypes.CreateInitialFacets(System.Data.Metadata.Edm.FacetDescription[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="facetDescriptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CacheForPrimitiveTypes.GetTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrComplexType.#ctor(System.Type,System.String,System.String)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrComplexType.CreateReadonlyClrComplexType(System.Type,System.String,System.String)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrEntityType.#ctor(System.Type,System.String,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrEntityType.BuildEntityTypeDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrEntityType.BuildEntityTypeHash">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrPerspective.GetMappedTypeUsage(System.Data.Mapping.Map)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrPerspective.TryGetMember(System.Data.Metadata.Edm.StructuralType,System.String,System.Boolean,System.Data.Metadata.Edm.EdmMember@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrPerspective.TryGetType(System.Type,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrProviderManifest.#ctor(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrProviderManifest.CreatePrimitiveType(System.Type,System.Data.Metadata.Edm.PrimitiveTypeKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="storeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.ClrProviderManifest.NamespaceName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.CollectionType.#ctor(System.Data.Metadata.Edm.EdmType)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CollectionType.#ctor(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CollectionType.GetIdentity(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.AddOtherContent(System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ApplyPrimitiveTypePropertyFacets(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConversionCache.GetCollectionTypeUsageWithNullFacets(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConversionCache.GetTypeUsageWithNullFacets(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertSchema(System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema},System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somSchemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertSchema(System.Data.EntityModel.SchemaObjectModel.Schema,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="somSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertSchema(System.Data.EntityModel.SchemaObjectModel.Schema,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToAssociationSet(System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSet,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Data.Metadata.Edm.EntityContainer,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToAssociationType(System.Data.EntityModel.SchemaObjectModel.Relationship,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToComplexType(System.Data.EntityModel.SchemaObjectModel.SchemaComplexType,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToDocumentation(System.Data.EntityModel.SchemaObjectModel.DocumentationElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToEntityContainer(System.Data.EntityModel.SchemaObjectModel.EntityContainer,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToEntitySet(System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet,System.String,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToEntityType(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToNavigationProperty(System.Data.Metadata.Edm.EntityType,System.Data.EntityModel.SchemaObjectModel.NavigationProperty,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somNavigationProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="declaringEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToProperty(System.Data.EntityModel.SchemaObjectModel.StructuredProperty,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetCsdlPrimitiveTypeUsageWithFacets(System.Data.EntityModel.SchemaObjectModel.StructuredProperty,System.Data.Metadata.Edm.Converter.ConversionCache)">
    <parameter name="somProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetEntitySet(System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetFunctionTypeUsage(System.Boolean,System.Data.EntityModel.SchemaObjectModel.Function,System.Data.EntityModel.SchemaObjectModel.FacetEnabledSchemaElement,System.Data.Common.DbProviderManifest,System.Boolean,System.Data.EntityModel.SchemaObjectModel.SchemaType,System.Data.Metadata.Edm.CollectionKind,System.Boolean,System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="somFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schemaElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetProperties(System.Data.Metadata.Edm.EntityTypeBase,System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.PropertyRefElement})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetSsdlPrimitiveType(System.Data.EntityModel.SchemaObjectModel.ScalarType,System.Data.Common.DbProviderManifest)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="scalarType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.InitializeAssociationEndMember(System.Data.Metadata.Edm.AssociationType,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd,System.Data.Metadata.Edm.EntityType)">
    <parameter name="associationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="endMemberType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.LoadEntityTypePhase2(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.LoadSchemaElement(System.Data.EntityModel.SchemaObjectModel.SchemaType,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.PopulateGeneralFacets(System.Data.EntityModel.SchemaObjectModel.StructuredProperty,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="somProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.UpdateSentinelValuesInFacets(System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CustomAssemblyResolver.TryResolveAssemblyReference(System.Reflection.AssemblyName,System.Reflection.Assembly@)">
    <parameter name="refernceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.AssemblyComparer.Equals(System.Reflection.Assembly,System.Reflection.Assembly)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.AssemblyComparer.GetHashCode(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.GetAllDiscoverableAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.GetAlreadyLoadedNonSystemAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.ResolveAssembly(System.Reflection.AssemblyName)">
    <parameter name="referenceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.Documentation.Identity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmError.#ctor(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmFunction.BuildIdentity(System.String,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="functionParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmFunction.BuildIdentity``1(System.Text.StringBuilder,System.String,System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Data.Metadata.Edm.TypeUsage},System.Func{``0,System.Data.Metadata.Edm.ParameterMode})">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getParameterTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getParameterMode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema})">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.String[])">
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.GenerateFunctionDefinition(System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.GetCanonicalInitializerMetadata(System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.GetGeneratedFunctionDefinition(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.Init(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.LoadItems(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String},System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.ItemCollection,System.Boolean)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.LoadItems(System.Data.Common.DbProviderManifest,System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema},System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somSchemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.LoadSomSchema(System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema},System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somSchemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemError.#ctor(System.String,System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmMember.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProperty.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProperty.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage,System.Reflection.PropertyInfo,System.RuntimeTypeHandle)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.#ctor(System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.CreateAggregateCannonicalFunction(System.String,System.Data.Metadata.Edm.FunctionParameter,System.Data.Metadata.Edm.FunctionParameter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.CreateCannonicalFunction(System.String,System.Data.Metadata.Edm.FunctionParameter,System.Data.Metadata.Edm.FunctionParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.ForgetScalarConstraints(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="storeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.GetInitialFacetDescriptions(System.Data.Metadata.Edm.PrimitiveTypeKind)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.InitializePrimitiveType(System.Data.Metadata.Edm.PrimitiveType,System.Data.Metadata.Edm.PrimitiveTypeKind,System.String,System.Type)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmProviderManifest.NamespaceName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmProviderManifest.Token">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Metadata.Edm.EdmSchemaErrorSeverity)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Exception)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.String,System.Int32,System.Int32)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.String,System.Int32,System.Int32,System.Exception)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmType.ClrType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmType.FullName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmType.Identity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmType.Initialize(System.Data.Metadata.Edm.EdmType,System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean,System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.AddError(System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Data.Metadata.Edm.EdmItemError)">
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.CustomValidate(System.Data.Metadata.Edm.MetadataItem)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.InternalValidate(System.Data.Metadata.Edm.MetadataItem,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.Validate``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError})">
    <parameter name="ospaceErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateCollectionType(System.Data.Metadata.Edm.CollectionType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateComplexType(System.Data.Metadata.Edm.ComplexType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateEdmMember(System.Data.Metadata.Edm.EdmMember,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateEdmProperty(System.Data.Metadata.Edm.EdmProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateEdmType(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateEntityType(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateFacet(System.Data.Metadata.Edm.Facet,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateItem(System.Data.Metadata.Edm.MetadataItem,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateMetadataProperty(System.Data.Metadata.Edm.MetadataProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateNavigationProperty(System.Data.Metadata.Edm.NavigationProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidatePrimitiveType(System.Data.Metadata.Edm.PrimitiveType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateRefType(System.Data.Metadata.Edm.RefType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateSimpleType(System.Data.Metadata.Edm.SimpleType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateStructuralType(System.Data.Metadata.Edm.StructuralType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateTypeUsage(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityContainer.#ctor(System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityContainer.AddEntitySetBase(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityContainer.AddFunctionImport(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityContainer.GetEntitySetByName(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EntitySet.#ctor(System.String,System.String,System.String,System.String,System.Data.Metadata.Edm.EntityType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntitySetBase.#ctor(System.String,System.String,System.String,System.String,System.Data.Metadata.Edm.EntityTypeBase)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntitySetBaseCollection.ThrowIfItHasEntityContainer(System.Data.Metadata.Edm.EntitySetBase,System.String)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.EntityType.NavigationProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityType.SetMemberSql(System.Data.Metadata.Edm.EdmMember,System.String)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityType.TryGetMemberSql(System.Data.Metadata.Edm.EdmMember,System.String@)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityTypeBase.AddKeyMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityTypeBase.CheckAndAddKeyMembers(System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="keyMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityTypeBase.CheckAndAddMembers(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.Metadata.Edm.EntityType)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.EntityTypeBase.KeyMemberNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EnumMember.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EnumType.AddMember(System.Data.Metadata.Edm.EnumMember)">
    <parameter name="enumMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Facet.Create(System.Data.Metadata.Edm.FacetDescription,System.Object)">
    <parameter name="facetDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Facet.Create(System.Data.Metadata.Edm.FacetDescription,System.Object,System.Boolean)">
    <parameter name="facetDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FacetDescription.#ctor(System.String,System.Data.Metadata.Edm.EdmType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object)">
    <parameter name="facetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FacetDescription.IsNumericType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="facetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.FacetDescription.MaxValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.FacetDescription.MinValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.FacetDescription.UpdateMinMaxValueForConstant(System.String,System.Data.Metadata.Edm.EdmType,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,System.Object)">
    <parameter name="facetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.FacetValues.NullFacetValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.FacetValues.TryGetFacet(System.Data.Metadata.Edm.FacetDescription,System.Data.Metadata.Edm.Facet@)">
    <parameter name="description">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FilteredReadOnlyMetadataCollection`2.#ctor(System.Data.Metadata.Edm.ReadOnlyMetadataCollection{`1},System.Predicate{`1})">
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FilteredReadOnlyMetadataCollection`2.Contains(System.String)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FilteredReadOnlyMetadataCollection`2.FilterCollection(System.Data.Metadata.Edm.ReadOnlyMetadataCollection{`1},System.Predicate{`1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FilteredReadOnlyMetadataCollection`2.System#Data#Metadata#Edm#IBaseList{TBase}#IndexOf(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FunctionParameter.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.ParameterMode)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.CombineErrorMessage(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmItemError})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.CombineErrorMessage(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmSchemaError})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.DisposeXmlReaders(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetAllStructuralMembers(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetAttributeValue(System.Xml.XPath.XPathNavigator,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetCommaDelimitedString(System.Collections.Generic.IEnumerable{System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stringList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetEndThatShouldBeMappedToKey(System.Data.Metadata.Edm.AssociationType)">
    <parameter name="associationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetFacet(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.FacetDescription},System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="facetCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetFileNameFromUri(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetModelTypeUsage(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetModelTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetTypedAttributeValue(System.Xml.XPath.XPathNavigator,System.String,System.Type)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsAssignableFrom(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="firstType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsAssociationEndMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsAssociationType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsCollectionType(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsComplexType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEdmFunction(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEdmProperty(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEntityContainer(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEntityType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEntityTypeBase(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEnumType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsNavigationProperty(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsPrimitiveType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRefType(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRelationshipEndMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRelationshipSet(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRelationshipType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRowType(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsStructuralType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsSubtypeOf(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="firstType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsTransientType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsUnboundedFacetValue(System.Data.Metadata.Edm.Facet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.ValidateAndConvertTypeUsage(System.Data.Metadata.Edm.EdmMember,System.Xml.IXmlLineInfo,System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="sspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.ValidateAndConvertTypeUsage(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.EdmProperty,System.Xml.IXmlLineInfo,System.String,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="edmProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ImmutableAssemblyCacheEntry.#ctor(System.Data.Metadata.Edm.MutableAssemblyCacheEntry)">
    <parameter name="mutableEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.AddInternal(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.AtomicAddRange(System.Collections.Generic.List{System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GenericGetItems``1(System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetCaseSensitiveFunctions(System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionOverloads">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)">
    <parameter name="functionCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)">
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)">
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.InternalGetItems(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.PopulateFunctionLookUpTable(System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.TryGetFunction(System.String,System.Data.Metadata.Edm.TypeUsage[],System.Boolean,System.Data.Metadata.Edm.EdmFunction@)">
    <parameter name="parameterTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.KnownAssembliesSet.#ctor(System.Data.Metadata.Edm.KnownAssembliesSet)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.KnownAssembliesSet.Add(System.Reflection.Assembly,System.Data.Metadata.Edm.KnownAssemblyEntry)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.KnownAssembliesSet.Assemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.KnownAssembliesSet.Contains(System.Reflection.Assembly,System.Object,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.KnownAssembliesSet.GetEntries(System.Object,System.Data.Metadata.Edm.EdmItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.KnownAssembliesSet.TryGetKnownAssembly(System.Reflection.Assembly,System.Object,System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.KnownAssemblyEntry@)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.LoadMessageLogger.CreateErrorMessageWithTypeSpecificLoadLogs(System.String,System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relatedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.LoadMessageLogger.GetTypeRelatedLogMessage(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relatedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.LoadMessageLogger.LogLoadMessage(System.String,System.Data.Metadata.Edm.EdmType)">
    <parameter name="relatedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.LoadMessageLogger.LogMessagesWithTypeInfo(System.String,System.Data.Metadata.Edm.EdmType)">
    <parameter name="relatedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.LockedAssemblyCache.Add(System.Reflection.Assembly,System.Data.Metadata.Edm.ImmutableAssemblyCacheEntry)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.LockedAssemblyCache.TryGetValue(System.Reflection.Assembly,System.Data.Metadata.Edm.ImmutableAssemblyCacheEntry@)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MappingMetadataHelper.GetEntityContainerMap(System.Data.Mapping.StorageMappingItemCollection,System.Data.Metadata.Edm.EntityContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mappingCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MappingMetadataHelper.GetMappingsForEntitySetAndSuperTypes(System.Data.Mapping.StorageMappingItemCollection,System.Data.Metadata.Edm.EntityContainer,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mappingCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MemberCollection.GetDeclaredOnlyMembers``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver.GetWildcardAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver.TryResolveAssemblyReference(System.Reflection.AssemblyName,System.Reflection.Assembly@)">
    <parameter name="refernceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.Create(System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoader})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="allCollections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.Create(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader.ExtensionCheck,System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.Create(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader.ExtensionCheck,System.String,System.Collections.Generic.ICollection{System.String},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CreateCompositeFromFilePaths(System.Collections.Generic.IEnumerable{System.String},System.String)">
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CreateCompositeFromFilePaths(System.Collections.Generic.IEnumerable{System.String},System.String,System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CreateCompositeFromXmlReaders(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CreateReaders(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetExtension(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetOriginalPaths">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetOriginalPaths(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetPaths">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetPaths(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetReaders">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetReaders(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.MetadataArtifactLoader,System.Xml.XmlReader})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.PathStartsWithResPrefix(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.#ctor(System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoader})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.CreateReaders(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.GetReaders(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.MetadataArtifactLoader,})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.Path">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeFile.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeFile.CreateReaders(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeFile.GetArtifactsInDirectory(System.String,System.String,System.Collections.Generic.ICollection{System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeFile.GetReaders(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.MetadataArtifactLoader,})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.#ctor(System.String,System.String,System.String,System.Collections.Generic.ICollection{System.String},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.AssemblyContainsResource(System.Reflection.Assembly,System.String@)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateAndAddSingleResourceLoader(System.Reflection.Assembly,System.String,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoaderResource})">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateReaders(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateResourceLoader(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader.ExtensionCheck,System.String,System.Collections.Generic.ICollection{System.String},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateResPath(System.Reflection.Assembly,System.String)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.GetManifestResourceNamesForAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.GetReaders(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.MetadataArtifactLoader,})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.LoadAllResourcesFromAssembly(System.Reflection.Assembly,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoaderResource},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.LoadResources(System.String,System.String,System.Collections.Generic.ICollection{System.String},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.LoadResourcesFromAssembly(System.Reflection.Assembly,System.String,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoaderResource},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.ParseResourcePath(System.String,System.String@,System.String@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.ResolveAssemblyName(System.String,System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderFile.#ctor(System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderFile.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderFile.CreateXmlReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderFile.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.#ctor(System.Reflection.Assembly,System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.CreateReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.Path">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.#ctor(System.Xml.XmlReader)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.Path">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataAssemblyHelper.ArePublicKeyTokensEqual(System.Byte[],System.Byte[])">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataAssemblyHelper.ComputeShouldFilterAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataAssemblyHelper.SafeLoadReferencedAssembly(System.Reflection.AssemblyName)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataAssemblyHelper.ShouldFilterAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataAssemblyHelper.ShouldFilterAssembly(System.Reflection.AssemblyName)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.EdmItemCollectionLoader.LoadItemCollection(System.Data.Metadata.Edm.MetadataCache.EdmMetadataEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.EdmMetadataEntry.LoadEdmItemCollection(System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.EdmMetadataEntryConstructor.GetMetadataEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.GetCacheEntry``1(System.Collections.Generic.Dictionary{System.String,``0},System.String,System.Object,System.Data.Metadata.Edm.MetadataCache.IMetadataEntryConstructor{``0},System.Object@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.GetOrCreateEdmItemCollection(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader,System.Object@)">
    <parameter name="cacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.GetOrCreateMetdataArtifactLoader(System.String)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.GetOrCreateStoreAndMappingItemCollections(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader,System.Data.Metadata.Edm.EdmItemCollection,System.Object@)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.LoadItemCollection``1(System.Data.Metadata.Edm.MetadataCache.IItemCollectionLoader{``0},``0)">
    <parameter name="itemCollectionLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.SplitPaths(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntryConstructor.GetMetadataEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AddInternal(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AddInternalHelper(`0,System.Data.Metadata.Edm.MetadataCollection{`0}.CollectionData,System.Boolean)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AddToDictionary(System.Data.Metadata.Edm.MetadataCollection{`0}.CollectionData,System.String,System.Int32,System.Boolean)">
    <parameter name="collectionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataCollection`1.AsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AsReadOnlyMetadataCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AtomicAddRange(System.Collections.Generic.List{`0})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.CollectionData.#ctor(System.Data.Metadata.Edm.MetadataCollection{`0}.CollectionData,System.Int32)">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.ContainsIdentity(System.String)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.EqualIdentity(System.Collections.Generic.List{`0},System.Int32,System.String)">
    <parameter name="orderedList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.GetValue(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.IndexOf(System.Data.Metadata.Edm.MetadataCollection{`0}.CollectionData,System.String,System.Boolean)">
    <parameter name="collectionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.SetReadOnly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataItem.AddMetadataProperties(System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataProperty})">
    <parameter name="metadataProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataItem.BuildIdentity(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataItem.InitializeBuiltInTypes(System.Data.Metadata.Edm.ComplexType,System.String,System.Boolean,System.Data.Metadata.Edm.ComplexType)">
    <parameter name="builtInType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataItem.InitializeEnumType(System.Data.Metadata.Edm.BuiltInTypeKind,System.String,System.String[])">
    <parameter name="enumMemberNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataItem.MetadataProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataProperty.#ctor(System.String,System.Data.Metadata.Edm.EdmType,System.Boolean,System.Object)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyAttribute.#ctor(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.#ctor(System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.GetItemTypeInformation(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.GetSystemMetadataProperties(System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.ItemPropertyInfo.GetMetadataProperty(System.Data.Metadata.Edm.MetadataItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.ItemTypeInformation.#ctor(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.ItemTypeInformation.GetItemProperties(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.CheckAndSetItemCollectionVersionInWorkSpace(System.Data.Metadata.Edm.ItemCollection)">
    <parameter name="itemCollectionToRegister">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateMetadataWorkspaceWithResolver(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Collections.Generic.IEnumerable{System.Reflection.Assembly}},System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly})">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.ExplicitLoadFromAssembly(System.Reflection.Assembly,System.Data.Metadata.Edm.ObjectItemCollection,System.Action{System.String})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetCqtView(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)">
    <parameter name="objectSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetGeneratedFunctionDefinition(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetGeneratedView(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetMap(System.Data.Metadata.Edm.GlobalItem,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)">
    <parameter name="edmSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetOSpaceTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="edmSpaceTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetUpdateViewLoader">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.ImplicitLoadAssemblyForType(System.Type,System.Reflection.Assembly)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.ImplicitLoadFromAssembly(System.Reflection.Assembly,System.Data.Metadata.Edm.ObjectItemCollection)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.ImplicitLoadFromEntityType(System.Data.Metadata.Edm.EntityType,System.Reflection.Assembly)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.IsMetadataWorkspaceCSCompatible(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly,System.Action{System.String})">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.ShallowCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)">
    <parameter name="objectSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetFunction(System.String,System.String,System.Data.Metadata.Edm.TypeUsage[],System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmFunction@)">
    <parameter name="parameterTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetFunctionImportMapping(System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportMapping@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Mapping.Map@)">
    <parameter name="typeIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)">
    <parameter name="edmSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.NavigationProperty.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.NavigationProperty.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage,System.Reflection.PropertyInfo)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.NavigationPropertyAccessor.NoNavigationProperty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAssemblyLoader.CreateLoader(System.Reflection.Assembly,System.Data.Metadata.Edm.ObjectItemLoadingSessionData)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sessionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAssemblyLoader.LoadAssemblies(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Data.Metadata.Edm.ObjectItemLoadingSessionData)">
    <parameter name="assemblies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sessionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAssemblyLoader.TryGetPrimitiveType(System.Type,System.Boolean@,System.Data.Metadata.Edm.PrimitiveType@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.Create(System.Reflection.Assembly,System.Data.Metadata.Edm.ObjectItemLoadingSessionData)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.IsSchemaAttributePresent(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.LoadPropertiesFromType(System.Data.Metadata.Edm.StructuralType)">
    <parameter name="structuralType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.LoadScalarProperty(System.Type,System.Reflection.PropertyInfo,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.LoadType(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.ResolveAssociationEnd(System.Data.Metadata.Edm.AssociationType,System.String,System.Type,System.Data.Metadata.Edm.RelationshipMultiplicity)">
    <parameter name="associationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="roleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.ResolveBaseType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.ResolveComplexTypeProperty(System.Data.Metadata.Edm.StructuralType,System.Reflection.PropertyInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.ResolveNavigationProperty(System.Data.Metadata.Edm.StructuralType,System.Reflection.PropertyInfo)">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.TrackClosure(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.TryFindNullParametersInRelationshipAttribute(System.Data.Objects.DataClasses.EdmRelationshipAttribute)">
    <parameter name="roleAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.TryGetCachedEdmType(System.Type,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemAttributeAssemblyLoader.TryGetLoadedType(System.Type,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.CollectIfViewGenAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.ExplicitLoadFromAssembly(System.Reflection.Assembly,System.Data.Metadata.Edm.EdmItemCollection,System.Action{System.String})">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetClrType(System.Data.Metadata.Edm.StructuralType)">
    <parameter name="objectSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetPrimitiveTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetRelationshipTypeExpensiveWay(System.Type,System.String)">
    <parameter name="entityClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.ImplicitLoadAllReferencedAssemblies(System.Reflection.Assembly,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.ImplicitLoadAssemblyForType(System.Type,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.ImplicitLoadFromAssembly(System.Reflection.Assembly,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.ImplicitLoadViewsFromAllReferencedAssemblies(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.IsCompiledViewGenAttributePresent(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadAssemblyFromCache(System.Data.Metadata.Edm.ObjectItemCollection,System.Reflection.Assembly,System.Boolean,System.Data.Metadata.Edm.EdmItemCollection,System.Action{System.String})">
    <parameter name="objectItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly,System.Data.Metadata.Edm.EdmItemCollection)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly,System.Data.Metadata.Edm.EdmItemCollection,System.Action{System.String})">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadTypesExpensiveWay(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.TryGetClrType(System.Data.Metadata.Edm.StructuralType,System.Type@)">
    <parameter name="objectSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.TryGetMappingCSpaceTypeIdentity(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.TryGetOSpaceType(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.Create(System.Reflection.Assembly,System.Data.Metadata.Edm.ObjectItemLoadingSessionData)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sessionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.CreateAndAddComplexType(System.Type,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.EdmProperty,System.Reflection.PropertyInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ospaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.CreateAndAddNavigationProperty(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.NavigationProperty,System.Reflection.PropertyInfo)">
    <parameter name="ospaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.GetRelationshipEndType(System.Data.Metadata.Edm.RelationshipEndMember)">
    <parameter name="relationshipEndMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.MemberMatchesByConvention(System.Reflection.PropertyInfo,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="clrProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.NonPrimitiveMemberMatchesByConvention(System.Reflection.PropertyInfo,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="clrProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.ResolveBaseType(System.Data.Metadata.Edm.StructuralType,System.Type)">
    <parameter name="baseCSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.SessionContainsConventionParameters(System.Data.Metadata.Edm.ObjectItemLoadingSessionData)">
    <parameter name="sessionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.TrackClosure(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.TryCreateMembers(System.Type,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType,System.Collections.Generic.List{System.Action})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referenceResolutionListForCurrentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ospaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.TryCreateType(System.Type,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.TryFindAndCreateScalarProperties(System.Type,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType,System.Reflection.PropertyInfo[])">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ospaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.TryFindComplexProperties(System.Type,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType,System.Reflection.PropertyInfo[],System.Collections.Generic.List{System.Action})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referenceResolutionListForCurrentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.TryFindNavigationProperties(System.Type,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType,System.Reflection.PropertyInfo[],System.Collections.Generic.List{System.Action})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referenceResolutionListForCurrentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemConventionAssemblyLoader.TypesMatchByConvention(System.Type,System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemLoadingSessionData.#ctor(System.Data.Metadata.Edm.KnownAssembliesSet,System.Data.Metadata.Edm.LockedAssemblyCache,System.Data.Metadata.Edm.EdmItemCollection,System.Action{System.String},System.Object)">
    <parameter name="knownAssemblies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemLoadingSessionData.RegisterForLevel1PostSessionProcessing(System.Data.Metadata.Edm.ObjectItemAssemblyLoader)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemLoadingSessionData.RegisterForLevel2PostSessionProcessing(System.Data.Metadata.Edm.ObjectItemAssemblyLoader)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.OcAssemblyCache.AddAssemblyToOcCacheFromAssemblyCache(System.Reflection.Assembly,System.Data.Metadata.Edm.ImmutableAssemblyCacheEntry)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.OcAssemblyCache.TryGetConventionalOcCacheFromAssemblyCache(System.Reflection.Assembly,System.Data.Metadata.Edm.ImmutableAssemblyCacheEntry@)">
    <parameter name="assemblyToLookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.GetDefaultContainer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.TryGetExtent(System.Data.Metadata.Edm.EntityContainer,System.String,System.Boolean,System.Data.Metadata.Edm.EntitySetBase@)">
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.TryGetFunctionByName(System.String,System.Boolean,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction}@)">
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.TryGetMember(System.Data.Metadata.Edm.StructuralType,System.String,System.Boolean,System.Data.Metadata.Edm.EdmMember@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.TryGetTypeByName(System.String,System.Boolean,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.PrimitiveType.#ctor(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.PrimitiveType,System.Data.Common.DbProviderManifest)">
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.PrimitiveType.#ctor(System.Type,System.Data.Metadata.Edm.PrimitiveType,System.Data.Common.DbProviderManifest)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.PrimitiveType.ClrEquivalentType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.PrimitiveType.Initialize(System.Data.Metadata.Edm.PrimitiveType,System.Data.Metadata.Edm.PrimitiveTypeKind,System.Boolean,System.Data.Common.DbProviderManifest)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.#ctor(System.Collections.Generic.IList{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RefType.#ctor(System.Data.Metadata.Edm.EntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RefType.GetIdentity(System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityTypeBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RelationshipEndMember.#ctor(System.String,System.Data.Metadata.Edm.RefType,System.Data.Metadata.Edm.RelationshipMultiplicity)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RelationshipSet.#ctor(System.String,System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RowType.AddProperty(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RowType.CheckProperties(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.RowType.GetRowTypeIdentityFromProperties(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty},System.Data.Objects.ELinq.InitializerMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.SafeLink`1.BindChild``1(`0,System.Func{``0,System.Data.Metadata.Edm.SafeLink{`0}},``0)">
    <parameter name="getLink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.SafeLink`1.BindChildren``1(`0,System.Func{``0,System.Data.Metadata.Edm.SafeLink{`0}},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="getLink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.SafeLinkCollection`2.#ctor(`0,System.Func{`1,System.Data.Metadata.Edm.SafeLink{`0}},System.Data.Metadata.Edm.MetadataCollection{`1})">
    <parameter name="getLink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.#ctor(System.String,System.Boolean)">
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.ConvertFunctionParameterToCType(System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sTypeFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Init(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Data.Common.DbProviderManifest@,System.Data.Common.DbProviderFactory@,System.String@,System.Data.Common.Utils.Memoizer{System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction}@)">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.#ctor(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.AddProviderIncompatibleError(System.Data.ProviderIncompatibleException,System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <parameter name="provEx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.InitializeProviderManifest(System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.LoadItems(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.OnProviderManifestNeeded(System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.OnProviderManifestTokenNotification(System.String,System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.OnProviderNotification(System.String,System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StructuralType.AddMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StructuralType.GetDeclaredOnlyMembers``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.#ctor(System.Collections.Generic.IList{System.Data.Metadata.Edm.PrimitiveType},System.Collections.Generic.IList{System.Data.Metadata.Edm.PrimitiveType})">
    <parameter name="types1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="types2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.#ctor(System.Data.Metadata.Edm.PrimitiveType,System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="primitiveType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="primitiveType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.CompareTypes(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.ForgetConstraints(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.GetCommonType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.HasCommonType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsAggregateFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsCastAllowed(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsCollectionType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsComplexType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEntityType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEnumerationType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEqual(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEqualComparable(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEqualComparable(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEqualComparableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsNominalType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsNullable(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsNullable(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsNullType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsOrderComparable(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsOrderComparable(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsOrderComparableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPartOfKey(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPolymorphicType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPrimitiveType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPrimitiveTypePromotableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPrimitiveTypeSubTypeOf(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPromotableTo(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.RowType)">
    <parameter name="fromRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPromotableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsReferenceType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsRelationshipType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsRowType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsStructurallyEqual(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsStructurallyEqualOrPromotableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsStructuralType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsSubTypeOf(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="subEdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsSubTypeOf(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="subType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="superType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsTypeValidForRelationship(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.RelationshipType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsValidPolymorphicCast(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonPrimitiveType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.CollectionType,System.Data.Metadata.Edm.CollectionType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="collectionType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="edmType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.RefType,System.Data.Metadata.Edm.RefType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="refType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reftype2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="rowType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rowType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.Create(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.Create(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.Facet})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.Create(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.FacetValues)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeOffsetTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Byte,System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDefaultTypeUsage(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.GetDefaultFacetDescriptionsAndOverrideFacetValues(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.FacetValues)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.ShallowCopy(System.Data.Metadata.Edm.FacetValues)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.Util.ThrowIfReadOnly(System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.MetadataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.ObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``10(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``11(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``12(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``13(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``14(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``15(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``16(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``17(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15,``16}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``6(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``7(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``8(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``9(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4,``5,``6,``7,``8}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.GetElementType(System.Type,System.Boolean@)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``10(``0,``1,``2,``3,``4,``5,``6,``7,``8)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``11(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``12(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``13(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``14(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``15(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``16(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``17(``0,``1,``2,``3,``4,``5,``6,``7,``8,``9,``10,``11,``12,``13,``14,``15)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``2(``0)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``3(``0,``1)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``4(``0,``1,``2)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``5(``0,``1,``2,``3)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``6(``0,``1,``2,``3,``4)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``7(``0,``1,``2,``3,``4,``5)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``8(``0,``1,``2,``3,``4,``5,``6)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``9(``0,``1,``2,``3,``4,``5,``6,``7)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor(System.String)">
    <parameter name="assemblyGuid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.IRelationshipFixer)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="entities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.GetInternalEnumerable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.RetrieveReferentialConstraintProperties(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}},System.Collections.Generic.HashSet{System.Object})">
    <parameter name="visited">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.VerifyNavigationPropertyForAdd(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.DataClasses.EntityCollection`1.WrappedRelatedEntities">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithRelationships#RelationshipManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference.#ctor(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.IRelationshipFixer)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference.UpdateForeignKeyValues(System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey)">
    <parameter name="dependentEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="principalKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference.UpdateForeignKeyValues(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.Internal.IEntityWrapper,System.Collections.Generic.Dictionary{System.Int32,System.Object},System.Boolean)">
    <parameter name="dependentEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="principalEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference.ValidateOwnerWithRIConstraints(System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.IRelationshipFixer)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.ClearCollectionOrRef(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelationshipNavigation,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.DisconnectedAdd(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.DisconnectedRemove(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.RemoveFromLocalCache(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.#ctor(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.IRelationshipFixer)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Add(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Add(System.Data.Objects.Internal.IEntityWrapper,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Add(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="wrappedTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddEntityToObjectStateManager(System.Data.Objects.Internal.IEntityWrapper,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddGraphToObjectStateManager(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddRelationshipToObjectStateManager(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddToCache(System.Data.Objects.Internal.IEntityWrapper,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddToLocalCache(System.Data.Objects.Internal.IEntityWrapper,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddToNavigationProperty(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddToObjectCache(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AppendEntitySet(System.Text.StringBuilder,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType,System.Boolean)">
    <parameter name="sourceBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AppendKeyParameterRow(System.Text.StringBuilder,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmMember})">
    <parameter name="sourceBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Attach(System.Collections.Generic.IEnumerable{System.Data.Objects.Internal.IEntityWrapper},System.Boolean)">
    <parameter name="wrappedEntities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AttachContext(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AttachContext(System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.BulkDeleteAll(System.Collections.Generic.List{System.Object})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CanSetEntityType(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CheckIfAllPropertiesAreKeyProperties(System.String[],System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty})">
    <parameter name="keyMemberNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CheckIfNavigationPropertyContainsEntity(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CheckReferentialConstraintProperties(System.Data.Objects.EntityEntry)">
    <parameter name="ownerEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CheckRelationEntitySet(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Clear(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelationshipNavigation,System.Boolean)">
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ClearCollectionOrRef(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelationshipNavigation,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ContainsEntity(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CreateSourceQuery``1(System.Data.Objects.MergeOption,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CreateSourceQueryInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.DetachRelationshipFromObjectStateManager(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.RelationshipSet,System.Data.Objects.DataClasses.RelationshipNavigation)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.DisconnectedAdd(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.DisconnectedRemove(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ExcludeEntity(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ExtractPrincipalKey(System.Data.Objects.Internal.IEntityWrapper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrappedRelatedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.FindRelationshipEntryInObjectStateManager(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.FindRelationshipSet(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EdmType@,System.Data.Metadata.Edm.RelationshipSet@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.FixupOtherEndOfRelationshipForRemove(System.Data.Objects.Internal.IEntityWrapper,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.GetCurrentValueFromEntity(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.GetOtherEndOfRelationship(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.GetResults``1(System.Data.Objects.ObjectQuery{``0})">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.GetWrappedEntities">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.IncludeEntity(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.IsValidEntityKeyType(System.Data.EntityKey)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.MarkEntityAsDeletedInObjectStateManager(System.Data.Objects.Internal.IEntityWrapper)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.MarkRelationshipAsDeletedInObjectStateManager(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.RelationshipSet,System.Data.Objects.DataClasses.RelationshipNavigation)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Merge``1(System.Collections.Generic.IEnumerable{``0},System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Remove(System.Data.Objects.Internal.IEntityWrapper,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Remove(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveEntityFromObjectStateManager(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveEntityFromRelatedEnds(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelationshipNavigation)">
    <parameter name="wrappedEntity1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedEntity2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveFromCache(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveFromLocalCache(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveFromNavigationProperty(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveFromObjectCache(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveRelationshipFromObjectStateManager(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.RelationshipSet,System.Data.Objects.DataClasses.RelationshipNavigation)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RetrieveReferentialConstraintProperties(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}},System.Collections.Generic.HashSet{System.Object})">
    <parameter name="visited">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.UpdateSnapshotOfRelationships(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateEntityForAttach(System.Data.Objects.Internal.IEntityWrapper,System.Int32,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateLoad``1(System.Data.Objects.MergeOption,System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateStateForAdd(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.VerifyEntityForAdd(System.Data.Objects.Internal.IEntityWrapper,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.VerifyNavigationPropertyForAdd(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.VerifyRIConstraintsWithRelatedEntry(System.Data.Metadata.Edm.ReferentialConstraint,System.Func{System.String,System.Object},System.Data.EntityKey)">
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getDependentPropertyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="principalKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.VerifyType(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.WalkObjectGraphToIncludeAllRelatedEntities(System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipFixer`2.System#Data#Objects#DataClasses#IRelationshipFixer#CreateSourceEnd(System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.RelationshipManager)">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.AttachContextToRelatedEnds(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.CheckIfAllPropertiesWereRetrieved(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}},System.Collections.Generic.List{System.String})">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertiesToRetrieve">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.CheckReferentialConstraintProperties(System.Data.Objects.EntityEntry)">
    <parameter name="ownerEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.Create">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.CreateRelatedEnd``2(System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.ForEachRelationship(System.Action{System.Data.Objects.DataClasses.RelatedEnd})">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetObjectItemCollection(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``2(System.String,System.String,System.String,System.Data.Metadata.Edm.NavigationPropertyAccessor,System.Data.Metadata.Edm.NavigationPropertyAccessor,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetRoleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceRoleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.IRelationshipFixer)">
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipFixer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEndInternal(System.String,System.String)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEndInternal(System.String,System.String,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Metadata.Edm.AssociationType)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEndInternal(System.String,System.String,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Metadata.Edm.AssociationType,System.Boolean)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``2(System.String,System.String,System.String,System.Data.Metadata.Edm.NavigationPropertyAccessor,System.Data.Metadata.Edm.NavigationPropertyAccessor,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetRoleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceRoleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelationshipType(System.Type,System.String)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})">
    <parameter name="entityCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})">
    <parameter name="entityReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.IsOwner(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.DataClasses.RelationshipManager.Relationships">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.RemergeCollections``1(System.Data.Objects.DataClasses.EntityCollection{``0},System.Data.Objects.DataClasses.EntityCollection{``0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.RemoveEntity(System.String,System.String,System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.RemoveRelatedEntitiesFromObjectStateManager(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.ResetContextOnRelatedEnds(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.RetrieveReferentialConstraintProperties(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}}@,System.Collections.Generic.HashSet{System.Object},System.Boolean)">
    <parameter name="visited">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.TryGetObjectMappingItemCollection(System.Data.Objects.Internal.IEntityWrapper,System.Data.Mapping.DefaultObjectMappingItemCollection@)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.TryGetRelationshipType(System.Data.Objects.Internal.IEntityWrapper,System.Type,System.String,System.Data.Metadata.Edm.AssociationType@)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.UnableToGetMetadata(System.Data.Objects.Internal.IEntityWrapper,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.VerifyRelationship(System.Data.Metadata.Edm.AssociationType,System.String,System.Boolean)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipNavigation.#ctor(System.String,System.String,System.String,System.Data.Metadata.Edm.NavigationPropertyAccessor,System.Data.Metadata.Edm.NavigationPropertyAccessor)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipNavigation.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.DataClasses.RelationshipNavigation.Reverse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataRecordObjectView.#ctor(System.Data.Objects.IObjectViewData{},System.Object,System.Data.Metadata.Edm.RowType,System.Type)">
    <parameter name="viewData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataRecordObjectView.GetListItemType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataRecordObjectView.GetTypedIndexer(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataRecordObjectView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.DbUpdatableDataRecord.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetDataRecord(System.Int32,System.Data.IDataRecord)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetRecordValue(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetString(System.Int32,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetValue(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.SetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DbUpdatableDataRecord.System#Data#IDataRecord#GetData(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.CompiledELinqQueryState.CreateDonateableExpressionVisitor.Replace(System.Linq.Expressions.LambdaExpression,System.Data.Objects.ObjectContext,System.Object[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.CompiledELinqQueryState.CreateDonateableExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.CompiledELinqQueryState.GetExecutionPlan(System.Nullable{System.Data.Objects.MergeOption})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ELinqQueryState.CreateExpressionConverter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ELinqQueryState.Include``1(System.Data.Objects.ObjectQuery{``0},System.String)">
    <parameter name="includePath">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.#ctor(System.Data.Objects.ELinq.Funcletizer,System.Linq.Expressions.Expression)">
    <parameter name="funcletizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AddParameter(System.Data.Objects.ELinq.QueryParameterExpression)">
    <parameter name="queryParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AddSpanMapping(System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.Span)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AlignTypes(System.Data.Common.CommandTrees.DbExpression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cqt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AndAlsoTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ApplySpanMapping(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AsTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.BinaryTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.BinaryTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.BinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.BitwiseBinaryTranslator.TranslateIntoLogicExpression(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.BinaryExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.BitwiseBinaryTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.BinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CanFuncletizePropertyInfo(System.Reflection.PropertyInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CanOmitCast(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CheckInitializerType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CoalesceTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ConditionalTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.ConditionalExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ConvertTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateCanonicalFunction(System.String,System.Linq.Expressions.Expression,System.Data.Common.CommandTrees.DbExpression[])">
    <parameter name="translatedArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateCastExpression(System.Data.Common.CommandTrees.DbExpression,System.Type,System.Type)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateEqualsExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern,System.Type,System.Type)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateIsNullExpression(System.Data.Common.CommandTrees.DbExpression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operandClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateNewRowExpression(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.DescribeClrType(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Distinct(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.DivideTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.EqualsTranslator.CreateIsNullExpression(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.EqualsTranslator.ExpressionIsNullConstant(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.EqualsTranslator.UnwrapConvert(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.FindCanonicalFunction(System.String,System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Boolean,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="argumentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.FindFunction(System.String,System.String,System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Boolean,System.Linq.Expressions.Expression)">
    <parameter name="Expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetCastTargetType(System.Data.Metadata.Edm.TypeUsage,System.Type,System.Type,System.Boolean)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetIsOrAsTargetType(System.Data.Metadata.Edm.TypeUsage,System.Linq.Expressions.ExpressionType,System.Type,System.Type)">
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetLambdaExpression(System.Linq.Expressions.Expression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetLambdaExpression(System.Linq.Expressions.MethodCallExpression,System.Int32)">
    <parameter name="callExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetValueLayerType(System.Type)">
    <parameter name="linqType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GreaterThanOrEqualsTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GreaterThanTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ImplementEquality(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ImplementEqualityConstantAndUnknown(System.Data.Common.CommandTrees.DbConstantExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="unknown">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ImplementEqualityUnknownArguments(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.InitializeTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.IsCSharpGeneratedClass(System.String,System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.IsTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.TypeBinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.IsVBGeneratedClass(System.String,System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.LessThanOrEqualsTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.LessThanTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ListInitTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.ListInitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.CanFuncletizePropertyInfo(System.Reflection.PropertyInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.DefaultCanonicalFunctionPropertyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.EntityCollectionCountTranslator.GetProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.GenericICollectionTranslator.IsICollection(System.Type,System.Type@)">
    <parameter name="candidateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.GenericICollectionTranslator.TryGetPropertyTranslator(System.Reflection.PropertyInfo,System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.PropertyTranslator@)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.NullableHasValueTranslator.GetProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.NullableHasValueTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.NullableValueTranslator.GetProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.PropertyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.RenameCanonicalFunctionPropertyTranslator.GetProperty(System.Type,System.String,System.Reflection.BindingFlags,System.String)">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.RenameCanonicalFunctionPropertyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.TranslateCount(System.Data.Objects.ELinq.ExpressionConverter,System.Type,System.Linq.Expressions.Expression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.TranslateNavigationProperty(System.Data.Objects.ELinq.ExpressionConverter,System.Reflection.MemberInfo,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.TryGetTranslator(System.Reflection.PropertyInfo,System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.PropertyTranslator@)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.TryResolveAsProperty(System.Data.Objects.ELinq.ExpressionConverter,System.Reflection.MemberInfo,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.VBDateAndTimeNowTranslator.#ctor(System.Reflection.Assembly)">
    <parameter name="vbAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.VBDateAndTimeNowTranslator.GetProperty(System.Reflection.Assembly)">
    <parameter name="vbAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.VBDateAndTimeNowTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberInitTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberInitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.FindFunction(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.WrapCollectionOperand(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.WrapNonCollectionOperand(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AllTranslator.TranslateOneLambda(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceBinding">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AnyPredicateTranslator.TranslateOneLambda(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceBinding">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AnyTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AsUnicodeNonUnicodeBaseFunctionTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.BinarySequenceMethodTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.BinarySequenceMethodTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CallTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CanonicalFunctionDefaultTranslator.GetMethods">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CanonicalFunctionDefaultTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ContainsTranslator.TranslateContains(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CountTranslatorBase.WrapCollectionOperand(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CountTranslatorBase.WrapNonCollectionOperand(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultIfEmptyTranslator.GetDefaultValue(System.Data.Objects.ELinq.ExpressionConverter,System.Type)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultIfEmptyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultTranslator.InitializeAlternateMethodInfos">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultTranslator.InitializeVBMethods(System.Reflection.Assembly)">
    <parameter name="vbAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultTranslator.TryGetAlternativeMethod(System.Reflection.MethodInfo,System.Reflection.MethodInfo@)">
    <parameter name="originalMethodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DistinctTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.EndsWithTranslator.CreateDefaultTranslation(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FirstPredicateTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FirstPredicateTranslatorBase.RestrictResult(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FirstPredicateTranslatorBase.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FirstTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FirstTranslatorBase.AddDefaultCase(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Type)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FirstTranslatorBase.LimitResult(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FirstTranslatorBase.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FunctionCallTranslator.NormalizeAllSetSources(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FunctionCallTranslator.TranslateFunctionCall(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Objects.DataClasses.EdmFunctionAttribute)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FunctionCallTranslator.UnwrapNoOpConverts(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FunctionCallTranslator.ValidateFunctionAttributeParameter(System.Linq.Expressions.MethodCallExpression,System.String,System.String)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FunctionCallTranslator.ValidateReturnType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage,System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Type,System.Boolean)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="actualReturnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrReturnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.GetCallTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.GroupByTranslator.ProcessResultSelector(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Objects.ELinq.SequenceMethod,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="topLevelProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.GroupByTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.GroupJoinTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.GuidNewGuidTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.IndexOfTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.InitializeMethodTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.InitializeObjectQueryTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.InitializeSequenceMethodTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.InsertTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.IsNullOrEmptyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.JoinTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.MathPowerTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ObjectQueryCallTranslator.IsCandidateMethod(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ObjectQueryCallTranslator.RemoveConvertToObjectQuery(System.Linq.Expressions.Expression)">
    <parameter name="queryExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ObjectQueryIncludeSpanTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ObjectQueryIncludeTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ObjectQueryMergeAsTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.TranslateOneLambda(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OrderByTranslatorBase.TranslateOneLambda(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.PagingTranslator.TranslatePagingOperator(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.PassthroughTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.RemoveTranslator.IsNonNegativeIntegerConstant(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.RemoveTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SelectManyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SelectManyTranslator.TranslateOneLambda(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SequenceMethodTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SequenceMethodTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Objects.ELinq.SequenceMethod)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.StartsWithTranslator.CreateDefaultTranslation(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.StringContainsTranslator.CreateDefaultTranslation(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SubstringTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TakeTranslator.TranslatePagingOperator(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ThenByTranslatorBase.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TrimStartTrimEndBaseTranslator.IsEmptyArray(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TrimStartTrimEndBaseTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TryGetCallTranslator(System.Reflection.MethodInfo,System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CallTranslator@)">
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.UnarySequenceMethodTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.VBCanonicalFunctionDefaultTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.VBCanonicalFunctionRenameTranslator.GetMethod(System.Type,System.String,System.String,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.VBCanonicalFunctionRenameTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.VBDatePartTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ModuloTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MultiplyTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NegateTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NewArrayInitTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.NewArrayExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NewTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.NewExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NormalizeSetSource(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NotSupportedTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.Expression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NotTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ofType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.AddToSkip(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbSkipExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="skip">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ApplySkipOrderToSort(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbSkipExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortSpec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ApplySortOrderToSkip(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbSortExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sort">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ComposeFilter(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ComposeProject(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.GetLifter(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.Limit(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="k">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.LimitSkipLifter.#ctor(System.Data.Common.CommandTrees.DbLimitExpression,System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="skip">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.LimitSkipLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.LimitSkipLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.LimitSkipLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="k">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.LimitSortLifter.#ctor(System.Data.Common.CommandTrees.DbLimitExpression,System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="sort">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.LimitSortLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.LimitSortLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.LimitSortLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="k">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.MinimumLimit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbLimitExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.OfType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.PassthroughOrderByLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.PassthroughOrderByLifter.OfType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.PassthroughOrderByLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.PassthroughOrderByLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="k">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectLimitSkipLifter.#ctor(System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbLimitExpression,System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="skip">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectLimitSkipLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectLimitSkipLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectLimitSkipLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectLimitSortLifter.#ctor(System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbLimitExpression,System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="sort">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectLimitSortLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectLimitSortLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectLimitSortLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="k">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectSkipLifter.#ctor(System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="skip">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectSkipLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectSkipLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectSkipLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectSortLifter.#ctor(System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="sort">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectSortLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectSortLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.ProjectSortLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="k">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.RebindFilter(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.RebindProject(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.RebindSkip(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbSkipExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="skip">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.RebindSort(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbSortExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sort">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="k">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="skipCount">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SkipLifter.#ctor(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="skip">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SkipLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SkipLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SkipLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SortLifter.#ctor(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="sort">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SortLifter.Filter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SortLifter.Project(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SortLifter.Skip(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="k">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrderByLifter.SubtractFromLimit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbLimitExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrElseTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ParameterReferenceRemover.RemoveParameterReferences(System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ObjectParameterCollection)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ParameterReferenceRemover.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ParameterTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.ParameterExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.PreparePattern(System.String,System.Boolean,System.Boolean,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ELinq.ExpressionConverter.PropagatedMergeOption">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.QuoteTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="unary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.RecursivelyRewriteEqualsExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="skipCount">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.SubtractTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ThrowUnresolvableFunction(System.Linq.Expressions.Expression)">
    <parameter name="Expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ThrowUnresolvableFunctionOverload(System.Linq.Expressions.Expression,System.Boolean)">
    <parameter name="Expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateExpression(System.Linq.Expressions.Expression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateFunctionIntoLike(System.Linq.Expressions.MethodCallExpression,System.Boolean,System.Boolean,System.Func{System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultTranslator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateInlineQueryOfT(System.Data.Objects.ObjectQuery)">
    <parameter name="inlineQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateIntoCanonicalFunction(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
    <parameter name="linqArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateLambda(System.Linq.Expressions.LambdaExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateLambda(System.Linq.Expressions.LambdaExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionBinding@)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateLambda(System.Linq.Expressions.LambdaExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbGroupExpressionBinding@)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateSet(System.Linq.Expressions.Expression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Translator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.Expression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TryGetSpan(System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.Span@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TryGetValueLayerType(System.Type,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="linqType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TypedTranslator`1.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,`0)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TypeUsageEquals(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.UnaryPlusTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="unary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.UnaryTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.UnifySpanMappings(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ValidateAndAdjustCastTypes(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ValidateInitializerMetadata(System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.VerifyRowTypeSupportedForComparison(System.Type,System.Data.Metadata.Edm.RowType,System.Collections.Generic.Stack{System.Data.Metadata.Edm.EdmMember})">
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.VerifyTypeSupportedForComparison(System.Type,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.Stack{System.Data.Metadata.Edm.EdmMember})">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.CreateCompiledQueryEvaluationFuncletizer(System.Data.Objects.ObjectContext,System.Linq.Expressions.ParameterExpression,System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ParameterExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.CreateCompiledQueryLockdownFuncletizer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.CreateQueryFuncletizer(System.Data.Objects.ObjectContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.FuncletizingVisitor.CompileExpression(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.FuncletizingVisitor.GetRecompileRequiredFunction">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.FuncletizingVisitor.InlineObjectQuery(System.Data.Objects.ObjectQuery,System.Type)">
    <parameter name="inlineQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expressionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.FuncletizingVisitor.InlineValue(System.Linq.Expressions.Expression,System.Boolean)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.FuncletizingVisitor.InvalidCompiledQueryParameterException(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.GenerateParameterName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.Nominate(System.Linq.Expressions.Expression,System.Func{System.Linq.Expressions.Expression,System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="localCriterion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.Funcletizer.TryGetTypeUsageForTerminal(System.Type,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.AppendColumnMapKey(System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateEmptyProjectionInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Linq.Expressions.NewExpression)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateEntityCollectionInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Type,System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateGroupingInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Type)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateProjectionInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Linq.Expressions.MemberInitExpression,System.Reflection.MemberInfo[])">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="initExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateProjectionInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Linq.Expressions.NewExpression)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Emit(System.Data.Common.Internal.Materialization.Translator,System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <parameter name="propertyTranslatorResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.EmptyProjectionNewMetadata.#ctor(System.Linq.Expressions.NewExpression)">
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.EmptyProjectionNewMetadata.Emit(System.Data.Common.Internal.Materialization.Translator,System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <parameter name="propertyReaders">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.EntityCollectionInitializerMetadata.CreateEntityCollection``1(System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.Internal.IEntityWrapper,System.Data.Common.Internal.Materialization.Coordinator{``0},System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="coordinator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.EntityCollectionInitializerMetadata.Emit(System.Data.Common.Internal.Materialization.Translator,System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Equals(System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.GetPropertyReaders(System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyTranslatorResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Grouping`2.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Grouping`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.GroupingInitializerMetadata.Emit(System.Data.Common.Internal.Materialization.Translator,System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.IsStructurallyEquivalent(System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.ProjectionInitializerMetadata.#ctor(System.Linq.Expressions.MemberInitExpression,System.Reflection.MemberInfo[])">
    <parameter name="initExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.ProjectionNewMetadata.#ctor(System.Linq.Expressions.NewExpression)">
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.ProjectionNewMetadata.GetChildTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.TryGetInitializerMetadata(System.Data.Metadata.Edm.TypeUsage,System.Data.Objects.ELinq.InitializerMetadata@)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.CreateCompareExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.CreateRelationalOperator(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.HasPredicateArgument(System.Linq.Expressions.MethodCallExpression,System.Int32@)">
    <parameter name="callExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.IsConstantZero(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.NormalizePredicateArgument(System.Linq.Expressions.MethodCallExpression)">
    <parameter name="callExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.TryCreateRelationalOperator(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.BinaryExpression@)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.TryMatchCoalescePattern(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.UnwrapObjectConvert(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.ExecuteSingle``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression)">
    <parameter name="queryRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.GetElementFunction``1(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="queryRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.QueryParameterExpression.#ctor(System.Data.Common.CommandTrees.DbParameterReferenceExpression,System.Linq.Expressions.Expression,System.Collections.Generic.IEnumerable{System.Linq.Expressions.ParameterExpression})">
    <parameter name="funcletizedExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.QueryParameterExpression.EscapeParameterForLike(System.Func{System.String,System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ReflectionUtil.AppendCanonicalTypeDescription(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Int32},System.Text.StringBuilder)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="description">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ReflectionUtil.GetCanonicalMethodDescription(System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ReflectionUtil.TryIdentifySequenceMethod(System.Linq.Expressions.Expression,System.Boolean,System.Data.Objects.ELinq.SequenceMethod@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ReflectionUtil.TryIdentifySequenceMethod(System.Reflection.MethodInfo,System.Data.Objects.ELinq.SequenceMethod@)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.TypeSystem.EnsureType(System.Linq.Expressions.Expression,System.Type)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.TypeSystem.GetDefaultValue(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.TypeSystem.GetNonNullableType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.TypeSystem.IsImplementationOf(System.Reflection.PropertyInfo,System.Type)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.TypeSystem.PropertyOrField(System.Reflection.MemberInfo,System.String@,System.Type@)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.#ctor(System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.ObjectStateManager,System.Data.Objects.StateManagerTypeMetadata,System.Data.EntityState)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.AddComplexObjectSnapshot(System.Object,System.Int32,System.Object)">
    <parameter name="userObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.AddDetectedRelationship``1(System.Collections.Generic.Dictionary{System.Data.Objects.Internal.IEntityWrapper,System.Collections.Generic.Dictionary{System.Data.Objects.DataClasses.RelatedEnd,System.Collections.Generic.HashSet{``0}}},``0,System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.AddOrIncreaseCounter(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}},System.String,System.Object)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.AddRelationshipDetectedByForeignKey(System.Collections.Generic.Dictionary{System.Data.Objects.Internal.IEntityWrapper,System.Collections.Generic.Dictionary{System.Data.Objects.DataClasses.RelatedEnd,System.Collections.Generic.HashSet{System.Data.EntityKey}}},System.Collections.Generic.Dictionary{System.Data.Objects.Internal.IEntityWrapper,System.Collections.Generic.Dictionary{System.Data.Objects.DataClasses.RelatedEnd,System.Collections.Generic.HashSet{System.Data.EntityKey}}},System.Data.EntityKey,System.Data.Objects.EntityEntry,System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="relatedEndFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="principalRelationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.AddRelationshipDetectedByGraph(System.Collections.Generic.Dictionary{System.Data.Objects.Internal.IEntityWrapper,System.Collections.Generic.Dictionary{System.Data.Objects.DataClasses.RelatedEnd,System.Collections.Generic.HashSet{System.Data.Objects.Internal.IEntityWrapper}}},System.Object,System.Data.Objects.DataClasses.RelatedEnd,System.Boolean)">
    <parameter name="relatedEndFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.AddRelationshipEnd(System.Data.Objects.RelationshipEntry)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.ApplyCurrentValuesInternal(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedCurrentEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.ApplyOriginalValuesInternal(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedOriginalEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.DetachRelationshipsEntries(System.Data.Objects.DataClasses.RelationshipManager)">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.DetectChangesInComplexType(System.Data.Objects.StateManagerMemberMetadata,System.Data.Objects.StateManagerMemberMetadata,System.Object,System.Object)">
    <parameter name="topLevelMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="complexMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.EntityEntry.EditableOriginalValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.ExpandComplexTypeAndAddValues(System.Data.Objects.StateManagerMemberMetadata,System.Object,System.Object,System.Boolean)">
    <parameter name="memberMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newComplexObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.FindFKRelatedEnds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.FixupEntityReferenceByForeignKey(System.Data.Objects.DataClasses.EntityReference)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.FixupEntityReferenceToPrincipal(System.Data.Objects.DataClasses.EntityReference,System.Data.EntityKey,System.Boolean,System.Boolean)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetAssociationEndMember(System.Data.Objects.RelationshipEntry)">
    <parameter name="relationshipEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetComplexObjectSnapshot(System.Object,System.Int32)">
    <parameter name="parentObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetCurrentEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Data.Objects.ObjectStateValueRecord)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetCurrentEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Data.Objects.ObjectStateValueRecord,System.Int32)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetOriginalEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Data.Objects.ObjectStateValueRecord)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetOriginalEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Data.Objects.ObjectStateValueRecord,System.Int32)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetOtherEndOfRelationship(System.Data.Objects.RelationshipEntry)">
    <parameter name="relationshipEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetOtherKeyProperties(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}})">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.GetUpdatableOriginalValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.HasRecordValueChanged(System.Data.Common.DbDataRecord,System.Int32,System.Object)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.InternalGetOriginalValues(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.PromoteKeyEntry(System.Data.Objects.Internal.IEntityWrapper,System.Data.IExtendedDataRecord,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.RelationshipEndEnumerable.System#Collections#Generic#IEnumerable{System#Data#IEntityStateEntry}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.RelationshipEndEnumerable.System#Collections#Generic#IEnumerable{System#Data#Objects#RelationshipEntry}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.RelationshipEndEnumerable.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.EntityEntry.RelationshipEndEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.EntityEntry.RelationshipEndEnumerator.System#Collections#Generic#IEnumerator{System#Data#IEntityStateEntry}#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.EntityEntry.RelationshipEndEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.RetrieveReferentialConstraintPropertiesFromKeyEntries(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}})">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.SetCurrentEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="userObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.SetCurrentEntityValue(System.String,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.SetOriginalEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.TakeSnapshotOfComplexType(System.Data.Objects.StateManagerMemberMetadata,System.Object)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.TakeSnapshotOfSingleRelationship(System.Data.Objects.DataClasses.RelatedEnd,System.Data.Metadata.Edm.NavigationProperty,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.TryGetReferenceKey(System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey@)">
    <parameter name="principalRole">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.UpdateComplexObjectSnapshot(System.Data.Objects.StateManagerMemberMetadata,System.Object,System.Int32,System.Object)">
    <parameter name="currentValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="userObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.UpdateRecord(System.Object,System.Data.Objects.DbUpdatableDataRecord,System.Data.Objects.EntityEntry.UpdateRecordBehavior,System.Int32)">
    <parameter name="current">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.UpdateRecordWithoutSetModified(System.Object,System.Data.Objects.DbUpdatableDataRecord)">
    <parameter name="current">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.UpdateRecordWithSetModified(System.Object,System.Data.Objects.DbUpdatableDataRecord)">
    <parameter name="current">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.UpdateRelationshipEnds(System.Data.EntityKey,System.Data.Objects.EntityEntry)">
    <parameter name="oldKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.VerifyEntityValueIsEditable(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.String)">
    <parameter name="typeMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.WillNotRefSteal(System.Data.Objects.DataClasses.EntityReference,System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="refToPrincipal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedPrincipal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntitySetQualifiedType.#ctor(System.Type,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntitySqlQueryState.#ctor(System.Type,System.String,System.Boolean,System.Data.Objects.ObjectContext,System.Data.Objects.ObjectParameterCollection,System.Data.Objects.Span)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntitySqlQueryState.Include``1(System.Data.Objects.ObjectQuery{``0},System.String)">
    <parameter name="sourceQuery">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.#ctor(System.Type,System.Boolean,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.CanResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.DetermineClrType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.ResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.ShouldSerializeValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.#ctor(`0,System.Data.Objects.DataClasses.RelationshipManager)">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.#ctor(`0,System.Data.Objects.DataClasses.RelationshipManager,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Type)">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.AttachContext(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.CollectionAdd(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.CollectionRemove(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.EnsureCollectionNotNull(System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.Internal.BaseEntityWrapper`1.Entity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.GetEntityKeyFromEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.GetNavigationPropertyValue(System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.Internal.BaseEntityWrapper`1.IdentityType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.Internal.BaseEntityWrapper`1.RelationshipManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.ResetContext(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.SetCurrentValue(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerMemberMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.TakeSnapshotOfRelationships(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseEntityWrapper`1.UpdateCurrentValueRecord(System.Object,System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseProxyImplementor.Implement(System.Reflection.Emit.TypeBuilder,System.Action{System.Reflection.Emit.FieldBuilder,System.Boolean})">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseProxyImplementor.ImplementBaseGetter(System.Reflection.Emit.TypeBuilder)">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.BaseProxyImplementor.ImplementBaseSetter(System.Reflection.Emit.TypeBuilder)">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.CreateComplex(System.Data.IExtendedDataRecord,System.Data.Common.DataRecordInfo,System.Object)">
    <parameter name="recordInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.CreateComplexRecursive(System.Data.IExtendedDataRecord,System.Object)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.CreateComplexRecursive(System.Object,System.Object)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.GetPlan(System.Data.IExtendedDataRecord,System.Data.Common.DataRecordInfo)">
    <parameter name="recordInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.PlanEdmProperty.#ctor(System.Int32,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.SetProperties(System.Data.IExtendedDataRecord,System.Object,System.Data.Objects.Internal.ComplexTypeMaterializer.PlanEdmProperty[])">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.DataContractImplementor.#ctor(System.Data.Metadata.Edm.EntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.DataContractImplementor.Implement(System.Reflection.Emit.TypeBuilder,System.Action{System.Reflection.Emit.FieldBuilder,System.Boolean})">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.AddAssemblyToResolveList(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.AssignInterceptionDelegate(System.Delegate,System.Reflection.FieldInfo)">
    <parameter name="interceptorField">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.BuildType(System.Reflection.Emit.ModuleBuilder,System.Data.Metadata.Edm.ClrEntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.CanProxyGetter(System.Reflection.PropertyInfo)">
    <parameter name="clrProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.CanProxySetter(System.Reflection.PropertyInfo)">
    <parameter name="clrProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.CanProxyType(System.Data.Metadata.Edm.EntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.CreateBaseGetter(System.Type,System.Reflection.PropertyInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.CreateBaseSetter(System.Type,System.Reflection.PropertyInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.GetDynamicModule(System.Data.Metadata.Edm.EntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.GetProxyType(System.Data.Metadata.Edm.ClrEntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.GetResetFKSetterFlagDelegate(System.Func{System.Object,System.Object})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.InterceptMember(System.Data.Metadata.Edm.EdmMember,System.Type,System.Data.Objects.Internal.EntityProxyTypeInfo)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="proxyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="proxyTypeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.ProxyTypeBuilder.#ctor(System.Data.Metadata.Edm.ClrEntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.ProxyTypeBuilder.EmitBaseGetter(System.Reflection.Emit.TypeBuilder,System.Reflection.Emit.PropertyBuilder,System.Reflection.PropertyInfo)">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.ProxyTypeBuilder.EmitBaseSetter(System.Reflection.Emit.TypeBuilder,System.Reflection.Emit.PropertyBuilder,System.Reflection.PropertyInfo)">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.ProxyTypeBuilder.MarkAsNotSerializable(System.Reflection.Emit.FieldBuilder)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.ProxyTypeBuilder.RegisterInstanceField(System.Reflection.Emit.FieldBuilder,System.Boolean)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.SetCompareByteArraysDelegate(System.Type,System.Data.Objects.Internal.EntityProxyTypeInfo)">
    <parameter name="proxyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.SetResetFKSetterFlagDelegate(System.Type,System.Data.Objects.Internal.EntityProxyTypeInfo)">
    <parameter name="proxyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="proxyTypeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.TryCreateProxyType(System.Data.Metadata.Edm.EntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.TryCreateProxyTypes(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EntityType})">
    <parameter name="ospaceEntityTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.TryGetAssociationTypeFromProxyInfo(System.Data.Objects.Internal.IEntityWrapper,System.String,System.String,System.Data.Metadata.Edm.AssociationType@)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.TryGetBasePropertyValue(System.Type,System.String,System.Object,System.Object@)">
    <parameter name="proxyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.TryGetProxyType(System.Type,System.Data.Objects.Internal.EntityProxyTypeInfo@)">
    <parameter name="proxyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.TryGetProxyWrapper(System.Object,System.Data.Objects.Internal.IEntityWrapper@)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyFactory.TrySetBasePropertyValue(System.Type,System.String,System.Object,System.Object)">
    <parameter name="proxyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyTypeInfo.#ctor(System.Type,System.Data.Metadata.Edm.ClrEntityType,System.Reflection.Emit.DynamicMethod,System.Collections.Generic.List{System.Reflection.PropertyInfo},System.Collections.Generic.List{System.Reflection.PropertyInfo})">
    <parameter name="proxyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseGetters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseSetters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyTypeInfo.ContainsBaseGetter(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyTypeInfo.ContainsBaseSetter(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyTypeInfo.GetEntityWrapper(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyTypeInfo.SetEntityWrapper(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityProxyTypeInfo.ValidateType(System.Data.Metadata.Edm.ClrEntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.BuildOrderByOrWhere(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[],System.String,System.String,System.Boolean)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicateOrKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.BuildSelectOrSelectValue(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[],System.String,System.Type)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.BuildSetOp(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Span,System.String)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Distinct(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Except(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.GetCommandText(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.GroupBy(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Intersect(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.MergeParameters(System.Data.Objects.ObjectContext,System.Data.Objects.ObjectParameterCollection,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builderMethodParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.MergeParameters(System.Data.Objects.ObjectParameterCollection,System.Data.Objects.ObjectParameterCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.NewBuilderQuery(System.Data.Objects.Internal.ObjectQueryState,System.Type,System.Text.StringBuilder,System.Boolean,System.Data.Objects.Span,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectParameter})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.NewBuilderQuery(System.Data.Objects.Internal.ObjectQueryState,System.Type,System.Text.StringBuilder,System.Data.Objects.Span,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectParameter})">
    <parameter name="queryText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.OfType(System.Data.Objects.Internal.ObjectQueryState,System.Data.Metadata.Edm.EdmType,System.Type)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.OrderBy(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Select(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.SelectValue(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[],System.Type)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Skip(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Top(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Union(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.UnionAll(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Where(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWithChangeTrackerStrategy.SetCurrentValue(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerMemberMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWithChangeTrackerStrategy.UpdateCurrentValueRecord(System.Object,System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWithKeyStrategy.GetEntityKeyFromEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapper`1.#ctor(`0,System.Data.Objects.DataClasses.RelationshipManager,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Type,System.Func{System.Object,System.Data.Objects.Internal.IPropertyAccessorStrategy},System.Func{System.Object,System.Data.Objects.Internal.IChangeTrackingStrategy},System.Func{System.Object,System.Data.Objects.Internal.IEntityKeyStrategy})">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changeTrackingStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapper`1.#ctor(`0,System.Data.Objects.DataClasses.RelationshipManager,System.Func{System.Object,System.Data.Objects.Internal.IPropertyAccessorStrategy},System.Func{System.Object,System.Data.Objects.Internal.IChangeTrackingStrategy},System.Func{System.Object,System.Data.Objects.Internal.IEntityKeyStrategy})">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changeTrackingStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.CreateWrapperDelegateTypedLightweight``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.CreateWrapperDelegateTypedWithoutRelationships``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.CreateWrapperDelegateTypedWithRelationships``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.GetEntityWithChangeTrackerStrategyFunc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.GetEntityWithKeyStrategyStrategyFunc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.GetNullPropertyAccessorStrategyFunc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.GetPocoEntityKeyStrategyFunc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.GetPocoPropertyAccessorStrategyFunc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.GetSnapshotChangeTrackingStrategyFunc">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperFactory.UpdateNoTrackingWrapper(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperWithoutRelationships`1.#ctor(`0,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Type,System.Func{System.Object,System.Data.Objects.Internal.IPropertyAccessorStrategy},System.Func{System.Object,System.Data.Objects.Internal.IChangeTrackingStrategy},System.Func{System.Object,System.Data.Objects.Internal.IEntityKeyStrategy})">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changeTrackingStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperWithoutRelationships`1.#ctor(`0,System.Func{System.Object,System.Data.Objects.Internal.IPropertyAccessorStrategy},System.Func{System.Object,System.Data.Objects.Internal.IChangeTrackingStrategy},System.Func{System.Object,System.Data.Objects.Internal.IEntityKeyStrategy})">
    <parameter name="propertyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changeTrackingStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperWithRelationships`1.#ctor(`0,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Type,System.Func{System.Object,System.Data.Objects.Internal.IPropertyAccessorStrategy},System.Func{System.Object,System.Data.Objects.Internal.IChangeTrackingStrategy},System.Func{System.Object,System.Data.Objects.Internal.IEntityKeyStrategy})">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changeTrackingStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperWithRelationships`1.#ctor(`0,System.Func{System.Object,System.Data.Objects.Internal.IPropertyAccessorStrategy},System.Func{System.Object,System.Data.Objects.Internal.IChangeTrackingStrategy},System.Func{System.Object,System.Data.Objects.Internal.IEntityKeyStrategy})">
    <parameter name="propertyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changeTrackingStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyStrategy">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntityWrapperWithRelationships`1.TakeSnapshotOfRelationships(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ForeignKeyFactory.CreateConceptualNullKey(System.Data.EntityKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="originalKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ForeignKeyFactory.CreateKeyFromForeignKeyValues(System.Data.Objects.EntityEntry,System.Data.Metadata.Edm.ReferentialConstraint,System.Data.Metadata.Edm.EntitySet,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="dependentEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="principalEntitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ForeignKeyFactory.CreateKeyFromForeignKeyValues(System.Data.Objects.EntityEntry,System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dependentEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ISerializableImplementor.#ctor(System.Data.Metadata.Edm.EntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ISerializableImplementor.Implement(System.Reflection.Emit.TypeBuilder,System.Collections.Generic.IEnumerable{System.Reflection.Emit.FieldBuilder})">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="serializedFields">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LazyLoadBehavior.IsLazyLoadCandidate(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LazyLoadBehavior.LoadProperty``1(``0,System.String,System.String,System.Boolean,System.Object)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LazyLoadImplementor.#ctor(System.Data.Metadata.Edm.EntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LazyLoadImplementor.CanProxyMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LazyLoadImplementor.CheckType(System.Data.Metadata.Edm.EntityType)">
    <parameter name="ospaceEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LazyLoadImplementor.EmitMember(System.Reflection.Emit.TypeBuilder,System.Data.Metadata.Edm.EdmMember,System.Reflection.Emit.PropertyBuilder,System.Reflection.PropertyInfo,System.Data.Objects.Internal.BaseProxyImplementor)">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseImplementor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LazyLoadImplementor.Implement(System.Reflection.Emit.TypeBuilder,System.Action{System.Reflection.Emit.FieldBuilder,System.Boolean})">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="registerField">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LightweightEntityWrapper`1.#ctor(`0)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LightweightEntityWrapper`1.#ctor(`0,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Type)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LightweightEntityWrapper`1.CollectionAdd(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LightweightEntityWrapper`1.CollectionRemove(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LightweightEntityWrapper`1.EnsureCollectionNotNull(System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LightweightEntityWrapper`1.SetCurrentValue(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerMemberMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.LightweightEntityWrapper`1.TakeSnapshotOfRelationships(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.AttachContext(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.CollectionAdd(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.CollectionRemove(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.EnsureCollectionNotNull(System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.Internal.NullEntityWrapper.Entity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.GetEntityKeyFromEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.GetNavigationPropertyValue(System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.Internal.NullEntityWrapper.IdentityType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.Internal.NullEntityWrapper.RelationshipManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.ResetContext(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.SetCurrentValue(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerMemberMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.TakeSnapshotOfRelationships(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.NullEntityWrapper.UpdateCurrentValueRecord(System.Object,System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.Span)">
    <parameter name="span">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.AddSpanPath(System.Data.Objects.Internal.ObjectFullSpanRewriter.SpanPathInfo,System.Collections.Generic.List{System.String})">
    <parameter name="navPropNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.ConvertSpanPath(System.Data.Objects.Internal.ObjectFullSpanRewriter.SpanPathInfo,System.Collections.Generic.List{System.String},System.Int32)">
    <parameter name="parentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navPropNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.EntityTypeFromResultType(System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="navProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.GetNavigationPropertyTargetEnd(System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.TryGetEntityType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EntityType@)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryExecutionPlan.Execute``1(System.Data.Objects.ObjectContext,System.Data.Objects.ObjectParameterCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryExecutionPlan.ExecuteCommandTree``1(System.Data.Objects.ObjectContext,System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.ApplySettingsTo(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.CreateObjectQuery``1(System.Data.Objects.Internal.ObjectQueryState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="queryState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.EnsureMergeOption(System.Nullable{System.Data.Objects.MergeOption}[])">
    <parameter name="preferredMergeOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.EnsureParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.GetMergeOption(System.Nullable{System.Data.Objects.MergeOption}[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="preferredMergeOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.Include``1(System.Data.Objects.ObjectQuery{``0},System.String)">
    <parameter name="sourceQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="includePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.AddSpanMap(System.Data.Metadata.Edm.RowType,System.Collections.Generic.Dictionary{System.Int32,System.Data.Metadata.Edm.AssociationEndMember})">
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.AddSpannedRowType(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="spannedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.CreateEntitySpanTrackingInfo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.GetRelationshipSpanEnds(System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.IsValidRelationshipSpan(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.AssociationType,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="compareType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.NavigationInfo.#ctor(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression,System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="originalNavigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rewrittenNavigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Find(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.FindNavigationExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.Internal.ObjectSpanRewriter.NavigationInfo@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.Rewrite(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteCollection(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.CollectionType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteElementExpression(System.Data.Common.CommandTrees.DbElementExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteEntity(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteLimitExpression(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteRow(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RowType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.TryRewrite(System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Objects.Span,System.Data.Objects.MergeOption,System.Data.Common.CommandTrees.DbExpression@,System.Data.Objects.Internal.SpanIndex@)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.PocoEntityKeyStrategy.GetEntityKeyFromEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.#ctor(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.AddToCollection``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.CollectionAdd(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.CollectionCreate(System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.CollectionRemove(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.CreateCollectionAddFunction(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.CreateCollectionCreateDelegate(System.Type,System.Type,System.String)">
    <parameter name="navigationPropertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.GetDeclaringType(System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.PocoPropertyAccessorStrategy.GetNavigationPropertyType(System.Type,System.String)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SnapshotChangeTrackingStrategy.SetCurrentValue(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerMemberMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SnapshotChangeTrackingStrategy.UpdateCurrentValueRecord(System.Object,System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.AddSpanMap(System.Data.Metadata.Edm.RowType,System.Collections.Generic.Dictionary{System.Int32,System.Data.Metadata.Edm.AssociationEndMember})">
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.AddSpannedRowType(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="spannedRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.GetSpanMap(System.Data.Metadata.Edm.RowType)">
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.GetSpannedRowType(System.Data.Metadata.Edm.RowType)">
    <parameter name="spannedRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.HasSpanMap(System.Data.Metadata.Edm.RowType)">
    <parameter name="spanRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.RowTypeEqualityComparer.Equals(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.RowType)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.RowTypeEqualityComparer.GetHashCode(System.Data.Metadata.Edm.RowType)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.#ctor(System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreateConstructor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreateDynamicMethod(System.String,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreateNavigationPropertySetter(System.Type,System.Reflection.PropertyInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="navigationProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreatePropertyGetter(System.RuntimeTypeHandle,System.RuntimeMethodHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreatePropertySetter(System.RuntimeTypeHandle,System.RuntimeMethodHandle,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GenerateNecessaryPermissionDemands(System.Reflection.Emit.ILGenerator,System.Reflection.MethodBase)">
    <parameter name="gen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetConstructorDelegateForType(System.Data.Metadata.Edm.ClrComplexType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetConstructorDelegateForType(System.Data.Metadata.Edm.ClrEntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetConstructorForType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetGetterDelegateForProperty(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetRelatedEnd(System.Data.Objects.DataClasses.RelationshipManager,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetSetterDelegateForProperty(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetValue(System.Data.Metadata.Edm.EdmProperty,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.IsPublic(System.Reflection.MethodBase)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.RequiresPermissionDemands(System.Reflection.MethodBase)">
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.SetValue(System.Data.Metadata.Edm.EdmProperty,System.Object,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.ThrowConstructorNoParameterless(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.CreatePropertyDescriptorCollection(System.Data.Metadata.Edm.StructuralType,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.MaterializedDataRecord.DataRecordInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.InitializePropertyDescriptors">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.MaterializedDataRecord.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.Boolean)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.#ctor(System.String)">
    <parameter name="connectionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.#ctor(System.String,System.String)">
    <parameter name="connectionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AddRefreshKey(System.Object,System.Collections.Generic.Dictionary{System.Data.EntityKey,System.Data.Objects.EntityEntry},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.List{System.Data.EntityKey}})">
    <parameter name="entityLike">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AddSingleObject(System.Data.Metadata.Edm.EntitySet,System.Data.Objects.Internal.IEntityWrapper,System.String)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ApplyCurrentValues``1(System.String,``0)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ApplyOriginalValues``1(System.String,``0)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="originalEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changed">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.Attach(System.Data.Objects.DataClasses.IEntityWithKey)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AttachSingleObject(System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.EntitySet,System.String)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.BatchRefreshEntitiesByKey(System.Data.Objects.RefreshMode,System.Collections.Generic.Dictionary{System.Data.EntityKey,System.Data.Objects.EntityEntry},System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.List{System.Data.EntityKey},System.Int32)">
    <parameter name="trackedEntities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CheckLoadPropertySelectorExpression``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectContext.Connection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ConnectionStateChange(System.Object,System.Data.StateChangeEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateEntityCommandForFunctionImport(System.String,System.Data.Metadata.Edm.EdmFunction@,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateEntityConnection(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="connectionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateFunctionObjectResult``1(System.Data.EntityClient.EntityCommand,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EdmType,System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateObjectSet``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateObjectSet``1(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateProxyTypes(System.Collections.Generic.IEnumerable{System.Type})">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateStoreCommand(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ExecuteFunction(System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.MergeOption,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ExecuteStoreCommand(System.String,System.Object[])">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ExecuteStoreQuery``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ExecuteStoreQueryInternal``1(System.String,System.String,System.Data.Objects.MergeOption,System.Object[])">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.FindParameterMetadata(System.Data.Metadata.Edm.EdmFunction,System.Data.Objects.ObjectParameter[],System.Int32)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetEntitySetForNameAndType(System.String,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityCLRType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetEntitySetForType(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityCLRType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetEntitySetFromContainer(System.Data.Metadata.Edm.EntityContainer,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityCLRType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetEntitySetFromName(System.String)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetEntitySetName(System.String,System.String,System.Data.Objects.ObjectContext,System.String@,System.String@)">
    <parameter name="qualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetObjectByKey(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetObjectType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetTypeUsage(System.Type)">
    <parameter name="entityCLRType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.InternalTranslate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.LoadProperty``1(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.Objects.MergeOption)">
    <parameter name="selector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectContext.ObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectContext.Perspective">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.PopulateFunctionEntityCommandParameters(System.Data.Objects.ObjectParameter[],System.Data.Metadata.Edm.EdmFunction,System.Data.EntityClient.EntityCommand)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectContext.QueryProvider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.RefreshCheck(System.Collections.Generic.Dictionary{System.Data.EntityKey,System.Data.Objects.EntityEntry},System.Object,System.Data.EntityKey)">
    <parameter name="entities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.RefreshEntities(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.RetrieveMetadataWorkspaceFromConnection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.Translate``1(System.Data.Common.DbDataReader,System.String,System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.TryGetObjectByKey(System.Data.EntityKey,System.Object@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ValidateEntitySet(System.Data.Metadata.Edm.EntitySet,System.Type)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.VerifyContextForAddOrAttach(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.VerifyRootForAdd(System.Boolean,System.String,System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.EntityEntry,System.Data.Metadata.Edm.EntitySet@,System.Boolean@)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.WrapEntityAndCheckContext(System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.#ctor(System.Data.Objects.ObjectParameter)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.ShallowCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.ValidateParameterName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.ValidateParameterType(System.Data.Metadata.Edm.ClrPerspective)">
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.DeepCopy(System.Data.Objects.ObjectParameterCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable{System#Data#Objects#ObjectParameter}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.#ctor(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="queryState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.ExecuteInternal(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.GetEnumeratorInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.GetIListSourceListInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.GetResultType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectQuery.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.#ctor(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="queryState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Distinct">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.GetResults(System.Nullable{System.Data.Objects.MergeOption})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Include(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.IsLinqQuery(System.Data.Objects.ObjectQuery)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectResult.ElementType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectResult.GetEnumeratorInternal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectResult.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectResult.System#ComponentModel#IListSource#GetList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectResult`1.#ctor(System.Data.Common.Internal.Materialization.Shaper{`0},System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectResult`1.#ctor(System.Data.Common.Internal.Materialization.Shaper{`0},System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectResult`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectSet`1.#ctor(System.Data.Metadata.Edm.EntitySet,System.Data.Objects.ObjectContext)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectSet`1.ApplyCurrentValues(`0)">
    <parameter name="currentEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectSet`1.ApplyOriginalValues(`0)">
    <parameter name="originalEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectSet`1.FullyQualifiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.CurrentValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.Entity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetCLayerName(System.Int32,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetDataRecordInfo(System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetFieldCount(System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetFieldType(System.Int32,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetOrdinalforCLayerName(System.String,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.ModifiedProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.OriginalValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.RelationshipManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.System#Data#IEntityStateEntry#ModifiedProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.#ctor(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.#ctor(System.Data.Objects.RelationshipEntry)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntryDbDataRecord.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbUpdatableDataRecord.#ctor(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbUpdatableDataRecord.#ctor(System.Data.Objects.RelationshipEntry)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryOriginalDbUpdatableDataRecord_Internal.#ctor(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryOriginalDbUpdatableDataRecord_Public.#ctor(System.Data.Objects.EntityEntry,System.Data.Objects.StateManagerTypeMetadata,System.Object,System.Int32)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryOriginalDbUpdatableDataRecord_Public.SetRecordValue(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntityEntryToDictionary(System.Data.Objects.EntityEntry,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntityToCollectionOrReference(System.Data.Objects.MergeOption,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.AssociationEndMember,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="wrappedSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntry(System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="wrappedObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntryContainingForeignKeyToIndex(System.Data.EntityKey,System.Data.Objects.EntityEntry)">
    <parameter name="foreignKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntryToKeylessStore(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddKeyEntry(System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddNewRelation(System.Data.Objects.RelationshipWrapper,System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddRelation(System.Data.Objects.RelationshipWrapper,System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddRelationshipEndToLookup(System.Data.EntityKey,System.Data.Objects.RelationshipEntry)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddRelationshipEntryToDictionary(System.Data.Objects.RelationshipEntry,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddRelationshipToLookup(System.Data.Objects.RelationshipEntry)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddStateManagerTypeMetadata(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ObjectTypeMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddStateManagerTypeMetadata(System.Data.Metadata.Edm.EntitySet,System.Data.Mapping.ObjectTypeMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AlignChangesInRelationships(System.Collections.Generic.IList{System.Data.Objects.EntityEntry})">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AssertEntryDoesNotExistInForeignKeyIndex(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AttachEntry(System.Data.EntityKey,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.EntitySet,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrappedObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Data.Objects.EntityEntry,System.Data.Objects.EntityEntry,System.Data.Objects.DataClasses.RelatedEnd,System.Data.EntityState)">
    <parameter name="sourceEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)">
    <parameter name="navigationProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)">
    <parameter name="navigationPropertySelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ChangeState(System.Data.Objects.EntityEntry,System.Data.EntityState,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ChangeState(System.Data.Objects.RelationshipEntry,System.Data.EntityState,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.CheckKeyMatchesEntity(System.Data.Objects.Internal.IEntityWrapper,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.Boolean)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectStateManager.ComplexTypeMaterializer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.CreateEntityKey(System.Data.Metadata.Edm.EntitySet,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.CreateRelationship(System.Data.Objects.EntityEntry,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.RelationshipWrapper,System.Data.EntityState)">
    <parameter name="targetEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipWrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DeleteRelationship(System.Data.Metadata.Edm.RelationshipSet,System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey},System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DeleteRelationshipEndFromLookup(System.Data.EntityKey,System.Data.Objects.RelationshipEntry)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DeleteRelationshipFromLookup(System.Data.Objects.RelationshipEntry)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DetectChangesInForeignKeys(System.Collections.Generic.IList{System.Data.Objects.EntityEntry})">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DetectChangesInNavigationProperties(System.Collections.Generic.IList{System.Data.Objects.EntityEntry})">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DetectChangesInScalarAndComplexProperties(System.Collections.Generic.IList{System.Data.Objects.EntityEntry})">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DetectConflicts(System.Collections.Generic.IList{System.Data.Objects.EntityEntry})">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.EnsureCollectionNotNull(System.Data.Metadata.Edm.AssociationEndMember,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.EntryHasConceptualNull(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FindEntityEntry(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FindRelationship(System.Data.Metadata.Edm.RelationshipSet,System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey},System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey})">
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FindRelationship(System.Data.Objects.RelationshipWrapper)">
    <parameter name="relationshipWrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FixupKey(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FixupReferencesByForeignKeys(System.Data.Objects.EntityEntry,System.Boolean)">
    <parameter name="newEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ForgetEntryWithConceptualNull(System.Data.Objects.EntityEntry,System.Boolean)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetEntityEntry(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetEntityEntry(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetEntityEntryByObjectOrEntityKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetEntitySetOfOtherEnd(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetNonFixedupEntriesContainingForeignKey(System.Data.EntityKey)">
    <parameter name="foreignKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntriesInternal(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetOrAddStateManagerTypeMetadata(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetOrAddStateManagerTypeMetadata(System.Type,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetPermanentKey(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.Internal.IEntityWrapper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEndFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.HasAddedReference(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.EntityReference)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.IsReparentingReference(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.EntityReference)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.PerformAdd(System.Collections.Generic.IList{System.Data.Objects.EntityEntry})">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.PerformAdd(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.Internal.IEntityWrapper,System.Boolean)">
    <parameter name="wrappedOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.PerformDelete(System.Collections.Generic.IList{System.Data.Objects.EntityEntry})">
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.PromoteKeyEntry(System.Data.Objects.EntityEntry,System.Data.Objects.Internal.IEntityWrapper,System.Data.IExtendedDataRecord,System.Boolean,System.Boolean,System.Boolean,System.String)">
    <parameter name="keyEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.PromoteKeyEntryInitialization(System.Data.Objects.EntityEntry,System.Data.Objects.Internal.IEntityWrapper,System.Data.IExtendedDataRecord,System.Boolean)">
    <parameter name="keyEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RememberEntryWithConceptualNull(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveEntryFromForeignKeyIndex(System.Data.EntityKey,System.Data.Objects.EntityEntry)">
    <parameter name="foreignKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveForeignKeyFromIndex(System.Data.EntityKey)">
    <parameter name="foreignKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveObjectStateEntryFromDictionary(System.Data.Objects.EntityEntry,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveObjectStateEntryFromDictionary(System.Data.Objects.RelationshipEntry,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveRelatedEndsAndDetachRelationship(System.Data.Objects.RelationshipEntry,System.Boolean)">
    <parameter name="relationshipToRemove">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveRelationships(System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Data.Metadata.Edm.AssociationSet,System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ReplaceKeyWithTemporaryKey(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ResetEntityKey(System.Data.Objects.EntityEntry,System.Data.EntityKey)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ShouldPreserveForeignKeyForDependent(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.Internal.IEntityWrapper,System.Collections.Generic.HashSet{System.Data.Objects.Internal.IEntityWrapper})">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitiesToDelete">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ShouldPreserveForeignKeyForPrincipal(System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.Internal.IEntityWrapper,System.Collections.Generic.HashSet{System.Data.Objects.Internal.IEntityWrapper})">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.System#Data#IEntityStateManager#FindRelationshipsByKey(System.Data.EntityKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.System#Data#IEntityStateManager#GetEntityStateEntry(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.System#Data#IEntityStateManager#TryGetEntityStateEntry(System.Data.EntityKey,System.Data.IEntityStateEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.System#Data#IEntityStateManager#TryGetReferenceKey(System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey@)">
    <parameter name="principalRole">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dependentKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TrackPromotedRelationship(System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TryGetEntityEntry(System.Data.EntityKey,System.Data.Objects.EntityEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TryUpdateExistingRelationships(System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey,System.Boolean,System.Data.EntityState@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.UnloadReferenceRelatedEnds(System.Data.Objects.ObjectStateManager,System.Data.Objects.RelationshipEntry,System.Data.EntityKey,System.String)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.UnloadReferenceRelatedEnds(System.Data.Objects.RelationshipEntry)">
    <parameter name="relationshipEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.UpdateRelatedEnd(System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.Internal.IEntityWrapper,System.Data.Objects.Internal.IEntityWrapper,System.Boolean,System.Data.Objects.MergeOption)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedRelatedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.UpdateRelationships(System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey,System.Data.Objects.Internal.IEntityWrapper,System.Data.Metadata.Edm.AssociationEndMember,System.Collections.IList,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrappedSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ValidateProxyType(System.Data.Objects.Internal.IEntityWrapper)">
    <parameter name="wrappedEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.VerifyInitialStateForChangeRelationshipState(System.Data.Objects.EntityEntry,System.Data.Objects.EntityEntry,System.Data.Objects.DataClasses.RelatedEnd,System.Data.EntityState)">
    <parameter name="sourceEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.VerifyParametersForChangeRelationshipState(System.Object,System.Object,System.Data.Objects.EntityEntry@,System.Data.Objects.EntityEntry@)">
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.#ctor(System.Data.Objects.IObjectViewData{`0},System.Object)">
    <parameter name="viewData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectView`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#AddNew">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#SortProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Data#Objects#IObjectView#CollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Data#Objects#IObjectView#EntityPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewEntityCollectionData`2.#ctor(System.Data.Objects.DataClasses.EntityCollection{`1})">
    <parameter name="entityCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewEntityCollectionData`2.OnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs,System.Data.Objects.ObjectViewListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.CreateObjectView(System.Type,System.Type,System.Object,System.Object)">
    <parameter name="objectViewDataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.CreateViewForEntityCollection``1(System.Data.Metadata.Edm.EntityType,System.Data.Objects.DataClasses.EntityCollection{``0})">
    <parameter name="entityCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.CreateViewForQuery``1(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{``0},System.Data.Objects.ObjectContext,System.Boolean,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="objectContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.GetClrType``1(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ospaceEdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.GetOSpaceTypeUsage(System.Data.Metadata.Edm.TypeUsage,System.Data.Objects.ObjectContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectViewListener.CollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewListener.EntityPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewQueryResultData`1.#ctor(System.Collections.IEnumerable,System.Data.Objects.ObjectContext,System.Boolean,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="queryResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewQueryResultData`1.IsEditable(System.Type)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewQueryResultData`1.OnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs,System.Data.Objects.ObjectViewListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.#ctor(System.Data.Objects.ObjectStateManager,System.Data.EntityState,System.Data.Objects.RelationshipWrapper)">
    <parameter name="relationshipWrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.ChangeRelatedEnd(System.Data.EntityKey,System.Data.EntityKey)">
    <parameter name="oldKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.ChangeRelationshipState(System.Data.Objects.EntityEntry,System.Data.Objects.DataClasses.RelatedEnd,System.Data.EntityState)">
    <parameter name="targetEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.GetCLayerName(System.Int32,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.GetDataRecordInfo(System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.GetFieldCount(System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.GetFieldType(System.Int32,System.Data.Objects.StateManagerTypeMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.GetNextRelationshipEnd(System.Data.EntityKey)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.GetOrdinalforCLayerName(System.String,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.IsSameAssociationSetAndRole(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey)">
    <parameter name="associationMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.SetNextRelationshipEnd(System.Data.EntityKey,System.Data.Objects.RelationshipEntry)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.#ctor(System.Data.Metadata.Edm.AssociationSet,System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey},System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey})">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.#ctor(System.Data.Metadata.Edm.AssociationSet,System.String,System.Data.EntityKey,System.String,System.Data.EntityKey)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.#ctor(System.Data.Objects.RelationshipWrapper,System.Int32,System.Data.EntityKey)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.Equals(System.Data.Objects.RelationshipWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.AddSpanPath(System.Data.Objects.Span.SpanPath)">
    <parameter name="spanPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Span.Include(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.IncludeIn(System.Data.Objects.Span,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pathToInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.ParsePath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.RemoveExistingSubPaths(System.Data.Objects.Span.SpanPath)">
    <parameter name="spanPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.SpanPath.IsSubPath(System.Data.Objects.Span.SpanPath)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.ValidateSpanPath(System.Data.Objects.Span.SpanPath)">
    <parameter name="spanPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.SqlClient.SqlFunctions.ChecksumAggregate(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.StateManagerMemberMetadata.#ctor(System.Data.Mapping.ObjectPropertyMapping,System.Data.Metadata.Edm.EdmProperty,System.Boolean)">
    <parameter name="memberMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.StateManagerMemberMetadata.ClrType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.StateManagerTypeMetadata.#ctor(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ObjectTypeMapping)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.StateManagerTypeMetadata.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{})">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.ProviderIncompatibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.AggregateOp.#ctor(System.Data.Metadata.Edm.EdmFunction,System.Boolean)">
    <parameter name="aggFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ArithmeticOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ComparisonOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ConstantOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ConstantPredicateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CrossApplyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ExceptOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.FullOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.GroupByIntoOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.InnerJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.InternalConstantOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.IntersectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.LeftOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.LikeOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NullSentinelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.OuterApplyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SoftCastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitAncillaryOpDefault(System.Data.Query.InternalTrees.AncillaryOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitChildren(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitChildrenReverse(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitConstantOp(System.Data.Query.InternalTrees.ConstantBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitGroupByOp(System.Data.Query.InternalTrees.GroupByBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitPhysicalOpDefault(System.Data.Query.InternalTrees.PhysicalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitScalarOpDefault(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitTableOp(System.Data.Query.InternalTrees.ScanTableBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfNode.VisitAncillaryOpDefault(System.Data.Query.InternalTrees.AncillaryOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfNode.VisitPhysicalOpDefault(System.Data.Query.InternalTrees.PhysicalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfNode.VisitScalarOpDefault(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ArithmeticOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ComparisonOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ConstantOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ConstantPredicateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CrossApplyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ExceptOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.FullOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.GroupByIntoOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.InnerJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.InternalConstantOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.IntersectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.LeftOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.LikeOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NullSentinelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.OuterApplyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SoftCastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitAncillaryOpDefault(System.Data.Query.InternalTrees.AncillaryOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitChildren(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitChildrenReverse(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitConstantOp(System.Data.Query.InternalTrees.ConstantBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitGroupByOp(System.Data.Query.InternalTrees.GroupByBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitPhysicalOpDefault(System.Data.Query.InternalTrees.PhysicalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitScalarOpDefault(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitTableOp(System.Data.Query.InternalTrees.ScanTableBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMap.Accept``1(System.Data.Query.InternalTrees.ColumnMapVisitor{``0},``0)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMap.Accept``2(System.Data.Query.InternalTrees.ColumnMapVisitorWithResults{``0,``1},``1)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Copy(System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.GetReplacementVar(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.VarMap)">
    <parameter name="originalVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.ComplexTypeColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.DiscriminatedCollectionColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.EntityColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.RefColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.SimpleCollectionColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.SimplePolymorphicColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.VisitList``1(``0[],System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateColumnMapFromReaderAndClrType(System.Data.Common.DbDataReader,System.Type,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateColumnMapFromReaderAndType(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumnRenameMapping})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateDiscriminatorColumnMaps(System.Data.Common.DbDataReader,System.Data.Mapping.FunctionImportMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateEntityTypeElementColumnMap(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntitySet,System.Data.Query.InternalTrees.ColumnMap[],System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumnRenameMapping})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyColumnMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateFunctionImportStructuralTypeColumnMap(System.Data.Common.DbDataReader,System.Data.Mapping.FunctionImportMapping,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.StructuralType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseStructuralType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.GetColumnMapsForType(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumnRenameMapping})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.GetDiscriminatorOrdinalFromReader(System.Data.Common.DbDataReader,System.String,System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.GetMemberOrdinalFromReader(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.EdmMember,System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumnRenameMapping})">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.GetRenameForMember(System.Data.Metadata.Edm.EdmMember,System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.FunctionImportReturnTypeStructuralTypeColumnRenameMapping})">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.TryGetColumnOrdinalFromReader(System.Data.Common.DbDataReader,System.String,System.Int32@)">
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.ComplexTypeColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.DiscriminatedCollectionColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.EntityColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.RecordColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.RefColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,`0)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.SimpleCollectionColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.SimplePolymorphicColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.VisitEntityIdentity(System.Data.Query.InternalTrees.DiscriminatedEntityIdentity,`0)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.VisitEntityIdentity(System.Data.Query.InternalTrees.EntityIdentity,`0)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.VisitEntityIdentity(System.Data.Query.InternalTrees.SimpleEntityIdentity,`0)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.VisitList``1(``0[],`0)">
    <parameter name="columnMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.ComplexTypeColumnMap,`1)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.DiscriminatedCollectionColumnMap,`1)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.EntityColumnMap,`1)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,`1)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.RecordColumnMap,`1)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.RefColumnMap,`1)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.SimpleCollectionColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.SimplePolymorphicColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.VisitEntityIdentity(System.Data.Query.InternalTrees.DiscriminatedEntityIdentity,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.VisitEntityIdentity(System.Data.Query.InternalTrees.EntityIdentity,`1)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.VisitEntityIdentity(System.Data.Query.InternalTrees.SimpleEntityIdentity,`1)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMD.#ctor(System.Data.Query.InternalTrees.TableMD,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnVar.#ctor(System.Int32,System.Data.Query.InternalTrees.Table,System.Data.Query.InternalTrees.ColumnMD)">
    <parameter name="columnMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.AddRelPropertyReference(System.Data.Query.InternalTrees.RelProperty)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildCollect(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var)">
    <parameter name="relOpVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildComparison(System.Data.Query.InternalTrees.OpType,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildFakeTreatProject(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var,System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildOfTypeTree(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var,System.Data.Metadata.Edm.TypeUsage,System.Boolean,System.Data.Query.InternalTrees.Node@,System.Data.Query.InternalTrees.Var@)">
    <parameter name="inputVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildProject(System.Data.Query.InternalTrees.Node,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Node})">
    <parameter name="computedExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildProject(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildUnionAllLadder(System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Collections.Generic.IList{System.Data.Query.InternalTrees.Var},System.Data.Query.InternalTrees.Node@,System.Collections.Generic.IList{System.Data.Query.InternalTrees.Var}@)">
    <parameter name="inputNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildUnionAllLadder(System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Collections.Generic.IList{System.Data.Query.InternalTrees.Var},System.Data.Query.InternalTrees.Node@,System.Data.Query.InternalTrees.Var@)">
    <parameter name="inputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateAggregateOp(System.Data.Metadata.Edm.EdmFunction,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="aggFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateArithmeticOp(System.Data.Query.InternalTrees.OpType,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateCaseOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateCastOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateCollectionInfo(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateCollectOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateColumnVar(System.Data.Query.InternalTrees.Table,System.Data.Query.InternalTrees.ColumnMD)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMD">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateComparisonOp(System.Data.Query.InternalTrees.OpType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateComputedVar(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateConditionalOp(System.Data.Query.InternalTrees.OpType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateConstantOp(System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateConstrainedSortOp(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateConstrainedSortOp(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateDerefOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateDiscriminatedNewEntityOp(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap,System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateDistinctOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateDistinctOp(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateElementOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateExceptOp(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="leftMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateExistsOp">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateFakeTreatOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateFlatTableDefinition(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty},System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateFlatTableDefinition(System.Data.Metadata.Edm.RowType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateFunctionOp(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateGetEntityRefOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateGetRefKeyOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateGroupByIntoOp(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateGroupByOp(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateInternalConstantOp(System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateIntersectOp(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="leftMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateIsOfOnlyOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateIsOfOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateLikeOp">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateMultiStreamNestOp(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.CollectionInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNavigateOp(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.RelProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewEntityOp(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewEntityOp(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty},System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewInstanceOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewMultisetOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewRecordOp(System.Data.Metadata.Edm.RowType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewRecordOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewRecordOp(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNullOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNullSentinelOp">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateParameterVar(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreatePhysicalProjectOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="outputVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreatePhysicalProjectOp(System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.SimpleCollectionColumnMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateProjectOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateProjectOp(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreatePropertyOp(System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateRefOp(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateRelPropertyOp(System.Data.Query.InternalTrees.RelProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateScanTableOp(System.Data.Query.InternalTrees.Table)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateScanTableOp(System.Data.Query.InternalTrees.TableMD)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tableMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateScanViewOp(System.Data.Query.InternalTrees.Table)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateScanViewOp(System.Data.Query.InternalTrees.TableMD)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tableMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSetOpVar(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSingleStreamNestOp(System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.CollectionInfo},System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSoftCastOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSortKey(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSortKey(System.Data.Query.InternalTrees.Var,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSortKey(System.Data.Query.InternalTrees.Var,System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSortOp(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateTableDefinition(System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateTableDefinition(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateTableInstance(System.Data.Query.InternalTrees.TableMD)">
    <parameter name="tableMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateTreatOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateUnionAllOp(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="leftMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateUnionAllOp(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="leftMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateUnnestOp(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateUnnestOp(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Table)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarDefListNode(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="definingExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarDefNode(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="definingExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarDefOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarList(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarRefOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarVec">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarVec(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarVec(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarVec(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.EqualTypes(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetExtendedNodeInfo(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetNodeInfo(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetParameter(System.String)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetVarVecEnumerator(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.IsRelPropertyReferenced(System.Data.Query.InternalTrees.RelProperty)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.PullupKeys(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.RecomputeNodeInfo(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ConstantBaseOp.IsEquivalent(System.Data.Query.InternalTrees.Op)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoString.#ctor(System.Data.Query.InternalTrees.Dump,System.Data.Query.InternalTrees.Op)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoXml.#ctor(System.Data.Query.InternalTrees.Dump,System.Data.Query.InternalTrees.Op)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoXml.#ctor(System.Data.Query.InternalTrees.Dump,System.Data.Query.InternalTrees.Op,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoXml.#ctor(System.Data.Query.InternalTrees.Dump,System.String)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nodeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoXml.#ctor(System.Data.Query.InternalTrees.Dump,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nodeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.Begin(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ColumnMapDumper.DumpCollection(System.Data.Query.InternalTrees.CollectionColumnMap,System.Data.Query.InternalTrees.Dump)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ColumnMapDumper.GetAttributes(System.Data.Query.InternalTrees.ColumnMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.DumpTable(System.Data.Query.InternalTrees.Table)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.DumpVar(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.DumpVars(System.Collections.Generic.List{System.Data.Query.InternalTrees.Var})">
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.FormatVarList(System.Text.StringBuilder,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.FormatVarList(System.Text.StringBuilder,System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ToXml(System.Data.Query.InternalTrees.ColumnMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ToXml(System.Data.Query.InternalTrees.Command)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ToXml(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="subtree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.VisitNewOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.WriteString(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ExplicitDiscriminatorMap.#ctor(System.Data.Mapping.ViewGeneration.DiscriminatorMap)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ExtendedNodeInfo.#ctor(System.Data.Query.InternalTrees.Command)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ExtendedNodeInfo.InitRowCountFrom(System.Data.Query.InternalTrees.ExtendedNodeInfo)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.FunctionOp.#ctor(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.FunctionOp.IsEquivalent(System.Data.Query.InternalTrees.Op)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.#ctor(System.Data.Query.InternalTrees.Command)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="varSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Boolean)">
    <parameter name="varSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Collections.Generic.List{System.Data.Query.InternalTrees.KeyVec})">
    <parameter name="keyVecList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Data.Query.InternalTrees.KeyVec)">
    <parameter name="keyset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Data.Query.InternalTrees.KeyVec,System.Data.Query.InternalTrees.KeyVec)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap.Accept``2(System.Data.Query.InternalTrees.ColumnMapVisitorWithResults{``0,``1},``1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NewRecordOp.#ctor(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.#ctor(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node[])">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.GetExtendedNodeInfo(System.Data.Query.InternalTrees.Command)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.GetNodeInfo(System.Data.Query.InternalTrees.Command)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.InitializeNodeInfo(System.Data.Query.InternalTrees.Command)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.IsEquivalent(System.Data.Query.InternalTrees.Node)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeCounter.Count(System.Data.Query.InternalTrees.Node)">
    <parameter name="subTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfo.#ctor(System.Data.Query.InternalTrees.Command)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfo.ComputeHashValue(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfo.GetHashValue(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.ComputeVarRemappings(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varDefListNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.GetExtendedNodeInfo(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.GetNodeInfo(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.InitExtendedNodeInfo(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.InitNodeInfo(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.IsDefinitionNonNullable(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="definition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nonNullableInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.RecomputeNodeInfo(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitGroupByOp(System.Data.Query.InternalTrees.GroupByBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitTableOp(System.Data.Query.InternalTrees.ScanTableBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Op.Accept(System.Data.Query.InternalTrees.BasicOpVisitor,System.Data.Query.InternalTrees.Node)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Op.Accept``1(System.Data.Query.InternalTrees.BasicOpVisitorOfT{``0},System.Data.Query.InternalTrees.Node)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Op.IsEquivalent(System.Data.Query.InternalTrees.Op)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.ColumnMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.Command,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.VarList@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarMap@)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.SortKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.CopyDefault(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.CopyNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.CopySetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.GetMappedVar(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.MapTable(System.Data.Query.InternalTrees.Table,System.Data.Query.InternalTrees.Table)">
    <parameter name="newTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.ProcessChildren(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.SetMappedVar(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ArithmeticOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CastOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ComparisonOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ConstantOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ConstantPredicateOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CrossApplyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ExceptOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.FullOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.GroupByIntoOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.InnerJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.InternalConstantOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.IntersectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.LeftOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.LikeOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NullSentinelOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.OuterApplyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SoftCastOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.VisitNestOp(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.PatternMatchRule.#ctor(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Rule.ProcessNodeDelegate)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.PatternMatchRule.Match(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RelProperty.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RelPropertyHelper.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Collections.Generic.HashSet{System.Data.Query.InternalTrees.RelProperty})">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RelPropertyHelper.AddRelProperty(System.Data.Metadata.Edm.AssociationType,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Rule.Match(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.GetHashCode(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.PostProcess(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Rule)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.PostProcessSubTree(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.PreProcess(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.PreProcessSubTree(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessor.ApplyRulesToNode(System.Data.Query.InternalTrees.RuleProcessingContext,System.Collections.ObjectModel.ReadOnlyCollection{System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Query.InternalTrees.Rule}},System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessor.ApplyRulesToSubtree(System.Data.Query.InternalTrees.RuleProcessingContext,System.Collections.ObjectModel.ReadOnlyCollection{System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Query.InternalTrees.Rule}},System.Data.Query.InternalTrees.Node)">
    <parameter name="subTreeRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessor.ApplyRulesToSubtree(System.Data.Query.InternalTrees.RuleProcessingContext,System.Collections.ObjectModel.ReadOnlyCollection{System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Query.InternalTrees.Rule}},System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Int32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="subTreeRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.InternalTrees.StructuredColumnMap.NullSentinel">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.SubTreeId.#ctor(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Int32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.SubTreeId.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Table.#ctor(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.TableMD,System.Int32)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.TableMD.#ctor(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty},System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.TableMD.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarList.#ctor(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarMap.GetReverseMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarRefColumnMap.#ctor(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarRefOp.#ctor(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarRefOp.IsEquivalent(System.Data.Query.InternalTrees.Op)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Align(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.And(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Clear(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Query.InternalTrees.VarVec.First">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.InitFrom(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.InitFrom(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Boolean)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.InitFrom(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.IsSet(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Minus(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Or(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Overlaps(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Remap(System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Set(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Subsumes(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.VarVecEnumerator.#ctor(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.InternalTrees.VarVec.VarVecEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.VarVecEnumerator.Init(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.InternalTrees.VarVec.VarVecEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AggregatePushdown.AreAllNodesSupportedForPropagation(System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node})">
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AggregatePushdown.FindAncestors(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AggregatePushdown.Process(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="planCompilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AggregatePushdown.TryProcessCandidate(System.Collections.Generic.KeyValuePair{System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node},System.Data.Query.PlanCompiler.GroupAggregateVarInfo)">
    <parameter name="groupAggregateVarInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AggregatePushdownUtil.IsVarRefOverGivenVar(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.CanRewriteApply(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.ExtendedNodeInfo,System.Data.Query.InternalTrees.OpType)">
    <parameter name="applyRightChildNodeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightChild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.CountOutputs(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.VisitChildren(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.OutputCountVisitor.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessApplyIntoScalarSubquery(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessApplyOverAnything(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessApplyOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessCrossApplyOverLeftOuterJoinOverSingleRowTable(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessCrossApplyOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessOuterApplyOverDummyProjectOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessOuterApplyOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.VarDefinitionRemapper.RemapSubtree(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Var)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.VarDefinitionRemapper.RemapVarMapKey(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.Var)">
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.VarDefinitionRemapper.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AugmentedJoinNode.#ctor(System.Int32,System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.PlanCompiler.AugmentedNode})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AugmentedNode.#ctor(System.Int32,System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.PlanCompiler.AugmentedNode})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AugmentedTableNode.#ctor(System.Int32,System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CodeGen.BuildResultColumnMap(System.Data.Query.InternalTrees.PhysicalProjectOp)">
    <parameter name="projectOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CodeGen.BuildVarMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.#ctor(System.Data.Query.InternalTrees.VarRefColumnMap,System.Data.Query.PlanCompiler.VarInfo,System.Data.Query.PlanCompiler.StructuredTypeInfo)">
    <parameter name="varInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.BuildRelPropertyColumnMaps(System.Data.Query.PlanCompiler.TypeInfo,System.Boolean)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateColumnMap(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateComplexTypeColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String,System.Data.Query.InternalTrees.ComplexTypeColumnMap,System.Collections.Generic.Dictionary{System.Object,System.Data.Query.InternalTrees.TypedColumnMap},System.Collections.Generic.List{System.Data.Query.InternalTrees.TypedColumnMap})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateEntityColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String,System.Data.Query.InternalTrees.EntityColumnMap,System.Collections.Generic.Dictionary{System.Object,System.Data.Query.InternalTrees.TypedColumnMap},System.Collections.Generic.List{System.Data.Query.InternalTrees.TypedColumnMap},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateEntityIdentity(System.Data.Metadata.Edm.EntityType,System.Data.Query.InternalTrees.SimpleColumnMap,System.Data.Query.InternalTrees.SimpleColumnMap[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateEntitySetIdColumnMap(System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreatePolymorphicColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateRecordColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateRefColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateSimpleColumnMap(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateStructuralColumnMap(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateTypeIdColumnMap(System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.ExpandColumnMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.GetNextVar">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.GetReplacementVar(System.Data.Query.InternalTrees.Var,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <parameter name="originalVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Translate(System.Data.Query.InternalTrees.ColumnMap,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}})">
    <parameter name="columnMapToTranslate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varToCommandColumnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Translate(System.Data.Query.InternalTrees.ColumnMap,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.ColumnMap})">
    <parameter name="columnMapToTranslate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varToColumnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Translate(System.Data.Query.InternalTrees.ColumnMap,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="columnMapToTranslate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Translate(System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.PlanCompiler.ColumnMapTranslatorTranslationDelegate)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="translationDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,System.Data.Query.PlanCompiler.ColumnMapTranslatorTranslationDelegate)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,System.Data.Query.PlanCompiler.ColumnMapTranslatorTranslationDelegate)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.VisitList``1(``0[],System.Data.Query.PlanCompiler.ColumnMapTranslatorTranslationDelegate)">
    <parameter name="translationDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ConstrainedSortOpRules.ProcessConstrainedSortOpOverEmptySet(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ConstraintManager.IsBinary(System.Data.Metadata.Edm.RelationshipType)">
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ConstraintManager.IsParentChildRelationship(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.List{System.Data.Query.PlanCompiler.ForeignKeyConstraint}@)">
    <parameter name="table1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="table2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ConstraintManager.LoadRelationships(System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.#ctor(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toConvert">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.AssertBinary(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.AssertRelOp(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.BindingScope.#ctor(System.Collections.Generic.IEnumerable{System.Data.Query.PlanCompiler.CTreeGenerator.VarInfo})">
    <parameter name="boundVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.BindingScope.TryResolveVar(System.Data.Query.InternalTrees.Var,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="targetVar">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.BuildEmptyProjection(System.Data.Query.InternalTrees.Node)">
    <parameter name="relOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.BuildProjection(System.Data.Query.InternalTrees.Node,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="projectionVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.ConsumeRelOp(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.CreateLimitExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.CreateProject(System.Data.Query.PlanCompiler.CTreeGenerator.RelOpInfo,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterExpressionBindingScope(System.Data.Query.InternalTrees.Node)">
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterExpressionBindingScope(System.Data.Query.InternalTrees.Node,System.Boolean)">
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterGroupByScope(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterVarDefListScope(System.Data.Query.InternalTrees.Node)">
    <parameter name="varDefListNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterVarDefScope(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <parameter name="varDefNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Generate(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toConvert">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.GenerateNameForVar(System.Data.Query.InternalTrees.Var,System.Collections.Generic.Dictionary{System.String,System.Data.Common.Utils.AliasGenerator},System.Data.Common.Utils.AliasGenerator,System.Collections.Generic.Dictionary{System.String,System.String})">
    <parameter name="projectedVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="aliasMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultAliasGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alreadyUsedNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.GetTableVars(System.Data.Query.InternalTrees.Table)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.GroupByScope.#ctor(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IEnumerable{System.Data.Query.PlanCompiler.CTreeGenerator.VarInfo})">
    <parameter name="publishedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.IqtVarScope.TryResolveVar(System.Data.Query.InternalTrees.Var,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="targetVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.PublishRelOp(System.String,System.Data.Common.CommandTrees.DbExpression,System.Data.Query.PlanCompiler.CTreeGenerator.VarInfoList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.RelOpInfo.#ctor(System.String,System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Query.PlanCompiler.CTreeGenerator.VarInfo})">
    <parameter name="publisher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bindingName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.ResolveVar(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="referencedVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VarInfoList.#ctor(System.Collections.Generic.IEnumerable{System.Data.Query.PlanCompiler.CTreeGenerator.VarInfo})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CastOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ConstantOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ConstantPredicateOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CrossApplyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ExceptOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.FullOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.GroupByIntoOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.InnerJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.InternalConstantOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.IntersectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.LeftOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.LikeOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NullSentinelOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.OuterApplyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SoftCastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitApply(System.Data.Query.InternalTrees.Node,System.Data.Common.CommandTrees.DbExpressionKind)">
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitAsRelOp(System.Data.Query.InternalTrees.Node)">
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(System.Data.Query.InternalTrees.Node,System.Data.Common.CommandTrees.DbExpressionKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitChild(System.Data.Query.InternalTrees.Node,System.Int32)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitChildren(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitConstantOp(System.Data.Query.InternalTrees.ConstantBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitJoinInput(System.Data.Query.InternalTrees.Node)">
    <parameter name="joinInputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitProject(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitSetOpArgument(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarMap)">
    <parameter name="argNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitSortKeys(System.Collections.Generic.IList{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.DiscriminatorMapInfo.Merge(System.Data.Metadata.Edm.EntityTypeBase,System.Boolean,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap)">
    <parameter name="neededRootEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.DistinctOpRules.ProcessDistinctOpOfKeys(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ExtentPair.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.GetPushdownPredicate(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Node@)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverDistinct(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverGroupBy(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverJoin(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverOuterApply(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverSetOp(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterWithConstantPredicate(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ForeignKeyConstraint.#ctor(System.Data.Metadata.Edm.RelationshipType,System.Data.Metadata.Edm.RelationshipSet,System.Data.Metadata.Edm.ReferentialConstraint)">
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ForeignKeyConstraint.GetParentProperty(System.String,System.String@)">
    <parameter name="childPropertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateRefComputingVisitor.Process(System.Data.Query.InternalTrees.Command,System.Data.Query.PlanCompiler.TryGetValue@)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateRefComputingVisitor.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.IsConstant(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.TranslateOverGroupAggregateVar(System.Data.Query.InternalTrees.Var,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.TryTranslateOverGroupAggregateVar(System.Data.Query.InternalTrees.Node,System.Boolean,System.Data.Query.InternalTrees.Command,System.Data.Query.PlanCompiler.GroupAggregateVarInfoManager,System.Data.Query.PlanCompiler.GroupAggregateVarInfo@,System.Data.Query.InternalTrees.Node@,System.Boolean@)">
    <parameter name="subtree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.VisitCollect(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarComputationTranslator.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.GroupAggregateVarInfo.CandidateAggregateNodes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarInfoManager.Add(System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.GroupAggregateVarInfo,System.Data.Query.InternalTrees.Node,System.Boolean)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupAggregateVarInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarInfoManager.Add(System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.GroupAggregateVarInfo,System.Data.Query.InternalTrees.Node,System.Boolean,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupAggregateVarInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarInfoManager.TryGetReferencedGroupAggregateVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Metadata.Edm.EdmMember,System.Data.Query.PlanCompiler.GroupAggregateVarRefInfo@)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupAggregateVarInfoManager.TryGetReferencedGroupAggregateVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.GroupAggregateVarRefInfo@)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.ProcessGroupByOpWithNoAggregates(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.ProcessGroupByOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.ProcessGroupByWithSimpleVarRedefinitions(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefReplacer.Replace(System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Command)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefReplacer.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefReplacer.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefUsageFinder.#ctor(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Command)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefUsageFinder.AnyVarUsedMoreThanOnce(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Command)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefUsageFinder.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.#ctor(System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Mapping.ViewGeneration.DiscriminatorMap)">
    <parameter name="ctree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ApplyIsOfFilter(System.Data.Common.CommandTrees.DbExpression,System.Data.Query.PlanCompiler.ITreeGenerator.IsOfFilter)">
    <parameter name="current">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeFilter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.BuildEntityRef(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.BuildSoftCast(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EdmType)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.BuildSoftCast(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CapWithPhysicalProject(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CapWithProject(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ConvertRelOpToScalarOpTree(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ConvertToScalarOpTree(System.Data.Query.InternalTrees.Node,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CqtVariableScope.Contains(System.String)">
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.ITreeGenerator.CqtVariableScope.Item(System.String)">
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CreateIsOfFilterExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Query.PlanCompiler.ITreeGenerator.IsOfFilter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeFilter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CreateLimitNode(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CreateNewInstanceArgument(System.Data.Metadata.Edm.EdmMember,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.EnsureRelOp(System.Data.Query.InternalTrees.Node)">
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.EnterExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.EnterGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.EnterLambdaFunction(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExitExpressionBinding">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExitLambdaFunction(System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExpressionBindingScope.Contains(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.ITreeGenerator.ExpressionBindingScope.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExtractElementRowType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExtractKeys(System.Data.Common.CommandTrees.DbGroupByExpression,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Node@,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node}@,System.Data.Query.PlanCompiler.ITreeGenerator.ExpressionBindingScope@)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyVarSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVarSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.FlattenProperties(System.Data.Query.InternalTrees.Node,System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node})">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="flattenedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Generate(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <parameter name="ctree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Generate(System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Mapping.ViewGeneration.DiscriminatorMap)">
    <parameter name="ctree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.GenerateDiscriminatedProject(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.GenerateStandardProject(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.InitializeExpressionKindToOpTypeMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.IsIsOfFilter(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="filter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.IsOfFilter.#ctor(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.IsOfFilter.#ctor(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.IsOfFilter.Merge(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.IsOfFilter.Merge(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.IsOfFilter.Merge(System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="otherRequiredType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.IsPredicate(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.LambdaScope.#ctor(System.Data.Query.PlanCompiler.ITreeGenerator,System.Data.Query.InternalTrees.Command,System.Collections.Generic.Dictionary{System.String,System.Data.Query.InternalTrees.Node})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.LambdaScope.MapCopiedNodeVars(System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <parameter name="sources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="copies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ProcessFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate,System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="funcAgg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ProcessGroupAggregate(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.VarVec,System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyVarDefNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="copyOfInput">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="copyOfkeyVarDefNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="copyKeyVarSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputResultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ProjectNewRecord(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.RowType,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="colVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.TryRewriteKeyPropertyAccess(System.Data.Common.CommandTrees.DbPropertyExpression,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="propertyExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitBinary(System.Data.Common.CommandTrees.DbBinaryExpression,System.Data.Query.InternalTrees.Op,System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprDelegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExpr(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprDelegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="exprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExpr(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprAsPredicate(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprAsScalar(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="exprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprAsScalar(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitJoin(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding},System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitLambdaExpression(System.Data.Common.CommandTrees.DbLambda,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitSetOpExpression(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitSortArguments(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause},System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitUnary(System.Data.Common.CommandTrees.DbUnaryExpression,System.Data.Query.InternalTrees.Op,System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprDelegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinEdge.#ctor(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Data.Query.PlanCompiler.JoinKind,System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar})">
    <parameter name="leftVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinEdge.CreateJoinEdge(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Data.Query.InternalTrees.ColumnVar,System.Data.Query.InternalTrees.ColumnVar)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinEdge.CreateTransitiveJoinEdge(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.JoinKind,System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rightVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.#ctor(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.JoinElimination.ConstraintManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.NeedsJoinGraph(System.Data.Query.InternalTrees.Node)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.Process(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.ProcessJoinGraph(System.Data.Query.InternalTrees.Node)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.VisitDefaultForAllNodes(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.#ctor(System.Data.Query.InternalTrees.Command,System.Data.Query.PlanCompiler.ConstraintManager,System.Data.Query.PlanCompiler.VarRefManager,System.Data.Query.InternalTrees.Node)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.AddJoinEdge(System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Data.Query.InternalTrees.ColumnVar,System.Data.Query.InternalTrees.ColumnVar)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.AreMatchingForStarSelfJoinElimination(System.Data.Query.PlanCompiler.JoinEdge,System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="edge1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edge2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.BuildAugmentedNodeTree(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.BuildJoinEdges(System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Int32)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.BuildJoinEdges(System.Data.Query.PlanCompiler.AugmentedNode,System.Int32)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.CanAllJoinEdgesBeTurnedIntoInnerJoins(System.Collections.Generic.IEnumerable{System.Data.Query.PlanCompiler.JoinEdge})">
    <parameter name="joinEdges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.CanBeEliminatedBasedOnLojParticipation(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacingTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.CanBeMoved(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacingTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.CanJoinEdgeBeTurnedIntoInnerJoin(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.ClassifyPredicate(System.Int32,System.Data.Query.InternalTrees.Node,System.Int32,System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Node,System.Int32})">
    <parameter name="outPredicates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicateNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.ContainsJoinEdgeForTable(System.Collections.Generic.IEnumerable{System.Data.Query.PlanCompiler.JoinEdge},System.Data.Query.InternalTrees.Table)">
    <parameter name="joinEdges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.CreateOrderedKeyValueList(System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateLeftTable(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateParentChildJoin(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateParentChildJoins(System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateRightTable(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateSelfJoin(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateSelfJoinedTable(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateSelfJoins(System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateStarSelfJoin(System.Collections.Generic.List{System.Data.Query.PlanCompiler.JoinEdge})">
    <parameter name="joinEdges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateStarSelfJoins(System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GenerateTransitiveEdge(System.Data.Query.PlanCompiler.JoinEdge,System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="edge1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edge2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GetColumnVars(System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="columnVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GetColumnVars(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varVec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GetLeastCommonAncestor(System.Data.Query.PlanCompiler.AugmentedNode,System.Data.Query.PlanCompiler.AugmentedNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GetLocationId(System.Data.Query.InternalTrees.Var,System.Int32)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.HasNonKeyReferences(System.Data.Query.InternalTrees.Table)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.IsJoinOnFkConstraint(System.Data.Query.PlanCompiler.ForeignKeyConstraint,System.Collections.Generic.IList{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.IList{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.IList{System.Data.Query.InternalTrees.ColumnVar}@)">
    <parameter name="fkConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.MarkTableAsEliminated``1(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode,System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.PickSubtree(System.Int32,System.Data.Query.PlanCompiler.AugmentedNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.QualifiesForStarSelfJoinGroup(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildNodeTree(System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Node,System.Int32}@)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildNodeTree(System.Data.Query.PlanCompiler.AugmentedNode,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Node,System.Int32}@)">
    <parameter name="augmentedNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildNodeTree(System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildNodeTreeForCrossJoins(System.Data.Query.PlanCompiler.AugmentedJoinNode)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildPredicate(System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Int32@)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RightTableHasKeyReferences(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.SingleTableVars(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.ColumnVar})">
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.SplitPredicate(System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar}@,System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar}@,System.Data.Query.InternalTrees.Node@)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.TryEliminateChildParentJoin(System.Data.Query.PlanCompiler.JoinEdge,System.Data.Query.PlanCompiler.ForeignKeyConstraint)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fkConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.TryEliminateParentChildJoin(System.Data.Query.PlanCompiler.JoinEdge,System.Data.Query.PlanCompiler.ForeignKeyConstraint)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fkConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.TryEliminateRightTable(System.Data.Query.PlanCompiler.JoinEdge,System.Int32,System.Boolean)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinOpRules.ProcessJoinOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinOpRules.ProcessJoinOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinOpRules.ProcessJoinOverSingleRowTable(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.KeyPullup.GetKeys(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestedPropertyRef.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.#ctor(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ApplyIsNotNullFilter(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sentinelVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ApplyOpJoinOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.AugmentNodeWithConstant(System.Data.Query.InternalTrees.Node,System.Func{System.Data.Query.InternalTrees.ConstantBaseOp},System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="createOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.AugmentNodeWithInternalIntegerConstant(System.Data.Query.InternalTrees.Node,System.Int32,System.Data.Query.InternalTrees.Var@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.BuildSortForNestElimination(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="nestNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ssnOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.BuildSortKeyList(System.Data.Query.InternalTrees.SingleStreamNestOp)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ssnOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.CapWithIsNotNullFilter(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ConsolidateSortKeys(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeyList1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKeyList2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ConvertToNestOpInput(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var,System.Collections.Generic.List{System.Data.Query.InternalTrees.CollectionInfo},System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="physicalProjectNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionInfoList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="externalReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ConvertToSingleStreamNest(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.ColumnMap},System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.SimpleColumnMap[]@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nestNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varRefReplacementMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="flattenedOutputVarList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.CopyCollectionVarDefinition(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="refVarDefiningNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.EnsureReferencedVarsAreRemapped(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <parameter name="referencedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.EnsureReferencedVarsAreRemoved(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.VarVec)">
    <parameter name="referencedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.GetNestOpWithConsolidatedSortKeys(System.Data.Query.InternalTrees.NestBaseOp,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputNestOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.GetUnionOutputs(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unionOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.HandleProjectNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.IsNestOpNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.MergeNestedNestOps(System.Data.Query.InternalTrees.Node)">
    <parameter name="nestNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.NestingNotSupported(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.NormalizeNestOpInputs(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarList@,System.Collections.Generic.List{System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey}}@)">
    <parameter name="nestOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nestNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Process(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ProjectOpCase1(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ProjectOpCase2(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.RemapSortKeys(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.RemapVarList(System.Data.Query.InternalTrees.VarList,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.RemapVarVec(System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ResolveVarReference(System.Data.Query.InternalTrees.Var)">
    <parameter name="refVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.UpdateReplacementVarMap(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="fromVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.BuildAccessor(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.BuildAccessorWithNulls(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.BuildSoftCast(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.BuildTypeIdAccessor(System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Copy(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateDisjunctiveTypeComparisonOp(System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.InternalTrees.Node)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateNullConstantNode(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateNullSentinelConstant">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateTypeComparisonOp(System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.TypeInfo,System.Boolean)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateTypeEqualsOp(System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateTypeIdConstant(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateTypeIdConstantForPrefixMatch(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.ExpandColumnMap(System.Data.Query.InternalTrees.SimpleCollectionColumnMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FixupSetOpChild(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarMap,System.Collections.Generic.List{System.Data.Query.InternalTrees.ComputedVar})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenCaseOp(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.PlanCompiler.PropertyRefList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="desiredProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenComputedVar(System.Data.Query.InternalTrees.ComputedVar,System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node}@,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenConstructor(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenGetKeyOp(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenSetOpVar(System.Data.Query.InternalTrees.SetOpVar)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenVarList(System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenVarMap(System.Data.Query.InternalTrees.VarMap,System.Collections.Generic.List{System.Data.Query.InternalTrees.ComputedVar}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenVarSet(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetEntitySetIdExpr(System.Data.Metadata.Edm.EdmProperty,System.Data.Query.InternalTrees.NewEntityBaseOp)">
    <parameter name="entitySetIdProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetNewType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetPropertyRefs(System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.PlanCompiler.NominalTypeEliminator.OperationKind)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetPropertyValue(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EdmProperty,System.Boolean)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetPropertyValues(System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.PlanCompiler.NominalTypeEliminator.OperationKind,System.Data.Query.InternalTrees.Node,System.Boolean,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty}@,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node}@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetSingletonVar(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.HandleSortKeys(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.NormalizeTypeDiscriminatorValues(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Process(System.Data.Query.PlanCompiler.PlanCompiler,System.Data.Query.PlanCompiler.StructuredTypeInfo)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.RemoveNullSentinel(System.Data.Query.PlanCompiler.TypeInfo,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty},System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty})">
    <parameter name="inputTypeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputFields">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputFieldValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.TryRewriteCaseOp(System.Data.Query.InternalTrees.Node,System.Boolean,System.Data.Query.InternalTrees.Node@)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.GroupByIntoOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.VisitPropertyOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Normalizer.BuildDummyProjectForExists(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Normalizer.BuildUnnest(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="collectionNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Normalizer.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Normalizer.VisitCollectionAggregateFunction(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Normalizer.VisitCollectionFunction(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Normalizer.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.OpCopierTrackingCollectionVars.Copy(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarMap@,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node}@)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Query.PlanCompiler.PlanCompiler.ConstraintManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PlanCompiler.SwitchToPhase(System.Data.Query.PlanCompiler.PlanCompilerPhase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PlanCompilerUtil.CombinePredicates(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Command)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PlanCompilerUtil.IsCollectionAggregateFunction(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PlanCompilerUtil.IsRowTypeCaseOpWithNullability(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node,System.Boolean@)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.GetEquiJoinPredicates(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var}@,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var}@,System.Data.Query.PlanCompiler.Predicate@)">
    <parameter name="rightTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.GetJoinPredicates(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.PlanCompiler.Predicate@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rightTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.GetSingleTablePredicates(System.Collections.Generic.List{System.Data.Query.InternalTrees.VarVec},System.Collections.Generic.List{System.Data.Query.PlanCompiler.Predicate}@,System.Data.Query.PlanCompiler.Predicate@)">
    <parameter name="tableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.InitFromAndTree(System.Data.Query.InternalTrees.Node)">
    <parameter name="andTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.IsEquiJoinPredicate(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@,System.Data.Query.InternalTrees.Var@)">
    <parameter name="simplePredicateNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.IsEquiJoinPredicate(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Var@,System.Data.Query.InternalTrees.Var@)">
    <parameter name="simplePredicateNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.IsKeyPredicate(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Var@)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.PreservesNulls(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="simplePredNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.PreservesNulls(System.Data.Query.InternalTrees.VarVec,System.Boolean)">
    <parameter name="tableColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.SatisfiesKey(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="keyVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AddEntitySetReference(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AddTypeReference(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AreAllConstantsOrNulls(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildJoinForNavProperty(System.Data.Metadata.Edm.RelationshipSet,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Query.InternalTrees.Var@,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildKeyExpressionForNewEntityOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildOfTypeTable(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.Var@)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildRelPropertyExpression(System.Data.Metadata.Edm.EntitySetBase,System.Data.Query.InternalTrees.RelProperty,System.Data.Query.InternalTrees.Node)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.CanRewriteTypeTest(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="testType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ConvertToInternalTree(System.Data.Mapping.ViewGeneration.GeneratedView)">
    <parameter name="generatedView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.DetermineDiscriminatorMapUsage(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)">
    <parameter name="viewNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ExpandView(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.IsOfOp@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="scanTableOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeFilter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.FindPosition(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.FindRelationshipSet(System.Data.Metadata.Edm.EntitySetBase,System.Data.Query.InternalTrees.RelProperty)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.FindTargetEntitySet(System.Data.Metadata.Edm.RelationshipSet,System.Data.Metadata.Edm.RelationshipEndMember)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.GetEntitySets(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.GetRelationshipSets(System.Data.Metadata.Edm.RelationshipType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.HandleTableOpMetadata(System.Data.Query.InternalTrees.ScanTableBaseOp)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.IsOfTypeOverScanTable(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.IsOfOp@)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Process(System.Data.Query.PlanCompiler.PlanCompiler,System.Data.Query.PlanCompiler.StructuredTypeInfo@)">
    <parameter name="planCompilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ProcessConditionalOp(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ProcessScanTable(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.IsOfOp@)">
    <parameter name="scanTableOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="scanTableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteDerefOp(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Var@)">
    <parameter name="derefOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="derefOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteIsOfAsIsNull(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteManyToManyNavigationProperty(System.Data.Query.InternalTrees.RelProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.RelationshipSet},System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipSets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceRefNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteNavigateOp(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Var@)">
    <parameter name="navigateOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigateOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteNavigationProperty(System.Data.Metadata.Edm.NavigationProperty,System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="navProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteOneToManyNavigationProperty(System.Data.Query.InternalTrees.RelProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.RelationshipSet},System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipSets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceRefNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteToOneNavigationProperty(System.Data.Query.InternalTrees.RelProperty,System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ValidateNavPropertyOp(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitNavPropertyOp(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.#ctor(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.AddReference(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="varSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.AddReference(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.ColumnMapVarTracker.FindVars(System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.IsReferenced(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.IsUnreferenced(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Process(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Process(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Process(System.Data.Query.PlanCompiler.PlanCompiler,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.PruneVarMap(System.Data.Query.InternalTrees.VarMap)">
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.PruneVarSet(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="varSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.RemoveRedundantConstantKeys(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Node)">
    <parameter name="keyVec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varDefListNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.GroupByIntoOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitGroupByOp(System.Data.Query.InternalTrees.GroupByBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectOpRules.ProcessProjectOpWithNullSentinel(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectOpRules.ProcessProjectOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectOpRules.ProcessProjectWithNoLocalDefinitions(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectOpRules.ProcessProjectWithSimpleVarRedefinitions(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.AddPropertyRefs(System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.PropertyRefList)">
    <parameter name="propertyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.AddPropertyRefs(System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.PropertyRefList)">
    <parameter name="propertyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.GetIdentityProperties(System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.GetKeyProperties(System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.GetPropertyRefList(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.GetPropertyRefList(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Process(System.Data.Query.InternalTrees.Command,System.Data.Query.PlanCompiler.StructuredTypeInfo,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.PropertyRefList}@,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.PropertyRefList}@)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Process(System.Data.Query.InternalTrees.Node)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.ComparisonOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.VisitPropertyOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRef.CreateNestedPropertyRef(System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRef.CreateNestedPropertyRef(System.Data.Query.InternalTrees.RelProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRef.CreateNestedPropertyRef(System.Data.Query.PlanCompiler.PropertyRef)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRefList.Add(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRefList.Append(System.Data.Query.PlanCompiler.PropertyRefList)">
    <parameter name="propertyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRefList.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRefList.Contains(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.PropertyRefList.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProviderCommandInfoUtils.BuildOutputVarMap(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProviderCommandInfoUtils.Create(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProviderCommandInfoUtils.Create(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.PlanCompiler.ProviderCommandInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RelPropertyRef.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RootTypeInfo.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RootTypeInfo.AddPropertyMapping(System.Data.Query.PlanCompiler.PropertyRef,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RootTypeInfo.GetNestedStructureOffset(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RootTypeInfo.GetNewProperty(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.MatchesPattern(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessAndOverConstantPredicate1(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessAndOverConstantPredicate2(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessComparisonsOverConstant(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessFlattenCase(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="caseOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessIsNullOverConstant(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessIsNullOverNull(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessIsNullOverVarRef(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="isNullNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessLikeOverConstant(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessLogOpOverConstant(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessNotOverConstantPredicate(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessNullCast(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="castNullOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessOrOverConstantPredicate1(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessOrOverConstantPredicate2(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessSimplifyCase(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="caseOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessSimplifyCase_Collapse(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="caseOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessSimplifyCase_EliminateWhenClauses(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="caseOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SetOpRules.ProcessSetOpOverEmptySet(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SimplePropertyRef.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SingleRowOpRules.ProcessSingleRowOpOverAnything(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="singleRowNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SingleRowOpRules.ProcessSingleRowOpOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="singleRowNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SortOpRules.ProcessSortOpOverAtMostOneRow(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SortRemover.Process(System.Data.Query.InternalTrees.Command)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SortRemover.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AddEntityTypeToSetEntry(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AddRelProperties(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AssignEntitySetIds(System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntitySet})">
    <parameter name="referencedEntitySets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AssignRootTypeId(System.Data.Query.PlanCompiler.TypeInfo,System.String)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AssignTypeId(System.Data.Query.PlanCompiler.TypeInfo,System.Int32)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AssignTypeIdsToSubTypes(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.CreateFlattenedRecordType(System.Data.Query.PlanCompiler.RootTypeInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.CreateTypeInfoForStructuredType(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.CreateTypeInfoForType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ExplodeRootStructuredType(System.Data.Query.PlanCompiler.RootTypeInfo)">
    <parameter name="rootType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ExplodeRootStructuredTypeHelper(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ExplodeType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ExplodeType(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetEntitySet(System.Data.Metadata.Edm.EntityTypeBase)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetEntitySetId(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetNewType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetPropertyType(System.Data.Query.PlanCompiler.RootTypeInfo,System.Data.Query.PlanCompiler.PropertyRef)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetRootType(System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetTypeInfo(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.NeedsEntitySetIdProperty(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.NeedsNullSentinelProperty(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.NeedsTypeIdProperty(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.PopulateTypeInfoMap(System.Collections.Generic.HashSet{System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="referencedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.Process(System.Data.Query.InternalTrees.Command,System.Collections.Generic.HashSet{System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntitySet},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntityType},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Query.PlanCompiler.DiscriminatorMapInfo},System.Data.Query.InternalTrees.RelPropertyHelper)">
    <parameter name="freeFloatingEntityConstructorTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referencedEntitySets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referencedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.Process(System.Data.Query.InternalTrees.Command,System.Collections.Generic.HashSet{System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntitySet},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntityType},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Query.PlanCompiler.DiscriminatorMapInfo},System.Data.Query.InternalTrees.RelPropertyHelper,System.Collections.Generic.HashSet{System.String},System.Data.Query.PlanCompiler.StructuredTypeInfo@)">
    <parameter name="referencedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referencedEntitySets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="freeFloatingEntityConstructorTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ProcessEntitySets(System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntitySet},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntityType})">
    <parameter name="referencedEntitySets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="freeFloatingEntityConstructorTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ProcessTypes(System.Collections.Generic.HashSet{System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="referencedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.TryGetDiscriminatorMap(System.Data.Metadata.Edm.EdmType,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeNullabilityAnalyzer.AddTypeNeedingNullSentinel(System.Collections.Generic.HashSet{System.String},System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typesNeedingNullSentinel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeNullabilityAnalyzer.MarkAsNeedingNullSentinel(System.Collections.Generic.HashSet{System.String},System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typesNeedingNullSentinel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredVarInfo.#ctor(System.Data.Metadata.Edm.RowType,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty},System.Boolean)">
    <parameter name="newVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newTypeProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredVarInfo.TryGetVar(System.Data.Metadata.Edm.EdmProperty,System.Data.Query.InternalTrees.Var@)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SubqueryTrackingVisitor.AddSubqueryToParentRelOp(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node)">
    <parameter name="subquery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SubqueryTrackingVisitor.AddSubqueryToRelOpNode(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <parameter name="relOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SubqueryTrackingVisitor.AugmentWithSubqueries(System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Boolean)">
    <parameter name="subqueries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SubqueryTrackingVisitor.FindRelOpAncestor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SubqueryTrackingVisitor.ProcessJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SubqueryTrackingVisitor.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SubqueryTrackingVisitor.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.BuildLookupTableForRules(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Rule})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.InitializeRulesRequiringNullabilityRulesToBeReapplied">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.InitializeRulesRequiringProjectionPruning">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.Process(System.Data.Query.PlanCompiler.PlanCompiler,System.Collections.ObjectModel.ReadOnlyCollection{System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Query.InternalTrees.Rule}},System.Boolean@)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rulesTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.Process(System.Data.Query.PlanCompiler.PlanCompiler,System.Data.Query.PlanCompiler.TransformationRulesGroup)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.#ctor(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.AddVarMapping(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var)">
    <parameter name="oldVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.BuildNullIfExpression(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conditionVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.Copy(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.GetVarMap(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="varDefListNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.HasOpNotSafeForNullSentinelValueChange(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsFilterPushdownSuppressed(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsNonNullable(System.Data.Query.InternalTrees.Var)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsScalarOpTree(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsScalarOpTree(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Int32})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsScalarOpTree(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Int32},System.Int32@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.ReMap(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.RemapSubtree(System.Data.Query.InternalTrees.Node)">
    <parameter name="subTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.SuppressFilterPushdown(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.TryGetInt32Var(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Data.Query.InternalTrees.Var@)">
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeInfo.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeInfo.GetNewProperty(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeInfo.GetTypeHierarchy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeInfo.GetTypeHierarchy(System.Collections.Generic.List{System.Data.Query.PlanCompiler.TypeInfo})">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.TypeInfo.RootType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUsageEqualityComparer.Equals(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUsageEqualityComparer.Equals(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUsageEqualityComparer.GetHashCode(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUtils.CreateCollectionType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUtils.IsCollectionType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUtils.IsStructuredType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUtils.IsUdt(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.VarInfo.NewVars">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarInfoMap.CreateCollectionVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarInfoMap.CreateStructuredVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Metadata.Edm.RowType,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty})">
    <parameter name="newProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarInfoMap.CreateStructuredVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Metadata.Edm.RowType,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="newVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarInfoMap.TryGetVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.VarInfo@)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.AddChildren(System.Data.Query.InternalTrees.Node)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasKeyReferences(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <parameter name="definingNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetJoinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferences(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Data.Query.InternalTrees.VarVec)">
    <parameter name="listToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferences(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.VarVec,System.Int32)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferences(System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="listToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferences(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="listToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferencesShallow(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Int32,System.Boolean@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.AddMapping(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var)">
    <parameter name="oldVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Data.Query.InternalTrees.VarList)">
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Data.Query.InternalTrees.VarMap)">
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapSubtree(System.Data.Query.InternalTrees.Node)">
    <parameter name="subTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapVarList(System.Data.Query.InternalTrees.Command,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var},System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapVarList(System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Visit(System.Data.Query.InternalTrees.GroupByIntoOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.#ctor(System.Data.Common.Internal.Materialization.Shaper{System.Data.Common.Internal.Materialization.RecordState},System.Data.Common.Internal.Materialization.CoordinatorFactory{System.Data.Common.Internal.Materialization.RecordState},System.Int32)">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="coordinatorFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.Create(System.Data.Common.DbDataReader,System.Data.Query.InternalTrees.ColumnMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetClrTypeFromTypeMetadata(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetDataTypeName(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetProviderSpecificValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.ResultAssembly.BridgeDataReader.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetDataTypeName(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.ResultAssembly.BridgeDataRecord.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendCreateForeignKeys(System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendCreateSchema(System.String)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendCreateTable(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendFileName(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendIdentifier(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendIdentifier(System.Data.Metadata.Edm.EntitySet,System.Action{System.String})">
    <parameter name="AppendIdentifierEscape">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendIdentifier(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendIdentifierEscapeNewLine(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendIdentifiers(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty})">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendJoin``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0},System.String)">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="appendElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendSqlInvariantFormat(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendStringLiteral(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.AppendType(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="column">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.CreateDatabaseExistsScript(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="databaseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.CreateDatabaseScript(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="databaseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="logFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.CreateObjectsScript(System.Data.Metadata.Edm.StoreItemCollection,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.DropDatabaseScript(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="databaseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.GetCommandText">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.GetSchemaName(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlDdlBuilder.GetTableName(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator.CreateParameter(System.Object,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator.RegisterMemberValue(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="propertyExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator.VisitBinary(System.Data.Common.CommandTrees.DbBinaryExpression,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateDeleteSql(System.Data.Common.CommandTrees.DbDeleteCommandTree,System.Data.SqlClient.SqlVersion,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateInsertSql(System.Data.Common.CommandTrees.DbInsertCommandTree,System.Data.SqlClient.SqlVersion,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateMemberTSql(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateReturningSql(System.Text.StringBuilder,System.Data.Common.CommandTrees.DbModificationCommandTree,System.Data.Metadata.Edm.EntityType,System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateUpdateSql(System.Data.Common.CommandTrees.DbUpdateCommandTree,System.Data.SqlClient.SqlVersion,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.IsValidScopeIdentityColumnType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.UseGeneratedValuesVariable(System.Data.Common.CommandTrees.DbInsertCommandTree,System.Data.SqlClient.SqlVersion,System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.JoinSymbol.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.SqlClient.SqlGen.Symbol})">
    <parameter name="extents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.OptionalColumn.WriteSqlIfUsed(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator,System.String)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.NeedsRewrite(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)">
    <parameter name="aggregate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitAggregateList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitBinaryExpression(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="expressionBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitList``1(System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.ListElementHandler{``0},System.Collections.Generic.IList{``0})">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)">
    <parameter name="sortClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitSortClauseList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitUnaryExpression(System.Data.Common.CommandTrees.DbUnaryExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.AreMatching(System.Data.Common.CommandTrees.DbPropertyExpression,System.Data.Common.CommandTrees.DbPropertyExpression,System.String,System.String)">
    <parameter name="expr1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.CapWithProject(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="flattenedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.FlattenProperties(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression})">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="flattenedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.HasMatchInList(System.Data.Common.CommandTrees.DbPropertyExpression,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.String,System.String)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.RemoveNonSortProperties(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.String,System.String)">
    <parameter name="list1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="list2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.Rewrite(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="originalTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.TransformIntersectOrExcept(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.TransformIntersectOrExcept(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionKind,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortExpressionsOverLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlBuilder.sqlFragments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlBuilder.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlSelectClauseBuilder.WriteOptionalColumns(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.FromExtents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.GroupBy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.OrderBy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.OuterExtents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.Where">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlSelectStatement.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlWriter.#ctor(System.Text.StringBuilder)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.Symbol.Columns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.Symbol.OutputColumns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Symbol.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolPair.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolTable.Add(System.String,System.Data.SqlClient.SqlGen.Symbol)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolTable.Lookup(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolUsageManager.Add(System.Data.SqlClient.SqlGen.Symbol,System.Data.SqlClient.SqlGen.Symbol)">
    <parameter name="symbolToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolUsageManager.ContainsKey(System.Data.SqlClient.SqlGen.Symbol)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolUsageManager.IsUsed(System.Data.SqlClient.SqlGen.Symbol)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolUsageManager.MarkAsUsed(System.Data.SqlClient.SqlGen.Symbol)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolUsageManager.TryGetValue(System.Data.SqlClient.SqlGen.Symbol,System.Boolean@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.TopClause.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.#ctor(System.String)">
    <parameter name="manifestToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.EscapeLikeArgument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.EscapeLikeText(System.String,System.Boolean,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetProviderManifest">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetStoreSchemaDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetStoreSchemaMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.CreateCommand(System.Data.SqlClient.SqlConnection,System.String,System.Nullable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.CreateObjectsScript(System.Data.SqlClient.SqlVersion,System.Data.Metadata.Edm.StoreItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.CreateSqlParameter(System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.ParameterMode,System.Object,System.Boolean,System.Data.SqlClient.SqlVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.DbCreateDatabaseScript(System.String,System.Data.Metadata.Edm.StoreItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetBinaryDbType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetDatabaseFileNames(System.Data.SqlClient.SqlConnection,System.String@,System.String@)">
    <parameter name="sqlConnection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetDatabaseName(System.Data.SqlClient.SqlConnection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sqlConnection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetDbProviderManifest(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetKatmaiDateTimePrecision(System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetParameterPrecision(System.Data.Metadata.Edm.TypeUsage,System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetParameterSize(System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetScale(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetSqlDbType(System.Data.Metadata.Edm.TypeUsage,System.Boolean,System.Data.SqlClient.SqlVersion,System.Nullable{System.Int32}@,System.Nullable{System.Byte}@,System.Nullable{System.Byte}@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetSqlVersion(System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="storeItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetStringDbType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.UsingConnection(System.Data.SqlClient.SqlConnection,System.Action{System.Data.SqlClient.SqlConnection})">
    <parameter name="sqlConnection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="act">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.UsingMasterConnection(System.Data.SqlClient.SqlConnection,System.Action{System.Data.SqlClient.SqlConnection})">
    <parameter name="act">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sqlConnection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderUtilities.GetRequiredSqlConnection(System.Data.Common.DbConnection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlVersionUtils.GetSqlVersion(System.Data.SqlClient.SqlConnection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlVersionUtils.GetSqlVersion(System.String)">
    <parameter name="versionHint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlVersionUtils.GetVersionHint(System.Data.SqlClient.SqlVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{})">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Error.UnhandledBindingType(System.Linq.Expressions.MemberBindingType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Linq.Expressions.Error.UnhandledExpressionType(System.Linq.Expressions.ExpressionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
</assembly>