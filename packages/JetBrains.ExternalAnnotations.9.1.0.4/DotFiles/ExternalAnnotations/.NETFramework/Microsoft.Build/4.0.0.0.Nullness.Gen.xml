<?xml version="1.0" encoding="utf-8"?>
<assembly name="Microsoft.Build" version="4.0.0.0">
  <member name="M:Microsoft.Build.BackEnd.AssemblyTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.AssemblyTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.AssemblyTaskFactory.CreateTaskInstance(Microsoft.Build.Shared.IElementLocation,Microsoft.Build.BackEnd.Logging.TaskLoggingContext,System.AppDomainSetup,System.Boolean)">
    <parameter name="taskLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="appDomainSetup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.AssemblyTaskFactory.GetTaskParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.AssemblyTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)">
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.AssemblyTaskFactory.InitializeFactory(Microsoft.Build.Shared.AssemblyLoadInfo,System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Shared.IElementLocation,System.String)">
    <parameter name="loadInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.AssemblyTaskFactory.IsTaskClass(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.AssemblyTaskFactory.TaskNameCreatableByFactory(System.String,System.String,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BatchingEngine.BucketConsumedItems(Microsoft.Build.BackEnd.Lookup,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}},System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Evaluation.MetadataReference},Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="lookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemListsToBeBatched">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="consumedMetadataReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BatchingEngine.GetItemListsToBeBatched(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Evaluation.MetadataReference},System.Collections.Generic.HashSet{System.String},Microsoft.Build.BackEnd.Lookup,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="consumedMetadataReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BatchingEngine.GetItemMetadataValues(Microsoft.Build.Execution.ProjectItemInstance,System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Evaluation.MetadataReference},Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="consumedMetadataReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BatchingEngine.PrepareBatchingBuckets(System.Collections.Generic.List{System.String},Microsoft.Build.BackEnd.Lookup,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BatchingEngine.PrepareBatchingBuckets(System.Collections.Generic.List{System.String},Microsoft.Build.BackEnd.Lookup,System.String,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildComponentFactoryCollection.BuildComponentEntry.GetInstance(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequest.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequest.#ctor(System.Int32,System.Int32,System.Int32,System.Collections.Generic.ICollection{System.String},Microsoft.Build.Execution.HostServices,Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="escapedTargets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequest.DoesResultApplyToRequest(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequest.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequest.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestBlocker.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestBlocker.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestBlocker.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.#ctor(Microsoft.Build.Execution.BuildRequestData,System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.#ctor(System.Int32,Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.#ctor(System.Int32,Microsoft.Build.Execution.BuildRequestData,System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.#ctor(System.Int32,Microsoft.Build.Execution.ProjectInstance)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.BuildRequestConfiguration.ActivelyBuildingTargets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.BackEnd.BuildRequestConfiguration.BaseLookup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.Equals(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.GetCacheFile">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.GetConfigurationTranslator(Microsoft.Build.BackEnd.TranslationDirection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.GetTargetsUsedToBuildRequest(Microsoft.Build.BackEnd.BuildRequest)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.InternalEquals(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.ResolveToolsVersion(Microsoft.Build.Execution.BuildRequestData,System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.ShallowCloneWithNewId(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfiguration.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfigurationResponse.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfigurationResponse.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestConfigurationResponse.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.ActivateBuildRequest(Microsoft.Build.BackEnd.BuildRequestEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.DeactivateBuildRequest(Microsoft.Build.BackEnd.BuildRequestEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.IssueBuildRequest(Microsoft.Build.BackEnd.BuildRequestBlocker)">
    <parameter name="blocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.IssueBuildRequests(Microsoft.Build.BackEnd.BuildRequestEntry,Microsoft.Build.BackEnd.FullyQualifiedBuildRequest[])">
    <parameter name="issuingEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newRequests">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.IssueConfigurationRequest(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.RaiseRequestComplete(Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.Execution.BuildResult)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.ReportConfigurationResponse(Microsoft.Build.BackEnd.BuildRequestConfigurationResponse)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.SubmitBuildRequest(Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.TraceEngine(System.String,System.Object[])">
    <parameter name="stuff">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEngine.UnblockBuildRequest(Microsoft.Build.BackEnd.BuildRequestUnblocker)">
    <parameter name="unblocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.#ctor(Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requestConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.Complete(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.GetActiveTargets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.GetRequestsToIssueIfReady">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.GetUnresolvedConfigurationsToIssue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.BackEnd.BuildRequestEntry.ProjectRootDirectory">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.ReportResult(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.WaitForConfiguration(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.WaitForResult(Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="newRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestEntry.WaitForResult(Microsoft.Build.BackEnd.BuildRequest,System.Boolean)">
    <parameter name="newRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestUnblocker.#ctor(Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.Execution.BuildResult)">
    <parameter name="parentRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buildResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestUnblocker.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestUnblocker.#ctor(Microsoft.Build.Execution.BuildResult)">
    <parameter name="buildResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestUnblocker.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.BuildRequestUnblocker.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.CircularDependencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigCache.AddConfiguration(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigCache.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigCache.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigCache.GetKeyForConfiguration(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigCache.GetMatchingConfiguration(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigCache.GetMatchingConfiguration(Microsoft.Build.BackEnd.ConfigurationMetadata)">
    <parameter name="configMetadata">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigCache.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigCache.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigurationMetadata.#ctor(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigurationMetadata.#ctor(Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigurationMetadata.Equals(Microsoft.Build.BackEnd.ConfigurationMetadata)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigurationMetadata.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ConfigurationMetadata.InternalEquals(Microsoft.Build.BackEnd.ConfigurationMetadata)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.FullTracking.Suspend">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.FullTracking.Track(System.String,System.String,System.String,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectRootDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.FullyQualifiedBuildRequest.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.FullyQualifiedBuildRequest.InternalEquals(Microsoft.Build.BackEnd.FullyQualifiedBuildRequest)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.#ctor(Microsoft.Build.BackEnd.IBuildComponentHost,Microsoft.Build.BackEnd.INodeEndpoint)">
    <parameter name="componentHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.HandleBuildRequest(Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.HandleBuildRequestConfigurationResponse(Microsoft.Build.BackEnd.BuildRequestConfigurationResponse)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.HandleBuildResult(Microsoft.Build.BackEnd.BuildRequestUnblocker)">
    <parameter name="unblocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.HandleNodeBuildComplete(Microsoft.Build.BackEnd.NodeBuildComplete)">
    <parameter name="buildComplete">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.HandleNodeConfiguration(Microsoft.Build.BackEnd.NodeConfiguration)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.HandlePacket(Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.OnNewConfigurationRequest(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.OnNewRequest(Microsoft.Build.BackEnd.BuildRequestBlocker)">
    <parameter name="blocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.OnRequestComplete(Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.InProcNode.RoutePacket(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.IntrinsicTask.AddIfNotEmptyString(System.Collections.Generic.List{System.String},System.String)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.IntrinsicTask.InstantiateTask(Microsoft.Build.Execution.ProjectTargetInstanceChild,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Execution.ProjectInstance)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="taskInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemBucket.AddItem(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemBucket.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemBucket.GetDummyBucketForComparisons(System.Collections.Generic.Dictionary{System.String,System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.ExecuteAdd(Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance,Microsoft.Build.BackEnd.ItemBucket)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.ExecuteModify(Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance,Microsoft.Build.BackEnd.ItemBucket)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.ExecuteRemove(Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance,Microsoft.Build.BackEnd.ItemBucket)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.ExpandItemIntoItems(Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance,Microsoft.Build.Evaluation.Expander{Microsoft.Build.Execution.ProjectPropertyInstance,Microsoft.Build.Execution.ProjectItemInstance})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="originalItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expander">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.FindItemsMatchingSpecification(System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance},System.String,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Evaluation.Expander{Microsoft.Build.Execution.ProjectPropertyInstance,Microsoft.Build.Execution.ProjectItemInstance})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="specification">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expander">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="specificationLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.GetBatchableValuesFromBuildItemGroupChild(System.Collections.Generic.List{System.String},Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance)">
    <parameter name="parameterValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.NestedMetadataTable.GetEscapedValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.NestedMetadataTable.GetEscapedValue(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.NestedMetadataTable.GetEscapedValueIfPresent(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ItemGroupIntrinsicTask.NestedMetadataTable.SetValue(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.ApplyParameter(System.String,System.String)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.ApplyVerbosityParameter(System.String)">
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.DictionaryEntryKeyComparer.Compare(System.Object,System.Object)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.DisplayCounters(System.Collections.Hashtable)">
    <parameter name="counters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.ExtractItemList(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.ExtractPropertyList(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.GetPerformanceCounter(System.String,System.Collections.Hashtable@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="scopeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.IndentString(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.ITaskItemItemSpecComparer.Compare(System.Object,System.Object)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.OutputItems(System.String,System.Collections.ArrayList)">
    <parameter name="itemTypeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.OutputProperties(System.Collections.ArrayList)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.PerformanceCounter.DescendingByElapsedTime.Compare(System.Object,System.Object)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.PerformanceCounter.DescendingByElapsedTimeComparer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.PerformanceCounter.PrintCounterMessage(Microsoft.Build.BackEnd.Logging.WriteLinePrettyFromResourceDelegate,Microsoft.Build.Logging.ColorSetter,Microsoft.Build.Logging.ColorResetter)">
    <parameter name="WriteLinePrettyFromResource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resetColor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.SplitStringOnNewLines(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.WriteItems(System.Collections.SortedList)">
    <parameter name="itemTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.WriteLinePrettyFromResource(System.Int32,System.String,System.Object[])">
    <parameter name="resourceString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.WriteLinePrettyFromResource(System.String,System.Object[])">
    <parameter name="resourceString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseConsoleLogger.WriteProperties(System.Collections.ArrayList)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BaseLoggingContext.#ctor(Microsoft.Build.BackEnd.Logging.BaseLoggingContext)">
    <parameter name="baseContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.AddProjectStartedEvent(Microsoft.Build.Framework.ProjectStartedEventArgs,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.AddTargetStartedEvent(Microsoft.Build.Framework.TargetStartedEventArgs,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.GetProjectCallStack(Microsoft.Build.Framework.BuildEventContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.GetProjectStartedEvent(Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.GetTargetStartedEvent(Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.ProjectCallStackFromProject(Microsoft.Build.Framework.BuildEventContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.RemoveProjectStartedEvent(Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.RemoveTargetStartedEvent(Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.BuildEventManager.SetErrorWarningFlagOnCallStack(Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.CentralForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.CentralForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ComparerContextNodeId`1.Equals(`0,`0)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ComparerContextNodeId`1.GetHashCode(`0)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ComparerContextNodeIdTargetId`1.Equals(`0,`0)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ComparerContextNodeIdTargetId`1.GetHashCode(`0)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ErrorWarningSummaryDictionaryKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LogFormatter.FormatLogTimeStamp(System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LogFormatter.FormatTimeSpan(System.TimeSpan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.CreateLoggingService(Microsoft.Build.BackEnd.Logging.LoggerMode,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="buildComponentHost">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.InitializeLogger(Microsoft.Build.Framework.ILogger,Microsoft.Build.Framework.IEventSource)">
    <parameter name="logger">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceForLogger">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.LogProjectStarted(Microsoft.Build.Framework.BuildEventContext,System.Int32,System.Int32,Microsoft.Build.Framework.BuildEventContext,System.String,System.String,System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.LogTargetStarted(Microsoft.Build.Framework.BuildEventContext,System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.LogTaskStarted2(Microsoft.Build.Framework.BuildEventContext,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.PacketReceived(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.Logging.LoggingService.RegisteredLoggerTypeNames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.BackEnd.Logging.LoggingService.RegisteredSinkNames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.RouteBuildEvent(System.Object)">
    <parameter name="loggingEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingService.RouteBuildEvent(System.Tuple{System.Int32,Microsoft.Build.Framework.BuildEventArgs})">
    <parameter name="nodeEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.LoggingServiceFactory.CreateInstance(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.NodeLoggingContext.LogProjectStarted(Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.NodeLoggingContext.LogProjectStarted(Microsoft.Build.BackEnd.BuildRequestEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="requestEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.NodeLoggingContext.LogRequestHandledFromCache(Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.BackEnd.BuildRequestConfiguration,Microsoft.Build.Execution.BuildResult)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.NullCentralLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.NullCentralLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.DisplayDeferredProjectStartedEvent(Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.DisplayDeferredStartedEvents(Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.DisplayDeferredTargetStartedEvent(Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.GetFullProjectKey(Microsoft.Build.Framework.BuildEventContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.GetPerformanceCounter(System.String,System.Collections.Hashtable@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="scopeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.MPPerformanceCounter.AddEventFinished(System.String,Microsoft.Build.Framework.BuildEventContext,System.DateTime)">
    <parameter name="buildEventContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.MPPerformanceCounter.AddEventStarted(System.String,Microsoft.Build.Framework.BuildEventContext,System.DateTime,System.Collections.Generic.IEqualityComparer{Microsoft.Build.Framework.BuildEventContext})">
    <parameter name="buildEventContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.PrintMessage(Microsoft.Build.Framework.BuildMessageEventArgs,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.PrintTargetNamePerMessage(Microsoft.Build.Framework.BuildMessageEventArgs,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.ShowErrorWarningSummary``1(System.Collections.ArrayList)">
    <parameter name="listToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.WriteItems(Microsoft.Build.Framework.BuildEventArgs,System.Collections.IEnumerable)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.WriteMessageAligned(System.String,System.Boolean)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.WriteMessageAligned(System.String,System.Boolean,System.Int32)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.WriteProperties(Microsoft.Build.Framework.BuildEventArgs,System.Collections.IEnumerable)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ParallelConsoleLogger.WriteTargetMessagePrefix(Microsoft.Build.Framework.BuildEventArgs,Microsoft.Build.Framework.BuildEventContext,System.DateTime)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectFullKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectFullKey.ToString(Microsoft.Build.Framework.LoggerVerbosity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectLoggingContext.#ctor(Microsoft.Build.BackEnd.Logging.NodeLoggingContext,Microsoft.Build.BackEnd.BuildRequest,System.String,System.String,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nodeLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectLoggingContext.#ctor(Microsoft.Build.BackEnd.Logging.NodeLoggingContext,Microsoft.Build.BackEnd.BuildRequestEntry,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="requestEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nodeLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectLoggingContext.#ctor(Microsoft.Build.BackEnd.Logging.NodeLoggingContext,System.Int32,System.Int32,System.String,System.Collections.Generic.List{System.String},System.String,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.ItemDictionary{Microsoft.Build.Execution.ProjectItemInstance},Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="nodeLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectLoggingContext.LogTargetBatchStarted(System.String,Microsoft.Build.Execution.ProjectTargetInstance,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectLoggingContext.ProjectItemInstanceEnumeratorProxy.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectLoggingContext.ProjectItemInstanceEnumeratorProxy.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectLoggingContext.ProjectPropertyInstanceEnumeratorProxy.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectLoggingContext.ProjectPropertyInstanceEnumeratorProxy.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.ProjectStartedEventMinimumFields.#ctor(System.Int32,System.Int32,Microsoft.Build.Framework.ProjectStartedEventArgs,Microsoft.Build.BackEnd.Logging.ProjectStartedEventMinimumFields,System.Boolean)">
    <parameter name="startedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.Logging.ProjectStartedEventMinimumFields.FullProjectKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.SerialConsoleLogger.VerifyStack(System.Boolean,System.String,System.Object[])">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.TargetLoggingContext.#ctor(Microsoft.Build.BackEnd.Logging.ProjectLoggingContext,System.String,Microsoft.Build.Execution.ProjectTargetInstance,System.String)">
    <parameter name="projectLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.TargetLoggingContext.LogTaskBatchStarted(System.String,Microsoft.Build.Execution.ProjectTargetInstanceChild)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.TargetLoggingContext.TargetOutputItemsInstanceEnumeratorProxy.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.TargetLoggingContext.TargetOutputItemsInstanceEnumeratorProxy.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.TargetStartedEventMinimumFields.#ctor(Microsoft.Build.Framework.TargetStartedEventArgs,System.Boolean)">
    <parameter name="startedEvent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.TaskEngineAssemblyResolver.ResolveAssembly(System.Object,System.ResolveEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Logging.TaskLoggingContext.#ctor(Microsoft.Build.BackEnd.Logging.TargetLoggingContext,System.String,Microsoft.Build.Execution.ProjectTargetInstanceChild)">
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.LogMessagePacket.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.LogMessagePacket.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.LogMessagePacket.GetBuildEventArgFromId">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.LogMessagePacket.GetLoggingEventId(Microsoft.Build.Framework.BuildEventArgs)">
    <parameter name="eventArg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.LogMessagePacket.NodeBuildEvent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.LogMessagePacket.ReadFromStream(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.LogMessagePacket.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.LogMessagePacket.TranslateTargetFinishedEvent(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.LogMessagePacket.WriteToStream(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.#ctor(Microsoft.Build.BackEnd.Lookup)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.AddNewItem(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.AddNewItemsOfItemType(System.String,System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance})">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.ApplyModificationsToTable(Microsoft.Build.Collections.ItemDictionary{Microsoft.Build.Execution.ProjectItemInstance},System.String,System.Collections.Generic.Dictionary{Microsoft.Build.Execution.ProjectItemInstance,System.Collections.Generic.Dictionary{System.String,System.String}})">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="modify">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.ApplyModifies(Microsoft.Build.Collections.ItemDictionary{Microsoft.Build.Execution.ProjectItemInstance},System.Collections.Generic.Dictionary{Microsoft.Build.Execution.ProjectItemInstance,System.Collections.Generic.Dictionary{System.String,System.String}})">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="allModifies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.EnterScope(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.GetItems(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.GetProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.GetProperty(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.GetPropertyOverrideMessages(System.Collections.Generic.Dictionary{System.String,System.String})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="lookupHash">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.LeaveScope(Microsoft.Build.BackEnd.Lookup.Scope)">
    <parameter name="scopeToLeave">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.MergeModificationsIntoModificationTable(System.Collections.Generic.Dictionary{Microsoft.Build.Execution.ProjectItemInstance,System.Collections.Generic.Dictionary{System.String,System.String}},System.Collections.Generic.KeyValuePair{Microsoft.Build.Execution.ProjectItemInstance,System.Collections.Generic.Dictionary{System.String,System.String}},Microsoft.Build.BackEnd.Lookup.ModifyMergeType)">
    <parameter name="modifiesOfType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.ModifyItems(System.String,System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance},System.Collections.Generic.Dictionary{System.String,System.String})">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataChanges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.PopulateWithItem(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.PopulateWithItems(System.String,System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance})">
    <parameter name="group">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.Lookup.ReadOnlyLookup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.RetrieveOriginalFromCloneTable(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Lookup.SetProperty(Microsoft.Build.Execution.ProjectPropertyInstance)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NativeMethods.GetEnvironmentCharArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeBuildComplete.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeBuildComplete.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeConfiguration.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeConfiguration.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeEndpointInProc.SendData(Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeEndpointOutOfProc.#ctor(System.String,Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="pipeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeEndpointOutOfProc.DebugCommunications(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stuff">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeEndpointOutOfProc.SendData(Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeManager.AttemptCreateNode(Microsoft.Build.BackEnd.INodeProvider,Microsoft.Build.BackEnd.NodeConfiguration)">
    <parameter name="nodeConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeManager.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeManager.CreateNode(Microsoft.Build.BackEnd.NodeConfiguration,Microsoft.Build.Execution.NodeAffinity)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeManager.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeManager.RoutePacket(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeManager.SendData(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketFactory.PacketFactoryRecord.RoutePacket(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketFactory.RoutePacket(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.GetReadTranslator(System.IO.Stream,Microsoft.Build.SharedReadBuffer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.GetWriteTranslator(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.#ctor(System.IO.Stream,Microsoft.Build.SharedReadBuffer)">
    <parameter name="packetStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Reader">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Translate(Microsoft.Build.Framework.BuildEventContext@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Translate(System.Collections.Generic.List{System.String}@)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Translate(System.String@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Translate(System.String[]@)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Translate``1(``0@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Translate``1(``0@,Microsoft.Build.BackEnd.NodePacketValueFactory{``0})">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Translate``1(System.Collections.Generic.List{``0}@,Microsoft.Build.BackEnd.NodePacketValueFactory{``0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateArray``1(``0[]@)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateArray``1(``0[]@,Microsoft.Build.BackEnd.NodePacketValueFactory{``0})">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateCulture(System.Globalization.CultureInfo@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateDictionary(System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.IEqualityComparer{System.String})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateDictionary``1(System.Collections.Generic.Dictionary{System.String,``0}@,System.Collections.Generic.IEqualityComparer{System.String},Microsoft.Build.BackEnd.NodePacketValueFactory{``0})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateDictionary``2(``0@,Microsoft.Build.BackEnd.NodePacketValueFactory{``1})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateDictionary``2(``0@,Microsoft.Build.BackEnd.NodePacketValueFactory{``1},Microsoft.Build.BackEnd.NodePacketDictionaryCreator{``0})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionaryCreator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.TranslateEnum``1(``0@,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketReadTranslator.Writer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.#ctor(System.IO.Stream)">
    <parameter name="packetStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Reader">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Translate(Microsoft.Build.Framework.BuildEventContext@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Translate(System.Collections.Generic.List{System.String}@)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Translate(System.String@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Translate(System.String[]@)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Translate``1(``0@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Translate``1(``0@,Microsoft.Build.BackEnd.NodePacketValueFactory{``0})">
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Translate``1(System.Collections.Generic.List{``0}@,Microsoft.Build.BackEnd.NodePacketValueFactory{``0})">
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateArray``1(``0[]@)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateArray``1(``0[]@,Microsoft.Build.BackEnd.NodePacketValueFactory{``0})">
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateCulture(System.Globalization.CultureInfo@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateDictionary(System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.IEqualityComparer{System.String})">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateDictionary``1(System.Collections.Generic.Dictionary{System.String,``0}@,System.Collections.Generic.IEqualityComparer{System.String},Microsoft.Build.BackEnd.NodePacketValueFactory{``0})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateDictionary``2(``0@,Microsoft.Build.BackEnd.NodePacketValueFactory{``1})">
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateDictionary``2(``0@,Microsoft.Build.BackEnd.NodePacketValueFactory{``1},Microsoft.Build.BackEnd.NodePacketDictionaryCreator{``0})">
    <parameter name="dictionaryCreator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueFactory">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateEnum``1(``0@,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.TranslateProjectPropertyInstanceDictionary(Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance}@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.NodePacketTranslator.NodePacketWriteTranslator.Writer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderInProc.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderInProc.CreateNode(System.Int32,Microsoft.Build.BackEnd.INodePacketFactory,Microsoft.Build.BackEnd.NodeConfiguration)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderInProc.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderInProc.RoutePacket(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderInProc.SendData(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.CreateNode(System.Int32,Microsoft.Build.BackEnd.INodePacketFactory,Microsoft.Build.BackEnd.NodeConfiguration)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.GetNode(System.Int32,Microsoft.Build.BackEnd.INodePacketFactory)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.NodeContext.BodyReadComplete(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.NodeContext.HeaderReadComplete(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.NodeContext.PacketWriteComplete(System.IAsyncResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.NodeContext.SendData(Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.SendData(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeProviderOutOfProc.TryConnectToProcess(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeShutdown.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.NodeShutdown.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.PropertyGroupIntrinsicTask.GetBatchableValuesFromProperty(System.Collections.Generic.List{System.String},Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance)">
    <parameter name="parameterValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ReadOnlyLookup.GetItems(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ReadOnlyLookup.GetProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ReadOnlyLookup.GetProperty(System.String,System.Int32,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.RequestBuilder.BuildProject">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.RequestBuilder.BuildProjects(System.String[],Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance}[],System.String[],System.String[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="toolsVersions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.RequestBuilder.BuildRequest(Microsoft.Build.BackEnd.Logging.NodeLoggingContext,Microsoft.Build.BackEnd.BuildRequestEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.RequestBuilder.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.RequestBuilder.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.RequestBuilder.StartNewBuildRequests(Microsoft.Build.BackEnd.FullyQualifiedBuildRequest[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="requests">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.RequestBuilder.WaitWithBuilderThreadStart(System.Threading.WaitHandle[],System.Boolean,Microsoft.Build.Execution.LegacyThreadingData)">
    <parameter name="handles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="threadingData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ResultsCache.AddResult(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ResultsCache.CheckResults(Microsoft.Build.Execution.BuildResult,System.Collections.Generic.List{System.String},Microsoft.Build.BackEnd.ResultsCache.TargetClass,System.Collections.Generic.HashSet{System.String})">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ResultsCache.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ResultsCache.GetResultForRequest(Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ResultsCache.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ResultsCache.SatisfyRequest(Microsoft.Build.BackEnd.BuildRequest,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.BlockByRequest(Microsoft.Build.BackEnd.SchedulableRequest,System.String[])">
    <parameter name="blockingRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.BlockingRequestKey.#ctor(Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.BlockingRequestKey.#ctor(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.BlockingRequestKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.CleanupForCircularDependencyAndThrow(Microsoft.Build.BackEnd.SchedulableRequest,System.Collections.Generic.List{Microsoft.Build.BackEnd.SchedulableRequest})">
    <parameter name="requestCausingFailure">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.Complete(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.DetectCircularDependency(Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="blockingRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.DetectDirectCircularDependency(Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="blockingRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.DetectIndirectCircularDependency(Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="blockingRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.DisconnectRequestWeAreBlockedBy(Microsoft.Build.BackEnd.SchedulableRequest.BlockingRequestKey)">
    <parameter name="blockingRequestKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.SchedulableRequest.RequestsWeAreBlockedBy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.ThrowIndirectCircularDependency(Microsoft.Build.BackEnd.SchedulableRequest,Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="blockingRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requestToEvaluate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.UnblockWithResult(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulableRequest.VerifyOneOfStates(Microsoft.Build.BackEnd.SchedulableRequestState[])">
    <parameter name="requiredStates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignGlobalRequestId(Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignTraversalsToInProcNode(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsByTraversalsFirst(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsFIFO(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsToNodes(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsWithConfigurationCountLevelling(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsWithLargestFileSize(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsWithMaxWaitingRequests(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsWithMaxWaitingRequests2(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsWithPlanByGreatestPlanTime(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsWithPlanByMostImmediateReferences(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestsWithSmallestFileSize(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.HashSet{System.Int32})">
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="idleNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.AssignUnscheduledRequestToNode(Microsoft.Build.BackEnd.SchedulableRequest,System.Int32,System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse})">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.CanScheduleRequestToNode(Microsoft.Build.BackEnd.SchedulableRequest,System.Int32)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ComputeClosureOfWaitingRequests(Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.CreateNewNodeIfPossible(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse},System.Collections.Generic.IEnumerable{Microsoft.Build.BackEnd.SchedulableRequest})">
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requests">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.DumpRequestHierarchy(System.IO.StreamWriter,Microsoft.Build.BackEnd.SchedulableRequest,System.Int32)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.DumpRequestSpec(System.IO.StreamWriter,Microsoft.Build.BackEnd.SchedulableRequest,System.Int32,System.String)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.DumpRequestState(System.IO.StreamWriter,Microsoft.Build.BackEnd.SchedulableRequest,System.Int32)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.GetConfigurationIdFromPlan(System.String)">
    <parameter name="configPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.GetNodeAffinityForRequest(Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.GetResponseForResult(System.Int32,Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.Execution.BuildResult)">
    <parameter name="requestWhichGeneratedResult">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.HandleRequestBlockedByNewRequests(Microsoft.Build.BackEnd.SchedulableRequest,Microsoft.Build.BackEnd.BuildRequestBlocker,System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse})">
    <parameter name="blocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.HandleRequestBlockedOnInProgressTarget(Microsoft.Build.BackEnd.SchedulableRequest,Microsoft.Build.BackEnd.BuildRequestBlocker)">
    <parameter name="blockedRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.HandleYieldAction(Microsoft.Build.BackEnd.SchedulableRequest,Microsoft.Build.BackEnd.BuildRequestBlocker)">
    <parameter name="parentRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.IsTraversalRequest(Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.LogRequestHandledFromCache(Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.Execution.BuildResult)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.MarkRequestAborted(Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ReportNodesCreated(System.Collections.Generic.IEnumerable{Microsoft.Build.BackEnd.NodeInfo})">
    <parameter name="nodeInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ReportRequestBlocked(System.Int32,Microsoft.Build.BackEnd.BuildRequestBlocker)">
    <parameter name="blocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ReportResult(System.Int32,Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ResolveRequestFromCacheAndResumeIfPossible(Microsoft.Build.BackEnd.SchedulableRequest,System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse})">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ResolveUnscheduledRequest(System.Int32,Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ResumeReadyRequestIfAny(System.Int32,System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse})">
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ResumeRequiredWork(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse})">
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.ScheduleUnassignedRequests(System.Collections.Generic.List{Microsoft.Build.BackEnd.ScheduleResponse})">
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.TraceScheduler(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stuff">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.TrySatisfyRequestFromCache(System.Int32,Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.WriteNodeUtilizationGraph(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,System.Boolean)">
    <parameter name="loggingService">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.WriteNodeUtilizationGraphLine(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,System.Int32[],System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Double@)">
    <parameter name="loggingService">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentWork">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="previousWork">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.Scheduler.WriteRecursiveSummary(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,System.Int32,Microsoft.Build.BackEnd.SchedulableRequest,System.Int32,System.Boolean,System.Boolean)">
    <parameter name="loggingService">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ScheduleResponse.#ctor(System.Int32,Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="parentRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ScheduleResponse.#ctor(System.Int32,Microsoft.Build.BackEnd.BuildRequestUnblocker)">
    <parameter name="unblocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ScheduleResponse.CreateCircularDependencyResponse(System.Int32,Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.BackEnd.BuildRequest)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentRequest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ScheduleResponse.CreateNewNodeResponse(Microsoft.Build.Execution.NodeAffinity,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ScheduleResponse.CreateReportResultResponse(System.Int32,Microsoft.Build.Execution.BuildResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resultToReport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.ScheduleResponse.CreateResumeExecutionResponse(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ScheduleResponse.CreateScheduleResponse(System.Int32,Microsoft.Build.BackEnd.BuildRequest,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.ScheduleResponse.CreateSubmissionCompleteResponse(Microsoft.Build.Execution.BuildResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.BackEnd.SchedulingData.BlockedRequests">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingData.CanScheduleRequestToNode(Microsoft.Build.BackEnd.SchedulableRequest,System.Int32)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.SchedulingData.Configurations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingData.CreateRequest(Microsoft.Build.BackEnd.BuildRequest,Microsoft.Build.BackEnd.SchedulableRequest)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.BackEnd.SchedulingData.ExecutingRequests">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingData.GetScheduledRequest(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingData.IsRequestScheduled(Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingData.MustSendConfigurationWithRequest(Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.SchedulingData.ReadyRequests">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingData.UpdateFromState(Microsoft.Build.BackEnd.SchedulableRequest,Microsoft.Build.BackEnd.SchedulableRequestState)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.SchedulingData.YieldingRequests">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.CompleteConfig(System.String)">
    <parameter name="configName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.GetConfigIdForPath(System.String)">
    <parameter name="configPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.GetConfigWithComparison(System.Collections.Generic.IEnumerable{System.Int32},System.Comparison{Microsoft.Build.BackEnd.SchedulingPlan.PlanConfigData})">
    <parameter name="realConfigsToSchedule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="comparer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.GetConfigWithGreatestNumberOfReferences(System.Collections.Generic.IEnumerable{System.Int32})">
    <parameter name="configsToSchedule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.GetConfigWithGreatestPlanTime(System.Collections.Generic.IEnumerable{System.Int32})">
    <parameter name="realConfigsToSchedule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.GetReferencesCountForConfigByPath(System.String)">
    <parameter name="configFullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.GetRootRequest(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.PlanConfigData.AddReference(Microsoft.Build.BackEnd.SchedulingPlan.PlanConfigData)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.ReadHierarchy(System.IO.StreamReader)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.ReadPlan(System.Int32,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="loggingService">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.ReadTimes(System.IO.StreamReader)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.RecursiveAccumulateConfigurationTimes(Microsoft.Build.BackEnd.SchedulableRequest,System.Collections.Generic.Dictionary{System.Int32,System.Double})">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="accumulatedTimeByConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.RecursiveVisitNodes(Microsoft.Build.BackEnd.SchedulingPlan.PlanConfigData,System.Collections.Generic.Stack{Microsoft.Build.BackEnd.SchedulingPlan.PlanConfigData})">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.RecursiveWriteDependencies(System.IO.StreamWriter,Microsoft.Build.BackEnd.SchedulableRequest)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.VisitConfig(System.String)">
    <parameter name="configName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.SchedulingPlan.WritePlan(System.Int32,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="loggingService">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetBuilder.BuildTargets(Microsoft.Build.BackEnd.Logging.ProjectLoggingContext,Microsoft.Build.BackEnd.BuildRequestEntry,Microsoft.Build.BackEnd.IRequestBuilderCallback,System.String[],Microsoft.Build.BackEnd.Lookup)">
    <parameter name="baseLookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetBuilder.CheckSkipTarget(System.Boolean@,Microsoft.Build.BackEnd.TargetEntry)">
    <parameter name="currentTargetEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetBuilder.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetBuilder.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetBuilder.Microsoft#Build#BackEnd#IRequestBuilderCallback#BuildProjects(System.String[],Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance}[],System.String[],System.String[],System.Boolean)">
    <parameter name="toolsVersions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetBuilder.Microsoft#Build#BackEnd#ITargetBuilderCallback#LegacyCallTarget(System.String[],System.Boolean,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="targets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetBuilder.ProcessTargetStack(Microsoft.Build.BackEnd.ITaskBuilder)">
    <parameter name="taskBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetBuilder.PushTargets(System.Collections.Generic.IList{Microsoft.Build.BackEnd.TargetSpecification},Microsoft.Build.BackEnd.TargetEntry,Microsoft.Build.BackEnd.Lookup,System.Boolean,System.Boolean,Microsoft.Build.BackEnd.TargetBuilder.TargetPushType)">
    <parameter name="targets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseLookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetEntry.#ctor(Microsoft.Build.BackEnd.BuildRequestEntry,Microsoft.Build.BackEnd.ITargetBuilderCallback,Microsoft.Build.BackEnd.TargetSpecification,Microsoft.Build.BackEnd.Lookup,Microsoft.Build.BackEnd.TargetEntry,Microsoft.Build.BackEnd.IBuildComponentHost,System.Boolean)">
    <parameter name="baseLookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetEntry.EnterLegacyCallTargetScope(Microsoft.Build.BackEnd.Lookup)">
    <parameter name="lookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetEntry.Equals(Microsoft.Build.BackEnd.TargetEntry)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetEntry.ExecuteTarget(Microsoft.Build.BackEnd.ITaskBuilder,Microsoft.Build.BackEnd.BuildRequestEntry,Microsoft.Build.BackEnd.Logging.ProjectLoggingContext)">
    <parameter name="taskBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requestEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetEntry.GetBatchableParametersForTarget">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetEntry.GetDependencies(Microsoft.Build.BackEnd.Logging.ProjectLoggingContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetEntry.GetErrorTargets(Microsoft.Build.BackEnd.Logging.ProjectLoggingContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetEntry.ProcessBucket(Microsoft.Build.BackEnd.ITaskBuilder,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.BackEnd.TaskExecutionMode,Microsoft.Build.BackEnd.Lookup,Microsoft.Build.BackEnd.Lookup)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="taskBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lookupForExecution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetSpecification.#ctor(System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.DiffHashtables``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.List{``0}@,System.Collections.Generic.List{``0}@,System.Collections.Generic.List{``0}@)">
    <parameter name="h1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="h2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.GetFullBuildReason(Microsoft.Build.BackEnd.DependencyAnalysisLogDetail)">
    <parameter name="logDetail">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.GetIncrementalBuildReason(Microsoft.Build.BackEnd.DependencyAnalysisLogDetail)">
    <parameter name="logDetail">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.GetItemSpecsFromItemVectors(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemVectors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.GetItemSpecsFromItemVectors(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemVectors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.IsAnyOutOfDate``1(Microsoft.Build.BackEnd.DependencyAnalysisLogDetail@,System.String,System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.ParseTargetInputOutputSpecifications(Microsoft.Build.BackEnd.ItemBucket,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}}@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}}@,System.Collections.Generic.Dictionary{System.String,System.String}@,System.Collections.Generic.List{System.String}@)">
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.PerformDependencyAnalysis(Microsoft.Build.BackEnd.ItemBucket,Microsoft.Build.Collections.ItemDictionary{Microsoft.Build.Execution.ProjectItemInstance}@,Microsoft.Build.Collections.ItemDictionary{Microsoft.Build.Execution.ProjectItemInstance}@)">
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.PerformDependencyAnalysisIfCorrelatedInputsOutputs(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}},System.Collections.Generic.List{System.String},Microsoft.Build.Collections.ItemDictionary{Microsoft.Build.Execution.ProjectItemInstance}@,Microsoft.Build.Collections.ItemDictionary{Microsoft.Build.Execution.ProjectItemInstance}@)">
    <parameter name="itemVectorsInTargetInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemVectorsInTargetOutputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemVectorsReferencedInBothTargetInputsAndOutputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.PerformDependencyAnalysisIfDiscreteInputs(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
    <parameter name="itemVectorsInTargetInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemVectorTransformsInTargetInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="discreteItemsInTargetInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemVectorsReferencedOnlyInTargetInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetOutputItemSpecs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.PerformDependencyAnalysisIfDiscreteOutputs(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}},System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{System.String})">
    <parameter name="itemVectorsInTargetInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemVectorTransformsInTargetInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="discreteItemsInTargetInputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetOutputItemSpecs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.RecordUniqueInputsAndOutputs``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TargetUpToDateChecker.SeparateItemVectorsFromDiscreteItems(System.Collections.Generic.IList{System.String},Microsoft.Build.BackEnd.ItemBucket,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}}@,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance}}},System.Collections.Generic.Dictionary{System.String,System.String}@,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.BackEnd.TargetUpToDateChecker.TargetInputSpecification">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.BackEnd.TargetUpToDateChecker.TargetOutputSpecification">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.CreateComponent(Microsoft.Build.BackEnd.BuildComponentType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.CreateListOfParameterValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.ExecuteBucket(Microsoft.Build.BackEnd.TaskHost,Microsoft.Build.BackEnd.ItemBucket,Microsoft.Build.BackEnd.TaskExecutionMode,System.Collections.Generic.Dictionary{System.String,System.String})">
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.ExecuteInstantiatedTask(Microsoft.Build.BackEnd.ITaskExecutionHost,Microsoft.Build.BackEnd.Logging.TaskLoggingContext,Microsoft.Build.BackEnd.TaskHost,Microsoft.Build.BackEnd.ItemBucket,Microsoft.Build.BackEnd.TaskExecutionMode,System.Boolean@)">
    <parameter name="taskExecutionHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.ExecuteIntrinsicTask(Microsoft.Build.BackEnd.ItemBucket)">
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.ExecuteTask(Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.BackEnd.BuildRequestEntry,Microsoft.Build.BackEnd.ITargetBuilderCallback,Microsoft.Build.Execution.ProjectTargetInstanceChild,Microsoft.Build.BackEnd.TaskExecutionMode,Microsoft.Build.BackEnd.Lookup,Microsoft.Build.BackEnd.Lookup)">
    <parameter name="requestEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.ExecuteTaskInSTAThread(Microsoft.Build.BackEnd.ItemBucket,Microsoft.Build.BackEnd.Logging.TaskLoggingContext,Microsoft.Build.BackEnd.TaskHost,Microsoft.Build.BackEnd.TaskExecutionMode,System.Boolean@)">
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.GatherTaskOutputs(Microsoft.Build.BackEnd.ITaskExecutionHost,Microsoft.Build.BackEnd.TaskExecutionMode,Microsoft.Build.BackEnd.ItemBucket)">
    <parameter name="taskExecutionHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.InferTaskOutputs(Microsoft.Build.BackEnd.Lookup,Microsoft.Build.Execution.ProjectTaskInstanceChild,System.String,System.String,System.String,Microsoft.Build.BackEnd.ItemBucket)">
    <parameter name="lookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskOutputSpecification">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskParameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.InitializeAndExecuteTask(Microsoft.Build.BackEnd.Logging.TaskLoggingContext,Microsoft.Build.BackEnd.ItemBucket,Microsoft.Build.BackEnd.TaskHost,Microsoft.Build.BackEnd.TaskExecutionMode,System.Boolean@)">
    <parameter name="taskHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.LogSkippedTask(Microsoft.Build.BackEnd.ItemBucket,Microsoft.Build.BackEnd.TaskExecutionMode)">
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskBuilder.UpdateContinueOnError(Microsoft.Build.BackEnd.ItemBucket,Microsoft.Build.BackEnd.TaskHost)">
    <parameter name="bucket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.FindTaskInRegistry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.GatherArrayStringAndValueOutputs(System.Boolean,System.String,Microsoft.Build.Framework.TaskPropertyInfo,System.String[],Microsoft.Build.Shared.IElementLocation)">
    <parameter name="outputTargetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.GatherTaskItemOutputs(System.Boolean,System.String,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Shared.IElementLocation)">
    <parameter name="outputTargetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.GetItemOutputs(Microsoft.Build.Framework.TaskPropertyInfo,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.GetValueOutputs(Microsoft.Build.Framework.TaskPropertyInfo,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.InitializeTaskScalarParameter(Microsoft.Build.Framework.TaskPropertyInfo,System.Type,System.String,Microsoft.Build.Shared.IElementLocation,System.Boolean@)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.InitializeTaskVectorParameter(Microsoft.Build.Framework.TaskPropertyInfo,System.Type,System.String,Microsoft.Build.Shared.IElementLocation,System.Boolean,System.Boolean@)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.InternalSetTaskParameter(Microsoft.Build.Framework.TaskPropertyInfo,System.Object)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft#Build#BackEnd#ITaskExecutionHost#GatherTaskOutputs(System.String,Microsoft.Build.Shared.IElementLocation,System.Boolean,System.String)">
    <parameter name="outputTargetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft#Build#BackEnd#ITaskExecutionHost#SetTaskParameters(System.Collections.Generic.IDictionary{System.String,System.Tuple{System.String,Microsoft.Build.Shared.IElementLocation}})">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.SetParameterArray(Microsoft.Build.Framework.TaskPropertyInfo,System.Type,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectItemInstance.TaskItem},Microsoft.Build.Shared.IElementLocation)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.SetTaskItemParameter(Microsoft.Build.Framework.TaskPropertyInfo,Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.SetTaskParameter(System.String,System.String,Microsoft.Build.Shared.IElementLocation,System.Boolean,System.Boolean@)">
    <parameter name="parameterLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskExecutionHost.SetValueParameter(Microsoft.Build.Framework.TaskPropertyInfo,System.Type,System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskFactoryLoggingHost.InitializeLifetimeService">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskFactoryLoggingHost.IsEventSerializable(Microsoft.Build.Framework.BuildEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskFactoryLoggingHost.LogCustomEvent(Microsoft.Build.Framework.CustomBuildEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskFactoryLoggingHost.LogErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskFactoryLoggingHost.LogMessageEvent(Microsoft.Build.Framework.BuildMessageEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskFactoryLoggingHost.LogWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.BuildProjectFile(System.String,System.String[],System.Collections.IDictionary,System.Collections.IDictionary,System.String)">
    <parameter name="targetNames">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.Generic.IList{System.String}[],System.String[],System.Boolean)">
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.BuildProjectFilesInParallel(System.String[],System.String[],System.Collections.IDictionary[],System.Collections.IDictionary[],System.String[],System.Boolean,System.Boolean)">
    <parameter name="targetOutputsPerProject">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetNames">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFileNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.InitializeLifetimeService">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.IsEventSerializable(Microsoft.Build.Framework.BuildEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.LogCustomEvent(Microsoft.Build.Framework.CustomBuildEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.LogErrorEvent(Microsoft.Build.Framework.BuildErrorEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.LogMessageEvent(Microsoft.Build.Framework.BuildMessageEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskHost.LogWarningEvent(Microsoft.Build.Framework.BuildWarningEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskParameterTypeVerifier.IsValidInputParameter(System.Type)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskParameterTypeVerifier.IsValidOutputParameter(System.Type)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskParameterTypeVerifier.IsValidScalarInputParameter(System.Type)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskParameterTypeVerifier.IsValidVectorInputParameter(System.Type)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.BackEnd.TaskParameterTypeVerifier.IsValueTypeOutputParameter(System.Type)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.CharArrayInternTarget.ExpensiveConvertToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.CharArrayInternTarget.IsOrdinalEqualToStringOfSameLength(System.String)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CollectionHelpers.RemoveNulls``1(System.Collections.Generic.List{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ConcurrentQueueExtensions.Dequeue``1(System.Collections.Concurrent.ConcurrentQueue{``0})">
    <parameter name="stack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ConcurrentStackExtensions.Peek``1(System.Collections.Concurrent.ConcurrentStack{``0})">
    <parameter name="stack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ConcurrentStackExtensions.Pop``1(System.Collections.Concurrent.ConcurrentStack{``0})">
    <parameter name="stack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ConvertingEnumerable`2.ConvertingEnumerator`2.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.ConvertingEnumerable`2.ConvertingEnumerator`2.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ConvertingEnumerable`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ConvertingEnumerable`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnReadEnumerable`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnReadEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.#ctor(Microsoft.Build.Collections.CopyOnWriteDictionary{`0,`1})">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.CopyOnWriteBackingDictionary`2.#ctor(Microsoft.Build.Collections.CopyOnWriteDictionary{`0,`1}.CopyOnWriteBackingDictionary{`0,`1})">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.CopyOnWriteBackingDictionary`2.CloneForWriteIfNecessary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.HasSameBacking(Microsoft.Build.Collections.CopyOnWriteDictionary{`0,`1})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.WriteOperation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.#ctor(Microsoft.Build.Collections.CopyOnWritePropertyDictionary{`0})">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.Contains(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.Equals(Microsoft.Build.Collections.CopyOnWritePropertyDictionary{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.GetCopyOnReadEnumerable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.ImportProperties(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.Microsoft#Build#Evaluation#IPropertyProvider{T}#GetProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.Microsoft#Build#Evaluation#IPropertyProvider{T}#GetProperty(System.String,System.Int32,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.RemoveProperties(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.Set(`0)">
    <parameter name="projectProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@T}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Add(System.String,`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#ContainsKey(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Remove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#TryGetValue(System.String,`0@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@T}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWritePropertyDictionary`1.ToDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.DualQueue`1.EnqueueArray(`0[])">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.EmptyEnumerable`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.EmptyEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.FilteringEnumerable`2.FilteringEnumerator`2.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.FilteringEnumerable`2.FilteringEnumerator`2.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.FilteringEnumerable`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.FilteringEnumerable`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.#ctor(Microsoft.Build.Collections.HybridDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.DictionaryEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.DictionaryEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.DictionaryEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.EmptyEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.FindEntryInList(`0)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.SingleEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.TryRemoveFromList(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.Add(`0)">
    <parameter name="projectItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.AddEmptyMarker(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.Contains(`0)">
    <parameter name="projectItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.Enumerator.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.ICollection{`0}})">
    <parameter name="listEnumerable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ItemDictionary`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.Enumerator.GetNextItemEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.ItemDictionary`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.GetCopyOnReadEnumerable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.GetItems(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.HasEmptyMarker(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.ImportItems(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.ImportItemsOfType(System.String,System.Collections.Generic.IEnumerable{`0})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ItemDictionary`1.Item(System.String)">
    <parameter name="itemtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.Remove(`0)">
    <parameter name="projectItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.RemoveItems(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.Replace(`0,`0)">
    <parameter name="existingItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ItemDictionary`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.MSBuildNameIgnoreCaseComparer.Equals(System.String,System.String)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.MSBuildNameIgnoreCaseComparer.GetHashCode(System.String)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.MSBuildNameIgnoreCaseComparer.GetValueWithConstraints``1(System.Collections.Generic.IDictionary{System.String,``0},System.String,System.Int32,System.Int32)">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.MultiDictionary`2.Add(`0,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.MultiDictionary`2.Remove(`0,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.MultiDictionary`2.SmallList`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.MultiDictionary`2.SmallList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.#ctor(System.Int32,System.Collections.Generic.IEnumerable{`0})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.Contains(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.Equals(Microsoft.Build.Collections.PropertyDictionary{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.GetCopyOnReadEnumerable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.GetProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.GetProperty(System.String,System.Int32,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.ImportProperties(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.PropertyDictionary`1.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.Remove(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.RemoveProperties(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.Set(`0)">
    <parameter name="projectProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@T}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,`0}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Add(System.String,`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#ContainsKey(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Remove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#TryGetValue(System.String,`0@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#IDictionary{System#String@T}#Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@T}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.PropertyDictionary`1.ToDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyCollection`1.BackingCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingCollection`2.Add(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingCollection`2.Contains(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingCollection`2.CopyTo(`1[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingCollection`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingCollection`2.Remove(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingCollection`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.Add(`0,`2)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.CopyTo(System.Collections.Generic.KeyValuePair{`0,`2}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.TryGetValue(`0,`2@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyConvertingDictionary`3.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyList`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.WeakDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.WeakDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.WeakDictionary`2.WeakReferenceEqualityComparer`1.Equals(Microsoft.Build.Collections.WeakReference{`0},Microsoft.Build.Collections.WeakReference{`0})">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.WeakDictionary`2.WeakReferenceEqualityComparer`1.GetHashCode(Microsoft.Build.Collections.WeakReference{`0})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.WeakReference`1.#ctor(`0)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.WeakValueDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.WeakValueDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ElementLocation.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ElementLocation.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ElementLocation.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ElementLocation.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectChooseElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectChooseElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectChooseElement.CreateDisconnected(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectChooseElement.OtherwiseElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectChooseElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectChooseElement.WhenElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectElement.ConditionLocation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElement.ReplaceElement(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="newElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="proposedParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.AddInitialChild(Microsoft.Build.Construction.ProjectElement)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.AppendParentedChildNoChecks(Microsoft.Build.Construction.ProjectElement)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectElementContainer.Children">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.ProjectElementSiblingEnumerable.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectElementContainer.ProjectElementSiblingEnumerable.ProjectElementSiblingEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectElementContainer.ProjectElementSiblingEnumerable.ProjectElementSiblingEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.ProjectElementSiblingEnumerable.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectElementContainer.VerifyForInsertBeforeAfterFirst(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectExtensionsElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectExtensionsElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectExtensionsElement.CreateDisconnected(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectExtensionsElement.CreateParented(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectExtensionsElement.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectExtensionsElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportGroupElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportGroupElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportGroupElement.AddImport(System.String)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportGroupElement.CreateDisconnected(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectImportGroupElement.Imports">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectImportGroupElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectInSolution.CleanseProjectName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectInSolution.Extension">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectInSolution.GetUniqueProjectName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectInSolution.UpdateUniqueProjectName(System.String)">
    <parameter name="newUniqueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectItemDefinitionGroupElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionElement.AddMetadata(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectItemDefinitionElement.Metadata">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.AddItemDefinition(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.CreateDisconnected(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.ItemDefinitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemDefinitionGroupElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectItemGroupElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemElement.AddMetadata(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemElement.ChangeItemType(System.String)">
    <parameter name="newItemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectItemElement.Metadata">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectItemElement.NextItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="include">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <parameter name="include">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.CreateDisconnected(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectItemGroupElement.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectItemGroupElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectMetadataElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectMetadataElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectMetadataElement.ChangeName(System.String)">
    <parameter name="newName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectMetadataElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectMetadataElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOnErrorElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOnErrorElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectTargetElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOnErrorElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOnErrorElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOtherwiseElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOtherwiseElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.ChooseElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOtherwiseElement.CreateDisconnected(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.ItemGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectOtherwiseElement.PropertyGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOtherwiseElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOutputElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOutputElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectTaskElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOutputElement.CreateDisconnected(System.String,System.String,System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectOutputElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectChooseElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectElement(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectExtensionsElement(Microsoft.Build.Construction.XmlElementWithLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectImportElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectImportGroupElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectItemDefinitionGroupElement(Microsoft.Build.Construction.XmlElementWithLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectItemDefinitionXml(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectItemDefinitionGroupElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectItemElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectItemGroupElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectItemGroupElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectMetadataElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectOnErrorElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectTargetElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectOtherwiseElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectChooseElement,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectOutputElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectTaskElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectPropertyElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectPropertyGroupElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectPropertyGroupElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectRootElementChildren(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectTargetElement(Microsoft.Build.Construction.XmlElementWithLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectTaskElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectTargetElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectUsingTaskElement(Microsoft.Build.Construction.XmlElementWithLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseProjectWhenElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectChooseElement,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseUsingTaskBodyElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectUsingTaskElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseUsingTaskParameterElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.UsingTaskParameterGroupElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseUsingTaskParameterGroupElement(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectParser.ParseWhenOtherwiseChildren(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,System.Int32)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectPropertyGroupElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyElement.ChangeName(System.String)">
    <parameter name="newName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.AddProperty(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.CreateDisconnected(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectPropertyGroupElement.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectPropertyGroupElement.PropertiesReversed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.SetProperty(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectPropertyGroupElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.#ctor(System.String,Microsoft.Build.Evaluation.ProjectRootElementCache,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.#ctor(System.Xml.XmlReader,Microsoft.Build.Evaluation.ProjectRootElementCache)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddImport(System.String)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddImportGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItem(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="include">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="include">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemDefinition(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemDefinitionGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddItemGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddProperty(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddPropertyGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddTarget(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.AddUsingTask(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ChooseElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(Microsoft.Build.Evaluation.ProjectRootElementCache)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Create(System.Xml.XmlReader,Microsoft.Build.Evaluation.ProjectCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateChooseElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateImportElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateImportGroupElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemDefinitionGroupElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemElement(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateItemGroupElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateMetadataElement(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOnErrorElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOtherwiseElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateOutputElement(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateProjectExtensionsElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateProjectFromPath(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Evaluation.ProjectRootElementCache,Microsoft.Build.Framework.BuildEventContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreatePropertyElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreatePropertyGroupElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateTargetElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateTaskElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskBodyElement(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskElement(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterElement(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateUsingTaskParameterGroupElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.CreateWhenElement(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ImportGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ImportGroupsReversed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.Imports">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitionGroupsReversed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemDefinitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ItemGroupsReversed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.LastDirtyReason">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.LoadDocument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.LoadDocument(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Open(Microsoft.Build.Construction.XmlDocumentWithLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Open(System.String,Microsoft.Build.Evaluation.ProjectRootElementCache)">
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.OpenProjectOrSolution(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Evaluation.ProjectRootElementCache,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.ProjectExtensions">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.PropertyGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.PropertyGroupsReversed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.RawXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.Save(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.Targets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.TryOpen(System.String,Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectRootElement.UsingTasks">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectRootElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTargetElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTargetElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddItemGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddPropertyGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTargetElement.AddTask(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTargetElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectTargetElement.ItemGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectTargetElement.OnErrors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectTargetElement.PropertyGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectTargetElement.Tasks">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTargetElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectTargetElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="taskParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputItem(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.AddOutputProperty(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.GetParameter(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.GetParameterLocation(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectTaskElement.Outputs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectTaskElement.ParametersCache">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectTaskElement.ParametersForEvaluation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.SetParameter(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectTaskElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectUsingTaskElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.CreateDisconnected(System.String,System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskBodyElement.VerifyCorrectParent(Microsoft.Build.Construction.ProjectElementContainer)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.AddParameterGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.AddUsingTaskBody(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.CreateDisconnected(System.String,System.String,System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.ParameterGroup">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectUsingTaskElement.TaskBody">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.UsingTaskParameterGroupElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.CreateDisconnected(System.String,System.String,System.String,System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectUsingTaskParameterElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectWhenElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectChooseElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectWhenElement.#ctor(System.Xml.XmlElement,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectWhenElement.ChooseElements">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectWhenElement.CreateDisconnected(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectWhenElement.ItemGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Construction.ProjectWhenElement.PropertyGroups">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.ProjectWhenElement.VerifyThrowInvalidOperationAcceptableLocation(Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.RegistryLocation.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.RegistryLocation.#ctor(System.String)">
    <parameter name="registryPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.RegistryLocation.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.RegistryLocation.File">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.RegistryLocation.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.AddProjectToSolution(Microsoft.Build.Construction.ProjectInSolution)">
    <parameter name="proj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.GetProjectRelativePathByGuid(System.String)">
    <parameter name="projectGuid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.GetProjectUniqueNameByGuid(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="projectGuid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.IsEtpProjectFile(System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.ParseAspNetCompilerProperty(Microsoft.Build.Construction.ProjectInSolution,System.String,System.String)">
    <parameter name="proj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.ParseEtpProject(Microsoft.Build.Construction.ProjectInSolution)">
    <parameter name="etpProj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.ParseFirstProjectLine(System.String,Microsoft.Build.Construction.ProjectInSolution)">
    <parameter name="proj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="firstLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.ParseProject(System.String)">
    <parameter name="firstLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.ParseProjectConfigurations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.ProcessProjectConfigurationSection(System.Collections.Hashtable)">
    <parameter name="rawProjectConfigurationsEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.ReadLine">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.TrimQuotes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionParser.ValidateProjectRelativePath(Microsoft.Build.Construction.ProjectInSolution)">
    <parameter name="proj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddConfigurationPlatformDefaults(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddDependencyByGuid(Microsoft.Build.Construction.ProjectInSolution,System.String)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddErrorWarningMessageElement(Microsoft.Build.Construction.ProjectTargetElement,System.String,System.Boolean,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textResourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddErrorWarningMessageInstance(Microsoft.Build.Execution.ProjectTargetInstance,System.String,System.String,System.Boolean,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="textResourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddGlobalProperties(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddInitialTargets(Microsoft.Build.Execution.ProjectInstance,System.Collections.Generic.List{Microsoft.Build.Construction.ProjectInSolution})">
    <parameter name="projects">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddMetaprojectBuildTask(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Execution.ProjectTargetInstance,System.String,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddMetaprojectReferenceItems(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metaprojectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddMetaprojectTargetForManagedProject(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Construction.ProjectConfigurationInSolution,System.String,System.String)">
    <parameter name="metaprojectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddMetaprojectTargetForUnknownProjectType(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,System.String,System.String)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metaprojectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddMetaprojectTargetForWebProject(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,System.String)">
    <parameter name="metaprojectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddMSBuildTaskElement(Microsoft.Build.Construction.ProjectTargetElement,System.String,System.String,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="platformName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="configurationName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddMSBuildTaskInstance(Microsoft.Build.Execution.ProjectTargetInstance,System.String,System.String,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="configurationName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="platformName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddProjectBuildTask(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Construction.ProjectConfigurationInSolution,Microsoft.Build.Execution.ProjectTargetInstance,System.String,System.String,System.String,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddProjectReference(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Construction.ProjectConfigurationInSolution,System.Boolean)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddPropertyGroupForAspNetConfiguration(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,System.String,Microsoft.Build.Construction.AspNetCompilerParameters,System.String)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metaprojectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="configurationName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddPropertyGroupForSolutionConfiguration(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.ConfigurationInSolution)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="solutionConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddPropertyGroupForSolutionConfiguration(Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Construction.SolutionParser,Microsoft.Build.Construction.ConfigurationInSolution)">
    <parameter name="msbuildProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="solutionParser">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="solutionConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddReferencesBuildTask(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Execution.ProjectTargetInstance,System.String,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddResolveProjectReferenceTasks(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Execution.ProjectTargetInstance,Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Construction.ConfigurationInSolution,System.String,System.String,System.String@)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="solutionConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputReferenceItemName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddStandardTraversalTargets(Microsoft.Build.Execution.ProjectInstance,System.Collections.Generic.List{Microsoft.Build.Construction.ProjectInSolution})">
    <parameter name="projectsInOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="traversalInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddTargetForGetFrameworkPathAndRedistList(Microsoft.Build.Execution.ProjectInstance)">
    <parameter name="metaprojectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddTaskForAspNetCompiler(Microsoft.Build.Execution.ProjectTargetInstance,Microsoft.Build.Construction.ProjectInSolution,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddTasksToCopyAllDependenciesIntoBinDir(Microsoft.Build.Execution.ProjectTargetInstance,Microsoft.Build.Construction.ProjectInSolution,System.String,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddTasksToResolveAutoRefreshFileReferences(Microsoft.Build.Execution.ProjectTargetInstance,Microsoft.Build.Construction.ProjectInSolution,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referenceItemName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddTraversalReferencesTarget(Microsoft.Build.Execution.ProjectInstance,System.String,System.String)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddTraversalTargetForProject(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Construction.ProjectConfigurationInSolution,System.String,System.String,System.Boolean)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddValidateProjectsTarget(Microsoft.Build.Execution.ProjectInstance,System.Collections.Generic.List{Microsoft.Build.Construction.ProjectInSolution})">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projects">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddValidateSolutionConfigurationTarget(Microsoft.Build.Execution.ProjectInstance)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddValidateToolsVersionsTarget(Microsoft.Build.Execution.ProjectInstance)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.AddVenusConfigurationDefaults(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.CanBuildDirectly(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Construction.ProjectConfigurationInSolution)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.ComputeTargetConditionForWebProject(Microsoft.Build.Construction.ProjectInSolution)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.CreateMetaproject(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Construction.ProjectConfigurationInSolution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.CreateSolutionProject(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.CreateTraversalInstance(System.String,System.Boolean,System.Collections.Generic.List{Microsoft.Build.Construction.ProjectInSolution})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectsInOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.DetermineLikelyActiveSolutionConfiguration(Microsoft.Build.Construction.SolutionParser,System.Collections.Generic.IDictionary{System.String,System.String})">
    <parameter name="solutionParser">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.DetermineWrapperProjectToolsVersion(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.EvaluateAndAddProjects(System.Collections.Generic.List{Microsoft.Build.Construction.ProjectInSolution},System.Collections.Generic.List{Microsoft.Build.Execution.ProjectInstance},Microsoft.Build.Execution.ProjectInstance,System.String)">
    <parameter name="projectsInOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectInstances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="traversalInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="selectedSolutionConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.Generate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.Generate(Microsoft.Build.Construction.SolutionParser,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.BackEnd.Logging.ILoggingService)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GenerateSafePropertyName(Microsoft.Build.Construction.ProjectInSolution,System.String)">
    <parameter name="proj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetConditionStringForConfiguration(Microsoft.Build.Construction.ConfigurationInSolution)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetConfigurationAndPlatformPropertiesString(Microsoft.Build.Construction.ProjectConfigurationInSolution)">
    <parameter name="projectConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetMetaprojectGlobalProperties(Microsoft.Build.Execution.ProjectInstance)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetMetaprojectName(Microsoft.Build.Construction.ProjectInSolution)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetMetaprojectName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetProjectDependencies(Microsoft.Build.Construction.SolutionParser,Microsoft.Build.Construction.ProjectInSolution,System.String)">
    <parameter name="parentSolution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetPropertiesAttributeForDirectMSBuildTask(Microsoft.Build.Construction.ProjectConfigurationInSolution)">
    <parameter name="projectConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetPropertiesMetadataForProjectReference(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Construction.ProjectConfigurationInSolution)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetToolsVersionAttributeForDirectMSBuildTask(Microsoft.Build.Execution.ProjectInstance)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.GetToolsVersionMetadataForDirectMSBuildTask(Microsoft.Build.Execution.ProjectInstance)">
    <parameter name="traversalProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.MakeIntoSafeItemName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.PredictActiveSolutionConfigurationName(Microsoft.Build.Construction.SolutionParser,System.Collections.Generic.IDictionary{System.String,System.String})">
    <parameter name="solutionParser">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.SolutionProjectGenerator.WouldProjectBuild(Microsoft.Build.Construction.ProjectInSolution,Microsoft.Build.Construction.ProjectConfigurationInSolution)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectElementContainer,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.#ctor(Microsoft.Build.Construction.XmlElementWithLocation,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.AddParameter(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.CreateDisconnected(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Construction.UsingTaskParameterGroupElement.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Construction.UsingTaskParameterGroupElement.VerifyCorrectParent(Microsoft.Build.Construction.ProjectElementContainer)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.XmlAttributeWithLocation.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)">
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.XmlAttributeWithLocation.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument,System.Int32,System.Int32)">
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.XmlElementWithLocation.#ctor(System.String,System.String,System.String,Microsoft.Build.Construction.XmlDocumentWithLocation)">
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.XmlElementWithLocation.#ctor(System.String,System.String,System.String,Microsoft.Build.Construction.XmlDocumentWithLocation,System.Int32,System.Int32)">
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="localName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Construction.XmlElementWithLocation.GetAttributeWithLocation(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerLocalType.#ctor(System.String,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerManager.CreateIsland(System.Reflection.Emit.TypeBuilder,Microsoft.Build.Debugging.DebuggerManager.DebuggerState)">
    <parameter name="typeBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerManager.DebuggerState.#ctor(Microsoft.Build.Shared.IElementLocation,System.String,System.Collections.Generic.ICollection{Microsoft.Build.Debugging.DebuggerLocalType})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Debugging.DebuggerManager.DebuggerState.Method">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerManager.DebuggerState.RecordMethodInfo(System.Type,System.String)">
    <parameter name="methodNameToRecord">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerManager.DefineState(Microsoft.Build.Shared.IElementLocation,System.String,System.Collections.Generic.ICollection{Microsoft.Build.Debugging.DebuggerLocalType})">
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerManager.EnterState(Microsoft.Build.Shared.IElementLocation,System.Collections.Generic.IDictionary{System.String,System.Object})">
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerManager.InvokeIsland(System.Object,Microsoft.Build.Debugging.DebuggerManager.VirtualStackFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerManager.IslandThread.IslandWorker(Microsoft.Build.Debugging.DebuggerManager.IslandThread)">
    <parameter name="controller">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Debugging.DebuggerManager.PulseState(Microsoft.Build.Shared.IElementLocation,System.Collections.Generic.IDictionary{System.String,System.Object})">
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.BuiltInMetadata.#ctor(Microsoft.Build.Evaluation.BuiltInMetadata)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.BuiltInMetadata.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.BuiltInMetadata.GetMetadataValue(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.BuiltInMetadata.GetRecursiveDirValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ConditionEvaluator.ConditionEvaluationState`2.ExpandIntoString(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ConditionEvaluator.ConditionEvaluationState`2.ExpandIntoStringBreakEarly(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ConditionEvaluator.ConditionEvaluationState`2.ExpandIntoTaskItems(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ConditionEvaluator.EvaluateCondition``2(System.String,Microsoft.Build.Evaluation.ParserOptions,Microsoft.Build.Evaluation.Expander{``0,``1},Microsoft.Build.Evaluation.ExpanderOptions,System.String,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="evaluationDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ConditionEvaluator.EvaluateConditionCollectingConditionedProperties``2(System.String,Microsoft.Build.Evaluation.ParserOptions,Microsoft.Build.Evaluation.Expander{``0,``1},Microsoft.Build.Evaluation.ExpanderOptions,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="evaluationDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ConditionEvaluator.UpdateConditionedPropertiesTable(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.String,System.String)">
    <parameter name="leftValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightValueExpanded">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.#ctor(Microsoft.Build.Evaluation.IEvaluatorData{`0,`1,`2,`3},Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Evaluation.ProjectLoadSettings,System.Int32,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Evaluation.IItemFactory{`1,`1},Microsoft.Build.Evaluation.IToolsetProvider,Microsoft.Build.Evaluation.ProjectRootElementCache,Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.Execution.ProjectInstance)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsetProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.AddBeforeAndAfterTargetMappings(Microsoft.Build.Construction.ProjectTargetElement,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.LinkedListNode{Microsoft.Build.Construction.ProjectTargetElement}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Microsoft.Build.BackEnd.TargetSpecification}},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Microsoft.Build.BackEnd.TargetSpecification}})">
    <parameter name="targetElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activeTargets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetsWhichRunBeforeByTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetsWhichRunAfterByTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.AddBuiltInProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.AddEnvironmentProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.AddToolsetProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.CreateItemsFromInclude(System.String,Microsoft.Build.Construction.ProjectItemElement,Microsoft.Build.Evaluation.IItemFactory{`1,`1},System.String,Microsoft.Build.Evaluation.Expander{`0,`1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expander">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unevaluatedIncludeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.Evaluate(Microsoft.Build.Evaluation.IEvaluatorData{`0,`1,`2,`3},Microsoft.Build.Construction.ProjectRootElement,Microsoft.Build.Evaluation.ProjectLoadSettings,System.Int32,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Evaluation.IItemFactory{`1,`1},Microsoft.Build.Evaluation.IToolsetProvider,Microsoft.Build.Evaluation.ProjectRootElementCache,Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.Execution.ProjectInstance)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsetProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateChooseElement(Microsoft.Build.Construction.ProjectChooseElement)">
    <parameter name="chooseElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateCondition(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Evaluation.ParserOptions)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateConditionCollectingConditionedProperties(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Evaluation.ParserOptions)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportElement(System.String,Microsoft.Build.Construction.ProjectImportElement)">
    <parameter name="importElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateImportGroupElement(System.String,Microsoft.Build.Construction.ProjectImportGroupElement)">
    <parameter name="importGroupElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateItemDefinitionElement(Microsoft.Build.Construction.ProjectItemDefinitionElement)">
    <parameter name="itemDefinitionElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateItemDefinitionGroupElement(Microsoft.Build.Construction.ProjectItemDefinitionGroupElement)">
    <parameter name="itemDefinitionGroupElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateItemElement(System.Boolean,Microsoft.Build.Construction.ProjectItemElement)">
    <parameter name="itemElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateItemGroupElement(Microsoft.Build.Construction.ProjectItemGroupElement)">
    <parameter name="itemGroupElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluatePropertyElement(Microsoft.Build.Construction.ProjectPropertyElement)">
    <parameter name="propertyElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluatePropertyGroupElement(Microsoft.Build.Construction.ProjectPropertyGroupElement)">
    <parameter name="propertyGroupElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateUsingTaskElement(System.String,Microsoft.Build.Construction.ProjectUsingTaskElement)">
    <parameter name="projectUsingTaskElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directoryOfImportingFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.EvaluateWhenOrOtherwiseChildren(System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.ExpandAndLoadImports(System.String,System.String,Microsoft.Build.Construction.ProjectImportElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="importExpressionEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="importElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.PerformDepthFirstPass(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="currentProjectOrImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.ReadItemGroupUnderTargetElement(Microsoft.Build.Construction.ProjectItemGroupElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemGroupElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.ReadNewTargetElement(Microsoft.Build.Construction.ProjectTargetElement,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.ReadOnErrorElement(Microsoft.Build.Construction.ProjectOnErrorElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectOnErrorElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.ReadPropertyGroupUnderTargetElement(Microsoft.Build.Construction.ProjectPropertyGroupElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyGroupElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.ReadTargetElement(Microsoft.Build.Construction.ProjectTargetElement,System.Collections.Generic.LinkedList{Microsoft.Build.Construction.ProjectTargetElement},System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.LinkedListNode{Microsoft.Build.Construction.ProjectTargetElement}})">
    <parameter name="targetElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activeTargetsByEvaluationOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activeTargets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.ReadTaskElement(Microsoft.Build.Construction.ProjectTaskElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="taskElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.SetBuiltInProperty(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Evaluator`4.UpdateDefaultTargets(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="currentProjectOrImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.EvaluatorMetadataTable.EvaluatorMetadata.EvaluatedValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.EvaluatorMetadataTable.GetEscapedValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.EvaluatorMetadataTable.GetEscapedValue(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.EvaluatorMetadataTable.GetEscapedValueIfPresent(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.EvaluatorMetadataTable.SetValue(Microsoft.Build.Construction.ProjectMetadataElement,System.String)">
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.AddArgument(System.Collections.Generic.List{System.String},System.Text.StringBuilder)">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpandIntoItemsLeaveEscaped``1(System.String,Microsoft.Build.Evaluation.IItemFactory{`1,``0},Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpandIntoStringAndUnescape(System.String,Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpandIntoStringLeaveEscaped(System.String,Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpandIntoStringListLeaveEscaped(System.String,Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpandIntoTaskItemsLeaveEscaped(System.String,Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpandPropertiesLeaveTypedAndEscaped(System.String,Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpandSingleItemVectorExpressionIntoItems``1(System.String,Microsoft.Build.Evaluation.IItemFactory{`1,``0},Microsoft.Build.Evaluation.ExpanderOptions,System.Boolean,System.Boolean@,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpressionContainsItemVector(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExpressionMayContainExpandableExpressions(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ExtractFunctionArguments(Microsoft.Build.Shared.IElementLocation,System.String,System.String)">
    <parameter name="argumentsString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.CoerceArguments(System.Object[],System.Reflection.ParameterInfo[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.ConstructFunction(Microsoft.Build.Shared.IElementLocation,System.String,System.String,System.Type,System.Int32,System.Int32,Microsoft.Build.Evaluation.UsedUninitializedProperties)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expressionFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.ConstructIndexerFunction(System.String,Microsoft.Build.Shared.IElementLocation,System.Object,System.String,System.Type,System.Int32,System.String,Microsoft.Build.Evaluation.UsedUninitializedProperties)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expressionFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.Execute(System.Object,Microsoft.Build.Evaluation.IPropertyProvider{`0},Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.ExtractPropertyFunction(System.String,Microsoft.Build.Shared.IElementLocation,System.Object,Microsoft.Build.Evaluation.UsedUninitializedProperties)">
    <parameter name="expressionFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.GetTypeFromAssembly(System.String,System.String)">
    <parameter name="candidateAssemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.GetTypeFromAssemblyUsingNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.IsStaticMethodAvailable(System.Type,System.String)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.Function`1.LateBindExecute(System.Exception,System.Reflection.BindingFlags,System.Object,System.Object[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.IsValidPropertyName(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ItemExpander.ExpandItemVectorMatchIntoStringBuilder``1(Microsoft.Build.Evaluation.Expander{`0,`1},Microsoft.Build.Evaluation.ExpressionShredder.ItemExpressionCapture,Microsoft.Build.Evaluation.IItemProvider{``0},Microsoft.Build.Shared.IElementLocation,System.Text.StringBuilder,Microsoft.Build.Evaluation.ExpanderOptions)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ItemExpander.ExpandItemVectorsIntoString``1(Microsoft.Build.Evaluation.Expander{`0,`1},System.String,Microsoft.Build.Evaluation.IItemProvider{``0},Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ItemExpander.ExpandSingleItemVectorExpressionIntoItems``2(Microsoft.Build.Evaluation.Expander{`0,`1},System.String,Microsoft.Build.Evaluation.IItemProvider{``0},Microsoft.Build.Evaluation.IItemFactory{``0,``1},Microsoft.Build.Evaluation.ExpanderOptions,System.Boolean,System.Boolean@,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ItemExpander.IntrinsicItemFunctions`1.GetItemTransformFunction(Microsoft.Build.Shared.IElementLocation,System.String,System.Type)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ItemExpander.MetadataMatchEvaluator.GetMetadataValueFromMatch(System.Text.RegularExpressions.Match)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ItemExpander.PrepareTransformStackFromMatch``1(Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Evaluation.ExpressionShredder.ItemExpressionCapture)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.MetadataExpander.ExpandMetadataLeaveEscaped(System.String,Microsoft.Build.Evaluation.IMetadataTable,Microsoft.Build.Evaluation.ExpanderOptions)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.MetadataExpander.MetadataMatchEvaluator.ExpandSingleMetadata(System.Text.RegularExpressions.Match)">
    <parameter name="itemMetadataMatch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandMSBuildThisFileProperty(System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertiesLeaveEscaped(System.String,Microsoft.Build.Evaluation.IPropertyProvider{`0},Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Evaluation.UsedUninitializedProperties)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="usedUninitializedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertiesLeaveTypedAndEscaped(System.String,Microsoft.Build.Evaluation.IPropertyProvider{`0},Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Evaluation.UsedUninitializedProperties)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="usedUninitializedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandPropertyBody(System.String,System.Object,Microsoft.Build.Evaluation.IPropertyProvider{`0},Microsoft.Build.Evaluation.ExpanderOptions,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Evaluation.UsedUninitializedProperties)">
    <parameter name="propertyBody">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="usedUninitializedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.ExpandRegistryValue(System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="registryExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.LookupProperty(Microsoft.Build.Evaluation.IPropertyProvider{`0},System.String,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Evaluation.UsedUninitializedProperties)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="usedUninitializedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.PropertyExpander`1.LookupProperty(Microsoft.Build.Evaluation.IPropertyProvider{`0},System.String,System.Int32,System.Int32,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Evaluation.UsedUninitializedProperties)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="usedUninitializedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ScanForClosingParenthesis(System.String,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ScanForClosingParenthesis(System.String,System.Int32,System.Boolean@,System.Boolean@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Expander`2.ScanForClosingQuote(System.Char,System.String,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.ContainsMetadataExpressionOutsideTransform(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.GetReferencedItemExpressions(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.GetReferencedItemExpressions(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.GetReferencedItemNamesAndMetadata(System.Collections.Generic.List{System.String})">
    <parameter name="expressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.GetReferencedItemNamesAndMetadata(System.String,System.Int32,System.Int32,Microsoft.Build.Evaluation.ItemsAndMetadataPair@,Microsoft.Build.Evaluation.ShredderOptions)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.Sink(System.String,System.Int32@,System.Char)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.Sink(System.String,System.Int32@,System.Int32,System.Char,System.Char)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.SinkArgumentsInParentheses(System.String,System.Int32@,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.SinkItemFunctionExpression(System.String,System.Int32,System.Int32@,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.SinkSingleQuotedExpression(System.String,System.Int32@,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.SinkUntilClosingQuote(System.Char,System.String,System.Int32@,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.SinkValidName(System.String,System.Int32@,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.SinkWhitespace(System.String,System.Int32@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ExpressionShredder.SplitSemiColonSeparatedList(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.FunctionCallExpressionNode.ExpandArgumentForScalarParameter(System.String,Microsoft.Build.Evaluation.GenericExpressionNode,Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="argumentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.FunctionCallExpressionNode.VerifyArgumentCount(System.Int32,Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.GenericExpressionNode.BoolEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.GenericExpressionNode.CanBoolEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.GenericExpressionNode.CanNumericEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.GenericExpressionNode.Evaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.GenericExpressionNode.EvaluatesToEmpty(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.GenericExpressionNode.GetExpandedValue(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.GenericExpressionNode.GetUnexpandedValue(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.GenericExpressionNode.NumericEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.__GetListTest">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.Escape(System.String)">
    <parameter name="unescaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.GetBaseKeyFromKeyName(System.String,Microsoft.Win32.RegistryView,System.String@)">
    <parameter name="keyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.GetDirectoryNameOfFileAbove(System.String,System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="startingDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.GetRegistryValue(System.String,System.String)">
    <parameter name="keyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.GetRegistryValue(System.String,System.String,System.Object)">
    <parameter name="keyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.GetRegistryValueFromView(System.String,System.String,System.Object,System.Object[])">
    <parameter name="keyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.MakeRelative(System.String,System.String)">
    <parameter name="basePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.IntrinsicFunctions.Unescape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.MultipleComparisonNode.UpdateConditionedProperties(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.NumericExpressionNode.BoolEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.NumericExpressionNode.CanBoolEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.NumericExpressionNode.CanNumericEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.NumericExpressionNode.GetExpandedValue(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.NumericExpressionNode.NumericEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.OperatorExpressionNode.CanNumericEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.OperatorExpressionNode.NumericEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Parser.Arg(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Parser.Arglist(System.String,System.Collections.ArrayList)">
    <parameter name="arglist">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Parser.Args(System.String,System.Collections.ArrayList)">
    <parameter name="arglist">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Parser.Parse(System.String,Microsoft.Build.Evaluation.ParserOptions,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Parser.RelationalExpr(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Parser.RelationalOperation(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Preprocessor.#ctor(Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Preprocessor.CloneChildrenResolvingImports(System.Xml.XmlNode,System.Xml.XmlNode)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Preprocessor.GetPreprocessedDocument(Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Preprocessor.Preprocess">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unevaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unevaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unevaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unevaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.AddItemHelper(Microsoft.Build.Construction.ProjectItemElement,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unevaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.BackEnd.Logging.ILoggingService)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="loggingServiceForEvaluation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.AddItem(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.AddItemDefinition(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.AddItemIgnoringCondition(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.AddTarget(Microsoft.Build.Execution.ProjectTargetInstance)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.AddToAllEvaluatedItemDefinitionMetadataList(Microsoft.Build.Evaluation.ProjectMetadata)">
    <parameter name="itemDefinitionMetadatum">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.AddToAllEvaluatedItemsList(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.AddToAllEvaluatedPropertiesList(Microsoft.Build.Evaluation.ProjectProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.Project.Data.ConditionedProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.EvaluateCondition(System.String)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.GetItemDefinition(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.GetItems(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.GetItemsByEvaluatedInclude(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.GetProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.GetProperty(System.String,System.Int32,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.GetPropertyValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.GetTarget(System.String)">
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.InitializeForEvaluation(Microsoft.Build.Evaluation.IToolsetProvider)">
    <parameter name="toolsetProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Evaluation#ProjectProperty@Microsoft#Build#Evaluation#ProjectItem@Microsoft#Build#Evaluation#ProjectMetadata@Microsoft#Build#Evaluation#ProjectItemDefinition}#ExpandString(System.String)">
    <parameter name="unexpandedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.Project.Data.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Evaluation#ProjectProperty@Microsoft#Build#Evaluation#ProjectItem@Microsoft#Build#Evaluation#ProjectMetadata@Microsoft#Build#Evaluation#ProjectItemDefinition}#ItemDefinitionsEnumerable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.SetProperty(Microsoft.Build.Construction.ProjectPropertyElement,System.String,Microsoft.Build.Evaluation.ProjectProperty)">
    <parameter name="propertyElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Data.SetProperty(System.String,System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.ExpandItemIncludeBestEffortLeaveEscaped(Microsoft.Build.Construction.ProjectItemElement)">
    <parameter name="renamedItemElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.ExpandMetadataValueBestEffortLeaveEscaped(Microsoft.Build.Evaluation.IMetadataTable,System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="unevaluatedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.ExpandPropertyValueBestEffortLeaveEscaped(System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="unevaluatedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="unexpandedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetAnySuitableExistingItemXml(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},Microsoft.Build.Construction.ProjectItemElement@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="unevaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)">
    <parameter name="metadatum">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.Project.Imports">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.IsSuitableExistingItemXml(Microsoft.Build.Construction.ProjectItemElement,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <parameter name="candidateExistingItemXml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unevaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.Project.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.Project.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.ReAddExistingItemAfterItemTypeChange(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary(Microsoft.Build.BackEnd.Logging.ILoggingService)">
    <parameter name="loggingServiceForEvaluation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.RemoveItemBeforeItemTypeChange(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.RemoveItemHelper(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)">
    <parameter name="escapedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unevaluatedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.SplitItemElementIfNecessary(Microsoft.Build.Construction.ProjectItemElement)">
    <parameter name="itemElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Project.VerifyThrowInvalidOperationNotImported(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="otherXml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.AddToolset(Microsoft.Build.Evaluation.Toolset)">
    <parameter name="toolset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.AfterUpdateLoadedProjectGlobalProperties(Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.ContainsToolset(System.String)">
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectCollection.EnvironmentProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Escape(System.String)">
    <parameter name="unescapedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetGlobalProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetLoadedProjects(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.GetToolset(System.String)">
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjectCollection.AddProject(Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjectCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjectCollection.GetMatchingProjectIfAny(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjectCollection.GetMatchingProjectsIfAny(System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjectCollection.HasEquivalentGlobalPropertiesAndToolsVersion(Microsoft.Build.Evaluation.Project,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjectCollection.RemoveProject(Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjectCollection.RemoveProject(System.String,Microsoft.Build.Evaluation.Project)">
    <parameter name="projectFullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjectCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectCollection.LoadedProjects">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.LoadProject(System.Xml.XmlReader,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Microsoft#Build#BackEnd#IBuildComponent#InitializeComponent(Microsoft.Build.BackEnd.IBuildComponentHost)">
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.OnAfterRenameLoadedProject(System.String,Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveGlobalProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.RemoveToolset(System.String)">
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.ReusableLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.ReusableLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.ReusableLogger.RegisterForEvents(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.ReusableLogger.UnregisterForEvents(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.SetGlobalProperty(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectCollection.Toolsets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.TryUnloadProject(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="projectRootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.Unescape(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="projectRootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectCollection.UnloadProject(Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.BuiltInMetadataTable.GetEscapedValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.BuiltInMetadataTable.GetEscapedValue(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.BuiltInMetadataTable.GetEscapedValueIfPresent(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.ChangeItemType(System.String)">
    <parameter name="newItemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedIncludeBeforeWildcardExpansion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.GetItemDefinitionMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectItem.Metadata">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.Microsoft#Build#Evaluation#IItem#GetMetadataValueEscaped(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.Microsoft#Build#Evaluation#IItem{Microsoft#Build#Evaluation#ProjectMetadata}#GetMetadata(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.Microsoft#Build#Evaluation#IItem{Microsoft#Build#Evaluation#ProjectMetadata}#SetMetadata(Microsoft.Build.Construction.ProjectMetadataElement,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="metadataElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValueIfPresent(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.ProjectItemFactory.CreateItem(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.ProjectItemFactory.CreateItem(System.String)">
    <parameter name="include">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.ProjectItemFactory.CreateItem(System.String,Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="evaluatedIncludeEscaped">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.ProjectItemFactory.CreateItem(System.String,System.String)">
    <parameter name="evaluatedIncludeEscaped">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="evaluatedIncludeBeforeWildcardExpansion">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.ProjectItemFactory.CreateItem(System.String,System.String,Microsoft.Build.Evaluation.ProjectItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.ProjectItemFactory.SetMetadata(System.Collections.Generic.IEnumerable{Microsoft.Build.Shared.Pair{Microsoft.Build.Construction.ProjectMetadataElement,System.String}},System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destinationItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unevaluatedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.#ctor(Microsoft.Build.Evaluation.Project,System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.GetMetadataValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.Microsoft#Build#Evaluation#IItemDefinition{Microsoft#Build#Evaluation#ProjectMetadata}#SetMetadata(Microsoft.Build.Construction.ProjectMetadataElement,System.String,Microsoft.Build.Evaluation.ProjectMetadata)">
    <parameter name="metadataElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValueIfPresent(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectItemDefinition.SetMetadataValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unevaluatedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectMetadata.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable{Microsoft#Build#Evaluation#ProjectMetadata}#Equals(Microsoft.Build.Evaluation.ProjectMetadata)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectProperty.#ctor(Microsoft.Build.Evaluation.Project,Microsoft.Build.Construction.ProjectPropertyElement,System.String,Microsoft.Build.Evaluation.ProjectProperty)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectProperty.#ctor(Microsoft.Build.Evaluation.Project,System.String,System.String,System.Boolean,System.Boolean)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.ProjectProperty.EvaluatedValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectProperty.ProjectHasMatchingGlobalProperty(Microsoft.Build.Evaluation.Project,System.String)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectProperty.System#IEquatable{Microsoft#Build#Evaluation#ProjectProperty}#Equals(Microsoft.Build.Evaluation.ProjectProperty)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectRootElementCache.AddEntry(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="projectRootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectRootElementCache.DiscardAnyWeakReference(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="projectRootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectRootElementCache.ForgetEntry(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="projectRootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectRootElementCache.Get(System.String,Microsoft.Build.Evaluation.ProjectRootElementCache.OpenProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectRootElementCache.RenameEntry(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="projectRootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldFullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectRootElementCache.RenameEntryInternal(System.String,Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="projectRootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ProjectRootElementCache.TryGet(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Scanner.CheckForUnexpectedMetadata(System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Scanner.GetErrorResource">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Scanner.IsNextString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Scanner.ParsePropertyOrItemMetadata">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Scanner.ScanForPropertyExpressionEnd(System.String,System.Int32)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.StringExpressionNode.BoolEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.StringExpressionNode.CanBoolEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.StringExpressionNode.CanNumericEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.StringExpressionNode.NumericEvaluate(Microsoft.Build.Evaluation.ConditionEvaluator.IConditionEvaluationState)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.StringMetadataTable.GetEscapedValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.StringMetadataTable.GetEscapedValue(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.StringMetadataTable.GetEscapedValueIfPresent(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.Token.String">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},System.String)">
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},System.String)">
    <parameter name="toolsPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Shared.DirectoryGetFiles,Microsoft.Build.Evaluation.LoadXmlFromPath,System.String,Microsoft.Build.Shared.DirectoryExists)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,System.String)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},Microsoft.Build.Evaluation.ProjectCollection,System.String)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.GetOverrideTaskRegistry(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.Evaluation.ProjectRootElementCache)">
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loggingServices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.GetTaskFiles(Microsoft.Build.Shared.DirectoryGetFiles,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,System.String,System.String,System.String)">
    <parameter name="loggingServices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskPattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="searchPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.GetTaskRegistry(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.Evaluation.ProjectRootElementCache)">
    <parameter name="loggingServices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.InitializeProperties(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="loggingServices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.LoadAndRegisterFromTasksFile(System.String,System.String[],Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,System.String,System.String,Microsoft.Build.Evaluation.ProjectRootElementCache,Microsoft.Build.Execution.TaskRegistry)">
    <parameter name="defaultTaskFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loggingServices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="registry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskFileError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.RegisterDefaultTasks(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.Evaluation.ProjectRootElementCache)">
    <parameter name="loggingServices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.Toolset.RegisterOverrideTasks(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,Microsoft.Build.Evaluation.ProjectRootElementCache)">
    <parameter name="loggingServices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectRootElementCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetConfigurationReader.ReadApplicationConfiguration">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetElement.PropertyElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetElement.PropertyElementCollection.GetElement(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetElement.PropertyElementCollection.UpdatePropertyNameMap(System.Configuration.ConfigurationElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetElementCollection.CreateNewElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetElementCollection.GetElement(System.String)">
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetElementCollection.UpdateToolsVersionMap(System.Configuration.ConfigurationElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetPropertyDefinition.#ctor(System.String,System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetProvider.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetProvider.#ctor(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.Toolset})">
    <parameter name="toolsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetProvider.#ctor(System.String,Microsoft.Build.Collections.PropertyDictionary{},Microsoft.Build.Collections.PropertyDictionary{},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
    <parameter name="environmentProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetProvider.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetProvider.GetToolset(System.String)">
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetProvider.InitializeToolsetCollection(System.String,Microsoft.Build.Collections.PropertyDictionary{},Microsoft.Build.Collections.PropertyDictionary{},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
    <parameter name="environmentProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetProvider.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Evaluation.ToolsetProvider.Toolsets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.ToolsetReader.DefaultToolsVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetReader.ExpandPropertyLeaveEscaped(Microsoft.Build.Evaluation.ToolsetPropertyDefinition,Microsoft.Build.Evaluation.Expander{Microsoft.Build.Execution.ProjectPropertyInstance,Microsoft.Build.Execution.ProjectItemInstance})">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expander">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetReader.ExpandRelativePathsRelativeToExeLocation(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Evaluation.ToolsetReader.MSBuildOverrideTasksPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetReader.ReadAllToolsets(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Evaluation.Toolset},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
    <parameter name="environmentProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetReader.ReadAllToolsets(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Evaluation.Toolset},Microsoft.Build.Evaluation.ToolsetRegistryReader,Microsoft.Build.Evaluation.ToolsetConfigurationReader,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Evaluation.ToolsetDefinitionLocations)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="toolsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="environmentProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetReader.ReadEachToolset(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Evaluation.Toolset},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},System.Boolean)">
    <parameter name="toolsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="initialProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetReader.ReadToolset(Microsoft.Build.Evaluation.ToolsetPropertyDefinition,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="initialProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetReader.ReadToolsets(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Evaluation.Toolset},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},System.Boolean,System.String@)">
    <parameter name="initialProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetReader.SetProperty(Microsoft.Build.Evaluation.ToolsetPropertyDefinition,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance})">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Evaluation.ToolsetRegistryReader.GetValue(Microsoft.Build.Internal.RegistryKeyWrapper,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.BuildAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.InternalLoggerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String,System.Exception)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.Throw(System.Exception,System.String,System.String[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.InvalidToolsetDefinitionException.Throw(System.String,System.String[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Exceptions.RegistryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.Build(Microsoft.Build.Execution.BuildParameters,Microsoft.Build.Execution.BuildRequestData)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.CheckSubmissionCompletenessAndRemove(Microsoft.Build.Execution.BuildSubmission)">
    <parameter name="submission">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.CreateLoggingService(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.ErrorIfState(Microsoft.Build.Execution.BuildManager.BuildManagerState,System.String)">
    <parameter name="exceptionResouorce">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.ExecuteSubmission(Microsoft.Build.Execution.BuildSubmission,System.Boolean)">
    <parameter name="submission">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.ExpectPacketType``1(Microsoft.Build.BackEnd.INodePacket,Microsoft.Build.BackEnd.NodePacketType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.GetNodeConfiguration">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.GetProjectInstanceForBuild(Microsoft.Build.Evaluation.Project)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.HandleConfigurationRequest(System.Int32,Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="unresolvedConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.HandleExecuteSubmissionException(Microsoft.Build.Execution.BuildSubmission,System.Exception)">
    <parameter name="submission">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.HandleNewRequest(System.Int32,Microsoft.Build.BackEnd.BuildRequestBlocker)">
    <parameter name="blocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.HandleNodeShutdown(System.Int32,Microsoft.Build.BackEnd.NodeShutdown)">
    <parameter name="shutdownPacket">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.HandleResult(System.Int32,Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.IssueRequestToScheduler(Microsoft.Build.Execution.BuildSubmission,System.Boolean,Microsoft.Build.BackEnd.BuildRequestBlocker)">
    <parameter name="submission">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.LoadSolutionIntoConfiguration(Microsoft.Build.BackEnd.BuildRequestConfiguration,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.BuildManager.Microsoft#Build#BackEnd#IBuildComponentHost#LoggingService">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.Microsoft#Build#BackEnd#INodePacketHandler#PacketReceived(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.NullLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.OnProjectFinished(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.OnProjectStarted(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.PendBuildRequest(Microsoft.Build.Execution.BuildRequestData)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.PerformSchedulingActions(System.Collections.Generic.IEnumerable{Microsoft.Build.BackEnd.ScheduleResponse})">
    <parameter name="responses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.ReportResultsToSubmission(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.RequireState(Microsoft.Build.Execution.BuildManager.BuildManagerState,System.String)">
    <parameter name="exceptionResouorce">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildManager.ResolveConfiguration(Microsoft.Build.BackEnd.BuildRequestConfiguration,Microsoft.Build.BackEnd.BuildRequestConfiguration,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unresolvedConfiguration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildParameters.#ctor(Microsoft.Build.Execution.BuildParameters)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildParameters.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Execution.BuildParameters.EnvironmentProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildParameters.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildParameters.GetTimeoutVariableOrDefault(System.String,System.Int32)">
    <parameter name="environmentVariable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildParameters.GetToolset(System.String)">
    <parameter name="toolsVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.BuildParameters.GlobalProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildParameters.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.BuildParameters.Toolsets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[])">
    <parameter name="targetsToBuild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[],Microsoft.Build.Execution.HostServices)">
    <parameter name="projectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetsToBuild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String[],Microsoft.Build.Execution.HostServices,Microsoft.Build.Execution.BuildRequestDataFlags)">
    <parameter name="projectInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetsToBuild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices)">
    <parameter name="targetsToBuild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String[],Microsoft.Build.Execution.HostServices,Microsoft.Build.Execution.BuildRequestDataFlags)">
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetsToBuild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildRequestData.#ctor(System.String[],Microsoft.Build.Execution.HostServices,Microsoft.Build.Execution.BuildRequestDataFlags)">
    <parameter name="targetsToBuild">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.#ctor(Microsoft.Build.Execution.BuildResult,System.Int32)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.#ctor(Microsoft.Build.Execution.BuildResult,System.String[])">
    <parameter name="existingResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.AddResultsForTarget(System.String,Microsoft.Build.Execution.TargetResult)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.CreateTargetResultDictionary(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.HasResultsForTarget(System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.BuildResult.Item(System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.MergeResults(Microsoft.Build.Execution.BuildResult)">
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildResult.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.BuildSubmission.CompleteResults(Microsoft.Build.Execution.BuildResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.HostServices.GetHostObject(System.String,System.String,System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.HostServices.GetNodeAffinity(System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.HostServices.GetNodeAffinity(System.String,System.Boolean@)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.HostServices.HasHostObject(System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.HostServices.OnRenameProject(System.String,System.String)">
    <parameter name="newFullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.HostServices.RegisterHostObject(System.String,System.String,System.String,Microsoft.Build.Framework.ITaskHost)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.DumpExceptionToFile(System.Exception)">
    <parameter name="ex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.HandleBuildRequest(Microsoft.Build.BackEnd.BuildRequest)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.HandleBuildRequestConfiguration(Microsoft.Build.BackEnd.BuildRequestConfiguration)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.HandleBuildRequestConfigurationResponse(Microsoft.Build.BackEnd.BuildRequestConfigurationResponse)">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.HandleBuildRequestUnblocker(Microsoft.Build.BackEnd.BuildRequestUnblocker)">
    <parameter name="unblocker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.HandleNodeBuildComplete(Microsoft.Build.BackEnd.NodeBuildComplete)">
    <parameter name="buildComplete">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.HandleNodeConfiguration(Microsoft.Build.BackEnd.NodeConfiguration)">
    <parameter name="configuration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.HandlePacket(Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.OutOfProcNode.Microsoft#Build#BackEnd#IBuildComponentHost#LoggingService">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Execution.OutOfProcNode.Microsoft#Build#BackEnd#IBuildComponentHost#Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.Microsoft#Build#BackEnd#INodePacketFactory#RoutePacket(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.Microsoft#Build#BackEnd#INodePacketHandler#PacketReceived(System.Int32,Microsoft.Build.BackEnd.INodePacket)">
    <parameter name="packet">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.OutOfProcNode.UnhandledExceptionHandler(System.Object,System.UnhandledExceptionEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)">
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Execution.BuildParameters,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="buildParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Evaluation.Project.Data,System.String,System.String,Microsoft.Build.Execution.HostServices,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance})">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="environmentVariableProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Execution.ProjectInstance)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,Microsoft.Build.Execution.ProjectInstance,System.Collections.Generic.IDictionary{System.String,System.String})">
    <parameter name="projectToInheritFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="globalProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)">
    <parameter name="projectCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Execution.BuildParameters,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="buildParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="evaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="evaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.AddTarget(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Cache(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.DeepCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)">
    <parameter name="unexpandedValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GenerateSolutionWrapper(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="loggingService">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GenerateSolutionWrapperUsingOldOM(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectRootElementCache,Microsoft.Build.Execution.BuildParameters,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="buildParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)">
    <parameter name="metadatum">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetTargetsWhichRunAfter(System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.GetTargetsWhichRunBefore(System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Initialize(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Execution.BuildParameters,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buildParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.LoadSolutionForBuild(System.String,Microsoft.Build.Collections.PropertyDictionary{Microsoft.Build.Execution.ProjectPropertyInstance},System.String,Microsoft.Build.Execution.BuildParameters,Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext)">
    <parameter name="globalPropertiesInstances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buildParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loggingService">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#AddItem(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#AddItemDefinition(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#AddItemIgnoringCondition(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#AddTarget(Microsoft.Build.Execution.ProjectTargetInstance)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#AddToAllEvaluatedItemDefinitionMetadataList(Microsoft.Build.Execution.ProjectMetadataInstance)">
    <parameter name="itemDefinitionMetadatum">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#AddToAllEvaluatedItemsList(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#AddToAllEvaluatedPropertiesList(Microsoft.Build.Execution.ProjectPropertyInstance)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#ConditionedProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#GetItemDefinition(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#GetTarget(System.String)">
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#InitializeForEvaluation(Microsoft.Build.Evaluation.IToolsetProvider)">
    <parameter name="toolsetProvider">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#ItemDefinitionsEnumerable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#SetProperty(Microsoft.Build.Construction.ProjectPropertyElement,System.String,Microsoft.Build.Execution.ProjectPropertyInstance)">
    <parameter name="propertyElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IEvaluatorData{Microsoft#Build#Execution#ProjectPropertyInstance@Microsoft#Build#Execution#ProjectItemInstance@Microsoft#Build#Execution#ProjectMetadataInstance@Microsoft#Build#Execution#ProjectItemDefinitionInstance}#SetProperty(System.String,System.String,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IItemProvider{Microsoft#Build#Execution#ProjectItemInstance}#GetItems(System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Microsoft#Build#Evaluation#IPropertyProvider{Microsoft#Build#Execution#ProjectPropertyInstance}#GetProperty(System.String,System.Int32,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.RemoveTarget(System.String)">
    <parameter name="targetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.RetrieveFromCache(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectInstance.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.#ctor(Microsoft.Build.Execution.ProjectInstance,Microsoft.Build.Evaluation.ProjectItemDefinition)">
    <parameter name="itemDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.GetMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.Microsoft#Build#Evaluation#IItemDefinition{Microsoft#Build#Execution#ProjectMetadataInstance}#SetMetadata(Microsoft.Build.Construction.ProjectMetadataElement,System.String,Microsoft.Build.Execution.ProjectMetadataInstance)">
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValue(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValueIfPresent(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemDefinitionInstance.ToProjectItemDefinitionElement(Microsoft.Build.Construction.ProjectElementContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemGroupTaskInstance.#ctor(Microsoft.Build.Execution.ProjectItemGroupTaskInstance)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemGroupTaskInstance.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.#ctor(Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemGroupTaskItemInstance.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.#ctor(Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemGroupTaskMetadataInstance.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String,System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String,System.String,System.String)">
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeBeforeWildcardExpansionEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String,System.String,System.String,Microsoft.Build.Collections.CopyOnWritePropertyDictionary{Microsoft.Build.Execution.ProjectMetadataInstance},Microsoft.Build.Evaluation.BuiltInMetadata,System.Collections.Generic.List{Microsoft.Build.Execution.ProjectItemDefinitionInstance})">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeBeforeWildcardExpansionEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.#ctor(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.CommonConstructor(Microsoft.Build.Execution.ProjectInstance,System.String,System.String,System.String,Microsoft.Build.Collections.CopyOnWritePropertyDictionary{Microsoft.Build.Execution.ProjectMetadataInstance},Microsoft.Build.Evaluation.BuiltInMetadata,System.Collections.Generic.List{Microsoft.Build.Execution.ProjectItemDefinitionInstance})">
    <parameter name="projectToUse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemTypeToUse">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeBeforeWildcardExpansionEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator,Microsoft.Build.Execution.ProjectInstance)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.GetMetadata(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.GetMetadataValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.HasMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Metadata">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectItemInstance.MetadataNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Collections#IDeepCloneable{Microsoft#Build#Execution#ProjectItemInstance}#DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Evaluation#IItem#GetMetadataValueEscaped(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Evaluation#IItem{Microsoft#Build#Execution#ProjectMetadataInstance}#SetMetadata(Microsoft.Build.Construction.ProjectMetadataElement,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="metadataElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValue(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Evaluation#IMetadataTable#GetEscapedValueIfPresent(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CloneCustomMetadata">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="destinationItem">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#GetMetadata(System.String)">
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#MetadataNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem#SetMetadata(System.String,System.String)">
    <parameter name="metadataValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)">
    <parameter name="metadataValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.RemoveMetadata(System.String)">
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(Microsoft.Build.Collections.CopyOnWritePropertyDictionary{Microsoft.Build.Execution.ProjectMetadataInstance})">
    <parameter name="metadataDictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <parameter name="metadataDictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance})">
    <parameter name="metadataList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadata(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.SetMetadataOnTaskOutput(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.#ctor(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.#ctor(Microsoft.Build.Execution.ProjectItemInstance.TaskItem,System.Boolean)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.#ctor(System.String)">
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.#ctor(System.String,System.String,Microsoft.Build.Collections.CopyOnWritePropertyDictionary{Microsoft.Build.Execution.ProjectMetadataInstance},Microsoft.Build.Evaluation.BuiltInMetadata,System.Collections.Generic.List{Microsoft.Build.Execution.ProjectItemDefinitionInstance},System.String)">
    <parameter name="includeBeforeWildcardExpansionEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.BuiltInMetadataTable.GetEscapedValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.BuiltInMetadataTable.GetEscapedValue(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.BuiltInMetadataTable.GetEscapedValueIfPresent(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.CloneCustomMetadata">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="destinationItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.CopyMetadataTo(Microsoft.Build.Framework.ITaskItem,System.Boolean)">
    <parameter name="destinationItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.CustomMetadataNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Equals(Microsoft.Build.Execution.ProjectItemInstance.TaskItem)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.GetItemDefinitionMetadata(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.GetMetadata(System.String)">
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.GetMetadataObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.HasMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.MetadataCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.MetadataNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#Evaluation#IItem#EvaluatedInclude">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#Evaluation#IItem#GetMetadataValue(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#Evaluation#IItem#GetMetadataValueEscaped(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#Evaluation#IItem{Microsoft#Build#Execution#ProjectMetadataInstance}#GetMetadata(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#Evaluation#IItem{Microsoft#Build#Execution#ProjectMetadataInstance}#SetMetadata(Microsoft.Build.Construction.ProjectMetadataElement,System.String)">
    <parameter name="metadataElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#Framework#ITaskItem2#CloneCustomMetadataEscaped">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#Framework#ITaskItem2#GetMetadataValueEscaped(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.Microsoft#Build#Framework#ITaskItem2#SetMetadataValueLiteral(System.String,System.String)">
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ProjectItemInstanceFactory.#ctor(Microsoft.Build.Execution.ProjectInstance,System.String)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ProjectItemInstanceFactory.CreateItem(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ProjectItemInstanceFactory.CreateItem(System.String)">
    <parameter name="include">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ProjectItemInstanceFactory.CreateItem(System.String,Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ProjectItemInstanceFactory.CreateItem(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="evaluatedInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="evaluatedIncludeBeforeWildcardExpansion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ProjectItemInstanceFactory.CreateItem(System.String,System.String,Microsoft.Build.Execution.ProjectItemInstance)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeBeforeWildcardExpansionEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ProjectItemInstanceFactory.ItemElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.ProjectItemInstanceFactory.SetMetadata(System.Collections.Generic.IEnumerable{Microsoft.Build.Shared.Pair{Microsoft.Build.Construction.ProjectMetadataElement,System.String}},System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance})">
    <parameter name="metadataList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destinationItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.RemoveMetadata(System.String)">
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.SetMetadata(Microsoft.Build.Collections.CopyOnWritePropertyDictionary{Microsoft.Build.Execution.ProjectMetadataInstance})">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.SetMetadata(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <parameter name="metadataDictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.SetMetadata(System.String,System.String)">
    <parameter name="metadataValueEscaped">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.SetMetadataObject(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.SetMetadataOnTaskOutput(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.TaskItemFactory.CreateItem(Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.TaskItemFactory.CreateItem(Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.TaskItemFactory.CreateItem(System.String)">
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.TaskItemFactory.CreateItem(System.String,Microsoft.Build.Evaluation.ProjectItem)">
    <parameter name="baseItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.TaskItemFactory.CreateItem(System.String,Microsoft.Build.Execution.ProjectItemInstance)">
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.TaskItem.TaskItemFactory.CreateItem(System.String,System.String)">
    <parameter name="includeBeforeWildcardExpansionEscaped">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="includeEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectItemInstance.ToProjectItemElement(Microsoft.Build.Construction.ProjectElementContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.#ctor(Microsoft.Build.Evaluation.ProjectMetadata)">
    <parameter name="metadatum">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.#ctor(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.#ctor(System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectMetadataInstance.EvaluatedValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectMetadataInstance.System#IEquatable{Microsoft#Build#Execution#ProjectMetadataInstance}#Equals(Microsoft.Build.Execution.ProjectMetadataInstance)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectOnErrorInstance.#ctor(System.String,System.String,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="executeTargets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.#ctor(Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyGroupTaskInstance.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.#ctor(Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyGroupTaskPropertyInstance.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.#ctor(Microsoft.Build.Execution.ProjectPropertyInstance)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.#ctor(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.#ctor(System.String,System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.#ctor(System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.#ctor(System.String,System.String,System.Boolean,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectPropertyInstance.EvaluatedValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.Microsoft#Build#Collections#IDeepCloneable{Microsoft#Build#Execution#ProjectPropertyInstance}#DeepClone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.System#IEquatable{Microsoft#Build#Execution#ProjectPropertyInstance}#Equals(Microsoft.Build.Execution.ProjectPropertyInstance)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectPropertyInstance.ToProjectPropertyElement(Microsoft.Build.Construction.ProjectElementContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTargetInstance.AddTask(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTargetInstance.ToProjectTargetElement(Microsoft.Build.Construction.ProjectRootElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTaskInstance.#ctor(Microsoft.Build.Construction.ProjectTaskElement,System.Collections.Generic.IList{Microsoft.Build.Execution.ProjectTaskInstanceChild})">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTaskInstance.AddOutputItem(System.String,System.String,System.String)">
    <parameter name="itemName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskOutputParameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTaskInstance.AddOutputProperty(System.String,System.String,System.String)">
    <parameter name="taskOutputParameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTaskInstance.GetParameter(System.String)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ProjectTaskInstance.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTaskInstance.SetParameter(System.String,System.String)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTaskOutputItemInstance.#ctor(System.String,System.String,System.String,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ProjectTaskOutputPropertyInstance.#ctor(System.String,System.String,System.String,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Shared.IElementLocation,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ReflectableTaskPropertyInfo.#ctor(Microsoft.Build.Framework.TaskPropertyInfo,System.Type)">
    <parameter name="taskPropertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.ReflectableTaskPropertyInfo.#ctor(System.Reflection.PropertyInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.ReflectableTaskPropertyInfo.Reflection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Execution.TargetResult.#ctor(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TargetResult.FactoryForDeserialization(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TargetResult.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskFactoryWrapper.#ctor(Microsoft.Build.Framework.ITaskFactory,Microsoft.Build.Shared.LoadedType,System.String)">
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskFactoryWrapper.GetProperty(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskFactoryWrapper.SetPropertyValue(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.TaskPropertyInfo,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.GetMatchingRegistration(System.String,System.Collections.Generic.List{Microsoft.Build.Execution.TaskRegistry.RegisteredTaskRecord},System.String,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="taskRecords">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.GetRegisteredTask(System.String,System.String,System.Boolean,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Shared.IElementLocation)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.GetRelevantRegistrations(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.GetTaskRegistrationRecord(System.String,System.String,System.Boolean,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Shared.IElementLocation,System.Boolean@)">
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.IsTaskFactoryClass(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.RegisteredTaskRecord.CanTaskBeCreatedByFactory(System.String,System.String,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.RegisteredTaskRecord.GetTaskFactory(Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Shared.IElementLocation,System.String)">
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.RegisteredTaskRecord.GetTaskFactoryFromRegistrationRecord(System.String,System.String,Microsoft.Build.BackEnd.Logging.TargetLoggingContext,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLoggingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.RegisteredTaskRecord.ParameterGroupAndTaskElementRecord.EvaluateTaskBody``2(Microsoft.Build.Evaluation.Expander{``0,``1},Microsoft.Build.Construction.ProjectUsingTaskBodyElement,Microsoft.Build.Evaluation.ExpanderOptions)">
    <parameter name="expander">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.RegisteredTaskRecord.ParameterGroupAndTaskElementRecord.ExpandUsingTask``2(Microsoft.Build.Construction.ProjectUsingTaskElement,Microsoft.Build.Evaluation.Expander{``0,``1},Microsoft.Build.Evaluation.ExpanderOptions)">
    <parameter name="projectUsingTaskXml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expander">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.RegisteredTaskRecord.ParameterGroupAndTaskElementRecord.ParseUsingTaskParameterGroupElement``2(Microsoft.Build.Construction.UsingTaskParameterGroupElement,Microsoft.Build.Evaluation.Expander{``0,``1},Microsoft.Build.Evaluation.ExpanderOptions)">
    <parameter name="usingTaskParameterGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expander">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.RegisterTask(System.String,Microsoft.Build.Shared.AssemblyLoadInfo,System.String,Microsoft.Build.Execution.TaskRegistry.RegisteredTaskRecord.ParameterGroupAndTaskElementRecord)">
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Execution.TaskRegistry.RegisterTasksFromUsingTaskElement``2(Microsoft.Build.BackEnd.Logging.ILoggingService,Microsoft.Build.Framework.BuildEventContext,System.String,Microsoft.Build.Construction.ProjectUsingTaskElement,Microsoft.Build.Execution.TaskRegistry,Microsoft.Build.Evaluation.Expander{``0,``1},Microsoft.Build.Evaluation.ExpanderOptions)">
    <parameter name="projectUsingTaskXml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expander">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directoryOfImportingFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Execution.TaskRegistry.TaskRegistrations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.EngineFileUtilities.GetFileListEscaped(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="filespecEscaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.GetAttributeValue(Microsoft.Build.Construction.XmlElementWithLocation,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.GetAttributeValue(Microsoft.Build.Construction.XmlElementWithLocation,System.String,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.GetChildElements(Microsoft.Build.Construction.XmlElementWithLocation,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.GetVerifyThrowProjectChildElements(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.SetOrRemoveAttribute(Microsoft.Build.Construction.XmlElementWithLocation,System.String,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.SetOrRemoveAttribute(Microsoft.Build.Construction.XmlElementWithLocation,System.String,System.String,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.ThrowProjectInvalidAttribute(Microsoft.Build.Construction.XmlAttributeWithLocation)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.ThrowProjectInvalidChildElement(System.String,System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.ThrowProjectInvalidChildElementDueToDuplicate(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.VerifyThrowProjectAttributeEitherMissingOrNotEmpty(Microsoft.Build.Construction.XmlElementWithLocation,System.String)">
    <parameter name="xmlElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.VerifyThrowProjectAttributes(Microsoft.Build.Construction.XmlElementWithLocation,System.String[])">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.VerifyThrowProjectInvalidAttribute(System.Boolean,Microsoft.Build.Construction.XmlAttributeWithLocation)">
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.VerifyThrowProjectNoAttributes(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.VerifyThrowProjectNoChildElements(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.VerifyThrowProjectRequiredAttribute(Microsoft.Build.Construction.XmlElementWithLocation,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.ProjectXmlUtilities.VerifyThrowProjectValidNamespace(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.RegistryKeyWrapper.GetSubKeyNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.RegistryKeyWrapper.GetValueNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.RegistryKeyWrapper.OpenSubKey(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Internal.RegistryKeyWrapper.WrappedKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.ReservedPropertyNames.IsReservedProperty(System.String)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Tracing.List``1(System.Collections.Generic.IEnumerable{``0})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Tracing.Record(System.String)">
    <parameter name="counter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.ContainsNoTagsOtherThanComments(System.String,System.Int32)">
    <parameter name="innerXml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.CreateToolsVersionListString(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.Toolset})">
    <parameter name="toolsets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.GetEnvironmentProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.GetEnvironmentVariables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.GetXmlNodeInnerContents(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.ReadLongForHandshake(System.IO.Pipes.PipeStream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.ReadLongForHandshake(System.IO.Pipes.PipeStream,System.Byte[],System.Byte,Microsoft.Build.Internal.Utilities.LogDebugCommunications)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.RemoveXmlNamespace(System.String)">
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.SetXmlNodeInnerContents(Microsoft.Build.Construction.XmlElementWithLocation,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Utilities.WriteLongForHandshake(System.IO.Pipes.PipeStream,System.Int64)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.InterningBinaryReader.#ctor(System.IO.Stream,Microsoft.Build.InterningBinaryReader.Buffer)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.InterningBinaryReader.Create(System.IO.Stream,Microsoft.Build.SharedReadBuffer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.InterningBinaryReader.CreateSharedBuffer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.ApplyParameter(System.String)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConfigurableForwardingLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.ApplyParameter(System.String,System.String)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.BuildFinishedHandler(System.Object,Microsoft.Build.Framework.BuildFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.BuildStartedHandler(System.Object,Microsoft.Build.Framework.BuildStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.CustomEventHandler(System.Object,Microsoft.Build.Framework.CustomBuildEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.ErrorHandler(System.Object,Microsoft.Build.Framework.BuildErrorEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.MessageHandler(System.Object,Microsoft.Build.Framework.BuildMessageEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.ProjectFinishedHandler(System.Object,Microsoft.Build.Framework.ProjectFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.ProjectStartedHandler(System.Object,Microsoft.Build.Framework.ProjectStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.TargetFinishedHandler(System.Object,Microsoft.Build.Framework.TargetFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.TargetStartedHandler(System.Object,Microsoft.Build.Framework.TargetStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.TaskFinishedHandler(System.Object,Microsoft.Build.Framework.TaskFinishedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.TaskStartedHandler(System.Object,Microsoft.Build.Framework.TaskStartedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.ConsoleLogger.WarningHandler(System.Object,Microsoft.Build.Framework.BuildWarningEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.DistributedFileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)">
    <parameter name="eventSource">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.FileLogger.ApplyFileLoggerParameter(System.String,System.String)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.LoggerDescription.CreateFromStream(System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.LoggerDescription.FactoryForTranslation(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.LoggerDescription.IsForwardingLoggerClass(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.LoggerDescription.IsLoggerClass(System.Type,System.Object)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.LoggerDescription.Microsoft#Build#BackEnd#INodePacketTranslatable#Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Logging.LoggerDescription.WriteToStream(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.OpportunisticIntern.AssignViaEnvironment(System.String,System.Int32)">
    <parameter name="env">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.OpportunisticIntern.BucketedPrioritizedStringList.InterningToString(Microsoft.Build.IInternable)">
    <parameter name="candidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.OpportunisticIntern.BucketedPrioritizedStringList.InternWithStatistics(Microsoft.Build.IInternable)">
    <parameter name="candidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.OpportunisticIntern.BucketedPrioritizedStringList.TryIntern(Microsoft.Build.IInternable,System.String@)">
    <parameter name="candidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.OpportunisticIntern.InternableToString(Microsoft.Build.IInternable)">
    <parameter name="candidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.OpportunisticIntern.PrioritizedStringList.Statistics">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.OpportunisticIntern.PrioritizedStringList.TryGet(Microsoft.Build.IInternable,System.String@)">
    <parameter name="candidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyLoadInfo.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyLoadInfo.FactoryForTranslation(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyLoadInfo.Translate(Microsoft.Build.BackEnd.INodePacketTranslator)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareBaseNamesStringWise(System.String,System.String)">
    <parameter name="asString1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="asString2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareBaseNameTo(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareBaseNameToImpl(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareCulture(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.ComparePublicKeyToken(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareTo(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.EscapeDisplayNameCharacters(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.GetAssemblyNameEx(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.GetAssemblyNameFromDisplayName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="displayName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameReverseVersionComparer.Compare(Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyResources.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyResources.GetStringFromEngineResources(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyResources.GetStringFromMSBuildExeResources(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyResources.GetStringLookingInMSBuildExeResourcesFirst(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.BuildEventFileInfo.#ctor(Microsoft.Build.Shared.IElementLocation)">
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ConvertDecimalOrHexToDouble(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ConvertDecimalToDouble(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ConvertHexToDouble(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ValidDecimalOrHexNumber(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ValidHexNumber(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowArgument(System.Exception,System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowArgument(System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(System.String,System.Exception,System.Object[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(System.String,System.Object[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowInvalidOperation(System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String,System.Object)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String,System.Object,System.Object)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String,System.Object,System.Object,System.Object)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgumentArraysSameLength(System.Array,System.Array,System.String,System.String)">
    <parameter name="parameter1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgumentLength(System.String,System.String)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgumentNull(System.Object,System.String,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInternalLength(System.String,System.String)">
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(System.Boolean,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(System.Boolean,System.String,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(System.Boolean,System.String,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(System.Boolean,System.String,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.ContainsEscapedWildcards(System.String)">
    <parameter name="escapedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.ContainsReservedCharacters(System.String)">
    <parameter name="unescapedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.Escape(System.String)">
    <parameter name="unescapedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.UnescapeAll(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.UnescapeAll(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.FormatEventMessage(Microsoft.Build.Framework.BuildErrorEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.FormatEventMessage(Microsoft.Build.Framework.BuildErrorEventArgs,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.FormatEventMessage(Microsoft.Build.Framework.BuildErrorEventArgs,System.Boolean,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.FormatEventMessage(Microsoft.Build.Framework.BuildWarningEventArgs)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.FormatEventMessage(Microsoft.Build.Framework.BuildWarningEventArgs,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.FormatEventMessage(Microsoft.Build.Framework.BuildWarningEventArgs,System.Boolean,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.FormatEventMessage(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.FormatEventMessage(System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EventArgsFormatting.SplitStringOnNewLines(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.ExceptionHandling.DumpExceptionToFile(System.Exception)">
    <parameter name="ex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ExceptionHandling.UnhandledExceptionHandler(System.Object,System.UnhandledExceptionEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.FileMatch(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileToMatch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetAccessibleDirectories(System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetAccessibleFiles(System.String,System.String,System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetAccessibleFilesAndDirectories(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetAccessibleFileSystemEntries(Microsoft.Build.Shared.FileMatcher.FileSystemEntity,System.String,System.String,System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFiles(System.String,System.String)">
    <parameter name="filespecUnescaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFiles(System.String,System.String,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries,Microsoft.Build.Shared.DirectoryExists)">
    <parameter name="filespecUnescaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directoryExists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFileSpecInfo(System.String,System.String@,System.String@,System.String@,System.String@,System.Boolean@,System.Boolean@,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFileSpecInfo(System.String,System.Text.RegularExpressions.Regex@,System.Boolean@,System.Boolean@,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(System.Collections.IList,System.String,System.String,System.String,System.Int32,System.Text.RegularExpressions.Regex,System.Boolean,System.String,System.Boolean,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="listOfFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetLongPathName(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetLongPathName(System.String,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.HasWildcards(System.String)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.HasWildcardsSemicolonItemOrPropertyReferences(System.String)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.PreprocessFileSpecForSplitting(System.String,System.String@,System.String@,System.String@)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.RegularExpressionFromFileSpec(System.String,System.String,System.String,System.Boolean@)">
    <parameter name="fixedDirectoryPart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wildcardDirectoryPart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filenamePart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.RemoveInitialDotSlash(System.String[])">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.RemoveProjectDirectory(System.String[],System.String)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.SplitFileSpec(System.String,System.String@,System.String@,System.String@,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.AttemptToShortenPath(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.CreateUriFromPath(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Shared.FileUtilities.CurrentExecutableDirectory">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.DeleteNoThrow(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.DirectoryExistsNoThrow(System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.EndsWithSlash(System.String)">
    <parameter name="fileSpec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.EnsureNoLeadingSlash(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.EnsureNoTrailingSlash(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.EnsureTrailingSlash(System.String)">
    <parameter name="fileSpec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.FileExistsNoThrow(System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.FileOrDirectoryExistsNoThrow(System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetDirectoryNameOfFullPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetFileInfoNoThrow(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="filePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetFullPath(System.String,System.String)">
    <parameter name="currentDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetFullPathNoThrow(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetTemporaryFile(System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetTemporaryFile(System.String,System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.HasExtension(System.String,System.String[])">
    <parameter name="allowedExtensions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.ItemSpecModifiers.GetItemSpecModifier(System.String,System.String,System.String,Microsoft.Build.Collections.CopyOnWriteDictionary{System.String,System.String}@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.ItemSpecModifiers.IsDerivableItemSpecModifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.ItemSpecModifiers.ThrowForUrl(System.String,System.String,System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemSpec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.MakeRelative(System.String,System.String)">
    <parameter name="basePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.NormalizePath(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.TrimAndStripAnyQuotes(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FrameworkLocationHelper.CheckForFrameworkInstallation(System.String,System.String)">
    <parameter name="registryEntryToCheckInstall">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FrameworkLocationHelper.ConstructDotNetFrameworkPathFromRuntimeInfo(System.String)">
    <parameter name="requestedVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FrameworkLocationHelper.FindDotNetFrameworkPath(System.String,System.String,System.String,Microsoft.Build.Shared.DirectoryExists,Microsoft.Build.Shared.GetDirectories,Microsoft.Build.Shared.DotNetFrameworkArchitecture,System.Boolean)">
    <parameter name="frameworkVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directoryExists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getDirectories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FrameworkLocationHelper.FindRegistryValueUnderKey(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="registryBaseKeyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FrameworkLocationHelper.GenerateProgramFilesReferenceAssemblyRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FrameworkLocationHelper.GenerateReferenceAssemblyDirectory(System.String)">
    <parameter name="versionPrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FrameworkLocationHelper.GetPathToDotNetFramework(System.Version)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FrameworkLocationHelper.GetPathToDotNetFramework(System.Version,Microsoft.Build.Shared.DotNetFrameworkArchitecture)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.InternalErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.FindOnPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetChildProcessIds(System.Int32,System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetCurrentDirectory">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetLongFilePath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetMemoryStatus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetShortFilePath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.MsgWaitOne(System.Threading.WaitHandle)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.MsgWaitOne(System.Threading.WaitHandle,System.Int32)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.MsgWaitOne(System.Threading.WaitHandle,System.TimeSpan)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(Microsoft.Build.Shared.IElementLocation,System.String,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object,System.Object)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.ThrowInvalidProject(System.String,Microsoft.Build.Shared.IElementLocation,System.String,System.Object[])">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,Microsoft.Build.Shared.IElementLocation,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,Microsoft.Build.Shared.IElementLocation,System.String,System.Object)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,System.String,Microsoft.Build.Shared.IElementLocation,System.String)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,System.String,Microsoft.Build.Shared.IElementLocation,System.String,System.Object)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,System.String,Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,System.String,Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object,System.Object)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectErrorUtilities.VerifyThrowInvalidProject(System.Boolean,System.String,Microsoft.Build.Shared.IElementLocation,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="elementLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectFileErrorUtilities.ThrowInvalidProjectFile(Microsoft.Build.Shared.BuildEventFileInfo,System.Exception,System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectFileErrorUtilities.ThrowInvalidProjectFile(Microsoft.Build.Shared.BuildEventFileInfo,System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(System.Boolean,Microsoft.Build.Shared.BuildEventFileInfo,System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(System.Boolean,System.String,Microsoft.Build.Shared.BuildEventFileInfo,System.Exception,System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectFileErrorUtilities.VerifyThrowInvalidProjectFile(System.Boolean,System.String,Microsoft.Build.Shared.BuildEventFileInfo,System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectWriter.#ctor(System.IO.TextWriter)">
    <parameter name="w">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectWriter.#ctor(System.String,System.Text.Encoding)">
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectWriter.Initialize(System.Xml.XmlDocument)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ProjectWriter.Initialize(System.Xml.XmlDocument,System.Xml.XmlDeclaration)">
    <parameter name="project">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.ExtractMessageCode(System.Boolean,System.String,System.String@)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.FormatResourceString(System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.FormatResourceString(System.String@,System.String@,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.FormatString(System.String,System.Object[])">
    <parameter name="unformatted">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.GetResourceString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ThreadingUtilities.WaitAnyNoMessagePump(System.Threading.WaitHandle[],System.Int32)">
    <parameter name="handles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ThreadingUtilities.WaitAnyNoMessagePump(System.Threading.WaitHandle[],System.TimeSpan)">
    <parameter name="handles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ThreadingUtilities.WaitNoMessagePump(System.Threading.WaitHandle[],System.TimeSpan)">
    <parameter name="handles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.TypeLoader.GetLoadedType(System.Object,System.Object,System.Collections.Concurrent.ConcurrentDictionary{System.Reflection.TypeFilter,System.Collections.Concurrent.ConcurrentDictionary{Microsoft.Build.Shared.AssemblyLoadInfo,Microsoft.Build.Shared.TypeLoader.AssemblyInfoToLoadedTypes}},System.String,Microsoft.Build.Shared.AssemblyLoadInfo)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.TypeLoader.IsPartialTypeNameMatch(System.String,System.String)">
    <parameter name="typeName1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.TypeLoader.Load(System.String,Microsoft.Build.Shared.AssemblyLoadInfo)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.TypeLoader.ReflectionOnlyLoad(System.String,Microsoft.Build.Shared.AssemblyLoadInfo)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.XmlUtilities.IsValidElementName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.XmlUtilities.LocateFirstInvalidElementNameCharacter(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.XmlUtilities.RenameXmlElement(Microsoft.Build.Construction.XmlElementWithLocation,System.String,System.String)">
    <parameter name="oldElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="newElementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.XmlUtilities.SniffAttributeValueFromXmlFile(System.String,System.String,System.String)">
    <parameter name="projectFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.XmlUtilities.VerifyThrowArgumentValidElementName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.XmlUtilities.VerifyThrowProjectValidElementName(Microsoft.Build.Construction.XmlElementWithLocation)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.XmlUtilities.VerifyThrowProjectValidElementName(System.String,Microsoft.Build.Shared.IElementLocation)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.StringBuilderInternTarget.ExpensiveConvertToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.StringBuilderInternTarget.IsOrdinalEqualToStringOfSameLength(System.String)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Internal.Performance.CodeMarkers.CodeMarkerEx(Microsoft.Internal.Performance.CodeMarkerEvent,System.Byte[])">
    <parameter name="aBuff">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
</assembly>