<?xml version="1.0" encoding="utf-8"?>
<assembly name="Microsoft.CSharp, Version=4.0.0.0">
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.BinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Convert(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argumentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.GetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.Invoke(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argumentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeConstructor(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.InvokeMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argumentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.IsEvent(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetIndex(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argumentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.SetMember(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Binder.UnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Linq.Expressions.ExpressionType,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.BinderHelper.ConvertResult(System.Linq.Expressions.Expression,System.Dynamic.DynamicMetaObjectBinder)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.BinderHelper.CreateCallInfo(System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo},System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.BinderHelper.DeduceArgumentRestriction(System.Int32,Microsoft.CSharp.RuntimeBinder.ICSharpInvokeOrInvokeMemberBinder,System.Dynamic.DynamicMetaObject,Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.BinderHelper.GetTypeForErrorMetaObject(System.Dynamic.DynamicMetaObjectBinder,System.Dynamic.DynamicMetaObject)">
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.BinderHelper.IsDynamicallyTypedRuntimeProxy(System.Dynamic.DynamicMetaObject,Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.BinderHelper.ToList``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo.Create(Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpBinaryOperationBinder.ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpBinaryOperationBinder.FallbackBinaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpConvertBinder.#ctor(System.Type,Microsoft.CSharp.RuntimeBinder.CSharpConversionKind,System.Boolean,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpGetIndexBinder.#ctor(System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <parameter name="argumentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpGetIndexBinder.ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpGetMemberBinder.#ctor(System.String,System.Boolean,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpGetMemberBinder.ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpInvokeBinder.#ctor(Microsoft.CSharp.RuntimeBinder.CSharpCallFlags,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <parameter name="argumentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpInvokeBinder.Microsoft#CSharp#RuntimeBinder#ICSharpInvokeOrInvokeMemberBinder#ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpInvokeBinder.Microsoft#CSharp#RuntimeBinder#ICSharpInvokeOrInvokeMemberBinder#Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpInvokeBinder.Microsoft#CSharp#RuntimeBinder#ICSharpInvokeOrInvokeMemberBinder#TypeArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpInvokeConstructorBinder.ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpInvokeConstructorBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpInvokeConstructorBinder.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpInvokeConstructorBinder.TypeArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpInvokeMemberBinder.#ctor(Microsoft.CSharp.RuntimeBinder.CSharpCallFlags,System.String,System.Type,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <parameter name="argumentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpInvokeMemberBinder.FallbackInvoke(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpInvokeMemberBinder.Microsoft#CSharp#RuntimeBinder#ICSharpInvokeOrInvokeMemberBinder#ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpInvokeMemberBinder.Microsoft#CSharp#RuntimeBinder#ICSharpInvokeOrInvokeMemberBinder#TypeArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpIsEventBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpSetIndexBinder.#ctor(System.Boolean,System.Boolean,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <parameter name="argumentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpSetIndexBinder.ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpSetMemberBinder.#ctor(System.String,System.Boolean,System.Boolean,System.Type,System.Collections.Generic.IEnumerable{Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpSetMemberBinder.ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.CSharpUnaryOperationBinder.ArgumentInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.CSharpUnaryOperationBinder.FallbackUnaryOperation(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicBindingFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.CreateDelegateAndInvoke(System.Type[],System.Runtime.CompilerServices.CallSiteBinder,System.Object[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="delegateSignatureTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.CreateDelegateSignatureAndArgumentInfos(System.Object[],System.Type[],Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags[],System.Type[]@,Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo[]@)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argFlags">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.DynamicDebugViewEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.DynamicDebugViewEmptyException.Empty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.Items">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.QueryDynamicObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.TryEvalCast``2(``0,System.Type,Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.TryEvalMethodVarArgs(System.Object[],System.Type[],Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags[],System.String,System.Type,System.Type[])">
    <parameter name="methodArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argFlags">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.TryGetMemberValue(System.Object,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.TryGetMemberValue``1(``0,System.String,System.Type,System.Boolean)">
    <parameter name="propName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.TryGetMemberValueVarArgs(System.Object[],System.Type[],Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags[],System.Type)">
    <parameter name="propArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argFlags">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.TrySetMemberValue``2(``0,System.String,``1,Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags,System.Type)">
    <parameter name="propName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.DynamicMetaObjectProviderDebugView.TrySetMemberValueVarArgs(System.Object[],System.Type[],Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags[],System.Type)">
    <parameter name="propArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argFlags">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.ArgumentNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.ArgumentOutOfRange(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindBinaryAssignmentFailedNullReference">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindBinaryAssignmentRequireTwoArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindBinaryOperatorRequireTwoArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindCallFailedOverloadResolution">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindCallToConditionalMethod(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindExplicitConversionRequireOneArgument">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindImplicitConversionRequireOneArgument">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindInvokeFailedNonDelegate">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindPropertyFailedEvent(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindPropertyFailedMethodGroup(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindRequireArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindToVoidMethodButExpectResult">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.BindUnaryOperatorRequireOneArgument">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.InternalCompilerError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.NotImplemented">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.NotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Error.NullReferenceOnMemberException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.CController.SubmitError(Microsoft.CSharp.RuntimeBinder.Errors.CError)">
    <parameter name="pError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.CError.ComputeString(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,System.String[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.CError.Initialize(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,System.String[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.CErrorFactory.CreateError(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.CParameterizedError.Initialize(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,Microsoft.CSharp.RuntimeBinder.Errors.ErrArg[])">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrArg.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <parameter name="mpwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrArg.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrArgRef.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <parameter name="mpwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrArgRef.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrArgSymKind.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorFacts.GetMessage(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorFacts.GetMessage(Microsoft.CSharp.RuntimeBinder.Errors.MessageID)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.CreateError(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.Error(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,Microsoft.CSharp.RuntimeBinder.Errors.ErrArg[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.ErrorRef(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,Microsoft.CSharp.RuntimeBinder.Errors.ErrArgRef[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.ErrorTreeArgs(Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,Microsoft.CSharp.RuntimeBinder.Errors.ErrArg[])">
    <parameter name="prgarg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.MakeError(Microsoft.CSharp.RuntimeBinder.Errors.CParameterizedError@,Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,Microsoft.CSharp.RuntimeBinder.Errors.ErrArg[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.MakeErrorLocArgs(Microsoft.CSharp.RuntimeBinder.Errors.CParameterizedError@,Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,Microsoft.CSharp.RuntimeBinder.Errors.ErrArg[])">
    <parameter name="prgarg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.MakeErrorTreeArgs(Microsoft.CSharp.RuntimeBinder.Errors.CParameterizedError@,Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode,Microsoft.CSharp.RuntimeBinder.Errors.ErrArg[])">
    <parameter name="prgarg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.RealizeError(Microsoft.CSharp.RuntimeBinder.Errors.CParameterizedError)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parameterizedError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling.SubmitError(Microsoft.CSharp.RuntimeBinder.Errors.CParameterizedError)">
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Errors.SR.Culture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.SR.GetObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.SR.GetString(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.SR.GetString(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.SR.GetString(System.String,System.Object[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendIndexer(Microsoft.CSharp.RuntimeBinder.Semantics.IndexerSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="indexer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendMethod(Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext,System.Boolean)">
    <parameter name="meth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendMethodParentSym(Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray@)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendName(Microsoft.CSharp.RuntimeBinder.Syntax.Name)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendParentSym(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendParentType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="pType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendPrintf(System.String,System.Object[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendProperty(Microsoft.CSharp.RuntimeBinder.Semantics.PropertySymbol,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendSym(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendSym(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext,System.Boolean)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="pType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrAppendType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext,System.Boolean)">
    <parameter name="pType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder.ErrArgToString(System.String@,Microsoft.CSharp.RuntimeBinder.Errors.ErrArg,System.Boolean@)">
    <parameter name="parg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateArrayIndex(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateAssignment(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateBinaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateCall(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateConstantType(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateField(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateInvoke(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateLambda(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateNew(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateProperty(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateUnaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateUserDefinedBinaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GenerateUserDefinedUnaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GetArgumentsFromArrayInit(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRARRINIT)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GetConstructorInfoFromExpr(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMETHODINFO)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="methinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GetMethodInfoFromExpr(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMETHODINFO)">
    <parameter name="methinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GetObject(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.GetPropertyInfoFromExpr(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRPropertyInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.TypesAreEqual(System.Type,System.Type)">
    <parameter name="t1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.ExpressionTreeCallRewriter.VisitCALL(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.GetMemberValueBinder.#ctor(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.GetMemberValueBinder.FallbackGetMember(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="self">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.AddConversionsForArguments(Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[])">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.Bind(System.Dynamic.DynamicMetaObjectBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject@)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindAssignment(System.Dynamic.DynamicMetaObjectBinder,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindBinaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpBinaryOperationBinder,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindCall(Microsoft.CSharp.RuntimeBinder.ICSharpInvokeOrInvokeMemberBinder,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callingObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindCore(System.Dynamic.DynamicMetaObjectBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Dynamic.DynamicMetaObject[],System.Dynamic.DynamicMetaObject@)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindExplicitConversion(Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Type,System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindImplicitConversion(Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Type,System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol},System.Boolean)">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindIsEvent(Microsoft.CSharp.RuntimeBinder.CSharpIsEventBinder,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindProperty(System.Dynamic.DynamicMetaObjectBinder,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.BindUnaryOperation(Microsoft.CSharp.RuntimeBinder.CSharpUnaryOperationBinder,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateArgumentArray(System.Dynamic.DynamicMetaObjectBinder,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Dynamic.DynamicMetaObject[])">
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateArgumentEXPR(Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateArgumentListEXPR(Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol},System.Int32,System.Int32)">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateArray(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="optionalIndexerArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callingObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateCallingObjectForCall(Microsoft.CSharp.RuntimeBinder.ICSharpInvokeOrInvokeMemberBinder,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateEvent(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateExpressionTreeFromResult(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],Microsoft.CSharp.RuntimeBinder.Semantics.Scope,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateField(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateIndexer(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callingObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateLocal(System.Type,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateMemberGroupEXPR(System.String,System.Collections.Generic.IList{System.Type},Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.SYMKIND)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="callingObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.CreateProperty(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callingObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.DeferBinding(System.Dynamic.DynamicMetaObjectBinder,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Dynamic.DynamicMetaObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol},System.Dynamic.DynamicMetaObject@)">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.DispatchPayload(System.Dynamic.DynamicMetaObjectBinder,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.GenerateBoundLambda(Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],Microsoft.CSharp.RuntimeBinder.Semantics.Scope,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.GetCLROperatorName(System.Linq.Expressions.ExpressionType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.PopulateLocalScope(System.Dynamic.DynamicMetaObjectBinder,Microsoft.CSharp.RuntimeBinder.Semantics.Scope,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[],System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression},System.Collections.Generic.Dictionary{System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol})">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.PopulateSymbolTableWithPayloadInformation(System.Dynamic.DynamicMetaObjectBinder,System.Type,Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ArgumentObject[])">
    <parameter name="payload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinder.ReorderArgumentsForNamedAndOptional(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="callingObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderExtensions.IsNullableType(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateDeclaration.Agg">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateDeclaration.getInputFile">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol.GetOuterAgg">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol.getThisType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol.HasConversion(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader)">
    <parameter name="pLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol.InitFromInfile(Microsoft.CSharp.RuntimeBinder.Semantics.InputFile)">
    <parameter name="infile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol.InternalsVisibleTo(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol.Parent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType.AreAllTypeArgumentsUnitTypes(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="typeArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType.GetBaseClass">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType.GetDelegateParameters(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader)">
    <parameter name="pSymbolLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType.GetDelegateReturnType(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader)">
    <parameter name="pSymbolLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType.SetTypeArgsAll(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="outerTypeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType.GetBaseElementType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AssemblyQualifiedNamespaceSymbol.AsNamespace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AssemblyQualifiedNamespaceSymbol.AsType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.AssemblyQualifiedNamespaceSymbol.GetNS">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory,Microsoft.CSharp.RuntimeBinder.Semantics.OutputContext,Microsoft.CSharp.RuntimeBinder.Semantics.NameGenerator,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.KAID)">
    <parameter name="pSemanticChecker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext.CreateInstance(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory,Microsoft.CSharp.RuntimeBinder.Semantics.OutputContext,Microsoft.CSharp.RuntimeBinder.Semantics.NameGenerator,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.KAID)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="outputContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pSemanticChecker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.#ctor(Microsoft.CSharp.RuntimeBinder.Syntax.NameManager,Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager)">
    <parameter name="nameMgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.AllocParams(System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.CompareTypes(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="ta1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ta2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.ConcatParams(Microsoft.CSharp.RuntimeBinder.Semantics.CType[],Microsoft.CSharp.RuntimeBinder.Semantics.CType[])">
    <parameter name="prgtype1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prgtype2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.ConcatParams(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="pta1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pta2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.GetNameFromPtrs(System.Object,System.Object)">
    <parameter name="u1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.GetNsAid(Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.KAID)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.GetRootNsAid(Microsoft.CSharp.RuntimeBinder.Semantics.KAID)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.LookupAggMember(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.symbmask_t)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.LookupGlobalSymCore(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.symbmask_t)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.LookupNextSym(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.symbmask_t)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.TypeArrayKey.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.CType[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR.TypeArrayKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CConversions.FBoxingConv(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CConversions.FExpRefConv(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CConversions.FImpRefConv(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CConversions.FIsSameType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CConversions.FUnwrappingConv(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CConversions.FWrappingConv(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CConversions.HasGenericDelegateExplicitReferenceConversion(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pTarget">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CheckedContext.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext,System.Boolean,System.Boolean)">
    <parameter name="parentCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CheckedContext.CreateInstance(Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CMemberLookupResults.GetMethodIterator(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.Declaration,System.Boolean,System.Boolean,System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.symbmask_t)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CNullable.BindNew(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pExprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CNullable.BindValue(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="exprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Copy(Microsoft.CSharp.RuntimeBinder.Semantics.ConstValKind,Microsoft.CSharp.RuntimeBinder.Semantics.CONSTVAL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Create(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Create(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Create(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Create(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Create(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Create(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.Create(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.GetBool(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.GetDefaultValue(Microsoft.CSharp.RuntimeBinder.Semantics.ConstValKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.GetInt(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.GetNullRef">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ConstValFactory.GetUInt(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker.CheckAccess(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="atsCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="symCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker.CheckAccess2(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="symCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="atsCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker.CheckAccessCore(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="symCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker.CheckForStaticClass(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Errors.ErrorCode)">
    <parameter name="CType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker.CheckTypeAccess(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker.ReportAccessError(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="swtBad">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.AsAggregateType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.AsArrayType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.AsErrorType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.AsNullableType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.AsParameterModifierType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.AsPointerType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.AsType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.AsTypeParameterType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.CalculateAssociatedSystemType(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.CType.CalculateAssociatedSystemTypeForAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBOUNDLAMBDA.DelegateType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.AdjustCallArgumentsForParams(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@)">
    <parameter name="mp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.AdjustMemberObject(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean@,System.Boolean@)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ambiguousOperatorError(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BadOperatorTypesError(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pOperand1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BadOperatorTypesError(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pOperand1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindArrayIndexCore(Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pOp1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pOp2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindAssignment(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean)">
    <parameter name="op2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindBoolBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindBoolBitwiseOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig)">
    <parameter name="expr1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindBoolUnaOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindConstantCast(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@,System.Boolean)">
    <parameter name="exprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindDecBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindDecimalConstCast(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT)">
    <parameter name="exprDestType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="srcType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindDelBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindEnumBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindEnumUnaOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindExplicitConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="pDestinationTypeExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindExplicitConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="pDestinationTypeExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindExplicitConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="pDestinationTypeExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindFloatOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindGrpConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean)">
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="grp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindGrpConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL@,System.Boolean)">
    <parameter name="grp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindGrpConversionCore(Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst@,Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray@,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst@)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindImplicitConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="pDestinationTypeExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindImplicitConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="pDestinationTypeExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindImplicitConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="pDestinationTypeExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindIncOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindIncOpCore(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindIndexer(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindIntBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindIntegerNeg(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindIntOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindIntUnaOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindLiftedBoolBitwiseOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindLiftedIncOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindLiftedStandardBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindLiftedStandardUnop(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindLiftedUDBinop(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Params">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindLiftedUDUnop(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeArg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mpwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindMethodGroupToArguments(Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="grp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindNonliftedIncOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindNubNew(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="exprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindNubValue(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="exprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindNullEqualityComparison(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindPredefMethToArgs(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindPtrBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindPtrCmpOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindPtrToArray(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRLOCAL,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="exprLoc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindPtrToString(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindRealBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindRealUnaOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindRefCmpOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindShiftOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindSimpleCast(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@)">
    <parameter name="typeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindSimpleCast(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG)">
    <parameter name="exprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindStandardBinop(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindStandardBinopCore(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindStrBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindStrCmpOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindStringConcat(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindToField(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.FieldWithType,Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag)">
    <parameter name="fwt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindToField(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.FieldWithType,Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fwt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindToMethod(Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP,Microsoft.CSharp.RuntimeBinder.Semantics.MemLookFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pMemGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindToProperty(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.PropWithType,Microsoft.CSharp.RuntimeBinder.Semantics.BindingFlag,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP)">
    <parameter name="pObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pwt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pMemGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindUDBinop(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindUDBinopCall(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="Params">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mpwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindUDConversionCore(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst)">
    <parameter name="pFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mwiBest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindUDConversionCore(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@)">
    <parameter name="pFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mwiBest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindUDUnop(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindUDUnopCall(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mpwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BindUserBoolOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.bindUserDefinedBinOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpSig)">
    <parameter name="fnc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.canConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.canConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.CanConvertArg1(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.LiftFlags@,Microsoft.CSharp.RuntimeBinder.Semantics.CType@,Microsoft.CSharp.RuntimeBinder.Semantics.CType@)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.CanConvertArg2(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.LiftFlags@,Microsoft.CSharp.RuntimeBinder.Semantics.CType@,Microsoft.CSharp.RuntimeBinder.Semantics.CType@)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.canConvertInstanceParamForExtension(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.canConvertInstanceParamForExtension(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.canExplicitConversionBeBoundInUncheckedContext(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="typeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.CantConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.checkLvalue(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CheckLvalueKind)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.CheckLvalueProp(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRPROP)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.CheckPropertyAccess(Microsoft.CSharp.RuntimeBinder.Semantics.MethWithType,Microsoft.CSharp.RuntimeBinder.Semantics.PropWithType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="mwt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.chooseArrayIndexType(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.CreateBinopForPredefMethodCall(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.CreateUnaryOpForPredefMethodCall(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="typeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionBetweenAggregates(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionBetweenSimpleTypes(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionFromArrayToArray(Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType,Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType)">
    <parameter name="arraySrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arrayDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionFromDecimalToEnum(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionFromEnumToAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionFromIListToArray(Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType)">
    <parameter name="arrayDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionFromPointerToInt(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionFromTypeVarToAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionToAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionToArray(Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType)">
    <parameter name="arrayDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ExplicitConversion.bindExplicitConversionToEnum(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.FillInArgInfoFromArgList(Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="argInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.FindApplicableSignatures(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.UnaOpMask,System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig})">
    <parameter name="pArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pSignatures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.FindBestMethod(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember},Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos,Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember@,Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember@)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.FindBestSignatureInList(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="binopSignatures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.FoldConstI4Op(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.FoldConstI8Op(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.FoldIntegerConstants(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GenerateAssignmentConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean)">
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GenerateOptimizedAssignment(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetApplicableUserDefinedBinaryOperatorCandidates(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetApplicableUserDefinedBinaryOperatorCandidatesInBaseTypes(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetDelBinOpSigs(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="prgbofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetEnumBinOpSigs(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="prgbofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetEnumBinOpType(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType@)">
    <parameter name="argType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetOptPDT(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetOptPDT(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetPtrBinOpSigs(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="prgbofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetRefEqualSigs(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="prgbofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetReqPDT(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetReqPDT(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType,Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader)">
    <parameter name="symbolLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetSpecialBinopSignatures(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="prgbofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetStandardAndLiftedBinopSignatures(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="rgbofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetUserDefinedBinopArgumentType(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GetUserDefinedBinopArgumentTypes(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType[])">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rgats">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.CopyArgInfos(Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos,Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos)">
    <parameter name="src">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.DoesTypeArgumentsContainErrorSym(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.FindArgumentWithName(Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos,Microsoft.CSharp.RuntimeBinder.Syntax.Name)">
    <parameter name="pArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.FindMostDerivedMethod(Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pMethProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.FindMostDerivedMethod(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="symbolLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pMethProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.GenerateOptionalArgument(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory,Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="symbolLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methprop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.GetNextSym(Microsoft.CSharp.RuntimeBinder.Semantics.CMemberLookupResults.CMethodIterator)">
    <parameter name="iterator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.GetTypeQualifier(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP)">
    <parameter name="pGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.NamedArgumentNamesAppearInParameterList(Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol)">
    <parameter name="methprop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinder.ReOrderArgsForNamedArguments(Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP,Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos,Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager,Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory,Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader)">
    <parameter name="methprop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pCurrentParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pGroup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="symbolLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinderResult.IsBetterThanCurrent(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="pTypeArgs1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pTypeArgs2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.GroupToArgsBinderResult.NumberOfErrorTypes(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="pTypeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.HandleAmbiguity(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.UdConvInfo},System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prguci">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="typeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.bindImplicitConversionBetweenSimpleTypes(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.bindImplicitConversionFromAgg(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.bindImplicitConversionFromEnum(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.bindImplicitConversionFromNullable(Microsoft.CSharp.RuntimeBinder.Semantics.NullableType)">
    <parameter name="nubSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.bindImplicitConversionFromTypeVar(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType)">
    <parameter name="tyVarSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.bindImplicitConversionToBase(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.bindImplicitConversionToEnum(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="aggTypeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ImplicitConversion.BindNubConversion(Microsoft.CSharp.RuntimeBinder.Semantics.NullableType)">
    <parameter name="nubDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.isConstantInRange(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.isConstantInRange(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean)">
    <parameter name="exprSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.isConvInTable(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.UdConvInfo},Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,System.Boolean,System.Boolean)">
    <parameter name="convTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.IsMatchingStatic(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.IsMethPropCallable(Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,System.Boolean)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.LiftArgument(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@)">
    <parameter name="pParameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.LScalar(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONSTVAL,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.markFieldAssigned(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustCast(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustCast(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustCastCore(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustCastInUncheckedContext(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustConvertCore(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE)">
    <parameter name="destExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.mustConvertCore(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.PopulateSignatureList(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.UnaOpKind,Microsoft.CSharp.RuntimeBinder.Semantics.UnaOpMask,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@)">
    <parameter name="pArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pSignatures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.PostBindMethod(System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst@,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pMWI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.PostBindProperty(System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.PropWithType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithType@,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithType@)">
    <parameter name="pwt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.RecordBinOpSigFromArgs(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpArgInfo)">
    <parameter name="prgbofs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.RecordUnsafeUsage(Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.RemapToOverride(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="symbolLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pswt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeObj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ReportLocalError(Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.CheckLvalueKind,System.Boolean)">
    <parameter name="local">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ReportReadOnlyError(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFIELD,Microsoft.CSharp.RuntimeBinder.Semantics.CheckLvalueKind,System.Boolean)">
    <parameter name="field">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.ReportTypeArgsNotAllowedError(Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,System.Int32,Microsoft.CSharp.RuntimeBinder.Errors.ErrArgRef,Microsoft.CSharp.RuntimeBinder.Errors.ErrArgRef)">
    <parameter name="symbolLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.SetExternalRef(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.tryConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.tryConvert(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONVERTTYPE)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.TryReportLvalueFailure(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CheckLvalueKind)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpSig)">
    <parameter name="fnc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnwrapExpression(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UserDefinedBinaryOperatorCanBeLifted(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="Params">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UserDefinedBinaryOperatorIsApplicable(System.Collections.Generic.List{Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember},Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.verifyMethodArgs(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WhichBofsIsBetter(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.BinOpFullSig,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="bofs1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bofs2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WhichConversionIsBetter(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="p1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="p2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WhichConversionIsBetter(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="p2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="p1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WhichMethodIsBetter(Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember,Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos)">
    <parameter name="node1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WhichMethodIsBetterTieBreaker(Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember,Microsoft.CSharp.RuntimeBinder.Semantics.CandidateFunctionMember)">
    <parameter name="node1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WhichTypeIsBetter(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WhichTypeIsBetter(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeGiven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WhichUofsIsBetter(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig,Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.UnaOpFullSig,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="uofs1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uofs2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeArg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder.WrapShortLivedExpression(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.CreateTypeOf(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.CreateWraps(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBOUNDLAMBDA)">
    <parameter name="anonmeth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.DestroyWraps(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBOUNDLAMBDA,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="anonmeth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.FixLiftedUserDefinedBinaryOperators(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR@)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateBuiltInBinaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateBuiltInUnaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateBuiltInUnaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pOriginalOperator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pOperator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateCall(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateCall(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateCall(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateCall(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateConstant(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateConstructor(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateConversionWithSource(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateDelegateConstructor(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateDelegateInvoke(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateMembersArray(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="anonymousType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateParameter(System.String,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateParamsArray(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateQuestionMarkOperand(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateUserDefinedBinaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateUserDefinedComparisonOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateUserDefinedConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="CType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateUserDefinedConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateUserDefinedConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUSERDEFINEDCONVERSION,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateUserDefinedUnaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GenerateValueAccessConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="pArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.GetPreDefMethod(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.isEnumToDecimalConversion(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="argtype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="desttype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.IsNullableValueAccess(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.IsNullableValueType(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.RewriteLambdaBody(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBOUNDLAMBDA)">
    <parameter name="anonmeth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionTreeRewriter.RewriteLambdaParameters(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBOUNDLAMBDA)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="anonmeth">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asARRAYINDEX(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asARRINIT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asBINOP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asCALL(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asCAST(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asCONSTANT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asEVENT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asFIELD(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asFIELDINFO(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asFUNCPTR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asLIST(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asMEMGRP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asMETHODINFO(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asNamedArgumentSpecification(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asPROP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asPropertyInfo(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asRETURN(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asTYPEOF(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asUSERDEFINEDCONVERSION(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asUSERLOGOP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asWRAP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.asZEROINIT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.GetConst(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.GetSeqVal(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.isANYLOCAL_OK(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.isNull(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.EXPRExtensions.Map(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory,System.Func{Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR})">
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="f">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateAnonymousMethod(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateArrayIndex(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateArrayInit(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Int32[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateArrayLength(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateAssignment(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pLHS">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateBinop(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateBlock(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBLOCK,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRSTMT,Microsoft.CSharp.RuntimeBinder.Semantics.Scope)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateBoolConstant(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateCall(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateCast(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateCast(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateClass(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEARGUMENTS)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateConcat(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateConstant(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateConstant(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONSTVAL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateConstant(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONSTVAL,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateEvent(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EventWithType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateField(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.UInt32,Microsoft.CSharp.RuntimeBinder.Semantics.FieldWithType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateFieldInfo(Microsoft.CSharp.RuntimeBinder.Semantics.FieldSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateFunctionPointer(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="MWI">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateHoistedLocalInExpression(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRLOCAL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateIntegerConstant(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateLambda">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateList(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateList(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateList(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateLocal(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateMemGroup(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <parameter name="mwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateMemGroup(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.SYMKIND,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CMemberLookupResults)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateMethodInfo(Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateMethodInfo(Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <parameter name="mwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateMulti(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateMultiGet(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMULTI)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateNamedArgumentSpecification(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateNeg(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pOperand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateNull">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateOperator(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateProperty(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateProperty(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP,Microsoft.CSharp.RuntimeBinder.Semantics.PropWithType,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithType,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreatePropertyInfo(Microsoft.CSharp.RuntimeBinder.Semantics.PropertySymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateQuestionMark(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pConsequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateReturn(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.Scope,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateReturn(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFLAG,Microsoft.CSharp.RuntimeBinder.Semantics.Scope,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateReverseSequence(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="p1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateSave(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRWRAP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateSequence(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="p2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateStringConstant(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateThis(Microsoft.CSharp.RuntimeBinder.Semantics.LocalVariableSymbol,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateTypeArguments(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateTypeOf(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateTypeOf(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateUnaryOp(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateUserDefinedBinop(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateUserDefinedConversion(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateUserDefinedUnaryOperator(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionKind,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateUserLogOp(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pCallOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateUserLogOpError(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pCallOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateWrap(Microsoft.CSharp.RuntimeBinder.Semantics.Scope,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateWrapNoAutoFree(Microsoft.CSharp.RuntimeBinder.Semantics.Scope,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateZeroInit(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateZeroInit(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE)">
    <parameter name="pTypeExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.CreateZeroInit(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,System.Boolean)">
    <parameter name="pTypeExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprFactory.MakeClass(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.Dispatch(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitADD(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitADDR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitARRAYINDEX(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRARRAYINDEX)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitARRAYLENGTH(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRARRAYLENGTH)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitARRINIT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRARRINIT)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitASSIGNMENT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRASSIGNMENT)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitBINOP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitBITAND(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitBITNOT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitBITOR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitBITXOR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitBLOCK(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBLOCK)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitBOUNDLAMBDA(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBOUNDLAMBDA)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitCALL(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCALL)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitCAST(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCAST)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitChildren(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitCLASS(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCLASS)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitCOMPARE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitCONCAT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONCAT)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitCONSTANT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRCONSTANT)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDEC(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDECIMALDEC(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDECIMALINC(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDECIMALNEG(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDELEGATEADD(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDELEGATEEQ(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDELEGATENE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDELEGATESUB(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitDIV(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitEQ(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitEQUALS(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitEVENT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPREVENT)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitEXPR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitFALSE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitFIELD(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFIELD)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitFIELDINFO(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFIELDINFO)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitFUNCPTR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRFUNCPTR)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitGE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitGT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitHOISTEDLOCALEXPR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRHOISTEDLOCALEXPR)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitINC(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitINDIR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitLE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitLIST(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRLIST)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitLOCAL(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRLOCAL)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitLOGAND(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitLOGNOT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitLOGOR(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitLSHIFT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitLT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitMEMGRP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMEMGRP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitMETHODINFO(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMETHODINFO)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitMOD(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitMUL(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitMULTI(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMULTI)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitMULTIGET(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRMULTIGET)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitNE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitNEG(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitPROP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRPROP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitQUESTIONMARK(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRQUESTIONMARK)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitRANGE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitRETURN(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRRETURN)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitRSHIFT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitSAVE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitSEQREV(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitSEQUENCE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitSTMT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRSTMT)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitSTRINGEQ(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitSTRINGNE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitSUB(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitSWAP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRBINOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitTHISPOINTER(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTHISPOINTER)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitTRUE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitTYPEARGUMENTS(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEARGUMENTS)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitTYPEOF(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEOF)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitTYPEORNAMESPACE(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRTYPEORNAMESPACE)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitUNARYOP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitUNBOUNDLAMBDA(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNBOUNDLAMBDA)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitUPLUS(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUNARYOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitUSERDEFINEDCONVERSION(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUSERDEFINEDCONVERSION)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitUSERLOGOP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRUSERLOGOP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitWRAP(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRWRAP)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ExprVisitorBase.VisitZEROINIT(Microsoft.CSharp.RuntimeBinder.Semantics.EXPRZEROINIT)">
    <parameter name="pExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.FieldSymbol.getClass">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.GlobalSymbolContext.#ctor(Microsoft.CSharp.RuntimeBinder.Syntax.NameManager)">
    <parameter name="namemgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.InputFile.UnionAliasFilter(System.Collections.Generic.HashSet{Microsoft.CSharp.RuntimeBinder.Semantics.KAID}@)">
    <parameter name="bsetDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.KeyPair`2.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.LangCompiler.#ctor(Microsoft.CSharp.RuntimeBinder.Errors.CController,Microsoft.CSharp.RuntimeBinder.Syntax.NameManager)">
    <parameter name="pCtrl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pNameMgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.LangCompiler.SubmitError(Microsoft.CSharp.RuntimeBinder.Errors.CParameterizedError)">
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ListExtensions.Head``1(System.Collections.Generic.List{``0})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ListExtensions.Tail``1(System.Collections.Generic.List{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup.IsDelegateType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pAggType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup.IsDynamicMember(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup.Lookup(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.Name,System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.MemLookFlags)">
    <parameter name="checker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup.LookupInInterfaces(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup.RecordType(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup.ReportBogus(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup.ReportBogusForEventsAndProperties(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup.SearchSingleType(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,System.Boolean@)">
    <parameter name="typeCur">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol.getClass">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol.SetDefaultParameterValue(System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CONSTVAL)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder,Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="pMethodTypeParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.AddExactBound(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.AddLowerBound(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.AddUpperBound(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.CanObjectOfExtensionBeInferred(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder,Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos)">
    <parameter name="pMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pMethodFormalParameterTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pMethodArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.DoesInputTypeContain(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.DoesOutputTypeContain(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.ExactArrayInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.ExactConstructedInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.ExactInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.ExactNullableInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.ExactTypeArgumentInference(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.ExactTypeParameterInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.GetFixedDelegateParameters(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pDelegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.HasUnfixedParamInInputType(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.HasUnfixedParamInOutputType(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.Infer(Microsoft.CSharp.RuntimeBinder.Semantics.ExpressionBinder,Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.ArgInfos,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray@)">
    <parameter name="pMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pMethodFormalParameterTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pMethodArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.IsReallyAType(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.IsUnfixed(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType)">
    <parameter name="pParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.LowerBoundArrayInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.LowerBoundClassInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.LowerBoundConstructedInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.LowerBoundInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.LowerBoundInterfaceInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.LowerBoundTypeArgumentInference(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.LowerBoundTypeParameterInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.MethodGroupReturnTypeInference(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.OutputTypeInference(Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.UpperBoundArrayInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.UpperBoundClassInference(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.UpperBoundConstructedInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.UpperBoundInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.UpperBoundInterfaceInference(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.UpperBoundTypeArgumentInference(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethodTypeInferrer.UpperBoundTypeParameterInference(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.MethPropWithInst)">
    <parameter name="mpwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MiscSymFactory.CreateIndexer(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateDeclaration)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MiscSymFactory.CreateMDInfile(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.mdToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.MiscSymFactory.CreateScope(Microsoft.CSharp.RuntimeBinder.Semantics.Scope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceDeclaration.Bag">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceDeclaration.NameSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceOrAggregateSymbol.AddDecl(Microsoft.CSharp.RuntimeBinder.Semantics.Declaration)">
    <parameter name="decl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceSymbol.DeclAdded(Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceDeclaration)">
    <parameter name="decl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.Operators.GetDisplayName(Microsoft.CSharp.RuntimeBinder.Syntax.OperatorKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.Operators.GetMethodName(Microsoft.CSharp.RuntimeBinder.Syntax.NameManager,Microsoft.CSharp.RuntimeBinder.Syntax.OperatorKind)">
    <parameter name="namemgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.Operators.OperatorOfMethodName(Microsoft.CSharp.RuntimeBinder.Syntax.NameManager,Microsoft.CSharp.RuntimeBinder.Syntax.Name)">
    <parameter name="namemgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol.AddToChildList(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.FindDelegateConstructor(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.FindDelegateConstructor(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.FindDelegateConstructor(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,System.Int32[])">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.GetMethod(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.GetProperty(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFPROP)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.LoadMethod(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,System.Int32[],System.Int32,Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ACCESS,System.Boolean,System.Boolean)">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.LoadMethod(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.LoadProperty(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFPROP)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.LoadProperty(Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFPROP,Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH,Microsoft.CSharp.RuntimeBinder.Semantics.PREDEFMETH)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.LoadTypeArrayFromSignature(System.Int32[],System.Int32@,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="classTyVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.LoadTypeFromSignature(System.Int32[],System.Int32@,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="classTyVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedMembers.LookupMethodWhileLoading(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,System.Int32,Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ACCESS,System.Boolean,System.Boolean,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="argumentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypeFacts.GetNiceName(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypeFacts.GetPredefTypeIndex(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypeFacts.IsPredefinedType(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypes.DelayLoadPredefSym(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypes.FindPredefinedType(Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling,System.String,Microsoft.CSharp.RuntimeBinder.Semantics.KAID,Microsoft.CSharp.RuntimeBinder.Semantics.AggKindEnum,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="errorContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pszType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypes.GetNiceName(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypes.GetNiceName(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypes.Init(Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling,Microsoft.CSharp.RuntimeBinder.SymbolTable)">
    <parameter name="errorContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypes.InitializePredefinedType(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PredefinedTypes.ReportMissingPredefTypeError(Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <parameter name="errorContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PropertySymbol.AsIndexerSymbol">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.PropWithType.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType)">
    <parameter name="swt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.Symbol.InternalsVisibleTo(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.Symbol.SameAssemOrFriend(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsAggregateDeclaration(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsAggregateSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsAssemblyQualifiedNamespaceSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsEventSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsFieldSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsFMETHSYM(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsLocalVariableSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsMethodOrPropertySymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsMethodSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsNamespaceDeclaration(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsNamespaceOrAggregateSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsNamespaceSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsPropertySymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsScope(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolExtensions.AsTypeParameterSymbol(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.#ctor(Microsoft.CSharp.RuntimeBinder.Semantics.GlobalSymbolContext,Microsoft.CSharp.RuntimeBinder.Errors.UserStringBuilder,Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling)">
    <parameter name="globalSymbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.AreTypesEqualForConversion(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.GetAggTypeSym(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeSym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.GetOptPredefType(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.GetOptPredefType(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.GetOptPredefTypeErr(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.GetReqPredefType(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.GetReqPredefType(Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasAnyBaseInterfaceConversion(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDerived">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasArrayConversionToInterface(Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasBaseConversion(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasCovariantArrayConversion(Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType,Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasDelegateConversion(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasIdentityOrImplicitReferenceConversion(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasImplicitBoxingConversion(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasImplicitBoxingTypeParameterConversion(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasImplicitReferenceConversion(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasImplicitReferenceTypeParameterConversion(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasImplicitTypeParameterBaseConversion(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasInterfaceConversion(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.HasVariantConversion(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="pSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pDest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.IsBaseAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <parameter name="derived">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="base">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.IsBaseClass(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDerived">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.IsBaseClassOfClass(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDerived">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.IsBaseInterface(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pDerived">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.isManagedType(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.LookupAggMember(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.symbmask_t)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.LookupInvokeMeth(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymbolLoader.LookupNextSym(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.symbmask_t)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateAggregate(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceOrAggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.InputFile,Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="infile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateAggregateDecl(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.Declaration)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="agg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateClassTypeParameter(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateEvent(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateDeclaration)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateLocalVar(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateMemberVar(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateDeclaration,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateMethod(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateDeclaration)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateMethodTypeParameter(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateNamespace(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateNamespaceAid(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.KAID)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateProperty(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateDeclaration)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactory.CreateUnresolvedAggregate(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymFactoryBase.newBasicSym(Microsoft.CSharp.RuntimeBinder.Semantics.SYMKIND,Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SYMTBL.FindCorrectKind(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.symbmask_t)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="sym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SYMTBL.InsertChild(Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SYMTBL.InsertChildNoGrow(Microsoft.CSharp.RuntimeBinder.Semantics.Symbol)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SYMTBL.Key.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SYMTBL.LookupSym(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.symbmask_t)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType.Event">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType.Field">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType.Meth">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType.MethProp">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.SymWithType.Prop">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray.CopyItems(System.Int32,System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.CType[])">
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray.ItemAsTypeParameterType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeBind.CheckConstraints(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CheckConstraintsFlags)">
    <parameter name="checker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errHandling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeBind.CheckConstraintsCore(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.CheckConstraintsFlags)">
    <parameter name="typeVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="checker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errHandling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeBind.CheckMethConstraints(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling,Microsoft.CSharp.RuntimeBinder.Semantics.MethWithInst)">
    <parameter name="mwi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="checker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeBind.CheckSingleConstraint(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling,Microsoft.CSharp.RuntimeBinder.Semantics.Symbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.CheckConstraintsFlags)">
    <parameter name="checker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errHandling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeBind.SatisfiesBound(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="checker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeBnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateAggregateType(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateAnonMethod">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateArgList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateArray(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateError(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.AssemblyQualifiedNamespaceSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateMethodGroup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateNull">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateNullable(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.BSYMMGR,Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateParameterModifier(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreatePointer(Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateTypeParameter(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pSymbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateUnit">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeFactory.CreateVoid">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.ConcatenateTypeArrays(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="pTypeArray1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pTypeArray2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="agg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="agg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeArgsAll">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetArray(Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetBestAccessibleType(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType@)">
    <parameter name="semanticChecker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bindingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetErrorType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.AssemblyQualifiedNamespaceSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.Name,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nameText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetNubFromNullable(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType)">
    <parameter name="ats">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetNullable(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pUnderlyingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetParameterModifier(Microsoft.CSharp.RuntimeBinder.Semantics.CType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetPointer(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.GetTypeParameter(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pSymbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.InternalsVisibleTo(System.Reflection.Assembly,System.Reflection.Assembly)">
    <parameter name="assemblyThatDefinesAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.ParametersContainTyVar(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType)">
    <parameter name="typeFind">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.ReportMissingPredefTypeError(Microsoft.CSharp.RuntimeBinder.Errors.ErrorHandling,Microsoft.CSharp.RuntimeBinder.Syntax.PredefinedType)">
    <parameter name="errorContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.StdTypeVarColl.GetTypeVarSym(System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager,System.Boolean)">
    <parameter name="pTypeManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstEqualTypeArrays(Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.SubstTypeFlags)">
    <parameter name="taSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstEqualTypes(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="typeCls">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstEqualTypes(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="typeCls">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstEqualTypes(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray,Microsoft.CSharp.RuntimeBinder.Semantics.SubstTypeFlags)">
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstEqualTypesCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="typeDst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="typeCls">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.SubstTypeCore(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.SubstContext)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pctx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.TryArrayVarianceAdjustmentToGetAccessibleType(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext,Microsoft.CSharp.RuntimeBinder.Semantics.ArrayType,Microsoft.CSharp.RuntimeBinder.Semantics.CType@)">
    <parameter name="semanticChecker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bindingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.TryVarianceAdjustmentToGetAccessibleType(Microsoft.CSharp.RuntimeBinder.Semantics.CSemanticChecker,Microsoft.CSharp.RuntimeBinder.Semantics.BindingContext,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateType,Microsoft.CSharp.RuntimeBinder.Semantics.CType@)">
    <parameter name="semanticChecker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bindingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSrc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.TypeContainsAnonymousTypes(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.TypeContainsType(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeFind">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeManager.TypeContainsTyVars(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.TypeArray)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeTable.InsertNullable(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.NullableType)">
    <parameter name="pUnderlyingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeTable.InsertPointer(Microsoft.CSharp.RuntimeBinder.Semantics.CType,Microsoft.CSharp.RuntimeBinder.Semantics.PointerType)">
    <parameter name="pElementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeTable.InsertTypeParameter(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterType)">
    <parameter name="pTypeParameterSymbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeTable.LookupNullable(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pUnderlyingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeTable.LookupPointer(Microsoft.CSharp.RuntimeBinder.Semantics.CType)">
    <parameter name="pElementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Semantics.TypeTable.LookupTypeParameter(Microsoft.CSharp.RuntimeBinder.Semantics.TypeParameterSymbol)">
    <parameter name="pTypeParameterSymbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.SR.Culture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SR.GetObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SR.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SR.GetString(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SR.GetString(System.String,System.Object[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindBinaryAssignmentFailedNullReference">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindBinaryAssignmentRequireTwoArguments">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindBinaryOperatorRequireTwoArguments">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindCallFailedOverloadResolution">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Strings.BindCallToConditionalMethod(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindExplicitConversionRequireOneArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindImplicitConversionRequireOneArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindInvokeFailedNonDelegate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Strings.BindPropertyFailedEvent(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Strings.BindPropertyFailedMethodGroup(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindRequireArguments">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindToVoidMethodButExpectResult">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.BindUnaryOperatorRequireOneArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.EmptyDynamicView">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.GetValueonWriteOnlyProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.InternalCompilerError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.CSharp.RuntimeBinder.Strings.NullReferenceOnMemberException">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddAggregateToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceOrAggregateSymbol,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddConversionsForOneType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddConversionsForType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddEventToSymbolTable(System.Reflection.EventInfo,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.FieldSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="eventInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="aggregate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddFieldToSymbolTable(System.Reflection.FieldInfo,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fieldInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddMethodToSymbolTable(System.Reflection.MemberInfo,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.MethodKindEnum)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callingAggregate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddNamesInInheritanceHierarchy(System.String,System.Reflection.BindingFlags,System.Collections.Generic.List{System.Type})">
    <parameter name="inheritance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddNamesOnType(Microsoft.CSharp.RuntimeBinder.SymbolTable.NameHashKey,System.Reflection.BindingFlags)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddNamespaceToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceOrAggregateSymbol,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddPredefinedMethodToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.Name)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddPredefinedPropertyToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Syntax.Name)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddPropertyToSymbolTable(System.Reflection.PropertyInfo,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="aggregate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AddTypeParameterToSymbolTable(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.AreTypeParametersEquivalent(System.Type,System.Type)">
    <parameter name="t1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="t2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.BuildDeclarationChain(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="callingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.CreateInheritanceHierarchyList(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.CreateParameterArray(System.Reflection.MemberInfo,System.Reflection.ParameterInfo[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.DoesMethodHaveParameterArray(System.Reflection.ParameterInfo[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.FindMatchingMethod(System.Reflection.MemberInfo,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.FindMethodFromMemberInfo(System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="baseMemberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.FindSymWithMatchingArity(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetAggregateTypeParameters(System.Type,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="agg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetConstructedType(System.Type,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="agg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetCountOfModOpts(System.Reflection.ParameterInfo[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetCTypeArrayFromTypes(System.Collections.Generic.IList{System.Type})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetCTypeFromType(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetMethodTypeParameters(System.Reflection.MethodInfo,Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetName(System.String,Microsoft.CSharp.RuntimeBinder.Syntax.NameManager)">
    <parameter name="nameManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetName(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetOriginalTypeParameterType(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetSlotForOverride(System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.GetTypeOfParameter(System.Reflection.ParameterInfo,System.Reflection.MemberInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.IsOperator(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.LoadClassTypeParameter(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.LoadMethodTypeParameter(Microsoft.CSharp.RuntimeBinder.Semantics.MethodSymbol,System.Type)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.LoadSymbolsFromType(System.Type)">
    <parameter name="originalType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.LookupMember(System.String,Microsoft.CSharp.RuntimeBinder.Semantics.EXPR,Microsoft.CSharp.RuntimeBinder.Semantics.ParentSymbol,System.Int32,Microsoft.CSharp.RuntimeBinder.Semantics.MemberLookup,System.Boolean,System.Boolean)">
    <parameter name="callingObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.NameHashKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.PopulateSymbolTableWithName(System.String,System.Collections.Generic.IEnumerable{System.Type},System.Type)">
    <parameter name="callingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.ProcessMethodTypeParameter(System.Reflection.MethodInfo,System.Type,Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol)">
    <parameter name="methinfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.ProcessSpecialTypeInChain(Microsoft.CSharp.RuntimeBinder.Semantics.NamespaceOrAggregateSymbol,System.Type)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.SetInterfacesOnAggregate(Microsoft.CSharp.RuntimeBinder.Semantics.AggregateSymbol,System.Type)">
    <parameter name="aggregate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.SetParameterAttributes(Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,System.Reflection.ParameterInfo[],System.Int32)">
    <parameter name="methProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.SymbolTable.SetParameterDataForMethProp(Microsoft.CSharp.RuntimeBinder.Semantics.MethodOrPropertySymbol,System.Reflection.ParameterInfo[])">
    <parameter name="methProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Syntax.NameManager.Add(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Syntax.NameManager.Lookup(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Syntax.NameTable.Add(Microsoft.CSharp.RuntimeBinder.Syntax.Name)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Syntax.NameTable.Add(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Syntax.NameTable.ComputeHashCode(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Syntax.NameTable.Lookup(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.CSharp.RuntimeBinder.Syntax.TokenFacts.GetText(Microsoft.CSharp.RuntimeBinder.Syntax.TokenKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
</assembly>