<?xml version="1.0" encoding="utf-8"?>
<assembly name="WindowsBase, Version=4.0.0.0">
  <member name="M:MS.Internal.AssemblyHelper.ExtractString(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.GetMetafileFromHemf(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AssemblyHelper.GetXElementTagName(System.Object)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.IsDataSetCollectionProperty(System.ComponentModel.PropertyDescriptor)">
    <parameter name="pd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.IsDataSetCollectionPropertyImpl(System.ComponentModel.PropertyDescriptor)">
    <parameter name="pd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.IsXLinqCollectionProperty(System.ComponentModel.PropertyDescriptor)">
    <parameter name="pd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.IsXLinqCollectionPropertyImpl(System.ComponentModel.PropertyDescriptor)">
    <parameter name="pd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.NullValueForSqlNullableType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.OnAssemblyLoad(System.Object,System.AssemblyLoadEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.OnLoaded(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.SelectStringValue(System.Xml.XmlNode,System.String,System.Xml.XmlNamespaceManager)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.TryGetValueFromXmlNode(System.Object,System.String,System.Object@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AssemblyHelper.TryGetValueFromXmlNodeImpl(System.Object,System.String,System.Object@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTrace.AntiFormat(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTrace.ToStringHelper(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.AvTrace.Trace(System.Diagnostics.TraceEventType,System.Int32,System.String,System.String[],System.Object[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTrace.TraceStartStop(System.Int32,System.String,System.String[],System.Object[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTraceBuilder.AppendFormat(System.String,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTraceBuilder.AppendFormat(System.String,System.Object,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTraceBuilder.AppendFormat(System.String,System.Object[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTraceBuilder.AppendFormat(System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTraceBuilder.AppendFormat(System.String,System.String,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.AvTraceFormat.#ctor(MS.Internal.AvTraceDetails,System.Object[])">
    <parameter name="details">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.BaseHashHelper.DictionaryFromList(System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.BaseHashHelper.RegisterTypes(System.Reflection.Assembly,System.Type[])">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor,System.Object)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.CanAttachProperty(System.Windows.DependencyProperty,System.Windows.DependencyObject)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.FromObj(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetConverter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetDefaultEvent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetDefaultProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetEditor(System.Type)">
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetEvents">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetEvents(System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.APCustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.AttachedPropertyMethodSelector.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.AttachedPropertyMethodSelector.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.AttachedPropertyMethodSelector.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.AttachedPropertyMethodSelector.ParametersMatch(System.Reflection.ParameterInfo[],System.Type[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.AttachedPropertyMethodSelector.ReorderArgumentArray(System.Object[]@,System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.AttachedPropertyMethodSelector.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.AttachedPropertyMethodSelector.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])">
    <parameter name="indexes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.AttachInfo.CanAttach(System.Windows.DependencyObject)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.Windows.DependencyProperty,System.Type)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.#ctor(System.Windows.DependencyProperty,System.Type)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.CanResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.DpType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.FromObj(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.GetAttachedPropertyMethod(System.Windows.DependencyProperty)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.GetAttachedPropertySetMethod(System.Windows.DependencyProperty)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.GetSpecialMethod(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectPropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectProvider.GetAttachedPropertyDescriptor(System.Windows.DependencyProperty,System.Type)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectProvider.GetAttachInfo(System.Windows.DependencyProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectProvider.GetDependencyPropertyKind(System.Windows.DependencyProperty,System.Type)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyObjectProvider.GetTypeDescriptor(System.Type,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DependencyPropertyAttribute.#ctor(System.Windows.DependencyProperty,System.Boolean)">
    <parameter name="dependencyProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.ComponentModel.DependencyPropertyAttribute.TypeId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.CreateProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetConverter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetDefaultEvent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetDefaultProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetEditor(System.Type)">
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetEvents">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetEvents(System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.DPCustomTypeDescriptor.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ComponentModel.PropertyChangeTracker.OnPropertyInvalidation(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.PropertyDescriptorComparer.Equals(System.ComponentModel.PropertyDescriptor,System.ComponentModel.PropertyDescriptor)">
    <parameter name="p2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="p1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.PropertyDescriptorComparer.GetHashCode(System.ComponentModel.PropertyDescriptor)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.PropertyKey.#ctor(System.Type,System.Windows.DependencyProperty)">
    <parameter name="attachedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.ReferenceEqualityComparer.GetHashCode(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ComponentModel.ReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)">
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.#ctor(System.String)">
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.GetLengthOfParameterValue(System.String,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.ParseParameterAndValue(System.String)">
    <parameter name="parameterAndValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.ParseTypeAndSubType(System.String)">
    <parameter name="typeAndSubType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.StrongComparer.Equals(MS.Internal.ContentType,MS.Internal.ContentType)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.StrongComparer.GetHashCode(MS.Internal.ContentType)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.ValidateCarriageReturns(System.String)">
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.ValidateQuotedStringOrToken(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.ValidateQuotedText(System.String)">
    <parameter name="quotedText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.ValidateToken(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="token">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.WeakComparer.Equals(MS.Internal.ContentType,MS.Internal.ContentType)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ContentType.WeakComparer.GetHashCode(MS.Internal.ContentType)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.CopyOnWriteList.List">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.CriticalExceptions.IsCriticalApplicationException(System.Exception)">
    <parameter name="ex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.CriticalExceptions.IsCriticalException(System.Exception)">
    <parameter name="ex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.CriticalExceptions.Unwrap(System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.DefaultValueFactory.DefaultValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.FreezableDefaultValueFactory.#ctor(System.Windows.Freezable)">
    <parameter name="defaultValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.InheritanceContextChangedEventManager.AddListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.InheritanceContextChangedEventManager.CurrentManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.InheritanceContextChangedEventManager.OnInheritanceContextChanged(System.Object,System.EventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.InheritanceContextChangedEventManager.RemoveListener(System.Windows.DependencyObject,System.Windows.IWeakEventListener)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.InheritanceContextHelper.AddInheritanceContext(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Boolean@,System.Windows.DependencyObject@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.InheritanceContextHelper.RemoveContextFromObject(System.Windows.DependencyObject,System.Windows.DependencyObject)">
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.InheritanceContextHelper.RemoveInheritanceContext(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Boolean@,System.Windows.DependencyObject@)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Interop.HRESULT.GetException">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Interop.HRESULT.GetException(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Interop.PROPVARIANT.GetValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CaseInsensitiveOrdinalStringComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CaseInsensitiveOrdinalStringComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CaseInsensitiveOrdinalStringComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CertificatePart.#ctor(System.IO.Packaging.Package,System.Uri)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CertificatePart.GetCertificate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CertificatePart.SetCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CFStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileDeflateTransform.Compress(System.IO.Stream,System.IO.Stream)">
    <parameter name="sink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileDeflateTransform.Decompress(System.IO.Stream,System.IO.Stream)">
    <parameter name="sink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileReference.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileReference.Load(System.IO.BinaryReader,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileReference.Save(MS.Internal.IO.Packaging.CompoundFile.CompoundFileReference,System.IO.BinaryWriter)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileReference.System#IComparable#CompareTo(System.Object)">
    <parameter name="ob">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileStorageReference.System#IComparable#CompareTo(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileStreamReference.#ctor(System.String)">
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileStreamReference.#ctor(System.String,System.String)">
    <parameter name="streamName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileStreamReference.SetFullName(System.String)">
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompoundFileStreamReference.System#IComparable#CompareTo(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompressionTransform.#ctor(System.IO.Packaging.TransformEnvironment)">
    <parameter name="myEnvironment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.CompoundFile.CompressionTransform.ClassTransformIdentifier">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.CompressionTransform.System#IO#Packaging#IDataTransform#GetTransformedStream(System.IO.Stream,System.Collections.IDictionary)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="encodedStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.CompoundFile.CompressionTransform.TransformIdentifier">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.ContainerUtilities.CheckAgainstNull(System.Object,System.String)">
    <parameter name="paramRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.ContainerUtilities.CheckStringAgainstNullAndEmpty(System.String,System.String)">
    <parameter name="testString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.ContainerUtilities.CheckStringAgainstReservedName(System.String,System.String)">
    <parameter name="nameString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.ContainerUtilities.CheckStringForEmbeddedPathSeparator(System.String,System.String)">
    <parameter name="testString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.ContainerUtilities.ConvertBackSlashPathToStringArrayPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.ContainerUtilities.IsReservedName(System.String)">
    <parameter name="nameString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.ContainerUtilities.ReadByteLengthPrefixedDWordPaddedUnicodeString(System.IO.BinaryReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.ContainerUtilities.ReadByteLengthPrefixedDWordPaddedUnicodeString(System.IO.BinaryReader,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.FormatVersion.#ctor(System.String,MS.Internal.IO.Packaging.CompoundFile.VersionPair)">
    <parameter name="featureId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.FormatVersion.#ctor(System.String,MS.Internal.IO.Packaging.CompoundFile.VersionPair,MS.Internal.IO.Packaging.CompoundFile.VersionPair,MS.Internal.IO.Packaging.CompoundFile.VersionPair)">
    <parameter name="featureId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="writerVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="readerVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="updaterVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.FormatVersion.IsReadableBy(MS.Internal.IO.Packaging.CompoundFile.VersionPair)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.FormatVersion.IsUpdatableBy(MS.Internal.IO.Packaging.CompoundFile.VersionPair)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.FormatVersion.LoadFromBinaryReader(System.IO.BinaryReader,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.FormatVersion.LoadFromStream(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.FormatVersion.LoadFromStream(System.IO.Stream,System.Int32@)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptedStream.#ctor(System.IO.Stream,System.Security.RightsManagement.CryptoProvider)">
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptedStream.FindIndexOfBlockAtOffset(MS.Internal.IO.Packaging.SparseMemoryStream,System.Int64,System.Boolean@)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptedStream.FindOffsetOfNextAvailableBlockAfter(MS.Internal.IO.Packaging.SparseMemoryStream,System.Int64)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptedStream.InternalRead(System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptedStream.InternalReliableRead(System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptedStream.ReadFromCache(MS.Internal.IO.Packaging.SparseMemoryStream,System.Int64,System.Int32,System.Byte[],System.Int32)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptedStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.#ctor(System.IO.Packaging.TransformEnvironment)">
    <parameter name="transformEnvironment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.Base32EncodeWithoutPadding(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.ClassTransformIdentifier">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.DeleteUseLicenseForUser(MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform,System.IO.Packaging.StreamInfo,System.Object,System.Boolean@)">
    <parameter name="rmet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="si">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.EnumUseLicenseStreams(MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.UseLicenseStreamCallback,System.Object)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.GetEmbeddedUseLicenses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.LoadPublishLicense">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.LoadUseLicenseAndUserFromStream(System.IO.BinaryReader,System.Security.RightsManagement.ContentUser@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="utf8Reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.LoadUseLicenseFromStream(System.IO.BinaryReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="utf8Reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.LoadUserFromStream(System.IO.BinaryReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="utf8Reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.MakeTypePrefixedUserName(System.Security.RightsManagement.ContentUser)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.ParseTypePrefixedUserName(System.String,System.Security.RightsManagement.AuthenticationType@,System.String@)">
    <parameter name="typePrefixedUserName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.ReadLengthPrefixedString(System.IO.BinaryReader,System.Text.Encoding,System.Int32)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="useLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.SaveUseLicenseForUser(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="useLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.SkipDwordPadding(System.Int32,System.IO.BinaryReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.System#IO#Packaging#IDataTransform#GetTransformedStream(System.IO.Stream,System.Collections.IDictionary)">
    <parameter name="encodedStream">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.TransformIdentifier">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.WriteByteLengthPrefixedDwordPaddedString(System.String,System.IO.BinaryWriter,System.Text.Encoding)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform.WriteDwordPadding(System.Int32,System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.SafeNativeCompoundFileMethods.SafeIStorageImplementation.#ctor(MS.Internal.IO.Packaging.CompoundFile.UnsafeNativeCompoundFileMethods.UnsafeNativeIStorage)">
    <parameter name="storage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.SafeNativeCompoundFileMethods.SafeIStorageImplementation.#ctor(MS.Internal.IO.Packaging.CompoundFile.UnsafeNativeCompoundFileMethods.UnsafeNativeIStorage,MS.Internal.IO.Packaging.CompoundFile.UnsafeNativeCompoundFileMethods.UnsafeLockBytesOnStream)">
    <parameter name="storage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="val">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="index">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.StreamWithDictionary.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.UnsafeNativeCompoundFileMethods.UnsafeLockBytesOnStream.#ctor(System.IO.Stream)">
    <parameter name="underlyingStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.UnsafeNativeCompoundFileMethods.UnsafeLockBytesOnStream.MS#Internal#IO#Packaging#CompoundFile#UnsafeNativeCompoundFileMethods#UnsafeNativeILockBytes#ReadAt(System.UInt64,System.Byte[],System.Int32,System.Int32@)">
    <parameter name="pv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.UnsafeNativeCompoundFileMethods.UnsafeLockBytesOnStream.MS#Internal#IO#Packaging#CompoundFile#UnsafeNativeCompoundFileMethods#UnsafeNativeILockBytes#WriteAt(System.UInt64,System.Byte[],System.Int32,System.Int32@)">
    <parameter name="pv">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.UserUseLicenseDictionaryLoader.AddUseLicenseFromStreamToDictionary(MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform,System.IO.Packaging.StreamInfo,System.Object,System.Boolean@)">
    <parameter name="rmet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="si">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.UserUseLicenseDictionaryLoader.Load(MS.Internal.IO.Packaging.CompoundFile.RightsManagementEncryptionTransform)">
    <parameter name="rmet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.VersionedStream.#ctor(System.IO.Stream)">
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.VersionedStream.#ctor(System.IO.Stream,MS.Internal.IO.Packaging.CompoundFile.VersionedStreamOwner)">
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versionOwner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.VersionedStreamOwner.#ctor(System.IO.Stream,MS.Internal.IO.Packaging.CompoundFile.FormatVersion)">
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.VersionedStreamOwner.PersistVersion(MS.Internal.IO.Packaging.CompoundFile.FormatVersion)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.VersionPair.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompoundFile.VersionPair.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompressEmulationStream.#ctor(System.IO.Stream,System.IO.Stream,System.Int64,MS.Internal.IO.Packaging.IDeflateTransform)">
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tempStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="transformer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompressEmulationStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompressStream.#ctor(System.IO.Stream,System.Int64)">
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompressStream.#ctor(System.IO.Stream,System.Int64,System.Boolean)">
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompressStream.IsDeflateStreamEmpty(System.IO.Stream)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CompressStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.CustomSignedXml.SelectNodeByIdFromObjects(System.Security.Cryptography.Xml.Signature,System.String)">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CustomSignedXml.SelectSubObjectNodeForXAdES(System.Security.Cryptography.Xml.Signature,System.String)">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.CustomSignedXml.SelectSubObjectNodeForXAdESInDataObjects(System.Security.Cryptography.Xml.Signature,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.DeflateEmulationTransform.Buffer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.DeflateEmulationTransform.Compress(System.IO.Stream,System.IO.Stream)">
    <parameter name="sink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.DeflateEmulationTransform.Decompress(System.IO.Stream,System.IO.Stream)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="sink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.IgnoreFlushAndCloseStream.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InterleavedZipPartStream.#ctor(System.IO.Packaging.ZipPackagePart,System.IO.FileMode,System.IO.FileAccess)">
    <parameter name="owningPart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InterleavedZipPartStream.#ctor(System.String,System.Collections.Generic.List{MS.Internal.IO.Packaging.PieceInfo},System.IO.FileMode,System.IO.FileAccess)">
    <parameter name="sortedPieceInfoList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InterleavedZipPartStream.PieceDirectory.#ctor(System.Collections.Generic.List{MS.Internal.IO.Packaging.PieceInfo},System.IO.FileMode,System.IO.FileAccess)">
    <parameter name="sortedPieceInfoList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InterleavedZipPartStream.PieceDirectory.PieceStreamInfo.System#IComparable{MS#Internal#IO#Packaging#InterleavedZipPartStream#PieceDirectory#PieceStreamInfo}#CompareTo(MS.Internal.IO.Packaging.InterleavedZipPartStream.PieceDirectory.PieceStreamInfo)">
    <parameter name="pieceStreamInfo">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InterleavedZipPartStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.#ctor(System.IO.Packaging.Package)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.#ctor(System.IO.Packaging.Package,System.IO.Packaging.PackagePart)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.#ctor(System.IO.Packaging.PackagePart)">
    <parameter name="part">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.Add(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.Add(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.GetResolvedTargetUri(System.Uri,System.IO.Packaging.TargetMode)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.ParseRelationshipPart(System.IO.Packaging.PackagePart)">
    <parameter name="part">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.ProcessEndElementForRelationshipTag(System.Windows.Markup.XmlCompatibilityReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.ProcessRelationshipAttributes(System.Windows.Markup.XmlCompatibilityReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Packaging.InternalRelationshipCollection.StreamingXmlWriter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackageRelationship}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.ThrowForInvalidAttributeValue(System.Windows.Markup.XmlCompatibilityReader,System.String,System.Exception)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.ThrowIfIncorrectContentType(MS.Internal.ContentType)">
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.ThrowIfInvalidRelationshipType(System.String)">
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.ThrowIfXmlBaseAttributeIsPresent(System.Windows.Markup.XmlCompatibilityReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.WriteRelationshipPart(System.IO.Packaging.PackagePart)">
    <parameter name="part">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.InternalRelationshipCollection.WriteRelationshipsAsXml(System.Xml.XmlWriter,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationship},System.Boolean,System.Boolean)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.MemoryStreamBlock.System#IComparable{MS#Internal#IO#Packaging#MemoryStreamBlock}#CompareTo(MS.Internal.IO.Packaging.MemoryStreamBlock)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PackagingUtilities.CreateUserScopedIsolatedStorageFileStreamWithRandomName(System.Int32,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.PackagingUtilities.DeleteIsolatedStorageFile(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PackagingUtilities.GetNonXmlnsAttributeCount(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PackagingUtilities.ReliableIsolatedStorageFileFolder.GetCurrentStore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.PackagingUtilities.ReliableIsolatedStorageFileFolder.GetStream(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PackagingUtilities.SafeIsolatedStorageFileStream.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,MS.Internal.IO.Packaging.PackagingUtilities.ReliableIsolatedStorageFileFolder)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="folder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PackagingUtilities.VerifyStreamReadArgs(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PackagingUtilities.VerifyStreamWriteArgs(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PartBasedPackageProperties.GeneratePropertyPartUri">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.PartBasedPackageProperties.GetDateData(System.Xml.XmlTextReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PartBasedPackageProperties.GetDateTimePropertyValue(MS.Internal.IO.Packaging.PackageXmlEnum)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.PartBasedPackageProperties.GetPropertyPart">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.PartBasedPackageProperties.GetStringData(System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.PartBasedPackageProperties.ParseCorePropertyPart(System.IO.Packaging.PackagePart)">
    <parameter name="part">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PartBasedPackageProperties.RecordNewBinding(MS.Internal.IO.Packaging.PackageXmlEnum,System.Object,System.Boolean,System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PartBasedPackageProperties.ValidateXsiType(System.Xml.XmlTextReader,System.Object,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceInfo.#ctor(MS.Internal.IO.Zip.ZipFileInfo,System.IO.Packaging.PackUriHelper.ValidatedPartUri,System.String,System.Int32,System.Boolean)">
    <parameter name="prefixName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceNameComparer.System#Collections#Generic#IComparer{MS#Internal#IO#Packaging#PieceInfo}#Compare(MS.Internal.IO.Packaging.PieceInfo,MS.Internal.IO.Packaging.PieceInfo)">
    <parameter name="pieceInfoB">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="pieceInfoA">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceNameHelper.CreatePieceName(System.String,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceNameHelper.FindIsLast(System.String,System.Int32@,MS.Internal.IO.Packaging.PieceNameHelper.ScanStepDelegate@,MS.Internal.IO.Packaging.PieceNameHelper.PieceNameInfo@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceNameHelper.FindPartName(System.String,System.Int32@,MS.Internal.IO.Packaging.PieceNameHelper.ScanStepDelegate@,MS.Internal.IO.Packaging.PieceNameHelper.PieceNameInfo@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceNameHelper.FindPieceExtension(System.String,System.Int32@,MS.Internal.IO.Packaging.PieceNameHelper.ScanStepDelegate@,MS.Internal.IO.Packaging.PieceNameHelper.PieceNameInfo@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceNameHelper.FindPieceNumber(System.String,System.Int32@,MS.Internal.IO.Packaging.PieceNameHelper.ScanStepDelegate@,MS.Internal.IO.Packaging.PieceNameHelper.PieceNameInfo@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceNameHelper.FindString(System.String,System.Int32@,System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.PieceNameHelper.TryParseAsPieceName(System.String,MS.Internal.IO.Packaging.PieceNameHelper.PieceNameInfo@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.SparseMemoryStream.ConstructMemoryStreamFromWriteRequest(System.Byte[],System.Int64,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.SparseMemoryStream.CopyMemoryBlocksToStream(System.IO.Stream)">
    <parameter name="targetStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.SparseMemoryStream.GetSearchBlockForOffset(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.SparseMemoryStream.SkipWrite(System.IO.Stream,System.Int64,System.Int64)">
    <parameter name="targetStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.SparseMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.SparseMemoryStream.WriteAndCollapseBlocks(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.SparseMemoryStream.WriteToStream(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.StorageBasedPackageProperties.#ctor(System.IO.Packaging.StorageRoot)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.StorageBasedPackageProperties.GetDateTimeProperty(System.Guid,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.StorageBasedPackageProperties.GetOleProperty(System.Guid,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.StreamingZipPartStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.TrackingMemoryStreamFactory.Create">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.TrackingMemoryStreamFactory.Create(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.EnsureXmlSignatureParsed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GenerateDigestValue(System.IO.Stream,System.Collections.Generic.List{System.String},System.Security.Cryptography.HashAlgorithm)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GenerateDigestValue(System.IO.Stream,System.String,System.Security.Cryptography.HashAlgorithm)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GenerateKeyInfo(System.Security.Cryptography.AsymmetricAlgorithm,System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GenerateObjectTag(System.Security.Cryptography.HashAlgorithm,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GenerateRelationshipNodeStream(System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationship})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GetHashAlgorithm(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="hashAlgorithmName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GetPackageDataObject">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GetPartTransformList(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GetPrivateKeyForSigning(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.GetRelationshipStream(MS.Internal.IO.Packaging.PartManifestEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.HashStream(System.Security.Cryptography.HashAlgorithm,System.IO.Stream)">
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.Sign(System.IO.Packaging.PackageDigitalSignatureManager,System.IO.Packaging.PackagePart,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.StringToTransform(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.TransformXml(System.Security.Cryptography.Xml.Transform,System.Object)">
    <parameter name="xForm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.UpdatePartFromSignature(System.Security.Cryptography.Xml.Signature)">
    <parameter name="sig">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlDigitalSignatureProcessor.ValidateReferences(System.Collections.IEnumerable,System.Boolean)">
    <parameter name="references">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.GenerateDigestMethod(System.IO.Packaging.PackageDigitalSignatureManager,System.Xml.XmlDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xDoc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.GenerateDigestValueNode(System.Xml.XmlDocument,System.Security.Cryptography.HashAlgorithm,System.IO.Stream,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xDoc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.GenerateManifest(System.IO.Packaging.PackageDigitalSignatureManager,System.Xml.XmlDocument,System.Security.Cryptography.HashAlgorithm,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
    <parameter name="xDoc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.GeneratePartSigningReference(System.IO.Packaging.PackageDigitalSignatureManager,System.Xml.XmlDocument,System.Security.Cryptography.HashAlgorithm,System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xDoc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.GenerateRelationshipSigningReference(System.IO.Packaging.PackageDigitalSignatureManager,System.Xml.XmlDocument,System.Security.Cryptography.HashAlgorithm,System.Uri,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xDoc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipSelectors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.GenerateRelationshipSigningReferences(System.IO.Packaging.PackageDigitalSignatureManager,System.Xml.XmlDocument,System.Security.Cryptography.HashAlgorithm,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.Xml.XmlNode)">
    <parameter name="relationshipSelectors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xDoc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hashAlgorithm">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.GetRelationships(System.IO.Packaging.PackageDigitalSignatureManager,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipSelectorsWithSameSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.ParseDigestAlgorithmTag(System.Xml.XmlReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.ParseDigestValueTag(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.ParsePartUri(System.Xml.XmlReader,MS.Internal.ContentType@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.ParsePartUriAttribute(System.String,MS.Internal.ContentType@)">
    <parameter name="attrValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.ParseReference(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.ParseRelationshipsTransform(System.Xml.XmlReader,System.Uri,System.Collections.Generic.List{System.IO.Packaging.PackageRelationshipSelector}@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureManifest.ParseTransformsTag(System.Xml.XmlReader,System.Uri,System.Collections.Generic.List{System.IO.Packaging.PackageRelationshipSelector}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureProperties.AssembleSignatureProperties(System.Xml.XmlDocument,System.DateTime,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureProperties.DateTimeToXmlFormattedTime(System.DateTime,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureProperties.LegalFormat(System.String)">
    <parameter name="candidateFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureProperties.ParseSignatureTimeTag(System.Xml.XmlReader,System.String@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureProperties.ParseSigningTime(System.Xml.XmlReader,System.String,System.String@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureProperties.VerifyIdAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Packaging.XmlSignatureProperties.VerifyTargetAttribute(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.Crc32Calculator.Accumulate(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.Crc32Calculator.CalculateStreamCrc(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Zip.ProgressiveCrcCalculatingStream.CrcCalculator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ProgressiveCrcCalculatingStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.WriteTimeStream.#ctor(System.IO.Stream)">
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.WriteTimeStream.Read(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.#ctor(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess,System.Boolean,System.Boolean)">
    <parameter name="archiveStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.AddFile(System.String,MS.Internal.IO.Zip.CompressionMethodEnum,MS.Internal.IO.Zip.DeflateOptionEnum)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="zipFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.DeleteFile(System.String)">
    <parameter name="zipFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.FileExists(System.String)">
    <parameter name="zipFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.GetFile(System.String)">
    <parameter name="zipFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.GetFiles">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.OpenOnFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.OpenOnStream(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.ValidateModeAccessShareStreaming(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipArchive.ValidateModeAccessStreamStreamingCombinations(System.IO.Stream,System.IO.FileAccess,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Zip.ZipArchive.ZipFileInfoDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipFileInfoCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.#ctor(System.IO.Stream,System.Boolean,System.Boolean)">
    <parameter name="archiveStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Zip.ZipIOBlockManager.BinaryReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.IO.Zip.ZipIOBlockManager.BinaryWriter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.CommonPreSaveNotificationHandler(System.IO.Stream,System.Int64,System.Int64,System.Int64,System.Int64,MS.Internal.IO.Packaging.SparseMemoryStream@)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.CreateLocalFileBlock(System.String,MS.Internal.IO.Zip.CompressionMethodEnum,MS.Internal.IO.Zip.DeflateOptionEnum)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="zipFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.LoadLocalFileBlock(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="zipFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.MapBlock(MS.Internal.IO.Zip.IZipIOBlock)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.RemoveLocalFileBlock(MS.Internal.IO.Zip.ZipIOLocalFileBlock)">
    <parameter name="localFileBlock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.SaveStream(MS.Internal.IO.Zip.ZipIOLocalFileBlock,System.Boolean)">
    <parameter name="blockRequestingFlush">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.StreamingSaveStream(MS.Internal.IO.Zip.ZipIOLocalFileBlock,System.Boolean)">
    <parameter name="blockRequestingFlush">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOBlockManager.ValidateNormalizeFileName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="zipFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.AddFileBlock(MS.Internal.IO.Zip.ZipIOLocalFileBlock)">
    <parameter name="fileBlock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.CentralDirectoryDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.CreateNew(MS.Internal.IO.Zip.ZipIOBlockManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.FileExists(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.GetCentralDirectoryFileHeader(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.GetFileNamesCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.HeaderFileOffsetComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.ParseRecord(System.IO.BinaryReader,System.Int64,System.Int32,System.Int64)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.RemoveFileBlock(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock.SeekableLoad(MS.Internal.IO.Zip.ZipIOBlockManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryDigitalSignature.ParseRecord(System.IO.BinaryReader)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryFileHeader.CheckIfUpdateNeeded(MS.Internal.IO.Zip.ZipIOLocalFileBlock)">
    <parameter name="fileBlock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryFileHeader.CreateNew(System.Text.Encoding,MS.Internal.IO.Zip.ZipIOLocalFileBlock)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileBlock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryFileHeader.ParseRecord(System.IO.BinaryReader,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryFileHeader.Save(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryFileHeader.UpdateFromLocalFileBlock(MS.Internal.IO.Zip.ZipIOLocalFileBlock)">
    <parameter name="fileBlock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOCentralDirectoryFileHeader.UpdateIfNeeded(MS.Internal.IO.Zip.ZipIOLocalFileBlock)">
    <parameter name="fileBlock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOEndOfCentralDirectoryBlock.CreateNew(MS.Internal.IO.Zip.ZipIOBlockManager,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOEndOfCentralDirectoryBlock.FindPosition(System.IO.Stream)">
    <parameter name="archiveStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOEndOfCentralDirectoryBlock.IsPositionMatched(System.Int32,System.Byte[],System.Int64)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOEndOfCentralDirectoryBlock.ParseRecord(System.IO.BinaryReader,System.Int64)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOEndOfCentralDirectoryBlock.SeekableLoad(MS.Internal.IO.Zip.ZipIOBlockManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraField.CreateNew(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraField.ParseRecord(System.IO.BinaryReader,MS.Internal.IO.Zip.ZipIOZip64ExtraFieldUsage,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraField.Save(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraFieldElement.#ctor(System.UInt16,System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraFieldElement.Parse(System.IO.BinaryReader,MS.Internal.IO.Zip.ZipIOZip64ExtraFieldUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraFieldElement.ParseDataField(System.IO.BinaryReader,System.UInt16)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraFieldElement.Save(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraFieldPaddingElement.CreateNew">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraFieldPaddingElement.MatchesPaddingSignature(System.Byte[])">
    <parameter name="sniffiedBytes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOExtraFieldZip64Element.CreateNew">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOFileItemStream.Write(System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileBlock.CheckFileAccessParameter(System.IO.Stream,System.IO.FileAccess)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileBlock.CreateNew(MS.Internal.IO.Zip.ZipIOBlockManager,System.String,MS.Internal.IO.Zip.CompressionMethodEnum,MS.Internal.IO.Zip.DeflateOptionEnum)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileBlock.DeregisterExposedStream(System.IO.Stream)">
    <parameter name="exposedStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileBlock.ParseRecord(System.IO.BinaryReader,System.String,System.Int64,MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock,MS.Internal.IO.Zip.ZipIOCentralDirectoryFileHeader)">
    <parameter name="centralDirFileHeader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="centralDir">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileBlock.SeekableLoad(MS.Internal.IO.Zip.ZipIOBlockManager,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileBlock.Validate(System.String,MS.Internal.IO.Zip.ZipIOCentralDirectoryBlock,MS.Internal.IO.Zip.ZipIOCentralDirectoryFileHeader)">
    <parameter name="centralDir">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="centralDirFileHeader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileDataDescriptor.CreateNew">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileDataDescriptor.ParseRecord(System.IO.BinaryReader,System.Int64,System.Int64,System.UInt32,System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileDataDescriptor.Save(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileHeader.CreateNew(System.String,System.Text.Encoding,MS.Internal.IO.Zip.CompressionMethodEnum,MS.Internal.IO.Zip.DeflateOptionEnum,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileHeader.ParseRecord(System.IO.BinaryReader,System.Text.Encoding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOLocalFileHeader.Save(System.IO.BinaryWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIORawDataFileBlock.Assign(MS.Internal.IO.Zip.ZipIOBlockManager,System.Int64,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIORawDataFileBlock.DiskImageContains(MS.Internal.IO.Zip.IZipIOBlock)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIORawDataFileBlock.SplitIntoPrefixSuffix(MS.Internal.IO.Zip.IZipIOBlock,MS.Internal.IO.Zip.ZipIORawDataFileBlock@,MS.Internal.IO.Zip.ZipIORawDataFileBlock@)">
    <parameter name="block">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryBlock.CreateNew(MS.Internal.IO.Zip.ZipIOBlockManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryBlock.InitializeFromEndOfCentralDirectory(MS.Internal.IO.Zip.ZipIOEndOfCentralDirectoryBlock)">
    <parameter name="zipIoEocd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryBlock.OverrideValuesBasedOnEndOfCentralDirectory(MS.Internal.IO.Zip.ZipIOEndOfCentralDirectoryBlock)">
    <parameter name="zipIoEocd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryBlock.ParseRecord(System.IO.BinaryReader,System.Int64)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryBlock.SeekableLoad(MS.Internal.IO.Zip.ZipIOBlockManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryLocatorBlock.CreateNew(MS.Internal.IO.Zip.ZipIOBlockManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryLocatorBlock.ParseRecord(System.IO.BinaryReader,System.Int64)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryLocatorBlock.SeekableLoad(MS.Internal.IO.Zip.ZipIOBlockManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.IO.Zip.ZipIOZip64EndOfCentralDirectoryLocatorBlock.SniffTheBlockSignature(MS.Internal.IO.Zip.ZipIOBlockManager)">
    <parameter name="blockManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.NamedObject.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ObservableCollectionDefaultValueFactory`1.CreateDefaultValue(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ObservableCollectionDefaultValueFactory`1.ObservableCollectionDefaultPromoter.#ctor(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Collections.ObjectModel.ObservableCollection{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Permissions.CompoundFileIOPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Permissions.InternalParameterlessPermissionBase.FromXml(System.Security.SecurityElement)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Permissions.RightsManagementPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Permissions.UserInitiatedRoutedEventPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.PlatformCulture.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.ReaderWriterLockWrapper.ReadLock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.ReaderWriterLockWrapper.WriteLock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ResourceIDHelper.GetResourceIDFromRelativePath(System.String)">
    <parameter name="relPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.ResourceIDHelper.GetResourceIDFromUri(System.Uri,System.Uri)">
    <parameter name="baseUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.AttachmentService.SaveWithUI(System.IntPtr,System.Uri,System.Uri)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.AcquireUseLicense(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.ActivateUser(System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.BindUseLicense(System.String,System.Collections.Generic.List{MS.Internal.Security.RightsManagement.RightNameExpirationInfoPair},MS.Internal.Security.RightsManagement.BoundLicenseParams,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="unboundRightsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="boundLicenseParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Security.RightsManagement.ClientSession.CryptoProviderList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.DefaultUserClientSession(System.Security.RightsManagement.AuthenticationType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.EnumerateAllValuesOnSession(MS.Internal.Security.RightsManagement.SafeRightsManagementSessionHandle,MS.Internal.Security.RightsManagement.EnumerateLicenseFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.EnumerateLicense(MS.Internal.Security.RightsManagement.EnumerateLicenseFlags,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.EnumerateUsersCertificateIds(System.Security.RightsManagement.ContentUser,MS.Internal.Security.RightsManagement.EnumerateLicenseFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.ExtractApplicationSpecificDataFromLicense(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.ExtractCertificateIdFromCertificate(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.ExtractCertificateIdFromCertificateChain(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.ExtractUserFromCertificate(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.ExtractUserFromCertificateChain(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetCertificationUrl(System.Security.RightsManagement.AuthenticationType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetClientLicensorCert">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetClientLicensorUrl(System.Security.RightsManagement.AuthenticationType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetContentIdFromPublishLicense(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetElementFromCertificateChain(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetGroupIdentityCert">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetLatestCertificate(MS.Internal.Security.RightsManagement.EnumerateLicenseFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetLicenseOnSession(MS.Internal.Security.RightsManagement.SafeRightsManagementSessionHandle,MS.Internal.Security.RightsManagement.EnumerateLicenseFlags,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetMachineCert">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetOwnerLicense(MS.Internal.Security.RightsManagement.SafeRightsManagementPubHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="issuanceLicenseHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetRegistryPassportCertificationUrl">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetRightFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="rightName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetRightInfoFromRightGroupQueryHandle(MS.Internal.Security.RightsManagement.SafeRightsManagementQueryHandle,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetRightsInfoFromUseLicense(System.String,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetSecurityProviderPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetServiceLocation(MS.Internal.Security.RightsManagement.ServiceType,MS.Internal.Security.RightsManagement.ServiceLocation,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetUnboundLicenseStringAttribute(MS.Internal.Security.RightsManagement.SafeRightsManagementQueryHandle,System.String,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.GetUseLicenseAcquisitionUriFromPublishLicense(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.SignIssuanceLicense(MS.Internal.Security.RightsManagement.IssuanceLicense,System.Security.RightsManagement.UseLicense@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.ClientSession.TryBindUseLicenseToAllIdentites(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.Errors.GetLocalizedFailureCodeMessage(System.Security.RightsManagement.RightsManagementFailureCode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.Errors.GetLocalizedFailureCodeMessageWithDefault(System.Security.RightsManagement.RightsManagementFailureCode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.#ctor(System.DateTime,System.DateTime,System.String,System.Uri,System.Security.RightsManagement.ContentUser,System.String,MS.Internal.Security.RightsManagement.SafeRightsManagementHandle,System.Guid,System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant},System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair},System.Collections.Generic.IDictionary{System.String,System.String},System.Int32,MS.Internal.Security.RightsManagement.RevocationPoint)">
    <parameter name="boundLicenseHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.AddNameDescription(System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair)">
    <parameter name="nameDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.ConvertAuthenticationTypeToString(System.Security.RightsManagement.ContentUser)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.GetApplicationSpecificData(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.GetHandleFromUser(System.Security.RightsManagement.ContentUser)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.GetIssuanceLicenseUserRight(MS.Internal.Security.RightsManagement.SafeRightsManagementPubHandle,System.Int32,MS.Internal.Security.RightsManagement.SafeRightsManagementPubHandle@,System.DateTime@,System.DateTime@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.GetLocalizedNameDescriptionPair(System.Int32,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.GetRevocationPoint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.GetRightFromHandle(MS.Internal.Security.RightsManagement.SafeRightsManagementPubHandle,System.DateTime@,System.DateTime@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.GetRightHandle(System.Security.RightsManagement.ContentGrant)">
    <parameter name="grant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.Initialize(System.DateTime,System.DateTime,System.String,System.Uri,System.Security.RightsManagement.ContentUser,System.String,MS.Internal.Security.RightsManagement.SafeRightsManagementHandle,System.Guid,System.Collections.Generic.ICollection{System.Security.RightsManagement.ContentGrant},System.Collections.Generic.IDictionary{System.Int32,System.Security.RightsManagement.LocalizedNameDescriptionPair},System.Collections.Generic.IDictionary{System.String,System.String},System.Int32,MS.Internal.Security.RightsManagement.RevocationPoint)">
    <parameter name="boundLicenseHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.IssuanceLicense.SetRevocationPoint(MS.Internal.Security.RightsManagement.RevocationPoint)">
    <parameter name="revocationPoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Security.RightsManagement.SystemTime.#ctor(System.Byte[])">
    <parameter name="dataBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.ShutDownListener.OnShutDown(System.Object,System.Object,System.EventArgs)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextServicesLoader.IsAssemblyEnabled(Microsoft.Win32.RegistryKey,System.String,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="subKeyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextServicesLoader.IsLangidEnabled(Microsoft.Win32.RegistryKey,System.String,System.Boolean)">
    <parameter name="subKeyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextServicesLoader.IterateSubKeys(Microsoft.Win32.RegistryKey,System.String,MS.Internal.TextServicesLoader.IterateHandler,System.Boolean)">
    <parameter name="keyBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="subKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TextServicesLoader.SingleTIPWantsToRun(Microsoft.Win32.RegistryKey,System.String,System.Boolean)">
    <parameter name="subKeyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyLocalMachine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TokenizerHelper.#ctor(System.String,System.Char,System.Char)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TokenizerHelper.#ctor(System.String,System.IFormatProvider)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TokenizerHelper.GetCurrentToken">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TokenizerHelper.Initialize(System.String,System.Char,System.Char)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TokenizerHelper.NextTokenRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TokenizerHelper.NextTokenRequired(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object[])">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.TraceActivityItem(MS.Internal.AvTraceDetails)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceDependencyProperty.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object[])">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object[])">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.TraceActivityItem(MS.Internal.AvTraceDetails)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceFreezable.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object[])">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceLevelStore.Key.#ctor(System.Object)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceLevelStore.Key.#ctor(System.Object,System.Boolean)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceLevelStore.Key.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.Trace(System.Diagnostics.TraceEventType,MS.Internal.AvTraceDetails,System.Object[])">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.TraceActivityItem(MS.Internal.AvTraceDetails)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object,System.Object,System.Object)">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.TraceNameScope.TraceActivityItem(MS.Internal.AvTraceDetails,System.Object[])">
    <parameter name="traceDetails">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Utility.ReadOnlyDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Utility.ReadOnlyDictionary`2.Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Utility.ReadOnlyDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Utility.ReadOnlyDictionary`2.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{K@V}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Utility.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.Utility.ReadOnlyDictionary`2.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Utility.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.Utility.ReadOnlyDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.Utility.WeakReferenceKey`1.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Verify.AreNotEqual``1(``0,``0,System.String,System.String)">
    <parameter name="actual">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Verify.FileExists(System.String,System.String)">
    <parameter name="filePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Verify.IsNeitherNullNorEmpty(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.Verify.IsNotNull``1(``0,System.String)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WeakEventTable.CleanupOperation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WeakEventTable.EventKey.#ctor(System.Windows.WeakEventManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WeakEventTable.EventKey.#ctor(System.Windows.WeakEventManager,System.Object,System.Boolean)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WeakEventTable.EventKey.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.WeakEventTable.Item(System.Type)">
    <parameter name="managerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.WeakEventTable.Item(System.Windows.WeakEventManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.WeakEventTable.ReadLock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WeakEventTable.Remove(System.Windows.WeakEventManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:MS.Internal.WeakEventTable.WriteLock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WeakReferenceList.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.WeakReferenceListEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:MS.Internal.WeakReferenceListEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WindowsBase.SafeSecurityHelper.GetAssemblyName(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WindowsBase.SafeSecurityHelper.GetLoadedAssembly(System.Reflection.AssemblyName)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WindowsBase.SecurityHelper.ReadRegistryValue(Microsoft.Win32.RegistryKey,System.String,System.String)">
    <parameter name="baseRegistryKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WindowsBase.SecurityHelper.RunClassConstructor(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WindowsBase.SecurityHelper.SizeOf(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WindowsBase.SecurityHelper.SizeOf(System.Type)">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WindowsBase.SR.Get(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Internal.WindowsBase.SR.Get(System.String,System.Object[])">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Internal.WindowsBase.WeakRefKey.#ctor(System.Object)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ArrayItemList`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ArrayItemList`1.Promote(MS.Utility.ArrayItemList{`0})">
    <parameter name="oldList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ArrayItemList`1.Promote(MS.Utility.SixItemList{`0})">
    <parameter name="oldList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalListBase`1.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Utility.FrugalListBase`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalListBase`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalListBase`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalListBase`1.Promote(MS.Utility.FrugalListBase{`0})">
    <parameter name="newList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalListBase`1.Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalListBase`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Utility.FrugalMap.Iterate(System.Collections.ArrayList,MS.Utility.FrugalMapIterationCallback)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalMapBase.Iterate(System.Collections.ArrayList,MS.Utility.FrugalMapIterationCallback)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalMapBase.Promote(MS.Utility.FrugalMapBase)">
    <parameter name="newMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalObjectList`1.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Utility.FrugalObjectList`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalObjectList`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalObjectList`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalObjectList`1.Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalObjectList`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Utility.FrugalStructList`1.#ctor(System.Collections.Generic.ICollection{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalStructList`1.#ctor(System.Collections.ICollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalStructList`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalStructList`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalStructList`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalStructList`1.Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.FrugalStructList`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Utility.HashObjectMap.Promote(MS.Utility.FrugalMapBase)">
    <parameter name="newMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.InsertionSortMap.Iterate(System.Collections.ArrayList,MS.Utility.FrugalMapIterationCallback)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ItemStructList`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ItemStructList`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ItemStructList`1.Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ItemStructList`1.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Utility.ManifestTraceProvider.EventWrite(MS.Utility.EventTrace.Event,MS.Utility.EventTrace.Keyword,MS.Utility.EventTrace.Level,System.Int32,MS.Utility.EventData*)">
    <parameter name="argv">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.SingleItemList`1.Promote(MS.Utility.SingleItemList{`0})">
    <parameter name="oldList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.SixItemList`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.SixItemList`1.Promote(MS.Utility.SixItemList{`0})">
    <parameter name="oldList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.SixItemList`1.Promote(MS.Utility.ThreeItemList{`0})">
    <parameter name="oldList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ThreeItemList`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ThreeItemList`1.Promote(MS.Utility.SingleItemList{`0})">
    <parameter name="oldList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.ThreeItemList`1.Promote(MS.Utility.ThreeItemList{`0})">
    <parameter name="oldList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.TraceProvider.EncodeObject(System.Object@,MS.Utility.EventData*,System.Byte*)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dataBuffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.TraceProvider.EventWrite(MS.Utility.EventTrace.Event,MS.Utility.EventTrace.Keyword,MS.Utility.EventTrace.Level,System.Int32,MS.Utility.EventData*)">
    <parameter name="argv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Utility.TraceProvider.TraceEvent(MS.Utility.EventTrace.Event,MS.Utility.EventTrace.Keyword,MS.Utility.EventTrace.Level,System.Object[])">
    <parameter name="eventPayload">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.HwndSubclass.#ctor(MS.Win32.HwndWrapperHook)">
    <parameter name="hook">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.HwndSubclass.DispatcherCallbackOperation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.HwndWrapper.DestroyWindow(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.HwndWrapper.UnregisterClass(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.ManagedWndProcTracker.ManagedWndProcTrackerShutDownListener.OnShutDown(System.Object,System.Object,System.EventArgs)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.ManagedWndProcTracker.TrackHwndSubclass(MS.Win32.HwndSubclass,System.IntPtr)">
    <parameter name="subclass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.ManagedWndProcTracker.UnhookHwndSubclass(MS.Win32.HwndSubclass)">
    <parameter name="subclass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.NativeMethods.BitmapHandle.CreateFromHandle(System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.NativeMethods.CharBuffer.CreateBuffer(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.NativeMethods.CharBuffer.GetString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.NativeMethods.CharBuffer.PutString(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.NativeMethods.COMRECT.CopyTo(MS.Win32.NativeMethods.COMRECT)">
    <parameter name="destRect">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.NativeMethods.CursorHandle.GetInvalidCursor">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.NativeMethods.IconHandle.GetInvalidIcon">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.NativeMethods.LOGFONT.#ctor(MS.Win32.NativeMethods.LOGFONT)">
    <parameter name="lf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.NativeMethods.XFORM.#ctor(System.Single[])">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.NativeMethods.XFORM.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.SafeNativeMethods.LoadCursor(System.Runtime.InteropServices.HandleRef,System.IntPtr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.UnsafeNativeMethods.ArrayToVARIANTHelper.ArrayToVARIANTVector(System.Object[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:MS.Win32.UnsafeNativeMethods.CreateBitmap(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.UnsafeNativeMethods.CreateDIBSection(System.Runtime.InteropServices.HandleRef,MS.Win32.NativeMethods.BITMAPINFO@,System.Int32,System.IntPtr@,System.IntPtr,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.UnsafeNativeMethods.CreateIconIndirect(MS.Win32.NativeMethods.ICONINFO)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.UnsafeNativeMethods.GetModuleFileName(System.Runtime.InteropServices.HandleRef)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.UnsafeNativeMethods.GetWindowLongWndProc(System.Runtime.InteropServices.HandleRef)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.UnsafeNativeMethods.ObtainUserAgentString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:MS.Win32.UnsafeNativeMethods.TryGetCursorPos(MS.Win32.NativeMethods.POINT)">
    <parameter name="pt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{System.WeakReference})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.Contains(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.CreateDereferencedList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.ObjectModel.WeakReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Collections.ObjectModel.WeakReadOnlyCollection`1.WeakEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Collections.ObjectModel.WeakReadOnlyCollection`1.WeakEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Collections.Specialized.CollectionChangedEventManager.AddListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Collections.Specialized.CollectionChangedEventManager.CurrentManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Collections.Specialized.CollectionChangedEventManager.OnCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Collections.Specialized.CollectionChangedEventManager.RemoveListener(System.Collections.Specialized.INotifyCollectionChanged,System.Windows.IWeakEventListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CurrentChangedEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.ComponentModel.CurrentChangedEventManager.CurrentManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.ComponentModel.CurrentChangedEventManager.OnCurrentChanged(System.Object,System.EventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CurrentChangedEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CurrentChangingEventManager.AddListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.ComponentModel.CurrentChangingEventManager.CurrentManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.ComponentModel.CurrentChangingEventManager.OnCurrentChanging(System.Object,System.ComponentModel.CurrentChangingEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.CurrentChangingEventManager.RemoveListener(System.ComponentModel.ICollectionView,System.Windows.IWeakEventListener)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DependencyPropertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor,System.String,System.Type,System.Windows.DependencyProperty,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="componentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromName(System.String,System.Type,System.Type,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.ComponentModel.PropertyDescriptor)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type)">
    <parameter name="dependencyProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.DependencyPropertyDescriptor.FromProperty(System.Windows.DependencyProperty,System.Type,System.Type,System.Boolean)">
    <parameter name="dependencyProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.ComponentModel.DependencyPropertyDescriptor.Property">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.ComponentModel.GroupDescription.GroupNameFromItem(System.Object,System.Int32,System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyChangedEventManager.AddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.ComponentModel.PropertyChangedEventManager.CurrentManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.ComponentModel.PropertyChangedEventManager.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyChangedEventManager.PrivateAddListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyChangedEventManager.PrivateRemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.PropertyChangedEventManager.RemoveListener(System.ComponentModel.INotifyPropertyChanged,System.Windows.IWeakEventListener,System.String)">
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.ComponentModel.SortDescription.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Diagnostics.PresentationTraceSources.CreateTraceSource(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.FileFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.FileFormatException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.IO.FileFormatException.SourceUri">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.#ctor(System.IO.Packaging.StorageRoot)">
    <parameter name="containerInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.CreateDataSpaceMapping(MS.Internal.IO.Packaging.CompoundFile.CompoundFileReference,System.String)">
    <parameter name="containerReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.CreateDataSpaceStream(MS.Internal.IO.Packaging.CompoundFile.CompoundFileStreamReference,System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containerReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rawStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.DataSpaceIsDefined(System.String)">
    <parameter name="dataSpaceLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.DataSpaceOf(MS.Internal.IO.Packaging.CompoundFile.CompoundFileReference)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.DefineDataSpace(System.String[])">
    <parameter name="transformStack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.DefineDataSpace(System.String[],System.String)">
    <parameter name="transformStack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newDataSpaceLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.DefineTransform(System.String)">
    <parameter name="transformClassName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.DefineTransform(System.String,System.String)">
    <parameter name="transformClassName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newTransformLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.GetDataSpaceDefinition(System.String)">
    <parameter name="dataSpaceLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.GetInstanceDataStorageOf(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="transformLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.GetPrimaryInstanceStreamOf(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="transformLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.GetTransformFromName(System.String)">
    <parameter name="transformLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.GetTransformInstanceOf(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="transformLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.GetTransformsForStreamInfo(System.IO.Packaging.StreamInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="streamInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.InstantiateDataTransformObject(System.Int32,System.String,System.IO.Packaging.TransformEnvironment)">
    <parameter name="transformEnvironment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="transformClassName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.ReadDataSpaceVersionInformation(System.IO.Packaging.StorageInfo)">
    <parameter name="dataSpaceStorage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.RemoveContainerFromDataSpaceMap(MS.Internal.IO.Packaging.CompoundFile.CompoundFileReference)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.SetDataSpaceDefinition(System.String,System.IO.Packaging.DataSpaceManager.DataSpaceDefinition)">
    <parameter name="dataSpaceLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.SetTransformDefinition(System.String,System.IO.Packaging.DataSpaceManager.TransformInstance)">
    <parameter name="transformLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.DataSpaceManager.TransformLabelIsDefined(System.String)">
    <parameter name="transformLabel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.#ctor(System.IO.Stream)">
    <parameter name="envelopeStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.#ctor(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <parameter name="envelopeStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="packageStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.#ctor(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <parameter name="envelopeStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.#ctor(System.String,System.IO.FileAccess,System.IO.FileShare)">
    <parameter name="envelopeFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.#ctor(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <parameter name="envelopeFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="packageStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.#ctor(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <parameter name="envelopeFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.ContainsEncryptedPackageStream(System.IO.Packaging.StorageRoot)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="envelopeStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Create(System.String,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="envelopeFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.IO.Stream,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="envelopeStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="packageStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.CreateFromPackage(System.String,System.IO.Stream,System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="envelopeFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="packageStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.DataspaceLabelRMEncryptionNoCompression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.EncryptionTransformName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.GetPackage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.InitializeRMForCreate(System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.IsEncryptedPackageEnvelope(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="envelopeStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="envelopeFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="envelopeFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.Open(System.String,System.IO.FileAccess,System.IO.FileShare)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="envelopeFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.EncryptedPackageEnvelope.PackageStreamName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.EncryptedPackageEnvelope.ThrowIfRMEncryptionInfoInvalid(System.Security.RightsManagement.PublishLicense,System.Security.RightsManagement.CryptoProvider)">
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.AddIfNoPrefixCollisionDetected(System.IO.Packaging.PackUriHelper.ValidatedPartUri,System.IO.Packaging.PackagePart)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.DeletePart(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.DeletePartCore(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.DeleteRelationship(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.DoClose(System.IO.Packaging.PackagePart)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.DoCloseRelationshipsXml(System.IO.Packaging.PackagePart)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.DoFlush(System.IO.Packaging.PackagePart)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.DoOperationOnEachPart(System.IO.Packaging.Package.PartOperation)">
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.DoWriteRelationshipsXml(System.IO.Packaging.PackagePart)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.GetPart(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.GetPartCore(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.GetPartHelper(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.GetParts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.Package.GetRelationship(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.GetRelationshipHelper(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.GetRelationships">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.Package.GetRelationshipsByType(System.String)">
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.Package.GetRelationshipsHelper(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.IO.Packaging.Package.PackageProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.Package.PartExists(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.RelationshipExists(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.RestrictedStream.#ctor(System.IO.Stream,System.IO.FileAccess)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.Package.ValidateModeAndAccess(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignature.GetCertificatePart">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignature.GetPartTransformList(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.PackageDigitalSignature.SignatureType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedParts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.PackageDigitalSignature.SignedRelationshipSelectors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignature.Verify(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="signingCertificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="signatures">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.DeleteCertificateIfReferenceCountBecomesZeroVisitor(System.IO.Packaging.PackageRelationship,System.Object)">
    <parameter name="r">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.DeleteRelationshipOfTypePackageToOriginVisitor(System.IO.Packaging.PackageRelationship,System.Object)">
    <parameter name="r">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.DeleteRelationshipToSignature(System.IO.Packaging.PackageRelationship,System.Object)">
    <parameter name="r">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GenerateSignaturePartName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)">
    <parameter name="signatureUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.InternalRemoveSignature(System.Uri,System.Int32)">
    <parameter name="signatureUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)">
    <parameter name="signatureUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.SafeVisitRelationships(System.IO.Packaging.PackageRelationshipCollection,System.IO.Packaging.PackageDigitalSignatureManager.RelationshipOperation)">
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.SafeVisitRelationships(System.IO.Packaging.PackageRelationshipCollection,System.IO.Packaging.PackageDigitalSignatureManager.RelationshipOperation,System.Object)">
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignArguments(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})">
    <parameter name="certificate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.#ctor(System.IO.Packaging.Package,System.Uri,System.String,System.IO.Packaging.CompressionOption)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.IO.Packaging.PackagePart.ContentType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.DeleteRelationship(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetRelationship(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetRelationshipHelper(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetRelationships">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsByType(System.String)">
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetRelationshipsHelper(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetStream(System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePart.GetStreamCore(System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePart.IsStreamClosed(System.IO.Stream)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePart.RelationshipExists(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackagePartCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#Generic#IEnumerable{System#IO#Packaging#PackagePart}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackagePartCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageRelationship.#ctor(System.IO.Packaging.Package,System.IO.Packaging.PackagePart,System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.IO.Packaging.PackageRelationshipCollection.FilteredEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.PackageRelationshipCollection.FilteredEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageRelationshipCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageRelationshipCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackageRelationshipSelector.#ctor(System.Uri,System.IO.Packaging.PackageRelationshipSelectorType,System.String)">
    <parameter name="sourceUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="selectionCriteria">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackageRelationshipSelector.Select(System.IO.Packaging.Package)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="packageUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="packageUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.Create(System.Uri,System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="packageUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.CreatePartUri(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.EscapeSpecialCharacters(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetExceptionIfAbsoluteUri(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetExceptionIfFragmentPresent(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetExceptionIfPartNameEndsWithSlash(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetExceptionIfPartNameStartsWithTwoSlashes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetExceptionIfPartUriInvalid(System.Uri,System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetNormalizedPartUri(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUri(System.Uri)">
    <parameter name="packUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetPackageUriComponent(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="packUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetPartUri(System.Uri)">
    <parameter name="packUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetPartUriComponent(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="packUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetRelationshipPartUri(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetRelativeUri(System.Uri,System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourcePartUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetPartUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetSourcePartUriFromRelationshipPartUri(System.Uri)">
    <parameter name="relationshipPartUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.GetStringForPartUriFromAnyUri(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.IsPartNameEmpty(System.String)">
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.IsRelationshipPartUri(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ResolvePartUri(System.Uri,System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourcePartUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ThrowIfAbsoluteUri(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ThrowIfFragmentPresent(System.String)">
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ThrowIfPartNameEndsWithSlash(System.String)">
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ThrowIfPartNameStartsWithTwoSlashes(System.String)">
    <parameter name="partName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidateAndGetPackUriComponents(System.Uri,System.Uri@,System.Uri@)">
    <parameter name="packUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatedPartUri.#ctor(System.String)">
    <parameter name="partUriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatedPartUri.#ctor(System.String,System.Boolean)">
    <parameter name="partUriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatedPartUri.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="partUriString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatedPartUri.GetNormalizedPartUri">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.IO.Packaging.PackUriHelper.ValidatedPartUri.NormalizedPartUri">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatedPartUri.System#IComparable{System#IO#Packaging#PackUriHelper#ValidatedPartUri}#CompareTo(System.IO.Packaging.PackUriHelper.ValidatedPartUri)">
    <parameter name="otherPartUri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatedPartUri.System#IEquatable{System#IO#Packaging#PackUriHelper#ValidatedPartUri}#Equals(System.IO.Packaging.PackUriHelper.ValidatedPartUri)">
    <parameter name="otherPartUri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatePackageUri(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="packageUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatePackUri(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="packUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.PackUriHelper.ValidatePartUri(System.Uri)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.RightsManagementInformation.DeleteUseLicense(System.Security.RightsManagement.ContentUser)">
    <parameter name="userKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.RightsManagementInformation.GetEmbeddedUseLicenses">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.RightsManagementInformation.LoadPublishLicense">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.RightsManagementInformation.LoadUseLicense(System.Security.RightsManagement.ContentUser)">
    <parameter name="userKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.RightsManagementInformation.SavePublishLicense(System.Security.RightsManagement.PublishLicense)">
    <parameter name="publishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.RightsManagementInformation.SaveUseLicense(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.UseLicense)">
    <parameter name="userKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="useLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.SignatureVerificationEventArgs.#ctor(System.IO.Packaging.PackageDigitalSignature,System.IO.Packaging.VerifyResult)">
    <parameter name="signature">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.#ctor(System.IO.Packaging.StorageInfo,System.String)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.BuildFullNameFromParentName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.BuildFullNameInternalFromParentNameInternal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.BuildStorageInfoRelativeToStorage(System.IO.Packaging.StorageInfo,System.String)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.CanOpenStorage(System.String)">
    <parameter name="nameInternal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.CoreForChildStorage(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="storageNname">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.CoreForChildStream(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="streamName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.CreateStorage(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.CreateStream(System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.CreateSubStorage(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.Delete(System.Boolean,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.DeleteStream(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.DeleteSubStorage(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.DestroyElement(System.String)">
    <parameter name="elementNameInternal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.FindStatStgOfName(System.String,System.Runtime.InteropServices.ComTypes.STATSTG@)">
    <parameter name="streamName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.GetStreamInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.GetSubStorageInfo(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.InternalExists(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.InvalidateEnumerators(System.IO.Packaging.StorageInfoCore)">
    <parameter name="invalidateCore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.RecursiveStorageInfoCoreRelease(System.IO.Packaging.StorageInfoCore)">
    <parameter name="startCore">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.RemoveSubStorageEntryFromDataSpaceMap(System.IO.Packaging.StorageInfo)">
    <parameter name="storageInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.IO.Packaging.StorageInfo.Root">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.StreamExists(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageInfo.SubStorageExists(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.CreateOnIStorage(MS.Internal.IO.Packaging.CompoundFile.IStorage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.CreateOnStream(System.IO.Stream)">
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.CreateOnStream(System.IO.Stream,System.IO.FileMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.GetDataSpaceManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.Open(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.Open(System.String,System.IO.FileMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StorageRoot.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.#ctor(System.IO.Packaging.StorageInfo,System.String)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="streamName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.#ctor(System.IO.Packaging.StorageInfo,System.String,System.IO.Packaging.CompressionOption,System.IO.Packaging.EncryptionOption)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="streamName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.BuildStreamInfoRelativeToStorage(System.IO.Packaging.StorageInfo,System.String)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.BuildStreamOnUnderlyingIStream(MS.Internal.IO.Packaging.CompoundFile.IStream,System.IO.FileAccess,System.IO.Packaging.StreamInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.CFStreamOfClone(System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.Create">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.Create(System.IO.FileMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.Create(System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.Create(System.IO.FileMode,System.IO.FileAccess,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.GetStream">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.StreamInfo.GetStream(System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.TransformEnvironment.GetInstanceDataStorage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.TransformEnvironment.GetPrimaryInstanceData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.#ctor(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess,System.Boolean)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.#ctor(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.#ctor(MS.Internal.IO.Zip.ZipArchive,System.IO.Packaging.ZipPackage.IgnoredItemHelper)">
    <parameter name="zipArchive">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.AddContentType(System.IO.Packaging.PackUriHelper.ValidatedPartUri,MS.Internal.ContentType,MS.Internal.IO.Zip.CompressionMethodEnum,MS.Internal.IO.Zip.DeflateOptionEnum,System.Boolean)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.AddDefaultElement(System.String,MS.Internal.ContentType,System.Boolean)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.AddOverrideElement(System.IO.Packaging.PackUriHelper.ValidatedPartUri,MS.Internal.ContentType,System.Boolean)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.DeleteContentType(System.IO.Packaging.PackUriHelper.ValidatedPartUri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.GetContentType(System.IO.Packaging.PackUriHelper.ValidatedPartUri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.OpenContentTypeStream(MS.Internal.IO.Zip.ZipFileInfoCollection)">
    <parameter name="zipFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.ParseContentTypesFile(MS.Internal.IO.Zip.ZipFileInfoCollection)">
    <parameter name="zipFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.ProcessDefaultTagAttributes(System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.ProcessEndElement(System.Xml.XmlTextReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.ProcessOverrideTagAttributes(System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.ThrowIfXmlAttributeMissing(System.String,System.String,System.String,System.Xml.XmlTextReader)">
    <parameter name="attributeValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.ValidateXmlAttribute(System.String,System.String,System.String,System.Xml.XmlTextReader)">
    <parameter name="attributeValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.WriteDefaultElement(System.Xml.XmlWriter,System.String,MS.Internal.ContentType)">
    <parameter name="xmlWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ContentTypeHelper.WriteOverrideElement(System.Xml.XmlWriter,System.IO.Packaging.PackUriHelper.ValidatedPartUri,MS.Internal.ContentType)">
    <parameter name="xmlWriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.DeleteInterleavedPartOrStream(System.Collections.Generic.List{MS.Internal.IO.Packaging.PieceInfo})">
    <parameter name="sortedPieceInfoList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.DeletePartCore(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ExtensionEqualityComparer.System#Collections#Generic#IEqualityComparer{System#String}#Equals(System.String,System.String)">
    <parameter name="extensionB">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="extensionA">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ExtensionEqualityComparer.System#Collections#Generic#IEqualityComparer{System#String}#GetHashCode(System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.GetCompressionOptionFromZipFileInfo(MS.Internal.IO.Zip.ZipFileInfo)">
    <parameter name="zipFileInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.GetPartCore(System.Uri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.GetPartsCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.GetZipItemNameFromOpcName(System.String)">
    <parameter name="opcName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IgnoredItemHelper.AddItem(System.IO.Packaging.PackUriHelper.ValidatedPartUri,System.String,System.String)">
    <parameter name="normalizedPrefixName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IgnoredItemHelper.AddItemForAtomicPart(System.IO.Packaging.PackUriHelper.ValidatedPartUri,System.String)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IgnoredItemHelper.AddItemForStrayPiece(MS.Internal.IO.Packaging.PieceInfo)">
    <parameter name="pieceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IgnoredItemHelper.AddItemsForInvalidSequence(System.String,System.Collections.Generic.List{MS.Internal.IO.Packaging.PieceInfo},System.Int32,System.Int32)">
    <parameter name="normalizedPrefixNameForThisSequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pieces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IgnoredItemHelper.Delete(System.IO.Packaging.PackUriHelper.ValidatedPartUri)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IgnoredItemHelper.DeleteItemsWithSimilarExtention(System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IgnoredItemHelper.UpdateExtensionDictionary(System.IO.Packaging.PackUriHelper.ValidatedPartUri,System.String)">
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IsValidFileItem(MS.Internal.IO.Zip.ZipFileInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.IsZipItemValidOpcPartOrPiece(System.String)">
    <parameter name="zipItemName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.ProcessPieces(System.Collections.Generic.SortedDictionary{MS.Internal.IO.Packaging.PieceInfo,System.Object},System.Collections.Generic.List{System.IO.Packaging.PackagePart})">
    <parameter name="pieceDictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackage.RecordValidSequence(System.String,System.Collections.Generic.List{MS.Internal.IO.Packaging.PieceInfo},System.Int32,System.Int32,System.Collections.Generic.List{System.IO.Packaging.PackagePart})">
    <parameter name="pieces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="normalizedPrefixNameForCurrentSequence">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackagePart.#ctor(System.IO.Packaging.ZipPackage,MS.Internal.IO.Zip.ZipArchive,System.Collections.Generic.List{MS.Internal.IO.Packaging.PieceInfo},System.IO.Packaging.PackUriHelper.ValidatedPartUri,System.String,System.IO.Packaging.CompressionOption)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackagePart.#ctor(System.IO.Packaging.ZipPackage,MS.Internal.IO.Zip.ZipArchive,System.IO.Packaging.PackUriHelper.ValidatedPartUri,System.String,System.IO.Packaging.CompressionOption)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.IO.Packaging.ZipPackagePart.#ctor(System.IO.Packaging.ZipPackage,MS.Internal.IO.Zip.ZipFileInfo,System.IO.Packaging.PackUriHelper.ValidatedPartUri,System.String,System.IO.Packaging.CompressionOption)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="zipFileInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="partUri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.Permissions.MediaPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.Permissions.MediaPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.Permissions.WebBrowserPermission.Copy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.Permissions.WebBrowserPermissionAttribute.CreatePermission">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.ContentGrant.#ctor(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentRight,System.DateTime,System.DateTime)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.ContentUser.#ctor(System.String,System.Security.RightsManagement.AuthenticationType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Security.RightsManagement.ContentUser.AuthenticationProviderType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.RightsManagement.ContentUser.CompareToAnyone(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.ContentUser.CompareToOwner(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.ContentUser.ContentUserComparer.System#Collections#Generic#IEqualityComparer{System#Security#RightsManagement#ContentUser}#Equals(System.Security.RightsManagement.ContentUser,System.Security.RightsManagement.ContentUser)">
    <parameter name="user2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="user1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.ContentUser.ContentUserComparer.System#Collections#Generic#IEqualityComparer{System#Security#RightsManagement#ContentUser}#GetHashCode(System.Security.RightsManagement.ContentUser)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.ContentUser.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Security.RightsManagement.CryptoProvider.BoundGrants">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.RightsManagement.CryptoProvider.Decrypt(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cryptoText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.CryptoProvider.DecryptPublishLicense(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.RightsManagement.CryptoProvider.Encrypt(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clearText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.#ctor(System.String,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="description">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.LocalizedNameDescriptionPair.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.PublishLicense.#ctor(System.String)">
    <parameter name="signedPublishLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicense(System.Security.RightsManagement.SecureEnvironment)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="secureEnvironment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.PublishLicense.AcquireUseLicenseNoUI(System.Security.RightsManagement.SecureEnvironment)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="secureEnvironment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.PublishLicense.DecryptUnsignedPublishLicense(System.Security.RightsManagement.CryptoProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cryptoProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.RightsManagementException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Security.RightsManagement.SecureEnvironment.ClientSession">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="applicationManifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.SecureEnvironment.Create(System.String,System.Security.RightsManagement.ContentUser)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="applicationManifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.SecureEnvironment.CriticalCreate(System.String,System.Security.RightsManagement.AuthenticationType,System.Security.RightsManagement.UserActivationMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="applicationManifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.SecureEnvironment.CriticalCreate(System.String,System.Security.RightsManagement.ContentUser)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="applicationManifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.SecureEnvironment.GetActivatedUsers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.RightsManagement.SecureEnvironment.IsUserActivated(System.Security.RightsManagement.ContentUser)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.SecureEnvironment.RemoveActivatedUser(System.Security.RightsManagement.ContentUser)">
    <parameter name="user">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(MS.Internal.Security.RightsManagement.SafeRightsManagementHandle,System.String)">
    <parameter name="boundLicenseHandle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.#ctor(System.String)">
    <parameter name="publishLicenseTemplate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.ApplicationSpecificDataDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Security.RightsManagement.UnsignedPublishLicense.LocalizedNameDescriptionDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Security.RightsManagement.UnsignedPublishLicense.Sign(System.Security.RightsManagement.SecureEnvironment,System.Security.RightsManagement.UseLicense@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="secureEnvironment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.UseLicense.#ctor(System.String)">
    <parameter name="useLicense">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.UseLicense.Bind(System.Security.RightsManagement.SecureEnvironment)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="secureEnvironment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Security.RightsManagement.UseLicense.Equals(System.Object)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.AttachedPropertyBrowsableAttribute.IsBrowsable(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.AttachedPropertyBrowsableForTypeAttribute.#ctor(System.Type)">
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.AttachedPropertyBrowsableForTypeAttribute.TypeId">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.AttachedPropertyBrowsableWhenAttributePresentAttribute.#ctor(System.Type)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.Int32RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.Int32RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.PointValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.PointValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.RectValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.RectValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.SizeValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.SizeValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.VectorValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Converters.VectorValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Data.DataSourceProvider.DeferRefresh">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Data.DataSourceProvider.UpdateWithNewResult(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.AddInheritanceContext(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ChangeExpressionSources(System.Windows.Expression,System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencySource[])">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ClearValueCommon(System.Windows.EntryIndex,System.Windows.DependencyProperty,System.Windows.PropertyMetadata)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ContainsValue(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.Equals(System.Windows.DependencyProperty,System.Object,System.Object)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.EvaluateAnimatedValueCore(System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Windows.EffectiveValueEntry@)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.EvaluateBaseValueCore(System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Windows.EffectiveValueEntry@)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.EvaluateEffectiveValue(System.Windows.EntryIndex,System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Windows.EffectiveValueEntry,System.Windows.EffectiveValueEntry,System.Windows.OperationType)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.EvaluateExpression(System.Windows.EntryIndex,System.Windows.DependencyProperty,System.Windows.Expression,System.Windows.PropertyMetadata,System.Windows.EffectiveValueEntry,System.Windows.EffectiveValueEntry)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.GetEffectiveValue(System.Windows.EntryIndex,System.Windows.DependencyProperty,System.Windows.RequestFlags)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.GetExpression(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.PropertyMetadata)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.GetValueEntry(System.Windows.EntryIndex,System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Windows.RequestFlags)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.GetValueSource(System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Boolean@)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.GetValueSource(System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@,System.Boolean@)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.DependencyObject.InheritanceContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.InvalidateSubProperty(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.MergeInheritableProperties(System.Windows.DependencyObject)">
    <parameter name="inheritanceParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.NotifySubPropertyChange(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ProcessCoerceValue(System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Windows.EntryIndex@,System.Int32@,System.Windows.EffectiveValueEntry@,System.Windows.EffectiveValueEntry@,System.Object@,System.Object,System.Object,System.Windows.CoerceValueCallback,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="coerceValueCallback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetCurrentDeferredValue(System.Windows.DependencyProperty,System.Windows.DeferredReference)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Boolean)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetCurrentValueInternal(System.Windows.DependencyProperty,System.Object)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetDeferredValue(System.Windows.DependencyProperty,System.Windows.DeferredReference)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetEffectiveValue(System.Windows.EntryIndex,System.Windows.DependencyProperty,System.Int32,System.Windows.PropertyMetadata,System.Object,System.Windows.BaseValueSourceInternal)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetEffectiveValue(System.Windows.EntryIndex,System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Windows.EffectiveValueEntry,System.Windows.EffectiveValueEntry)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetMutableDefaultValue(System.Windows.DependencyProperty,System.Object)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetupPropertyChange(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetupPropertyChange(System.Windows.DependencyPropertyKey,System.Windows.DependencyProperty@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Boolean)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Boolean)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetValueCommon(System.Windows.DependencyProperty,System.Object,System.Windows.PropertyMetadata,System.Boolean,System.Boolean,System.Windows.OperationType,System.Boolean)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.SetValueInternal(System.Windows.DependencyProperty,System.Object)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.UpdateEffectiveValue(System.Windows.EntryIndex,System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Windows.EffectiveValueEntry,System.Windows.EffectiveValueEntry@,System.Boolean,System.Boolean,System.Windows.OperationType)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.UpdateSourceDependentLists(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.DependencySource[],System.Windows.Expression,System.Boolean)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObject.ValidateSources(System.Windows.DependencyObject,System.Windows.DependencySource[],System.Windows.Expression)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)">
    <parameter name="systemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObjectType.FromSystemTypeInternal(System.Type)">
    <parameter name="systemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyObjectType.FromSystemTypeRecursive(System.Type)">
    <parameter name="systemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.#ctor(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.AddOwner(System.Type,System.Windows.PropertyMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.AutoGenerateDefaultValue(System.Type)">
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.AutoGeneratePropertyMetadata(System.Type,System.Windows.ValidateValueCallback,System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.FromName(System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.FromNameKey.#ctor(System.String,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.FromNameKey.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.FromNameKey.Equals(System.Windows.DependencyProperty.FromNameKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.FromNameKey.UpdateNameKey(System.Type)">
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.GetDefaultValue(System.Type)">
    <parameter name="forType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Type)">
    <parameter name="forType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.GetMetadata(System.Windows.DependencyObject)">
    <parameter name="dependencyObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.IsValidType(System.Object,System.Type)">
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
    <parameter name="forType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="forType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.ProcessOverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyObjectType,System.Windows.PropertyMetadata)">
    <parameter name="forType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.Register(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterAttached(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterAttachedReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterCommon(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterParameterValidation(System.String,System.Type,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.RegisterReadOnly(System.String,System.Type,System.Type,System.Windows.PropertyMetadata,System.Windows.ValidateValueCallback)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.SetupOverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyObjectType@,System.Windows.PropertyMetadata@)">
    <parameter name="forType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.ValidateDefaultValueCommon(System.Object,System.Type,System.String,System.Windows.ValidateValueCallback,System.Boolean)">
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyProperty.ValidateMetadataDefaultValue(System.Windows.PropertyMetadata,System.Type,System.String,System.Windows.ValidateValueCallback)">
    <parameter name="defaultMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Windows.PropertyMetadata,System.Object,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)">
    <parameter name="forType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependencyPropertyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Dependent.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.DependentList.InvalidateDependents(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EffectiveValueEntry.#ctor(System.Windows.DependencyProperty)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EffectiveValueEntry.#ctor(System.Windows.DependencyProperty,System.Windows.BaseValueSourceInternal)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EffectiveValueEntry.#ctor(System.Windows.DependencyProperty,System.Windows.FullValueSource)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EffectiveValueEntry.CreateDefaultValueEntry(System.Windows.DependencyProperty,System.Object)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.EffectiveValueEntry.EnsureModifiedValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.EffectiveValueEntry.ModifiedValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.EffectiveValueEntry.SetCoersionBaseValue(System.Object)">
    <parameter name="coersionBaseValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Expression.Copy(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetDP">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Expression.GetSources">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Expression.GetValue(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Expression.OnAttach(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Expression.OnPropertyInvalidation(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ExpressionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.ExpressionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.AddContextInformation(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.AddContextToList(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.CloneCoreCommon(System.Windows.Freezable,System.Boolean,System.Boolean)">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.CloneCurrentValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.Debug_VerifyCloneCommon(System.Windows.Freezable,System.Object,System.Boolean)">
    <parameter name="clone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.Debug_VerifyInstance(System.String,System.Windows.Freezable,System.Windows.Freezable)">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.EnsureConsistentDispatchers(System.Windows.DependencyObject,System.Windows.DependencyObject)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.GetAsFrozen">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozen">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
    <parameter name="sourceFreezable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.GetEventStorage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Freezable.HandlerRemove(System.EventHandler)">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Freezable.PruneContexts(MS.Utility.FrugalObjectList{System.Windows.Freezable.FreezableContextPair},System.Int32)">
    <parameter name="oldList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyConverter.GetKey(System.String,System.Globalization.CultureInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="keyToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.KeyValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ModifierKeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ModifierKeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ModifierKeysConverter.GetModifierKeys(System.String,System.Globalization.CultureInfo)">
    <parameter name="modifiersToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Input.ModifierKeysConverter.MatchModifiers(System.Windows.Input.ModifierKeys)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Input.ModifierKeysValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Int32Rect.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Int32Rect.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Int32Rect.Parse(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Int32Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Int32Rect.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Int32Rect.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Int32RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Interop.ComponentDispatcher.CurrentThreadData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.LocalValueEnumerator.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.LocalValueEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.DateTimeConverter2.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.DateTimeConverter2.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Markup.DateTimeValueSerializerContext.Container">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.DateTimeValueSerializerContext.GetService(System.Type)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.DateTimeValueSerializerContext.GetValueSerializerFor(System.ComponentModel.PropertyDescriptor)">
    <parameter name="descriptor">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.DateTimeValueSerializerContext.GetValueSerializerFor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Markup.DateTimeValueSerializerContext.Instance">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Markup.DateTimeValueSerializerContext.PropertyDescriptor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.InternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
    <parameter name="eventInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.InternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.InternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.InternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.InternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.NameValidationHelper.IsValidIdentifierName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Items">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Markup.Primitives.MarkupProperty.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.GetAlreadyLoadedAssembly(System.String)">
    <parameter name="assemblyNameLookup">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.GetCustomAttributeData(System.Collections.Generic.IList{System.Reflection.CustomAttributeData},System.Type,System.Type@,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.GetCustomAttributeData(System.Reflection.CustomAttributeData,System.Type,System.Type@,System.Boolean,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="cad">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.GetCustomAttributeData(System.Reflection.MemberInfo,System.Type,System.Type@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.GetCustomAttributeData(System.Type,System.Type,System.Boolean,System.Boolean@,System.Type@)">
    <parameter name="attrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.GetQualifiedType(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.GetTypeConverterAttributeData(System.Reflection.MemberInfo,System.Type@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.GetTypeConverterAttributeData(System.Type,System.Type@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.IsNullableType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.LoadAssembly(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.LoadAssemblyHelper(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="assemblyGivenName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ReflectionHelper.ResetCacheForAssembly(System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ServiceProviders.AddService(System.Type,System.Object)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.ServiceProviders.GetService(System.Type)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.TypeConverterHelper.GetConverterType(System.Reflection.MemberInfo)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.TypeConverterHelper.GetConverterType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.TypeConverterHelper.GetConverterTypeFromName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.TypeConverterHelper.GetCoreConverterFromCoreType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.TypeConverterHelper.GetCoreConverterFromCustomType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.TypeConverterHelper.GetCoreConverterTypeFromCustomType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.TypeConverterHelper.GetMemberInfoForPropertyConverter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.TypeConverterHelper.GetTypeConverter(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.TypeTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.TypeTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.#ctor(System.Xml.XmlReader,System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="supportedNamespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.#ctor(System.Xml.XmlReader,System.Windows.Markup.IsXmlNamespaceSupportedCallback,System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="supportedNamespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.AddKnownNamespace(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.AddSubsumingNamespace(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.CompatibilityScope.CanIgnore(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.CompatibilityScope.Ignorable(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.CompatibilityScope.IsIgnorableAtCurrentScope(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.CompatibilityScope.PreserveAttribute(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.CompatibilityScope.PreserveElement(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.CompatibilityScope.ProcessContent(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.CompatibilityScope.ShouldProcessContent(System.String,System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.DeclareNamespaceCompatibility(System.String,System.String)">
    <parameter name="newNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.Error(System.String,System.Object[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.GetMappedNamespace(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.IsNamespaceKnown(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.IsSubsumingNamespace(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.MapNewNamespace(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.PreserveItemSet.Add(System.String)">
    <parameter name="itemName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.PreserveItemSet.ShouldPreserveItem(System.String)">
    <parameter name="itemName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.ProcessContentSet.Add(System.String)">
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.ProcessContentSet.ShouldProcessContent(System.String)">
    <parameter name="elementName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlCompatibilityReader.ShouldIgnoreNamespace(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Markup.XmlWrappingReader.LookupNamespace(System.String)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.XmlWrappingReader.System#Xml#IXmlNamespaceResolver#GetNamespacesInScope(System.Xml.XmlNamespaceScope)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Markup.XmlWrappingReader.System#Xml#IXmlNamespaceResolver#LookupPrefix(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.CanConvertToString(System.Object,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Converters.MatrixValueSerializer.ConvertFromString(System.String,System.Windows.Markup.IValueSerializerContext)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Matrix.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Matrix.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Matrix.Parse(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Media.Matrix.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Matrix.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.Matrix.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Media.MatrixConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.NameScope.Add(System.String,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.NameScope.ContainsKey(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.NameScope.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.NameScope.FindName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.NameScope.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)">
    <parameter name="dependencyObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.NameScope.Item(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.NameScope.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.NameScope.RegisterName(System.String,System.Object)">
    <parameter name="scopedElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.NameScope.Remove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)">
    <parameter name="dependencyObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Object}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.NameScope.UnregisterName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.NameScope.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Point.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Point.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Point.Parse(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Point.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Point.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Point.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PointConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.ClearCachedDefaultValue(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.Copy(System.Windows.DependencyProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PropertyMetadata.CreateInstance">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PropertyMetadata.DefaultFreezeValueCallback(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Windows.EntryIndex,System.Windows.PropertyMetadata,System.Boolean)">
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.GetCachedDefaultValue(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.GetDefaultValue(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.PropertyMetadata.GetReadOnlyValueCallback">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.PropertyMetadata.InvokeMerge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
    <parameter name="baseMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.Merge(System.Windows.PropertyMetadata,System.Windows.DependencyProperty)">
    <parameter name="baseMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.OnApply(System.Windows.DependencyProperty,System.Type)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.PromoteAllCachedDefaultValues(System.Windows.DependencyObject)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.RemoveAllCachedDefaultValues(System.Windows.Freezable)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.Seal(System.Windows.DependencyProperty,System.Type)">
    <parameter name="dp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.PropertyMetadata.SetCachedDefaultValue(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Rect.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Rect.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Rect.Parse(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Rect.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Rect.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Rect.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.RectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Size.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Size.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Size.Parse(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Size.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Size.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Size.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.SizeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)">
    <parameter name="resourceAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.SplashScreen.#ctor(System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.SplashScreen.CloseInternal(System.Object)">
    <parameter name="fadeOutArg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.SplashScreen.CreateWindow(MS.Win32.NativeMethods.BitmapHandle,System.Int32,System.Int32,System.Boolean)">
    <parameter name="hBitmap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.SplashScreen.GetResourceStream">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Abort(System.Windows.Threading.DispatcherOperation)">
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.BeginInvokeImpl(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.CatchExceptionStatic(System.Object,System.Exception)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.CombineParameters(System.Object,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Threading.Dispatcher.CurrentDispatcher">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.ExceptionFilter(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.ExceptionFilterStatic(System.Object,System.Exception)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.FromThread(System.Threading.Thread)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.GetMessagePump">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Threading.Dispatcher.Hooks">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Object[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Object[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.Object[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Delegate,System.Windows.Threading.DispatcherPriority,System.Object[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate,System.Object,System.Object[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Object[])">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.InvokeImpl(System.Windows.Threading.DispatcherPriority,System.TimeSpan,System.Delegate,System.Object,System.Int32)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.PushFrame(System.Windows.Threading.DispatcherFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.PushFrameImpl(System.Windows.Threading.DispatcherFrame)">
    <parameter name="frame">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.SetPriority(System.Windows.Threading.DispatcherOperation,System.Windows.Threading.DispatcherPriority)">
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.Dispatcher.UpdateWin32TimerFromDispatcherThread(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Threading.DispatcherOperation.DispatcherOperationEvent.#ctor(System.Windows.Threading.DispatcherOperation,System.TimeSpan)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.DispatcherOperation.DispatcherOperationFrame.#ctor(System.Windows.Threading.DispatcherOperation,System.TimeSpan)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.DispatcherOperation.InvokeInSecurityContext(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.DispatcherProcessingDisabled.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.DispatcherSynchronizationContext.#ctor(System.Windows.Threading.Dispatcher)">
    <parameter name="dispatcher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.TimeSpan,System.Windows.Threading.DispatcherPriority,System.EventHandler,System.Windows.Threading.Dispatcher)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dispatcher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.DispatcherTimer.#ctor(System.Windows.Threading.DispatcherPriority,System.Windows.Threading.Dispatcher)">
    <parameter name="dispatcher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.DispatcherTimer.FireTick(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Threading.ExceptionWrapper.InternalRealCall(System.Delegate,System.Object,System.Int32)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.PriorityQueue`1.Enqueue(System.Windows.Threading.DispatcherPriority,`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Threading.PriorityQueue`1.GetChain(System.Windows.Threading.DispatcherPriority)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Threading.PriorityQueue`1.InsertItemInSequentialChain(System.Windows.Threading.PriorityItem{`0},System.Windows.Threading.PriorityItem{`0})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.PriorityQueue`1.RemoveItem(System.Windows.Threading.PriorityItem{`0})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Threading.PriorityRange.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UncommonField`1.ClearValue(System.Windows.DependencyObject)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UncommonField`1.GetValue(System.Windows.DependencyObject)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.UncommonField`1.SetValue(System.Windows.DependencyObject,`0)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Vector.ConvertToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Vector.Equals(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Vector.Parse(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Vector.System#IFormattable#ToString(System.String,System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Vector.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Vector.ToString(System.IFormatProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.VectorConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.WeakEventManager.DeliverEvent(System.Object,System.EventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.WeakEventManager.DeliverEventToList(System.Object,System.EventArgs,System.Windows.WeakEventManager.ListenerList)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.WeakEventManager.GetCurrentManager(System.Type)">
    <parameter name="managerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.WeakEventManager.ListenerList.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.WeakEventManager.ListenerList.PrepareForWriting(System.Windows.WeakEventManager.ListenerList@)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.WeakEventManager.Purge(System.Object,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.WeakEventManager.PurgeInternal(System.Object,System.Object,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.WeakEventManager.ReadLock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.WeakEventManager.SetCurrentManager(System.Type,System.Windows.WeakEventManager)">
    <parameter name="managerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.WeakEventManager.StartListening(System.Object)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.WeakEventManager.StopListening(System.Object)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.WeakEventManager.WriteLock">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
</assembly>