<assembly name="NUnit.Framework">

  <member name="M:NUnit.Framework.Assert.Fail(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Fail(System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Fail">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assertion.Fail">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assertion.Fail(System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Inconclusive(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Inconclusive(System.String)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Inconclusive">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>

  <member name="M:NUnit.Framework.Assert.IsTrue(System.Boolean,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.IsTrue(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.IsTrue(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.True(System.Boolean,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.True(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.True(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.That(System.Boolean,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.That(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.That(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assertion.Assert(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:false=&gt;void</argument>
    </attribute>
  </member>

  <member name="M:NUnit.Framework.Assert.IsFalse(System.Boolean,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:true=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.IsFalse(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:true=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.IsFalse(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:true=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.False(System.Boolean,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:true=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.False(System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:true=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.False(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>condition:true=&gt;void</argument>
    </attribute>
  </member>

  <member name="M:NUnit.Framework.Assert.IsNotNull(System.Object,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:null=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.IsNotNull(System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:null=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.IsNotNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:null=&gt;void</argument>
    </attribute>
  </member>

  <member name="M:NUnit.Framework.Assert.NotNull(System.Object,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:null=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.NotNull(System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:null=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.NotNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:null=&gt;void</argument>
    </attribute>
  </member>

  <member name="M:NUnit.Framework.Assertion.AssertNotNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:null=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assertion.AssertNotNull(System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:null=&gt;void</argument>
    </attribute>
  </member>

  <member name="M:NUnit.Framework.Assert.IsNull(System.Object,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:notnull=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.IsNull(System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:notnull=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.IsNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:notnull=&gt;void</argument>
    </attribute>
  </member>

  <member name="M:NUnit.Framework.Assert.Null(System.Object,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:notnull=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Null(System.Object,System.String)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:notnull=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Null(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:notnull=&gt;void</argument>
    </attribute>
  </member>

  <member name="M:NUnit.Framework.Assertion.AssertNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:notnull=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assertion.AssertNull(System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.AssertionMethodAttribute.#ctor"/>
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>anObject:notnull=&gt;void</argument>
    </attribute>
  </member>

  <member name="T:NUnit.Framework.SetUpFixtureAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  <member name="T:NUnit.Framework.TestFixtureAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  <member name="T:NUnit.Framework.TestAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  <member name="T:NUnit.Framework.TestCaseAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  <member name="T:NUnit.Framework.TestCaseSourceAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  <member name="T:NUnit.Framework.TestFixtureSetUpAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  <member name="T:NUnit.Framework.TestFixtureTearDownAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  <member name="T:NUnit.Framework.SetUpAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  <member name="T:NUnit.Framework.TearDownAttribute">
    <attribute ctor="M:JetBrains.Annotations.MeansImplicitUseAttribute.#ctor" />
  </member>
  
  <member name="M:NUnit.Framework.Assert.Catch(NUnit.Framework.TestDelegate)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Catch(NUnit.Framework.TestDelegate,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Catch(NUnit.Framework.TestDelegate,System.String,System.Object[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Catch(System.Type,NUnit.Framework.TestDelegate)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Catch(System.Type,NUnit.Framework.TestDelegate,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Catch(System.Type,NUnit.Framework.TestDelegate,System.String,System.Object[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Catch``1(NUnit.Framework.TestDelegate)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Catch``1(NUnit.Framework.TestDelegate,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Catch``1(NUnit.Framework.TestDelegate,System.String,System.Object[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.DoesNotThrow(NUnit.Framework.TestDelegate)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.DoesNotThrow(NUnit.Framework.TestDelegate,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.DoesNotThrow(NUnit.Framework.TestDelegate,System.String,System.Object[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws(NUnit.Framework.Constraints.IResolveConstraint,NUnit.Framework.TestDelegate)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws(NUnit.Framework.Constraints.IResolveConstraint,NUnit.Framework.TestDelegate,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws(NUnit.Framework.Constraints.IResolveConstraint,NUnit.Framework.TestDelegate,System.String,System.Object[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws(System.Type,NUnit.Framework.TestDelegate)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws(System.Type,NUnit.Framework.TestDelegate,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws(System.Type,NUnit.Framework.TestDelegate,System.String,System.Object[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws``1(NUnit.Framework.TestDelegate)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws``1(NUnit.Framework.TestDelegate,System.String)">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:NUnit.Framework.Assert.Throws``1(NUnit.Framework.TestDelegate,System.String,System.Object[])">
    <parameter name="code">
      <attribute ctor="M:JetBrains.Annotations.InstantHandleAttribute.#ctor" />
    </parameter>
  </member>
  
  <member name="M:NUnit.Framework.Assert.Ignore">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Ignore(System.String)">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  <member name="M:NUnit.Framework.Assert.Ignore(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.ContractAnnotationAttribute.#ctor(System.String)">
        <argument>=&gt;void</argument>
    </attribute>
  </member>
  
  
</assembly>
