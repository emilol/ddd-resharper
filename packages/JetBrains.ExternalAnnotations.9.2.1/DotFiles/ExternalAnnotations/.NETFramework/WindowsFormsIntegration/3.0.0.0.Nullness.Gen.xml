<?xml version="1.0" encoding="utf-8"?>
<assembly name="WindowsFormsIntegration, Version=3.0.0.0">
  <member name="M:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer.GetClassNameCore">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Automation.Peers.WindowsFormsHostAutomationPeer.GetHostRawElementProviderCore">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.AvalonAdapter.FindSolidColorParent(System.Windows.Forms.Control)">
    <parameter name="whichControl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.AvalonAdapter.OnCreateAutomationPeer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.AvalonAdapter.OnGetForceInvalidate()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="d">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.Convert.SystemDrawingFontToSystemWindowsFontSize(System.Drawing.Font)">
    <parameter name="font">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.Convert.ToSystemWindowsFontFamily(System.Drawing.FontFamily)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sdFamily">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.Convert.ToSystemWindowsFontStyle(System.Drawing.Font)">
    <parameter name="sdFont">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.Convert.ToSystemWindowsFontWeight(System.Drawing.Font)">
    <parameter name="sdFont">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.Convert.ToSystemWindowsInputCursor(System.Windows.Forms.Cursor)">
    <parameter name="swfCursor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.Convert.ToSystemWindowsInteropMSG(System.Windows.Forms.Message)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.Convert.ToSystemWindowsMediaImagingBitmapImage(System.Drawing.Image)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.Convert.ToSystemWindowsSize(System.Drawing.Size,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.ElementHost.InvokePaintBackgroundAndPaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)">
    <parameter name="control">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.ElementHost.OnPropertyChanged(System.String,System.Object)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetBitmapForFrameworkElement()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetBitmapForOpaqueWindowsFormsHost(System.Windows.Forms.Integration.WindowsFormsHost,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetBitmapForTransparentWindowsFormsHost(System.Windows.Forms.Integration.WindowsFormsHost)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetBitmapForWindowsFormsHost(System.Windows.Forms.Integration.WindowsFormsHost,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetBitmapFromRenderTargetBitmap(System.Windows.Forms.Control,,)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="control">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetBitmapOfControl(System.Windows.Forms.Control,System.Windows.Forms.Integration.ElementHost)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="control">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="host">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetCoveredPortionOfBitmap(System.Windows.Forms.Control,System.Windows.Forms.Integration.ElementHost)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentControl">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childElementHost">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetCursorSource(,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetFrameworkElementAncestor()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetRenderTargetBitmapForVisual(System.Int32,System.Int32,)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetScale()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.GetScale(,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.HostUtils.SetBackgroundImage(System.Windows.Forms.Integration.WinFormsAdapter,System.Windows.Forms.Control,System.Drawing.Bitmap)">
    <parameter name="adapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.#ctor(System.Boolean,System.Exception)">
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.LayoutExceptionEventArgs.#ctor(System.Exception)">
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.Apply(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.Contains(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Forms.Integration.PropertyMap.DefaultTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.GetProperty(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Windows.Forms.Integration.PropertyMap.Item(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Forms.Integration.PropertyMap.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.OnPropertyChanged(System.Object,System.String,System.Object)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.PropertyMappedToEmptyTranslator(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.Remove(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.Reset(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.RunTranslator(System.Windows.Forms.Integration.PropertyTranslator,System.Object,System.String,System.Object)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMap.ThrowIfPropertyDoesntExistOnSource(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Forms.Integration.PropertyMap.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs.#ctor(System.Exception,System.String,System.Object)">
    <parameter name="exception">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Windows.Forms.Integration.WeakReferenceList`1.SnapshotListOfTargets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.WindowFilterList.FindFilter()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.ArrangeOverride()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.GetFocusScopeForElement()">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.MeasureOverride()">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.WindowsFormsHost.OnCreateAutomationPeer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.WindowsFormsHostPropertyMap.GetChildControl(System.Object,System.Windows.Forms.Integration.PropertyTranslator,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Windows.Forms.Integration.WinFormsAdapter.CallOnParentRightToLeftChanged(System.Windows.Forms.Control)">
    <parameter name="control">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.Forms.Integration.WinFormsAdapter.OnLayout(System.Windows.Forms.LayoutEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.SR.Get(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Windows.SR.Get(System.String,System.Object[])">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
</assembly>