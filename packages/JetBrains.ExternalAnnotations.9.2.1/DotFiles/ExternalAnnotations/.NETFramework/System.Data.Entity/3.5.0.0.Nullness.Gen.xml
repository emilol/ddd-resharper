<?xml version="1.0" encoding="utf-8"?>
<assembly name="System.Data.Entity, Version=3.5.0.0">
  <member name="M:EntityBid.PlanCompilerPutStr(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:EntityBid.PutStrChunked(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:EntityBid.RawPutStrChuncked(System.String)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitAggregateList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate})">
    <parameter name="aggregates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitBinaryExpression(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionBindingPre(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="expressionList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingMid(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitGroupExpressionBindingPre(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitLambdaFunctionPre(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitRelatedEntityReference(System.Data.Common.CommandTrees.DbRelatedEntityRef)">
    <parameter name="relatedEntityRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.BasicExpressionVisitor.VisitRelatedEntityReferenceList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbRelatedEntityRef})">
    <parameter name="relatedEntityReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbAndExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbApplyExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionKind)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbArithmeticExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionKind,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbBinaryExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbBinaryExpression.CheckCollectionArguments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCaseExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="whens">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thens">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCastExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.AddParameter(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.DbCommandTree.BindingAliases">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CopyParametersTo(System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateAllExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateAndExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateAnyExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateApplyExpressionByKind(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateCaseExpression(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="whenExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thenExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateCastExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateConstantExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateConstantExpression(System.Object,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="constantType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateCrossApplyExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateCrossJoinExpression(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateDerefExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateDistinctExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateDistinctFunctionAggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateDivideExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateElementExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateElementExpressionUnwrapSingleProperty(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateEntityRefExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateEqualsExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateExceptExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateExpressionBinding(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateExpressionBinding(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateFalseExpression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateFilterExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateFullOuterJoinExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateFunctionAggregate(System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateFunctionExpression(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateGreaterThanExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateGreaterThanOrEqualsExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateGroupByExpression(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="aggregates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateGroupExpressionBinding(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateGroupExpressionBinding(System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateInnerJoinExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateIntersectExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateIsEmptyExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateIsNullExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateIsNullExpressionAllowingRowTypeArgument(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateIsOfExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateIsOfOnlyExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateJoinExpressionByKind(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="input1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateLambdaFunctionExpression(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}},System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="formals">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateLeftOuterJoinExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateLessThanExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateLessThanOrEqualsExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateLikeExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateLikeExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateLimitExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateLimitWithTiesExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateMinusExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateModuloExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateMultiplyExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateNewCollectionExpression(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="collectionElements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateNewEmptyCollectionExpression(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="collectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateNewEntityWithRelationshipsExpression(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbRelatedEntityRef})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instanceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateNewInstanceExpression(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateNewRowExpression(System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="recordColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateNotEqualsExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateNotExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateNullExpression(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateOfTypeExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ofType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateOfTypeOnlyExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ofType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateOrExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateOuterApplyExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="apply">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateParameterReferenceExpression(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreatePlusExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateProjectExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreatePropertyExpression(System.Data.Metadata.Edm.EdmProperty,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreatePropertyExpression(System.Data.Metadata.Edm.NavigationProperty,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreatePropertyExpression(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreatePropertyExpression(System.String,System.Boolean,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreatePropertyExpression(System.String,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateRefExpression(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="refKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateRefExpression(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="refKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateRefKeyExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateRelatedEntityRef(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateRelationshipNavigationExpression(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateRelationshipNavigationExpression(System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateScanExpression(System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateSkipExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateSortClause(System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateSortClause(System.Data.Common.CommandTrees.DbExpression,System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateSortExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateTreatExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="treatType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateTrueExpression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateUnaryMinusExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateUnionAllExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.CreateVariableReferenceExpression(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.Dump(System.Data.Common.CommandTrees.Internal.ExpressionDumper)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.DumpStructure(System.Data.Common.CommandTrees.Internal.ExpressionDumper)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.DumpXml">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.HasParameter(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.Import(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.IsValidParameterName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.DbCommandTree.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.Print">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.PrintTree(System.Data.Common.CommandTrees.Internal.ExpressionPrinter)">
    <parameter name="printer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.Replace(System.Data.Common.CommandTrees.Internal.ExpressionReplacer)">
    <parameter name="replacer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.TrackContainer(System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCommandTree.Validate(System.Data.Common.CommandTrees.Internal.Validator)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbComparisonExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbComparisonExpression.ArgumentChanging(System.Data.Common.CommandTrees.Internal.ExpressionLink,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbComparisonExpression.CheckComparison(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbConstantExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbConstantExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Object,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constantType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbCrossJoinExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbDeleteCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbDeleteCommandTree.Replace(System.Data.Common.CommandTrees.Internal.ExpressionReplacer)">
    <parameter name="replacer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbDerefExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="refExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbDistinctExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbElementExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbEntityRefExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExceptExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpression.Clone">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpression.Print">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionBinding.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionBinding.Check(System.String,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.DbExpressionBinding.Variable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbFilterExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="predExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbFunctionAggregate.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbFunctionCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbFunctionCommandTree.Replace(System.Data.Common.CommandTrees.Internal.ExpressionReplacer)">
    <parameter name="callback">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbFunctionExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.DbFunctionExpression.LambdaFunctionName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.CommandTrees.DbFunctionExpression.LambdaFunctionNameSpace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbGroupByExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="aggregates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbGroupExpressionBinding.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.String,System.String)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Check(System.String,System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.GroupVariable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.CommandTrees.DbGroupExpressionBinding.Variable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbInsertCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbInsertCommandTree.InitializeSetClauses(System.Collections.Generic.List{System.Data.Common.CommandTrees.DbModificationClause})">
    <parameter name="setClauses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbInsertCommandTree.Replace(System.Data.Common.CommandTrees.Internal.ExpressionReplacer)">
    <parameter name="replacer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbIntersectExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbIsEmptyExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbIsNullExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbIsOfExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbJoinExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="joinCond">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbLikeExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbLimitExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbModificationClause.Copy(System.Data.Common.CommandTrees.DbModificationCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="newTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbModificationClause.DumpStructure(System.Data.Common.CommandTrees.Internal.ExpressionDumper)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbModificationClause.Print(System.Data.Common.CommandTrees.DbExpressionVisitor{System.Data.Common.Utils.TreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbModificationCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbRelatedEntityRef})">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNewInstanceExpression.CreateStructuralArgumentList(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.StructuralType,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="structType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNotExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbNullExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbOfTypeExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbOrExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbParameterReferenceExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbProjectExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EdmProperty,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.NavigationProperty,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbPropertyExpression.InitializeFromMember(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EdmMember,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbQuantifierExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="pred">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbQueryCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbQueryCommandTree.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRefExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="refKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRefKeyExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelatedEntityRef.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntityRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.RelationshipType,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.CheckEnds(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.FindEnd(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.GetExpectedInstanceType(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression.GetResultType(System.Data.Metadata.Edm.RelationshipEndMember)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbScanExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbSkipExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbSortClause.#ctor(System.Data.Common.CommandTrees.DbExpression,System.Boolean,System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbSortExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbSortExpression.CheckSortArguments(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbTreatExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbUnaryExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbUnionAllExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbUpdateCommandTree.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbUpdateCommandTree.InitializeSetClauses(System.Collections.Generic.List{System.Data.Common.CommandTrees.DbModificationClause})">
    <parameter name="setClauses">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbUpdateCommandTree.Replace(System.Data.Common.CommandTrees.Internal.ExpressionReplacer)">
    <parameter name="replacer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.DbVariableReferenceExpression.#ctor(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="cmdTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckEntitySet(System.Data.Metadata.Edm.EntitySetBase,System.String)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckMember(System.Data.Metadata.Edm.EdmMember,System.String)">
    <parameter name="memberMeta">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckParameter(System.Data.Metadata.Edm.FunctionParameter,System.String)">
    <parameter name="paramMeta">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckPolymorphicType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckReadOnly(System.Data.Metadata.Edm.EntitySetBase,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckReadOnly(System.Data.Metadata.Edm.GlobalItem,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckReadOnly(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckType(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckWorkspaceAndDataSpace(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CheckWorkspaceAndDataSpace(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CreateCollectionOfRowResultType(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CreateCollectionResultType(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CreateCollectionResultType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CreateReferenceResultType(System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="referencedEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.CreateResultType(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.IsConstantNegativeInteger(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeTypeHelper.SetResultAsNullable(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeUtils.CheckNamedList``1(System.String,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{System.String,``0}},System.Boolean,System.Data.Common.CommandTrees.Internal.CommandTreeUtils.CheckNamedListCallback{``0})">
    <parameter name="listVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeUtils.CreateList``1(``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeUtils.CreateList``1(``0,``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeUtils.ExtractAssociativeArguments(System.Data.Common.CommandTrees.DbExpressionKind,System.Collections.Generic.List{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argumentList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeUtils.FlattenAssociativeExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeUtils.FlattenAssociativeExpression(System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeUtils.FormatIndex(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arrayVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.CommandTreeUtils.NewReadOnlyList``1(System.Collections.Generic.IList{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Copy(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.GetMapper(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.MetadataMapper.Map(System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="f">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.MetadataMapper.Map(System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.MetadataMapper.Map(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.MetadataMapper.Map(System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.MetadataMapper.Map(System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.MetadataMapper.Map(System.Data.Metadata.Edm.NavigationProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.MetadataMapper.Map(System.Data.Metadata.Edm.RelationshipEndMember)">
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.MetadataMapper.Map(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitExpr(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitExprList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitFunctionAggregate(System.Data.Common.CommandTrees.DbFunctionAggregate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="gb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitList``1(System.Collections.Generic.IList{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionCopier.WorkspaceMapper.TryMapMember``1(``0,``0@)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.Data.Common.CommandTrees.DbExpression,System.String,System.Object)">
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Begin(System.String,System.Object[])">
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.BeginBinary(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.BeginUnary(System.Data.Common.CommandTrees.DbUnaryExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.String,System.String)">
    <parameter name="exprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pluralName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="singularName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.FunctionParameter})">
    <parameter name="paramList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbExpressionBinding,System.String)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Common.CommandTrees.DbGroupExpressionBinding,System.String)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.EdmType,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.NavigationProperty,System.String)">
    <parameter name="navProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.RelationshipEndMember,System.String)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.RelationshipType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.RelationshipType,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.Dump(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionDumper.End(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionLink.#ctor(System.String,System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="initialValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionLink.#ctor(System.String,System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.PrimitiveTypeKind,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="initialValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionLink.#ctor(System.String,System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="initialValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionLink.CheckValue(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionLink.InitializeValue(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="initialValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.#ctor(System.String,System.Data.Common.CommandTrees.DbCommandTree,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.#ctor(System.String,System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.IBaseList{System.Data.Metadata.Edm.EdmMember},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.#ctor(System.String,System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.PrimitiveTypeKind,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.#ctor(System.String,System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.FunctionParameter},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="paramInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.#ctor(System.String,System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.CommandTrees.Internal.ExpressionList.ExpressionListEnumerator.System#Collections#Generic#IEnumerator{System#Data#Common#CommandTrees#DbExpression}#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.CommandTrees.Internal.ExpressionList.ExpressionListEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.GetCommonElementType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.SetElements(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.System#Collections#Generic#ICollection{System#Data#Common#CommandTrees#DbExpression}#Add(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.System#Collections#Generic#ICollection{System#Data#Common#CommandTrees#DbExpression}#Contains(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.System#Collections#Generic#ICollection{System#Data#Common#CommandTrees#DbExpression}#CopyTo(System.Data.Common.CommandTrees.DbExpression[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.System#Collections#Generic#ICollection{System#Data#Common#CommandTrees#DbExpression}#Remove(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.System#Collections#Generic#IEnumerable{System#Data#Common#CommandTrees#DbExpression}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.System#Collections#Generic#IList{System#Data#Common#CommandTrees#DbExpression}#IndexOf(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.System#Collections#Generic#IList{System#Data#Common#CommandTrees#DbExpression}#Insert(System.Int32,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionList.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.CreateParametersNode(System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbDeleteCommandTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbFunctionCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbInsertCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.Print(System.Data.Common.CommandTrees.DbUpdateCommandTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendArguments(System.Data.Common.Utils.TreeNode,System.Collections.Generic.IList{System.Data.Metadata.Edm.FunctionParameter},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paramInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendFullName(System.Text.StringBuilder,System.Data.Metadata.Edm.EdmType)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendParameters(System.Data.Common.Utils.TreeNode,System.Collections.Generic.IList{System.Data.Metadata.Edm.FunctionParameter})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paramInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendType(System.Data.Common.Utils.TreeNode,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.AppendTypeSpecifier(System.Data.Common.Utils.TreeNode,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.BuildTypeName(System.Text.StringBuilder,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.CreateNavigationNode(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.CreateRelationshipNode(System.Data.Metadata.Edm.RelationshipType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.InitializeOpMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.NodeFromExpression(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.Visit(System.String,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="exprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitBinary(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitBinding(System.String,System.Data.Common.CommandTrees.DbExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitBindingList(System.String,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="bindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitCastOrTreat(System.String,System.Data.Common.CommandTrees.DbUnaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitExpression(System.String,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitFunction(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="func">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitGroupBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="groupBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitInfix(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitLambdaBody(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.Utils.TreeNode)">
    <parameter name="parentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitParams(System.Collections.Generic.IList{System.Data.Metadata.Edm.FunctionParameter},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="paramInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitSortOrder(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitUnary(System.Data.Common.CommandTrees.DbUnaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitUnary(System.Data.Common.CommandTrees.DbUnaryExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionPrinter.PrinterVisitor.VisitWithLabel(System.String,System.String,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="def">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.Replace(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="toReplace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.ReplaceBinary(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.ReplaceBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.ReplaceBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.ReplaceList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.ReplaceSortKeys(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.ReplaceUnary(System.Data.Common.CommandTrees.DbUnaryExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ExpressionReplacer.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Validator.AddToScope(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}})">
    <parameter name="scopeElements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Validator.AddToScope(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="strName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Validator.FindInScopes(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Validator.Validate(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.Validator.Validate(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.CollapseNestedProjection(System.Data.Common.CommandTrees.Internal.ExpressionReplacement,System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outerProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outerProjection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="innerProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="innerNew">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.CollapseProject(System.Data.Common.CommandTrees.Internal.ExpressionReplacement)">
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.ProjectionCollapser.CollapseProjection(System.Data.Common.CommandTrees.Internal.ExpressionReplacement)">
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.ProjectionCollapser.IsOuterBindingVarRef(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="varRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.SimplifyCaseStatements(System.Data.Common.CommandTrees.Internal.ExpressionReplacement)">
    <parameter name="replacement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.SimplifyView(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.TryMatchNestedProjectPattern(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbProjectExpression@,System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbProjectExpression@,System.Data.Common.CommandTrees.DbNewInstanceExpression@)">
    <parameter name="outerCandidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.ViewSimplifier.TrySimplifyPredicate(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.XmlExpressionDumper.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.CommandTrees.Internal.XmlExpressionDumper.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DataRecordInfo.#ctor(System.Data.Common.DataRecordInfo)">
    <parameter name="recordInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DataRecordInfo.#ctor(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DataRecordInfo.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember})">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.CreateCommand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.CreateCommandDefinition(System.Data.Common.DbCommand)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prototype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateBinaryParameter(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Data.DbType,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateDateTimeParameter(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Data.DbType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateDecimalParameter(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Data.DbType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateParameterFromTypeUsage(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.PopulateStringParameter(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbCommandDefinition.SetParameterSize(System.Data.Common.DbParameter,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.GetDbInformation(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="storeType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.GetInformation(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateCommand(System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateCommandDefinition(System.Data.Common.DbCommand)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prototype">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="providerManifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetConceptualSchemaDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetDbProviderManifest(System.String)">
    <parameter name="manifestToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetDbProviderManifestToken(System.Data.Common.DbConnection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.Data.Common.DbConnection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderFactory(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="providerInvariantName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderManifest(System.String)">
    <parameter name="manifestToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderManifestToken(System.Data.Common.DbConnection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbConnection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetProviderServices(System.Data.Common.DbProviderFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbProviderServices.GetXmlResource(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.#ctor(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.DbXmlEnabledProviderManifest.Load(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntityRecordInfo.#ctor(System.Data.Common.DataRecordInfo,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntityRecordInfo.#ctor(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntityRecordInfo.ValidateEntityType(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AliasExpr.#ctor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Identifier)">
    <parameter name="aliasId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.AliasExpr.ValidateAlias(System.Data.Common.EntitySql.Identifier)">
    <parameter name="aliasIdentifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.BuiltInExpr.#ctor(System.Data.Common.EntitySql.BuiltInKind,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.BuiltInExpr.#ctor(System.Data.Common.EntitySql.BuiltInKind,System.String,System.Data.Common.EntitySql.Expr)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.BuiltInExpr.#ctor(System.Data.Common.EntitySql.BuiltInKind,System.String,System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Expr)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.BuiltInExpr.#ctor(System.Data.Common.EntitySql.BuiltInKind,System.String,System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Expr)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.BuiltInExpr.#ctor(System.Data.Common.EntitySql.BuiltInKind,System.String,System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Expr)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.GetReadableTypeKind(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.GetReadableTypeKind(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.GetReadableTypeName(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.GetReadableTypeName(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportAliasAlreadyUsedError(System.String,System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportAmbiguousFunctionError(System.Data.Common.EntitySql.MethodExpr,System.Collections.Generic.List{System.String})">
    <parameter name="functionExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="foundNamespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportFunctionOverloadError(System.Data.Common.EntitySql.MethodExpr,System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.List{System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="functionExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportIdentifierElementError(System.Data.Common.EntitySql.ErrorContext,System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="definingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportIdentifierError(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportIncompatibleCommonType(System.Data.Common.EntitySql.ErrorContext,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportIncompatibleCommonType(System.Data.Common.EntitySql.ErrorContext,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootLeftType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootRightType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlErrorHelper.ReportTypeResolutionError(System.String[],System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.#ctor(System.IO.FileStream)">
    <parameter name="instream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.#ctor(System.IO.TextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.#ctor(System.String,System.Data.Common.EntitySql.ParserOptions)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_10">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_11">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_12">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_13">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_14">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_15">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_16">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_17">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_18">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_2">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_20">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_21">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_22">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_23">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_25">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_26">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_27">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_28">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_3">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_30">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_31">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_32">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_34">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_35">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_37">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_4">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_5">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_53">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_54">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_55">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_56">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_57">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_58">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_59">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_6">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_60">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_61">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_62">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_63">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_64">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_65">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_66">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_67">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_68">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_69">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_7">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_70">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_71">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_72">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_73">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_74">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_75">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_76">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_77">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_78">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_79">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_8">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_80">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_81">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_82">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_83">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_84">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.Accept_9">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.GetLiteralSingleQuotePayload(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.HandleEscapedIdentifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.InitializeFunctionKeywords">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsLetterOrDigitOrUnderscore(System.String,System.Boolean@)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsReservedKeyword(System.String)">
    <parameter name="term">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsValidDateTimeOffsetValue(System.String)">
    <parameter name="datetimeOffsetValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsValidDateTimeValue(System.String)">
    <parameter name="datetimeValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsValidGuidValue(System.String)">
    <parameter name="guidValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.IsValidTimeValue(System.String)">
    <parameter name="timeValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapDoubleQuotedString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapIdentifierOrKeyword(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapOperator(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="oper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.MapPunctuator(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="punct">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.NewLiteralToken(System.String,System.Data.Common.EntitySql.LiteralKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.NewParameterToken(System.String)">
    <parameter name="param">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.NewToken(System.Int16,System.Data.Common.EntitySql.AstNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.NewToken(System.Int16,System.Data.Common.EntitySql.CqlLexer.TerminalToken)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.yy_double(System.Char[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="buf">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.yylex">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlLexer.yytext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.EntitySql.CqlLexer.YYText">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.AstNodePos(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.debug(System.String)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.SetErrCtx(System.Data.Common.EntitySql.AstNode,System.Data.Common.EntitySql.CqlLexer.TerminalToken,System.String)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tokenValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.SetErrCtx(System.Data.Common.EntitySql.AstNode,System.Int32,System.String)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.TerminalPos(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlParser.yyerror(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlQuery.AnalyzeSemantics(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Common.EntitySql.Expr,System.Data.Metadata.Edm.Perspective,System.Data.Common.EntitySql.ParserOptions,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlQuery.AnalyzeSemantics(System.Data.Common.EntitySql.Expr,System.Data.Metadata.Edm.Perspective,System.Data.Common.EntitySql.ParserOptions,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlQuery.Compile(System.Data.Common.CommandTrees.DbCommandTree,System.String,System.Data.Metadata.Edm.Perspective,System.Data.Common.EntitySql.ParserOptions,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="queryText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlQuery.Compile(System.String,System.Data.Metadata.Edm.Perspective,System.Data.Common.EntitySql.ParserOptions,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlQuery.Compile(System.String,System.Data.Metadata.Edm.Perspective,System.Data.Common.EntitySql.ParserOptions,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage},System.Boolean)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.CqlQuery.Parse(System.String,System.Data.Common.EntitySql.ParserOptions)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parserOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.DottedIdentifier.#ctor(System.Data.Common.EntitySql.DotExpr)">
    <parameter name="dotExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.DottedIdentifier.#ctor(System.Data.Common.EntitySql.Identifier)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ExprList`1.Add(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.ExprList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.ExprList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.Identifier.#ctor(System.String,System.Boolean,System.String,System.Int32)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Identifier.ValidateIdentifier(System.String,System.Boolean)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.ConvertBooleanLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.ConvertDateTimeLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="datetimeLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.ConvertDateTimeOffsetLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="datetimeLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.ConvertGuidLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="guidLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.ConvertNumericLiteral(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="numericString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.ConvertTimeLiteralValue(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="datetimeLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.DefaultNumericConversion(System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="numericString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.GetDateParts(System.String,System.String[],System.Int32@,System.Int32@,System.Int32@)">
    <parameter name="datetimeParts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.GetStringLiteralValue(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stringLiteralValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.GetTimeParts(System.String,System.String[],System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
    <parameter name="datetimeParts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Literal.NewBooleanLiteral(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.EntitySql.MethodExpr.MethodPrefixExpr">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.NamespaceExpr.#ctor(System.Data.Common.EntitySql.BuiltInExpr)">
    <parameter name="bltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.NamespaceExpr.#ctor(System.Data.Common.EntitySql.DotExpr)">
    <parameter name="dotExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.NamespaceExpr.#ctor(System.Data.Common.EntitySql.Identifier)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.EntitySql.PairOfLists`2.Item(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.Parameter.#ctor(System.String,System.String,System.Int32)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.EntitySql.ParserOptions.DefaultOrderByCollation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.ParserOptions.MakeReadOnly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.RelshipNavigationExpr.#ctor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.DotExpr)">
    <parameter name="relationTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.RelshipNavigationExpr.#ctor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.DotExpr,System.Data.Common.EntitySql.Identifier)">
    <parameter name="relationTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.RelshipNavigationExpr.#ctor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.DotExpr,System.Data.Common.EntitySql.Identifier,System.Data.Common.EntitySql.Identifier)">
    <parameter name="relationTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.RelshipNavigationExpr.#ctor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Identifier)">
    <parameter name="relationTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.RelshipNavigationExpr.#ctor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Identifier,System.Data.Common.EntitySql.Identifier)">
    <parameter name="relationTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.RelshipNavigationExpr.#ctor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.Identifier,System.Data.Common.EntitySql.Identifier,System.Data.Common.EntitySql.Identifier)">
    <parameter name="relationTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.Add(System.String,System.Data.Common.EntitySql.ScopeEntry)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.Contains(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.Remove(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Data#Common#EntitySql#ScopeEntry}}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.Scope.TryLookup(System.String,System.Data.Common.EntitySql.ScopeEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeManager.Add(System.String,System.Data.Common.EntitySql.ScopeEntry)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeManager.EnterScope">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeManager.IsInCurrentScope(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeManager.RemoveFromScope(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeManager.RollbackToSavepoint(System.Data.Common.EntitySql.SavePoint)">
    <parameter name="savePoint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeRegionFlags.AddGroupAggregateInfo(System.Data.Common.EntitySql.MethodExpr,System.Data.Common.EntitySql.GroupAggregateInfo)">
    <parameter name="astMethodNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeRegionFlags.AddGroupAggregateToScopeFlags(System.String)">
    <parameter name="groupAggregateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.ScopeRegionFlags.ContainsGroupAggregate(System.String)">
    <parameter name="groupAggregateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.Analyze(System.Data.Common.EntitySql.Expr)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.Analyze(System.Data.Common.EntitySql.Expr,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertAggregateFunctionInGroupScope(System.Data.Common.EntitySql.MethodExpr,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction},System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertArithmeticArgs(System.Data.Common.EntitySql.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertCaseExpr(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertCommand(System.Data.Common.EntitySql.CommandExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="astCommandExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertCreateRefExpr(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertDeRefExpr(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertDotExpr(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertDotExpressionProcess(System.Data.Common.EntitySql.DotExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="dotExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertEqualCompArgs(System.Data.Common.EntitySql.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertFunctionArguments(System.Data.Common.EntitySql.ExprList{System.Data.Common.EntitySql.Expr},System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertGeneralExpression(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertIdentifier(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertInExprArgs(System.Data.Common.EntitySql.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertKeyExpr(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertLiteral(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertLogicalArgs(System.Data.Common.EntitySql.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertMethodExpr(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertMethodInstance(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.MethodExpr,System.Int32,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="baseExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertMultisetConstructor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertOrderCompArgs(System.Data.Common.EntitySql.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertParameter(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertPlusOperands(System.Data.Common.EntitySql.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertQuery(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRefExpr(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRelatedEntityRef(System.Data.Common.EntitySql.RelshipNavigationExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relshipExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRelshipNavigationExpr(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRootExpression(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertRowConstructor(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertSetArgs(System.Data.Common.EntitySql.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertSimpleInExpression(System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertStaticMethodOrFunction(System.Data.Common.EntitySql.MethodExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertTypeExprArgs(System.Data.Common.EntitySql.BuiltInExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astBuiltInExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ConvertTypeIdentifier(System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="typeIdentifierExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.CreateAstExprConverters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.CreateBuiltInExprConverter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.Initialize(System.Data.Common.EntitySql.Expr,System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessAliasedFromClauseItem(System.Data.Common.EntitySql.AliasExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="aliasedExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessApplyClauseItem(System.Data.Common.EntitySql.ApplyClauseItem,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="applyClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessExprList(System.Data.Common.EntitySql.ExprList{System.Data.Common.EntitySql.Expr},System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="astExprList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessFromClause(System.Data.Common.EntitySql.FromClause,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="fromClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessFromClauseItem(System.Data.Common.EntitySql.FromClauseItem,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fromClauseItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessGroupByClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.QueryExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessHavingClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.HavingClause,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessJoinClauseItem(System.Data.Common.EntitySql.JoinClauseItem,System.Data.Common.EntitySql.SemanticResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="joinClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessSelectClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.QueryExpr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ProcessWhereClause(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.Expr,System.Data.Common.EntitySql.SemanticResolver)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.TryConvertAsGroupAggregateFunction(System.Data.Common.EntitySql.MethodExpr,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction},System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionTypeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.TryConvertAsOrdinaryFunctionInGroup(System.Data.Common.EntitySql.MethodExpr,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction},System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="functionTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.TryConvertAsResolvedGroupAggregate(System.Data.Common.EntitySql.MethodExpr,System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateAndCompensateQuery(System.Data.Common.EntitySql.QueryExpr)">
    <parameter name="queryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticAnalyzer.ValidateRelationshipTraversal(System.Data.Common.EntitySql.RelshipNavigationExpr,System.Boolean,System.Data.Common.EntitySql.SemanticResolver,System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipType@,System.Data.Metadata.Edm.RelationshipEndMember@,System.Data.Metadata.Edm.RelationshipEndMember@)">
    <parameter name="relshipExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.#ctor(System.Data.Metadata.Edm.Perspective,System.Data.Common.EntitySql.ParserOptions,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="parserOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.AddDummyGroupKeyToScope(System.String,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="groupKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.AddGroupAggregateInfoToScopeRegion(System.Data.Common.EntitySql.MethodExpr,System.String,System.Data.Common.CommandTrees.DbAggregate,System.Int32)">
    <parameter name="astNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.AddGroupAggregateToScope(System.String,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="aggregateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.AddSourceBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="sourceBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.AddToScope(System.String,System.Data.Common.EntitySql.ScopeEntry)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.CreateFunction(System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction},System.Collections.Generic.List{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.EntitySql.MethodExpr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionTypeList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.CreateInstanceMethod(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.List{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.EntitySql.MethodExpr)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.CreateInstanceOfType(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.List{System.Data.Common.CommandTrees.DbRelatedEntityRef},System.Data.Common.EntitySql.MethodExpr)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.CreateMethod(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.EntitySql.MethodExpr,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.CreateSavePoint">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.CreateStaticMethod(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.EntitySql.MethodExpr)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnsureIsNotUntypedNull(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnsureTypedNulls(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext,System.Func{System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="leftExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="formatMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnsureValidLimitExpression(System.Data.Common.EntitySql.ErrorContext,System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnsureValidTypeForNullExpression(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnterScope">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.EnterScopeRegion">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.FixupNamedSourceVarBindings(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="newSourceVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.GetExpressionFromScopeEntry(System.Data.Common.EntitySql.ScopeEntry,System.Int32)">
    <parameter name="scopeEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.GetValidDecimalFacetValue(System.Data.Metadata.Edm.PrimitiveType,System.Data.Common.EntitySql.Literal,System.String)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeArg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.HandleParametrizedType(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.EntitySql.MethodExpr)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.InferAliasName(System.Data.Common.EntitySql.AliasExpr,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="aliasExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.IsInCurrentScope(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.RemoveFromScope(System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ReplaceGroupVarInScope(System.String,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="groupVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveIdentifier(System.String[],System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveIdentifierChain(System.String[],System.Int32,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="innerExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveIdentifierChain(System.String[],System.Int32,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="definingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveIdentifierElement(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveNameAsStaticMethodOrFunction(System.Data.Common.EntitySql.MethodExpr,System.Data.Metadata.Edm.TypeUsage@,System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction}@)">
    <parameter name="methodExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ResolveNameAsType(System.String[],System.Data.Common.EntitySql.Expr)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="astTypeExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.RollbackToSavepoint(System.Data.Common.EntitySql.SavePoint)">
    <parameter name="sp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.SetCommandTreeFactory(System.Data.Common.EntitySql.CommandExpr)">
    <parameter name="astCommandExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.SetCommandTreeFactory(System.Data.Common.EntitySql.CommandExpr,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="astCommandExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryResolveAsEntitySet(System.String[],System.Data.Common.EntitySql.ErrorContext,System.Int32@,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryResolveAsProperty(System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryResolveAsRef(System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.EntitySql.ErrorContext,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="innerExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryScopeLookup(System.String,System.Boolean,System.Data.Common.EntitySql.ScopeEntry@,System.Int32@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryScopeLookup(System.String,System.Data.Common.EntitySql.ScopeEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.TryScopeLookup(System.String,System.Data.Common.EntitySql.ScopeEntry@,System.Int32@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ValidateDistinctProjection(System.Data.Common.EntitySql.SelectClause,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="projectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="selectClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ValidateParameters(System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ValidateQueryResultType(System.Data.Metadata.Edm.TypeUsage,System.Data.Common.EntitySql.ErrorContext)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SemanticResolver.ValidateVariables(System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.TypeUsage})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.SourceScopeEntry.#ctor(System.Data.Common.EntitySql.ScopeEntryKind,System.Data.Common.CommandTrees.DbExpressionBinding,System.String)">
    <parameter name="sourceBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.SourceScopeEntry.RecalculateSourceVar(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.StaticContext.AddAggregateToScope(System.String,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="aggregateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.StaticContext.AddGroupDummyVar(System.String,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="groupKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.StaticContext.AddSourceBinding(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.EntitySql.ScopeEntryKind,System.String)">
    <parameter name="sourceBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.StaticContext.ReplaceGroupVarInScope(System.String,System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="groupVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TreePathTagger.IsChildNode(System.String,System.String)">
    <parameter name="parentNodePrefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.EntitySql.TreePathTagger.Tag">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ConcatStringsWithSeparator(System.String[],System.Char,System.Int32,System.Int32)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.GetFullName(System.String[])">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.GetLiteralTypeUsage(System.Data.Common.EntitySql.Literal)">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.GetPromotionRank(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="candidateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="formalType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.IsSubOrSuperType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.IsValidTypeForMethodCall(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.RankFunctionParameters(System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.IList{System.Data.Metadata.Edm.FunctionParameter},System.Boolean)">
    <parameter name="candidateParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="signatureParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ResolveBaseType(System.String[],System.Int32@,System.Int32@)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ResolveFunctionOverloads(System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction},System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Boolean,System.Boolean@)">
    <parameter name="argTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionsMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ResolveNameAsFunction(System.String[],System.Boolean,System.Int32@,System.Collections.Generic.List{System.String}@)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.ResolveNameAsType(System.String[],System.Int32,System.Int32@)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TrimNamesPrefix(System.String[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryAddAliasedNamespace(System.String,System.String)">
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryAddNamespace(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetBaseTypeFromMetadata(System.String,System.String[],System.Data.Metadata.Edm.TypeUsage@,System.Int32@)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetBaseTypeInAliasedNamespaces(System.String[],System.Data.Metadata.Edm.TypeUsage@,System.Int32@)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetBaseTypeInNamespaces(System.String[],System.Data.Metadata.Edm.TypeUsage@,System.Int32@,System.Int32@)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetFunctionFromMetadata(System.String,System.String,System.Boolean,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmFunction}@)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetIdentifierBaseType(System.String[],System.Data.Metadata.Edm.TypeUsage@,System.Int32@)">
    <parameter name="names">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.TypeResolver.TryGetTypeFromMetadata(System.String,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="typeFullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.UntypedNullExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.EntitySql.UntypedNullExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.FieldMetadata.#ctor(System.Int32,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="fieldType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.Append(System.String,System.Data.Query.InternalTrees.EntityIdentity)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.Append(System.String,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.GetColumnMapKey(System.Data.Query.InternalTrees.ColumnMap,System.Data.Objects.Internal.SpanIndex)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.Visit(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,System.Int32)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,System.Int32)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CompensatingCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CompensatingCollection`1.System#Linq#IOrderedEnumerable{TElement}#CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
    <parameter name="keySelector">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.CompensatingCollection`1.System#Linq#IQueryable#ElementType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Coordinator.Initialize(System.Data.Common.Internal.Materialization.Shaper)">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Coordinator`1.#ctor(System.Data.Common.Internal.Materialization.CoordinatorFactory{`0},System.Data.Common.Internal.Materialization.Coordinator,System.Data.Common.Internal.Materialization.Coordinator)">
    <parameter name="coordinator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory.#ctor(System.Int32,System.Int32,System.Func{System.Data.Common.Internal.Materialization.Shaper,System.Boolean},System.Func{System.Data.Common.Internal.Materialization.Shaper,System.Boolean},System.Func{System.Data.Common.Internal.Materialization.Shaper,System.Boolean},System.Data.Common.Internal.Materialization.CoordinatorFactory[],System.Data.Common.Internal.Materialization.RecordStateFactory[])">
    <parameter name="nestedCoordinators">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="recordStateFactories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory.CreateCoordinator(System.Data.Common.Internal.Materialization.Coordinator,System.Data.Common.Internal.Materialization.Coordinator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory`1.#ctor(System.Int32,System.Int32,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Data.Common.Internal.Materialization.CoordinatorFactory[],System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Data.Common.Internal.Materialization.RecordStateFactory[])">
    <parameter name="recordStateFactories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nestedCoordinators">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementWithErrorHandling">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory`1.CompilePredicate(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory`1.DescribeExpression(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorFactory`1.GetDefaultRecordState(System.Data.Common.Internal.Materialization.Shaper{System.Data.Common.Internal.Materialization.RecordState})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorScratchpad.AddExpressionWithErrorHandling(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorScratchpad.AddInlineDelegate(System.Linq.Expressions.LambdaExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorScratchpad.AddNestedCoordinator(System.Data.Common.Internal.Materialization.CoordinatorScratchpad)">
    <parameter name="nested">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.CoordinatorScratchpad.CreateRecordStateScratchpad">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordState.#ctor(System.Data.Common.Internal.Materialization.RecordStateFactory,System.Data.Common.Internal.Materialization.CoordinatorFactory)">
    <parameter name="recordStateFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordState.GatherData(System.Data.Common.Internal.Materialization.Shaper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordState.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordState.SetNullRecord(System.Data.Common.Internal.Materialization.Shaper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.RecordStateEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.RecordStateEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordStateFactory.#ctor(System.Int32,System.Int32,System.Data.Common.Internal.Materialization.RecordStateFactory[],System.Data.Common.DataRecordInfo,System.Linq.Expressions.Expression,System.String[],System.Data.Metadata.Edm.TypeUsage[])">
    <parameter name="gatherData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeUsages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RecordStateFactory.Create(System.Data.Common.Internal.Materialization.CoordinatorFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.RowNestedResultEnumerator.#ctor(System.Data.Common.Internal.Materialization.Shaper{})">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.RowNestedResultEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.RowNestedResultEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.CheckClearedEntryOnSpan(System.Data.EntityKey,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.CheckClearedEntryOnSpan(System.Object,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.ColumnErrorHandlingValueReader`1.CreateWrongTypeException(System.Type)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.CreateNullValueException">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.CreateWrongTypeException(System.Type)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.ErrorHandlingValueReader`1.GetValue(System.Data.Common.DbDataReader,System.Int32)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.FullSpanAction``1(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Collections.Generic.IList{``0},System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleEntity``1(``0,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleEntityAppendOnly``1(System.Func{System.Data.Common.Internal.Materialization.Shaper,``0},System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="constructEntityDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleFullSpanCollection``2(``0,System.Data.Common.Internal.Materialization.Coordinator{``1},System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="coordinator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleFullSpanElement``2(``0,``1,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleIEntityWithKey``1(``0,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleIEntityWithRelationships``1(``0,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.HandleRelationshipSpan``1(``0,System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.SetIsLoadedForSpan(System.Data.Objects.DataClasses.RelatedEnd,System.Boolean)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.UpdateEntry``1(``0,System.Data.Objects.ObjectStateEntry)">
    <parameter name="existingEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper.UpdateRecord(System.Object,System.Data.Objects.CurrentValueRecord)">
    <parameter name="current">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper`1.#ctor(System.Data.Common.DbDataReader,System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.MergeOption,System.Int32,System.Data.Common.Internal.Materialization.CoordinatorFactory{`0},System.Action)">
    <parameter name="rootCoordinatorFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Shaper`1.InitializeRecordStates(System.Data.Common.Internal.Materialization.CoordinatorFactory)">
    <parameter name="coordinatorFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.Shaper`1.ObjectQueryNestedEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.Shaper`1.ObjectQueryNestedEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.Shaper`1.RootEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ShaperFactory.Create(System.Type,System.Data.Common.QueryCache.QueryCacheManager,System.Data.Query.InternalTrees.ColumnMap,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.Internal.SpanIndex,System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="cacheManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ShaperFactory.ShaperFactoryCreator.TypedCreate(System.Data.Common.QueryCache.QueryCacheManager,System.Data.Query.InternalTrees.ColumnMap,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.Internal.SpanIndex,System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cacheManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ShaperFactory`1.Create(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.ShaperFactory`1.Create(System.Data.Common.DbDataReader,System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.SimpleEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.SimpleEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.AcceptWithMappedType(System.Data.Common.Internal.Materialization.Translator,System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.InternalTrees.ColumnMap)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.BuildExpressionToGetCoordinator(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[],System.Linq.Expressions.Expression,System.Object,System.Data.Common.Internal.Materialization.CoordinatorScratchpad)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="coordinatorScratchpad">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.BuildExpressionToGetRecordState(System.Data.Query.InternalTrees.StructuredColumnMap,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.CheckedConvert``2(``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Compile``1(System.Linq.Expressions.Expression)">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.CreateInlineDelegate(System.Linq.Expressions.Expression)">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.CreatePropertyBindings(System.Data.Query.InternalTrees.StructuredColumnMap,System.Type,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.DetermineClrType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.DetermineClrType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.DetermineElementType(System.Type,System.Data.Query.InternalTrees.CollectionColumnMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_AndAlso(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <parameter name="operands">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_BitwiseOr(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
    <parameter name="operands">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_EnsureType(System.Linq.Expressions.Expression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_EntityKey_ctor(System.Data.Common.Internal.Materialization.Translator,System.Data.Query.InternalTrees.EntityIdentity,System.Boolean,System.Linq.Expressions.Expression@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_EntityKey_HasValue(System.Data.Query.InternalTrees.SimpleColumnMap[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Equal(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_NullConstant(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Reader_GetValue(System.Int32,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Reader_GetXXX(System.Int32,System.Type,System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dataReaderMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Reader_IsDBNull(System.Data.Query.InternalTrees.ColumnMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Reader_IsDBNull(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_GetColumnValueWithErrorHandling(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_GetPropertyValueWithErrorHandling(System.Type,System.Int32,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_GetState(System.Int32,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_SetState(System.Int32,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Emit_Shaper_SetStatePassthrough(System.Int32,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.EnterCoordinatorTranslateScope(System.Data.Common.Internal.Materialization.CoordinatorScratchpad)">
    <parameter name="coordinatorScratchpad">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.GetCheckPermissionsDelegate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.GetConstructor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.GetReaderMethod(System.Type,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.HandleLinqRecord(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="initializerMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.HandleRegularRecord(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg,System.Data.Metadata.Edm.RowType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="spanRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.HandleSpandexRecord(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg,System.Data.Metadata.Edm.RowType)">
    <parameter name="spanRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.LookupObjectMapping(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.MultipleDiscriminatorPolymorphicColumnMapHelper``1(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.ProcessCollectionColumnMap(System.Data.Query.InternalTrees.CollectionColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.ProcessCollectionColumnMap(System.Data.Query.InternalTrees.CollectionColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg,System.Data.Query.InternalTrees.ColumnMap,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.ResolveSpanType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.TestCompile``1(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.TranslateColumnMap``1(System.Data.Common.QueryCache.QueryCacheManager,System.Data.Query.InternalTrees.ColumnMap,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Objects.Internal.SpanIndex,System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="queryCacheManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.TypedCreateInlineDelegate``1(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.ComplexTypeColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.DiscriminatedCollectionColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.EntityColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.RefColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.SimpleCollectionColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.SimplePolymorphicColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Translator.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,System.Data.Common.Internal.Materialization.TranslatorArg)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Internal.Materialization.TranslatorResult.Expression">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Internal.Materialization.Util.GetObjectMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.CompiledQueryCacheEntry.SetExecutionPlan(System.Data.Objects.Internal.ObjectQueryExecutionPlan)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="newPlan">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.EntityClientCacheKey.#ctor(System.Data.EntityClient.EntityCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.EntityClientCacheKey.GetParametersToken(System.Data.EntityClient.EntityCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.EntitySqlQueryCacheKey.#ctor(System.String,System.String,System.Int32,System.String,System.String,System.Data.Objects.MergeOption,System.Type)">
    <parameter name="eSqlStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.CacheRecyclerHandler(System.Object)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.Create">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryCacheLookup(System.Data.Common.QueryCache.CompiledQueryCacheKey,System.Data.Common.QueryCache.CompiledQueryCacheEntry@)">
    <parameter name="objectQueryCacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryCacheLookup(System.Data.Common.QueryCache.EntityClientCacheKey,System.Data.EntityClient.EntityCommandDefinition@)">
    <parameter name="entityClientCacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryCacheLookup(System.Data.Common.QueryCache.EntitySqlQueryCacheKey,System.Data.Objects.Internal.ObjectQueryExecutionPlan@)">
    <parameter name="objectQueryCacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryCacheLookup``1(System.Data.Common.QueryCache.ShaperFactoryQueryCacheKey{``0},System.Data.Common.Internal.Materialization.ShaperFactory{``0}@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryInternalCacheLookup(System.Data.Common.QueryCache.QueryCacheKey,System.Data.Common.QueryCache.QueryCacheEntry@)">
    <parameter name="queryCacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.QueryCacheManager.TryLookupAndAdd(System.Data.Common.QueryCache.QueryCacheEntry,System.Data.Common.QueryCache.QueryCacheEntry@)">
    <parameter name="inQueryCacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.QueryCache.ShaperFactoryQueryCacheKey`1.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.AssertEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.ConvertClrTypeToDbType(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateCollectionType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateCollectionTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateCollectionTypeUsage(System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateKeyRowType(System.Data.Metadata.Edm.EntityTypeBase,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateReferenceType(System.Data.Metadata.Edm.EntityTypeBase)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateReferenceTypeUsage(System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateRowType(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.CreateRowTypeUsage(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Metadata.Edm.TypeUsage}},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetAllStructuralMembers(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetAllStructuralMembers(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetCommonTypeUsage(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.TypeUsage})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetCommonTypeUsage(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeUsage2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetDeclaredStructuralMembers(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetDeclaredStructuralMembers(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetEdmType``1(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetElementTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetFullName(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetFullName(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetFullName(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetFullName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetLiteralTypeUsage(System.Data.Metadata.Edm.PrimitiveTypeKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetLiteralTypeUsage(System.Data.Metadata.Edm.PrimitiveTypeKind,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetProperties(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetProperties(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetReadOnlyType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetStrongName(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.GetStrongName(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsCanonicalFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsFacetValueConstant(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsIntegerConstant(System.Data.Metadata.Edm.TypeUsage,System.Object,System.Int64)">
    <parameter name="valueType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsSetComparableOpType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidDistinctOpType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidGroupKeyType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidInOpType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidIsNullOpType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.IsValidSortOpKeyType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetBooleanFacetValue(System.Data.Metadata.Edm.TypeUsage,System.String,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetByteFacetValue(System.Data.Metadata.Edm.TypeUsage,System.String,System.Byte@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetClosestPromotableType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetCollectionElementType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetEdmType``1(System.Data.Metadata.Edm.TypeUsage,``0@)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetIntFacetValue(System.Data.Metadata.Edm.TypeUsage,System.String,System.Int32@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetIsFixedLength(System.Data.Metadata.Edm.TypeUsage,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetIsUnicode(System.Data.Metadata.Edm.TypeUsage,System.Boolean@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetMaxLength(System.Data.Metadata.Edm.TypeUsage,System.Int32@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetPrecision(System.Data.Metadata.Edm.TypeUsage,System.Byte@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetRefEntityType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EntityType@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.TypeHelpers.TryGetScale(System.Data.Metadata.Edm.TypeUsage,System.Byte@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BasicVisitor`1.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BasicVisitor`1.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BasicVisitor`1.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BooleanExpressionTermRewriter`2.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BooleanExpressionTermRewriter`2.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BooleanExpressionTermRewriter`2.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BooleanExpressionTermRewriter`2.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.Accept``1(System.Data.Common.Utils.Boolean.Visitor{`0,``0})">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.ChooseCandidate(System.Data.Common.Utils.Boolean.BoolExpr{`0}[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="candidates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.Equals(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.EquivalentTypeEquals(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.BoolExpr`1.MakeNegated">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Clause`1.ConvertLiteralToExpression(System.Data.Common.Utils.Boolean.Literal{`0})">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.CnfClause`1.Equals(System.Data.Common.Utils.Boolean.CnfClause{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.ConversionContext`1.GetSuccessors(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.ConversionContext`1.TranslateTermToVertex(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="term">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Converter`1.#ctor(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.ConversionContext{`0})">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DnfClause`1.Equals(System.Data.Common.Utils.Boolean.DnfClause{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainConstraint`2.#ctor(System.Data.Common.Utils.Boolean.DomainVariable{`0,`1},System.Data.Common.Utils.Set{`1})">
    <parameter name="variable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainConstraint`2.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainConstraint`2.InvertDomainConstraint">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainConstraintConversionContext`2.GetSuccessors(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.DomainVariable`2.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.FalseExpr`1.EquivalentTypeEquals(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.GenericConversionContext`1.GetSuccessors(System.Data.Common.Utils.Boolean.Vertex)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.IdentifierService`1.CreateConversionContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.IdentifierService`1.LocalSimplify(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.IdentifierService`1.NegateLiteral(System.Data.Common.Utils.Boolean.Literal{`0})">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.AddEquivalence(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.AddFact(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="fact">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.AddImplication(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.AddKnowledgeBase(System.Data.Common.Utils.Boolean.KnowledgeBase{`0})">
    <parameter name="kb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.Equivalence.#ctor(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.KnowledgeBase`1.Implication.#ctor(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.LeafVisitor`1.GetLeaves(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.LeafVisitor`1.GetTerms(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.LeafVisitor`1.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.LeafVisitor`1.VisitTree(System.Data.Common.Utils.Boolean.TreeExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Literal`1.Equals(System.Data.Common.Utils.Boolean.Literal{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Literal`1.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Literal`1.MakeNegated">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NegationPusher.EliminateNot``2(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{``0,``1}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NegationPusher.NegatedTreeVisitor`1.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NegationPusher.NegatedTreeVisitor`1.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NegationPusher.NegatedTreeVisitor`1.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NormalFormNode`1.#ctor(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.NormalFormNode`1.ExprSelector``1(``0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Simplifier`1.SimplifyTree(System.Data.Common.Utils.Boolean.TreeExpr{`0})">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.And(System.Collections.Generic.IEnumerable{System.Data.Common.Utils.Boolean.Vertex})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.And(System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.AssertVertexValid(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.AssertVerticesValid(System.Collections.Generic.IEnumerable{System.Data.Common.Utils.Boolean.Vertex})">
    <parameter name="vertices">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.DetermineTopVariable(System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex,System.Int32@)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="then">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="else">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.EvaluateFor(System.Data.Common.Utils.Boolean.Vertex,System.Int32,System.Int32)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.IfThenElse(System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="then">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="else">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.Not(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.Or(System.Collections.Generic.IEnumerable{System.Data.Common.Utils.Boolean.Vertex})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.VertexValueComparer.Equals(System.Data.Common.Utils.Boolean.Vertex,System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Solver.VertexValueComparer.GetHashCode(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermCounter`1.CountTerms(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermCounter`1.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermCounter`1.VisitTree(System.Data.Common.Utils.Boolean.TreeExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermExpr`1.Equals(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TermExpr`1.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.ToDecisionDiagramConverter`1.TranslateToRobdd(System.Data.Common.Utils.Boolean.BoolExpr{`0},System.Data.Common.Utils.Boolean.ConversionContext{`0})">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TreeExpr`1.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TreeExpr`1.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Triple`3.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.TrueExpr`1.EquivalentTypeEquals(System.Data.Common.Utils.Boolean.BoolExpr{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Vertex.AssertConstructorArgumentsValid(System.Int32,System.Data.Common.Utils.Boolean.Vertex[])">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Vertex.Equals(System.Data.Common.Utils.Boolean.Vertex)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Visitor`2.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Visitor`2.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Visitor`2.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Boolean.Visitor`2.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{`0})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CdpEqualityComparer.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CdpEqualityComparer.System#Collections#IEqualityComparer#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.FindFunctionImport(System.Data.Metadata.Edm.MetadataWorkspace,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.GetEntityTransaction(System.Data.EntityClient.EntityCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.ParseFunctionImportCommandText(System.String,System.String,System.String@,System.String@)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.SetEntityParameterValues(System.Data.EntityClient.EntityCommand,System.Data.Common.DbCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeProviderCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.CommandHelper.SetStoreProviderCommandState(System.Data.EntityClient.EntityCommand,System.Data.EntityClient.EntityTransaction,System.Data.Common.DbCommand)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeProviderCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.DisposableCollectionWrapper`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Helpers.FormatTraceLine(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Helpers.StringTrace(System.String)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Helpers.StringTraceLine(System.String)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.InternalBase.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.InternalBase.ToFullString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.InternalBase.ToFullString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.Add(`0,`1)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.AddRange(`0,System.Collections.Generic.IEnumerable{`1})">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Utils.KeyToListMap`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.ListForKey(`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.RemoveKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.KeyToListMap`2.TryGetListForKey(`0,System.Collections.ObjectModel.ReadOnlyCollection{`1}@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Memoizer`2.Evaluate(`0)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.#ctor(System.Data.Metadata.Edm.EntityTypeBase,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.CheckIfAllErrorsAreWarnings(System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="schemaErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.ConvertStoreTypeUsageToEdmTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.DoesEndFormKey(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.DoesEndKeySubsumeAssociationSetKey(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Collections.Generic.HashSet{System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EdmMember,System.Data.Metadata.Edm.EntityType}})">
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationkeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.DoesMemberExist(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GenerateHashForAllExtentViewsContent(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="extentViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetAssociationsForEntitySet(System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetAssociationsForEntitySetAndAssociationType(System.Data.Metadata.Edm.EntityContainer,System.String,System.Data.Metadata.Edm.AssociationType,System.String,System.Data.Metadata.Edm.EntitySet@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetAssociationsForEntitySets(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetConcurrencyMode(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetConcurrencyMode(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetElementType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetEntitySetAtEnd(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetEntityTypeForEnd(System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetOppositeEnd(System.Data.Metadata.Edm.AssociationSetEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetOtherAssociationEnd(System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetPrimitiveTypeKind(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetSomeEndForEntitySet(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetStoreGeneratedPattern(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetTypeAndSubtypesOf(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.MetadataWorkspace,System.Boolean)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.GetUpperBoundOfMultiplicity(System.Data.Metadata.Edm.RelationshipMultiplicity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.HasDiscreteDomain(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsAssociationValidForEntityType(System.Data.Metadata.Edm.AssociationSetEnd,System.Data.Metadata.Edm.EntityType)">
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsComposable(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsEveryOtherEndAtLeastOne(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsExtentAtSomeRelationshipEnd(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsMemberNullable(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsNonRefSimpleMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsParentOf(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.EntityType)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsPartOfEntityTypeKey(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.IsSuperTypeOf(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="superType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.TryDetermineCSpaceModelType``1(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.EntityType@)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.MetadataHelper.TryGetFunctionImportReturnEntityType(System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EntityType@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ModifiableIteratorCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Pair`2.Equals(System.Data.Common.Utils.Pair{`0,`1})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Pair`2.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Pair`2.PairComparer.Equals(System.Data.Common.Utils.Pair{`0,`1},System.Data.Common.Utils.Pair{`0,`1})">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Pair`2.PairComparer.GetHashCode(System.Data.Common.Utils.Pair{`0,`1})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Add(`0)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Contains(`0)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Common.Utils.Set`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Common.Utils.Set`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Remove(`0)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Subtract(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.System#Collections#Generic#IEnumerable{TElement}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.Set`1.Unite(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.BuildDelimitedList``1(System.Collections.Generic.IEnumerable{``0},System.Data.Common.Utils.StringUtil.ToStringConverter{``0},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.FormatInvariant(System.String,System.Object[])">
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.FormatStringBuilder(System.Text.StringBuilder,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="format">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.IndentNewLine(System.Text.StringBuilder,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.InvariantConvertToString``1(``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToCommaSeparatedString(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToCommaSeparatedString(System.Text.StringBuilder,System.Collections.IEnumerable)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToCommaSeparatedStringSorted(System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToCommaSeparatedStringSorted(System.Text.StringBuilder,System.Collections.IEnumerable)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedString(System.Collections.IEnumerable,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedString(System.Text.StringBuilder,System.Collections.IEnumerable,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedString(System.Text.StringBuilder,System.Collections.IEnumerable,System.String,System.String)">
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedStringPrivate(System.Text.StringBuilder,System.Collections.IEnumerable,System.String,System.String,System.Boolean)">
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedStringSorted(System.Collections.IEnumerable,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.StringUtil.ToSeparatedStringSorted(System.Text.StringBuilder,System.Collections.IEnumerable,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.ThreadSafeList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceStringComparer.Equals(System.String,System.String)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceStringComparer.GetHashCode(System.String)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TrailingSpaceStringComparer.NormalizeString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.TreePrinter.IndentLine(System.Text.StringBuilder)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TreePrinter.Print(System.Data.Common.Utils.TreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Common.Utils.TreePrinter.PrintChildren(System.Text.StringBuilder,System.Data.Common.Utils.TreeNode)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Common.Utils.TreePrinter.PrintNode(System.Text.StringBuilder,System.Data.Common.Utils.TreeNode)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Entity.Error.ArgumentNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Error.ArgumentOutOfRange(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Error.NotImplemented">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Error.NotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_ClosedDataReaderError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_CollectionParameterElementIsNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_CollectionParameterElementIsNullOrEmpty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_DataReaderClosed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_EntitySetForNonEntityType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_GetSchemaTableIsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_ImplicitlyClosedDataReaderError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InternalProviderError(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidBufferSizeOrIndex(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataLength(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_InvalidDataReaderFieldCountForPrimitiveType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataReaderMissingColumnForType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataReaderMissingDiscriminatorColumn(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_InvalidDataReaderUnableToDetermineType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDataType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidDestinationBufferIndex(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidEnumerationValue(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_InvalidSourceBufferIndex(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_KeysRequiredForJoinOverNest(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_KeysRequiredForNesting">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_MustUseSequentialAccess">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_NestingNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_NoData">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_NonSequentialChunkAccess(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_NonSequentialColumnAccess(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_NoQueryMappingView(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ADP_ProviderDoesNotSupportCommandTrees">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ADP_UnknownDataTypeCode(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AliasNameAlreadyUsed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AliasNameIsAlreadyDefined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AllArtifactsMustTargetSameProvider_InvariantName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AllArtifactsMustTargetSameProvider_ManifestToken(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.AllElementsMustBeInSchema">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AlreadyDefined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousCanonicalFunction(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousEntityContainerEnd(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousFunction(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.AmbiguousFunctionArguments">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousFunctionMethodCtorName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousFunctionOverload(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousFunctionReturnType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AmbiguousTypeName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ApplyNotSupportedOnSql8">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ArgumentMustBeCSpaceType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ArgumentMustBeOSpaceType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ArgumentOutOfRange(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ArgumentOutOfRangeExpectedPostiveNumber(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ArgumentTypesAreIncompatible(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ArrayTooSmall">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AssemblyMissingFromAssembliesToConsider(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.AssociationInvalidMembers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.AssociationSetInvalidRelationshipKind(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.AtleastOneSSDLNeeded">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadNamespaceOrAlias(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadNavigationPropertyBadFromRoleType(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadNavigationPropertyRelationshipNotRelationship(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.BadNavigationPropertyRolesCannotBeTheSame">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadNavigationPropertyUndefinedRole(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadParameterDirection(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadPrecisionAndScale(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BadTypeModifier(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.BetweenLimitsCannotBeUntypedNulls">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BetweenLimitsTypesAreNotCompatible(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BetweenLimitsTypesAreNotOrderComparable(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BetweenValueIsNotOrderComparable(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.BothMinAndMaxValueMustBeSpecifiedForNonConstantFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotConvertNumericLiteral(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CannotCreateEmptyMultiset">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CannotCreateMultisetofNulls">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotInstantiateAbstractType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotReferTypeAcrossSchema(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotResolveNameToFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotUseCanonicalNamespace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CannotUseSystemNamespaceAsAlias(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CanonicalFunctionNotSupportedPriorSql10(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CanonicalTypeCannotBeMapped(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CanonicalTypeNameNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CheckArgumentContainsNullFailed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_ConstructorNoParameterless">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CodeGen_MissingMethod(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyDeclaringTypeIsValueType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyIsIndexed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyIsStatic">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyNoGetter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyNoSetter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyStrongNameIdentity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyUnsupportedForm">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CodeGen_PropertyUnsupportedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Collections_CannotFillTryDifferentMergeOption(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Collections_ExpectedCollectionGotReference(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Collections_FoundMoreThanOneRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Collections_InvalidEntityStateLoad(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Collections_InvalidEntityStateSource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Collections_NoRelationshipSetMatched(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Collections_UnableToMergeCollections">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CommandTextFunctionsCannotDeclareStoreFunctionName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CommandTextFunctionsNotComposable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CommandTreeCanOnlyBeSetOnce">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CompiledELinq_UnsupportedParameterType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ComplexObject_ComplexChangeRequestedOnScalarProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ComplexObject_ComplexObjectAlreadyAttachedToParent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ComplexObject_InvalidComplexDataRecordObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ComplexObject_NullableComplexTypesNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ComplexTypeInvalidMembers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ComposableFunctionMustDeclareReturnType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ConcatBuiltinNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ConcurrencyRedefinedOnSubTypeOfEntitySetType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ConstantFacetSpecifiedInSchema(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CouldNotFindAggregateKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CouldNotResolveIdentifier(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Aggregate_InvalidFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_And_BooleanArgumentsRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Apply_DuplicateVariableNames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Arithmetic_NumericCommonType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Binary_CollectionsRequired(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Binding_CollectionRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Binding_VariableNameNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Case_AtLeastOneClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Case_InvalidResultType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Case_WhensMustEqualThens">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Cast_InvalidCast(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_CommandTree_Import_NullCommandTreeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_CommandTree_InvalidDataSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_CommandTree_InvalidParameterName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_CommandTree_NoParameterExists">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_CommandTree_ParameterExists">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Comparison_ComparableRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Constant_InvalidConstantType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Constant_InvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Constant_InvalidValueForType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_EndNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_EntityContainerNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_EntitySetNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_FunctionNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_PropertyNotFound(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Copier_TypeNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_CrossJoin_AtLeastTwoInputs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_CrossJoin_DuplicateVariableNames(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_DeRef_RefRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Distinct_InvalidCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Element_InvalidArgumentForUnwrapSingleProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Except_LeftNullTypeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Exceptions_InvalidCommandTree">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_ExpressionLink_NullTypeInvalid(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_ExpressionLink_TypeMismatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_ExpressionList_IncorrectElementCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Factory_IncompatibleRelationEnds">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Factory_NewCollectionElementsRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Factory_NewCollectionInvalidCommonType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Factory_NoSuchProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Factory_NoSuchRelationEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Function_BodyOnlyValidForLambda">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Function_CommandTextInExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Function_NonComposableInExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Function_VoidResultInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_MetadataNotReadOnly">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_NoProviderBooleanType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_NoProviderIntegerType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_NoProviderStringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_NullTypeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_General_PolymorphicArgRequired(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_General_PolymorphicTypeRequired(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_TreeMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_General_TypeUsageNullEdmTypeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_General_UnsupportedExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GetEntityRef_EntityRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GetRefKey_InvalidRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GetRefKey_RefRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GroupBinding_CollectionRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GroupBinding_GroupVariableNameNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_GroupBy_AggregateColumnExistsAsGroupColumn(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GroupBy_AggregateTreeMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_GroupBy_AtLeastOneKeyOrAggregate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_GroupBy_KeyNotEqualityComparable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_InvalidTypeForSetOperation(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_IsNull_CollectionNotAllowed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_IsNull_InvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Join_DuplicateVariableNames">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Limit_ConstantOrParameterRefRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Limit_IntegerRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Limit_NonNegativeLimitRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EdmMemberDeclaringTypeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EdmMemberIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EdmMemberNameNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EdmMemberTypeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntitySetElementTypeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntitySetEntityContainerNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntitySetIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntitySetNameNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntityTypeEmptyKeyMembersInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_EntityTypeNullKeyMembersInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionNameNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionParameterIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionParameterNameNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionParametersNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionParameterTypeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_FunctionReturnParameterNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Metadata_TypeUsageIncorrectSpace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_NewInstance_CannotInstantiateAbstractType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_NewInstance_CannotInstantiateMemberlessType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_NewInstance_CollectionTypeRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_NewInstance_IncompatibleRelatedEntity_SourceTypeNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_NewInstance_IncompatibleRelatedEntity_TargetEntityNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_NewInstance_StructuralTypeRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Not_BooleanArgumentRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Or_BooleanArgumentsRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Property_InstanceRequiredForInstance">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_QueryTree_NullQueryInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Ref_PolymorphicArgRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEndFromDifferentRelationship">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEndMustBeAtMostOne">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEndSameAsSourceEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEntityNotCompatible">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelatedEntityRef_TargetEntityNotRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_RelNav_NoCompositions">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_RelNav_WrongSourceType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Skip_ConstantOrParameterRefRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Skip_IntegerRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Skip_NonNegativeCountRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_SkipSort_AtLeastOneKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Sort_EmptyCollationInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Sort_NonStringCollationInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Sort_OrderComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Unary_CollectionRequired(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Util_CheckListDuplicateName(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Util_CheckListEmptyInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Cqt_Validator_CycleDetected">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Validator_VarRefInvalid(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Cqt_Validator_VarRefTypeMismatch(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CreateRefTypeIdentifierMustBeASubOrSuperType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CreateRefTypeIdentifierMustSpecifyAnEntityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxAliasedNamespaceDeclaration">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxAnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxAnyElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxApplyClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxBetween">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCase">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCaseElse">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCaseWhenThen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCast">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCollatedOrderByClauseItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCommandExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxCreateRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxDeref">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxDivide">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxDot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxEquals">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxEscapedIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxExcept">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxExists">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxExpressionList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFlatten">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromApplyClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromClauseItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromClauseList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxFromJoinClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CtxFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGenericFunctionCall">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGenericTypeCtor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGreaterThan">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGreaterThanEqual">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxGroupByClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxHavingClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIntersect">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIsNotNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIsNotOf">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIsNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxIsOf">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxJoinClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxJoinOnClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLessThan">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLessThanEqual">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLike">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLimitSubClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CtxMethodTerm(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMinus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxModulus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMultipartIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMultiply">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxMultisetCtor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNamespaceDeclaration">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNavigate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNotBetween">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNotEqual">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNotIn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNotLike">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxNullLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOfType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOfTypeOnly">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOr">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOrderByClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOrderByClauseItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxOverlaps">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxPlus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxQueryExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRelationship">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRelationshipList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxRowCtor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSelectRowClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSelectValueClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSimpleIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxSkipSubClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxTopSubClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxTreat">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CtxTypeCtorWithType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxTypeIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxUnaryMinus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxUnaryPlus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxUnion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxUnionAll">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.CtxWhereClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.CycleInTypeHierarchy(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DataCategory_Data">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DataCategory_Update">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_Direction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_Offset">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_Size">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_SourceColumn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DbParameter_SourceVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DecimalPrecisionMustBeGreaterThanScale(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DefaultNotAllowed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.DefiningTypeDoesNotSupportMethodCalls">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DeRefArgIsNotOfRefType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicatedFunctionoverloads(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateEndName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateEntityContainerMemberName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateEntitySetTable(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateMemberName(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicateMemberNameInExtendedEntityContainer(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicatePropertyNameSpecifiedInEntityKey(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.DuplicationOperation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EdmMembersDefiningTypeDoNotAgreeWithMetadataType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EdmVersionNotSupportedByRuntime(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ElementOperatorIsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_AnonymousType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_ClosureType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_CreateOrderedEnumerableNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_CycleDetected">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_ExpressionMustBeIQueryable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_InvalidOfTypeResult(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_NotPropertyOrField(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_PrimitiveTypesSample">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_PropertyIndexNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_SkipWithoutOrder">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_ThenByDoesNotFollowOrderBy">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnboundParameterExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnexpectedTypeForNavigationProperty(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnhandledBindingType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnhandledExpressionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnrecognizedMember(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableCanonicalFunctionForExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableCanonicalFunctionForMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableCanonicalFunctionForMethod(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableStoreFunctionForExpression(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableStoreFunctionForMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnresolvableStoreFunctionForMethod(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedBinding">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedCast(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedCastToDecimal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedComparison(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedConstant(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedConstructor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedDifferentContexts">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedEnumerableType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedExpressionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedHeterogeneousInitializers(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedInclude">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedIsOrAs(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedKeySelector(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedMethod(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedMethodSuggestedAlternative(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedNestedFirst">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedNominalType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedObjectQueryMaterialization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedPassthrough(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedQueryableMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedRowComparison(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedRowMemberComparison(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedRowTypeComparison(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ELinq_UnsupportedSingle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedStringRemoveCase(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedTrimStartTrimEndCase(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedUseOfContextParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedVBDatePartInvalidInterval(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ELinq_UnsupportedVBDatePartNonConstantInterval(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EmptyCommandText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EmptyDefiningQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EmptyFile(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EmptyIdentity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EmptyName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EmptySchemaTextReader">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EndNameAlreadyDefinedDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EndWithManyMultiplicityCannotHaveOperationsSpecified(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Entity_EntityCantHaveMultipleChangeTrackers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CannotCloneStoreProvider">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CannotDeduceDbType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CannotReopenConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ClosedConnectionForUpdate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CommandDefinitionExecutionFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CommandDefinitionPreparationFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CommandExecutionFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_CommandTreeMetadataIncompatible">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ConnectionAndMetadataProviderMismatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionMustBeClosed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionNotOpen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionStateBroken">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionStateClosed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ConnectionStringMissingInfo(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ConnectionStringNeededBeforeOperation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_DataReaderIsStillOpen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_DbConnectionHasNoProvider(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_DoesNotImplementIServiceProvider(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_DuplicateParameterNames(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_EmptyParameterName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ErrorInBeginningTransaction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ErrorInClosingConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ExecutingOnClosedConnection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ExtraParametersWithNamedConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_FailedToGetInformation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_FunctionImportEmptyCommandText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_IncompatibleNavigationPropertyResult(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_InvalidNamedConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_InvalidParameterDirection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_InvalidParameterName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_InvalidStoredProcedureCommandText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_InvalidStoreProvider">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_InvalidTransactionForCommand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ItemCollectionsNotRegisteredInWorkspace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_KeywordNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_NestedNamedConnection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_NoCommandText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_NoConnectionForAdapter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_NoConnectionForCommand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_NoStoreConnectionForUpdate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_NoSuitableType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ProviderGeneralError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ProviderSpecificError(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_ReturnedNullOnProviderMethod(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_SettingsCannotBeChangedOnOpenConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_StoreReaderFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_TooFewColumns">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_TransactionAlreadyStarted">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_UnableToFindFunctionImport(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_UnableToFindFunctionImportContainer(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_UnknownParameterType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_UnmappedFunctionImport">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_UnsupportedCommandType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityClient_UnsupportedDbType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityClient_ValueNotString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityConnectionString_Metadata">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityConnectionString_Name">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityConnectionString_Provider">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityConnectionString_ProviderConnectionString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityContainerAlreadyExists(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityContainerCannotExtendItself(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityDataCategory_Context">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityDataCategory_NamedConnectionString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityDataCategory_Source">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_CannotChangeKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_DataRecordMustBeEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_DoesntMatchKeyOnEntity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_EntityKeyMustHaveValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_EntitySetDoesNotMatch(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_EntityTypesDoNotMatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_IncorrectNumberOfKeyValuePairs(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_IncorrectValueType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_InvalidName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_InvalidQualifiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_MissingEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKey_MissingKeyValue(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_NoNullsAllowedInKeyValuePairs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityKey_UnexpectedNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKeyMustBeScalar(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKeyTypeCurrentlyNotSupported(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityKeyTypeCurrentlyNotSupportedInSSDL(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_CannotAddMoreThanOneEntityToEntityReference">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_CannotChangeReferentialConstraintProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_CannotSetSpecialKeys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_EntityIsNotPartOfRelationship">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_EntityKeyValueMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityReference_ExpectedReferenceGotCollection(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_LessThanExpectedRelatedEntitiesFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityReference_MoreThanExpectedRelatedEntitiesFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntityReference_TryDifferentMergeOption(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntitySetInAnotherContainer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntitySetIsDoesNotBelongToEntityContainer(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntitySetNotInCSPace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EntitySetTypeHasNoKeys(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityTypeInvalidMembers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.EntityTypesDoNotAgree">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.EquivalentMemberName(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionCannotBeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionMustBeCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionMustBeNumericType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionTypeMustBeBoolean">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ExpressionTypeMustBeEntityType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionTypeMustBeEqualComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ExpressionTypeMustBeNominalType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExpressionTypeMustNotBeCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ExprIsNotValidEntitySetForCreateRef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FacetNotAllowed(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FacetValueHasIncorrectType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.FailedToDeclareCanonicalNamespace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FailedToFindClrTypeMapping(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FailedToFindCSpaceTypeMapping(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FailedToFindOSpaceTypeMapping(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FailedToResolveAggregateFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.FailedToRetrieveProviderManifest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportEntityTypeDoesNotMatchEntitySet(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportReturnEntitiesButDoesNotSpecifyEntitySet(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportSpecifiesEntitySetButNotEntityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportUnknownEntitySet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportWithUnsupportedReturnTypeV1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionImportWithUnsupportedReturnTypeV1_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionWithNonEdmTypeNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.FunctionWithNonScalarTypeNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.GeneralExceptionAsQueryInnerException(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GeneralQueryError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Generated_View_Type_Super_Class_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Generated_Views_Changed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Generated_Views_Invalid_Extent_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GeneratorErrorSeverityError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GeneratorErrorSeverityUnknown">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GeneratorErrorSeverityWarning">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GenericSyntaxError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GroupingKeysMustBeEqualComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.GroupVarNotFoundInScope">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.HavingRequiresGroupClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ImcompatibleCreateRefKeyElementType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ImcompatibleCreateRefKeyType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.IncorrectProviderManifest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InferRelationshipEndAmbigous(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InferRelationshipEndFailedNoEntitySetMatch(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InferRelationshipEndGivesAlreadyDefinedEnd(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InFromClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InGroupClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InnerJoinMustHaveOnPredicate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InRowConstructor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InSelectProjectionList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidAction(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidAliasName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidArgumentTypeForAggregateFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidAssociationTypeForUnion(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidBaseTypeForItemType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidBaseTypeForNestedType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidBaseTypeForStructuredType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidBaseTypeLoop">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidBoolean(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCaseElseType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCaseThenNullType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCaseThenTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCaseWhenThenNullType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCast(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCastExpressionType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCastType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCollectionForMapping(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCollectionSpecified(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidComplexType(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidCreateRefKeyType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCtorArgumentType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidCtorUseOnType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDatePartArgumentExpression(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDatePartArgumentValue(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDateTimeOffsetLiteral(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDay(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDayInMonth(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultBinaryWithNoMaxLength(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultBoolean(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultDateTime(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultDateTimeOffset(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultDecimal(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultFloatingPoint(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultGuid(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultIntegral(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDefaultTime(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidDeRefProperty(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidDistinctArgumentInCtor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidDistinctArgumentInNonAggFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidDocumentationBothTextAndStructure">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEmptyIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEmptyQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEmptyQueryTextArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEndEntitySetTypeMismatch(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEndRoleInRelationshipConstraint(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntityContainerNameInExtends(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntityEndName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntityRootTypeArgument(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntitySetName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntitySetNameReference(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntitySetType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEntityTypeArgument(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEscapedIdentifier(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEscapedIdentifierEOF">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidEscapedIdentifierUnbalanced(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidEscapedNamespaceAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidFileExtension(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidFlattenArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidFromPropertyInRelationshipConstraint(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidGroupIdentifierReference(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidHour(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidImplicitRelationshipFromEnd(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidImplicitRelationshipToEnd(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidInExprArgs(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidJoinLeftCorrelation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyArgument(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyKeyDefinedInBaseClass(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyMember(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyNoProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyNullablePart(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidKeyTypeForCollation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidLiteralFormat(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidMaxLengthSize">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMemberNameMatchesTypeName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidMetadataPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMethodPathElement(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMinute(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidModeForWithRelationshipClause">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidModeInParameterInFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidModeInReturnParameterInFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMonth(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityFromRoleToPropertyNonNullable(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityFromRoleToPropertyNullable(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityFromRoleUpperBoundMustBeOne(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityToRoleLowerBoundMustBeZero(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityToRoleUpperBoundMustBeMany(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidMultiplicityToRoleUpperBoundMustBeOne(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidNamespace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidNamespaceAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidNamespaceInUsing(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidNamespaceOrAliasSpecified(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidNestedGroupAggregateCall">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidNullArithmetic">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidNullComparison">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidNullLiteralForNonNullableMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidNumberOfParametersForAggregateFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidOperationMultipleEndsInAssociation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidOperatorSymbol">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidParameterFormat(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidParameterType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidParameterTypeForAggregateFunction(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPlaceholderRootTypeArgument(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPlaceholderTypeArgument(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidPredicateForCrossJoin">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPrimitiveTypeKind(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPropertyInRelationshipConstraint(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidPropertyType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidPunctuatorSymbol">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidQualifiedName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidQueryResultType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipEndMultiplicity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipEndType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipSetName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipSetType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidRelationshipSourceType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRelationshipTypeName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidRelationTypeName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRootComplexType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRootRowType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidRowType(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidSavePoint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSchemaEncountered(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidScopeIndex">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSecond(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidSelectItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidSelectValueAliasedExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidSelectValueList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSimpleIdentifier(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSimpleIdentifierNonASCII(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidSize(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidStringArgument(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidToPropertyInRelationshipConstraint(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidTypeName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.InvalidTypeNameExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidUnarySetOpArgument(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidUnsignedTypeForUnaryMinusOperation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidUseOfWebPath(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidValueForParameterTypeSemanticsAttribute(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidWithRelationshipTargetEndMultiplicity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.InvalidYear(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Iqt_CTGen_UnexpectedAggregate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Iqt_CTGen_UnexpectedVarDef">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Iqt_CTGen_UnexpectedVarDefList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Iqt_General_UnsupportedOp(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.IsNullInvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ItemCollectionAlreadyRegistered(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ItemDuplicateIdentity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ItemInvalidIdentity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.KeyMissingOnEntityType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.KeyMustBeCorrelated(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LeftSetExpressionArgsMustBeCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LikeArgMustBeStringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LimitExpressionMustBeParamOrLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.LiteralTypeNotFoundInMetadata(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.LiteralTypeNotSupported(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedColumn">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedComplex">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedKeyword">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedLeft">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedLine">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedNear">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedPrimitive">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedReference">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedRight">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedRow">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedTerm">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.LocalizedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MalformedSingleQuotePayload">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MalformedStringLiteralPayload">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MalformedXml(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_AbstractTypeMappingToNonAbstractType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_AllQueryViewAtCompileTime(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_AlreadyMapped_StorageEntityContainer_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_CannotMapCLRTypeMultipleTimes(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_ConditionValueTypeMismatch_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Clr_Member_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Invalid_MemberType_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Member_Count_Mismatch_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_Member_Type_Mismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_MemberKind_Mismatch_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Default_OCMapping_MultiplicityMismatch_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Duplicate_CdmAssociationSet_StorageMap_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Duplicate_PropertyMap_CaseInsensitive(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Duplicate_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Empty_QueryView_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Empty_QueryView_OfType_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Empty_QueryView_OfTypeOnly_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Enum_EmptyValue_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Enum_InvalidValue_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_ConditionValueTypeMismatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_EntityTypeMappingForFunctionNotReturningEntitySet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_FunctionImportDoesNotExist(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_FunctionImportMappedMultipleTimes(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_ImportParameterHasNoCorrespondingTargetParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_IncompatibleParameterMode(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_IncompatibleParameterType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_InvalidContentEntityTypeForEntitySet(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_MultipleConditionsOnSingleColumn(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_RowsAffectedParameterDoesNotExist_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_RowsAffectedParameterHasWrongMode_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_RowsAffectedParameterHasWrongType_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_StoreFunctionAmbiguous(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_StoreFunctionDoesNotExist(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_TargetFunctionMustBeComposable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_TargetParameterHasNoCorrespondingImportParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_UnreachableIsTypeOf(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_UnreachableType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_FunctionImport_UnsupportedType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_General_Error_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Association_Type_For_Association_Set_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_CSide_ScalarProperty_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_CSRootElementMissing_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AmbiguousFunction_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AmbiguousResultBinding_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationEndMappingInvalidForEntityType_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetAmbiguous_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetCardinality_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetDoesNotExist_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetFromRoleIsNotEntitySet_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetNotMappedForOperation_4(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_AssociationSetRoleDoesNotExist_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_ComplexTypeNotFound_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_In_Table_Context_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MissingEntityType_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MissingParameter_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MissingSetClosure_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MissingVersion_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_Multiple_Types_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_MultipleEndsOfAssociationMapped_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_NotValidFunction_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_NotValidFunctionParameter_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_ParameterBoundTwice_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_ParameterNotFound_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_PropertyNotFound_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_PropertyNotKey_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_PropertyParameterTypeMismatch_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_RedundantEntityTypeMapping_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_UnknownFunction_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_VersionMustBeCurrent_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_VersionMustBeOriginal_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Function_Mapping_WrongComplexType_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Member_Mapping_6(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_Query_Views_MissingSetClosure_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_QueryView_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Invalid_QueryView_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_AbstractEntity_FunctionMapping_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_AbstractEntity_IsOfType_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_AbstractEntity_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Association_Set_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Association_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_Association_Type_Empty_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_AssociationSet_Condition_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Cdm_Member_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Column_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Complex_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Both_Members_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Both_Values_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Computed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Either_Members_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_Either_Values_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_InvalidMember_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_InvalidPrimitiveTypeKind_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_ConditionMapping_NonScalar_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Duplicate_Condition_Member_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Emtpty_SetMap_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_End_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Entity_Set_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Entity_Type_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Entity_Type_For_Entity_Set_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_EntityContainer_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_General_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_ImplicitMappingForAbstractReturnType_FunctionMapping_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_IsTypeOfNotTerminated">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_Set_Mapping_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_StorageEntityContainer_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidContent_Table_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_Table_Expected_0">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_InvalidContent_TypeMapping_QueryView">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidMappingSchema_Parsing_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_InvalidMappingSchema_validation_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_ItemWithSameNameExistsBothInCSpaceAndSSpace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_NotFound_EntityContainer(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_NoViewsCanBeGenerated">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Object_InvalidType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Provider_WrongConnectionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Provider_WrongManifestType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_ProviderReturnsNullType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_Duplicate_OfType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_Duplicate_OfTypeOnly(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_For_Base_Type(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_PropertyMaps_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryView_TypeName_Not_Defined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_QueryViewMultipleTypeInTypeName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Storage_InvalidSpace_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_StoreTypeMismatch_ScalarPropertyMapping_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_TableName_QueryView_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Mapping_TypeName_For_First_QueryView">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_UnsupportedExpressionKind_QueryView_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_UnsupportedInitialization_QueryView_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_UnsupportedPropertyKind_QueryView_3(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_UnsupportedScanTarget_QueryView_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Mapping_Views_For_Extent_Not_Generated(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_AddedEntityAlreadyExists(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Materializer_CannotReEnumerateQueryResults">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_InvalidCastNullable(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_InvalidCastReference(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_NullReferenceCast(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Materializer_PropertyIsNotNullable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_PropertyIsNotNullableWithName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_RecyclingEntity(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_SetInvalidValue(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_UnexpectedMetdataType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Materializer_UnsupportedCollectionType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Materializer_UnsupportedType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MemberAlreadyBelongsToType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MemberInvalidIdentity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Metadata_General_Error">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MethodInvocationNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MethodNotAllowedOnScalars">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MinAndMaxMustBePositive(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MinAndMaxValueMustBeDifferentForNonConstantFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MinAndMaxValueMustBeSameForConstantFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MinMustBeLessThanMax(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MismatchNumberOfPropertiesinRelationshipConstraint">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingAssemblyAttribute(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingAssemblyResource(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingConstraintOnRelationshipType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingDefaultValueForConstantFacet(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingEntityContainerEnd(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingEntitySetName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MissingFacetDescription(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MissingName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MoreThanOneItemMatchesIdentity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MultipleDefinitionsOfParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MultipleDefinitionsOfVariable(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.MultipleMatchesForName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.MultisetElemsAreNotTypeCompatible">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NamespaceAliasAlreadyUsed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NamespaceNameAlreadyDeclared(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NavigationPropertyRelationshipEndTypeMismatch(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NeedNotUseSystemNamespaceInUsing(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NestedAggregatesCannotBeUsedInAggregateFunctions">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NestedClassNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NewTypeConflictsWithExistingType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NiladicFunctionsCannotHaveParameters">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoAggrFunctionOverloadMatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoCanonicalAggrFunctionOverloadMatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoCanonicalFunctionOverloadMatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoCollectionForSpace(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoFunctionOverloadMatch(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NonComposableFunctionHasDisallowedAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NonComposableFunctionMustNotDeclareReturnType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NoStoreTypeForEdmType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotAMemberOfCollection(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotAMemberOfType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotASuperOrSubType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotBinaryTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotDateTimeOffsetTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotDateTimeTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotDecimalTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotInNamespaceAlias(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotInNamespaceNoAlias(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NotNamespaceQualified(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotStringTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotTimeTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NotValidInputPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NullableComplexType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.NullLiteralCannotBePromotedToCollectionOfNulls">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NullParameterForEdmRelationshipAttribute(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NullRelationshipNameforEdmRelationshipAttribute(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NumberOfTypeCtorIsLessThenFormalSpec(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.NumberOfTypeCtorIsMoreThenFormalSpec(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_AcceptAllChangesFailure(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotAttachEntityWithoutKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotAttachEntityWithTemporaryKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotDeleteEntityNotInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotDetachEntityNotInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_CannotSetDefaultContainerName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ClientEntityRemovedFromStore(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_ContainerQualifiedEntitySetNameRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_DoesNotImplementIEntityWithChangeTracker(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntitiesHaveDifferentType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_EntityAlreadyExistsInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntityContainerNotFoundForName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntityMustBeUnchangedOrModified(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_EntitySetNameOrEntityKeyRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_EntitySetNotFoundForName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ExecuteFunctionCalledWithNonQueryFunction(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ExecuteFunctionCalledWithNullParameter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ExecuteFunctionCalledWithScalarFunction(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_ExecuteFunctionTypeMismatch(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidCommandTimeout">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidConnectionString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_InvalidDataAdapter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidDefaultContainerName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidEntitySetInKey(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidEntitySetInKeyFromName(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_InvalidEntitySetOnEntity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_MetadataHasChanged">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NoMappingForEntityType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NonEntityType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NthElementInAddedState(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NthElementIsDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NthElementIsNull(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectContext_NthElementNotInObjectStateManager(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_ObjectDisposed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_ObjectNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_QualfiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectContext_RequiredMetadataNotAvailble">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameter_InvalidParameterName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameter_InvalidParameterType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameterCollection_DuplicateParameterName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameterCollection_ParameterAlreadyExists(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectParameterCollection_ParameterNameNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectParameterCollection_ParametersLocked">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_InvalidConnection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_InvalidEmptyQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectQuery_InvalidQueryName(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidFilterPredicate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidGroupKeyList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidProjectionList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidQueryArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidResultType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidSkipCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidSortKeyList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_InvalidTopCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_QueryBuilder_NotSupportedLinqSource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_Span_IncludeRequiresEntityOrEntityCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectQuery_Span_NoNavProp(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_Span_SpanPathSyntaxError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectQuery_UnableToMapResultType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CannotAccessKeyEntryValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CannotDeleteOnKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CannotModifyKeyEntryState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_CannotModifyKeyProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CantModifyDetachedDeletedEntries">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CantModifyRelationState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CantModifyRelationValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CantSetEntityKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_ChangedInDifferentStateFromChanging(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_ChangeOnUnmappedComplexProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_ChangeOnUnmappedProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_CurrentValuesDoesNotExist">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_EntityMemberChangedWithoutEntityMemberChanging">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_InvalidState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_OriginalValuesDoesNotExist">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateEntry_SetModifiedOnInvalidProperty(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntry_SetModifiedStates">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntryDbDataRecord_CantCreate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntryDbUpdatableDataRecord_CantCreate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateEntryOriginalDbUpdatableDataRecord_CantCreate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_AcceptChangesEntityKeyIsNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_CannotAddEntityWithKeyAttached">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_CannotFixUpKeyToExistingValues">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_DetachedObjectStateEntriesDoesNotExistInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_DoesnotAllowToReAddUnchangedOrModifiedOrDeletedEntity(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_EntityConflictsWithKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_EntityTypeDoesnotMatchtoEntitySetType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_EntityTypeDoesntMatchEntitySetFromKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_GetEntityKeyRequiresObjectToHaveAKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_InvalidKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_KeyPropertyDoesntMatchValueInKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_NoEntryExistForEntityKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectStateManager_NoEntryExistsForObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectStateManager_ObjectStateManagerContainsThisEntityKey">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_AddNewOperationNotAllowedOnAbstractBindingList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_CannotReplacetheEntityorRow">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ObjectView_CannotResolveTheEntitySet(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_IncompatibleArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_IndexBasedInsertIsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ObjectView_WriteOperationNotAllowedOnReadOnlyBindingList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.OfTypeExpressionElementTypeMustBeEntityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.OfTypeExpressionElementTypeMustBeNominalType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.OfTypeOnlyTypeArgumentCannotBeAbstract(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OnlyStoreConnectionsSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OperationActionNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OperationOnReadOnlyCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OperationOnReadOnlyItem">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.OrderByKeyIsNotOrderComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ParameterForLimitNotSupportedOnSql8">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ParameterForSkipNotSupportedOnSql8">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ParameterNameAlreadyDefinedDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ParameterWasNotDefined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ParserFatalError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ParserInputError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PlaceholderExpressionMustBeCompatibleWithEdm64(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PlaceholderExpressionMustBeGreaterThanOrEqualToZero(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PlaceholderSetArgTypeIsNotEqualComparable(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.PlusLeftExpressionInvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.PlusRightExpressionInvalidType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PrecisionMoreThanAllowedMax(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PrecisionOutOfRange(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PrimitiveTypeNotSupportedPriorSql10(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.PropertyCannotBeChangedAtThisTime">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PropertyNameAlreadyDefinedDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.PropertyTypeAlreadyDefined(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDidNotReturnAProviderManifest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderDidNotReturnAProviderManifestToken">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ProviderDoesNotSupportType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderManifestTokenNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ProviderReturnedNullForCreateCommandDefinition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ProviderReturnedNullForGetDbInformation(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RefArgIsNotOfEntityType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_CannotCreateRelationshipBetweenTrackedAndNoTrackedEntities(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_CannotCreateRelationshipEntitiesInDifferentContexts">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_EntitySetIsNotValidForRelationship(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidContainedType_Collection(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidContainedType_Reference(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_InvalidEntityContextForAttach">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_InvalidEntityStateForAttach">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidNthElementContextForAttach(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidNthElementNullForAttach(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_InvalidNthElementStateForAttach(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_InvalidOwnerStateForAttach">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_LoadCalledOnAlreadyLoadedNoTrackedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_LoadCalledOnNonEmptyNoTrackedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_MismatchedMergeOptionOnLoad(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_OwnerIsNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelatedEnd_RelatedEndNotAttachedToContext(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_RelatedEndNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_UnableToAddEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelatedEnd_UnableToRemoveEntity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipFromEndIsAmbiguos">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_CannotNavigateRelationshipForDetachedEntityWithoutKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_CircularRelationshipsWithReferentialConstraints">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_CollectionAlreadyInitialized(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_CollectionInitializeIsForDeserialization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_CollectionRelationshipManagerAttached(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_InconsistentReferentialConstraintProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_InitializeIsForDeserialization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_InvalidRelationshipManagerOwner">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_InvalidTargetRole(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_OwnerIsNotSourceType(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_ReferenceAlreadyInitialized(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_RelationshipManagerAttached(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipManager_UnableToFindRelationshipTypeInMetadata(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_UnableToRetrieveReferentialConstraintProperties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_UnexpectedNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RelationshipManager_UnexpectedNullContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipNameInNavigationPropertyNotValid(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipTargetMustBeUnique(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RelationshipTypeIsNotCompatibleWithEntity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RequiredFacetMissing(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ResultingExpressionTypeCannotBeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RightSetExpressionArgsMustBeCollection">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.RoleTypeInEdmRelationshipAttributeIsInvalidType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RowCtorElementCannotBeNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.RowTypeInvalidMembers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SameRoleNameOnRelationshipAttribute(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SameRoleReferredInReferentialConstraint(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ScaleOutOfRange(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SelectDistinctMustBeEqualComparable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SimilarRelationshipEnd(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SkipExpressionMustBeParamOrLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SourceTypeMustBePromotoableToFromEndRelationType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.SourceUriUnknown">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.StackOverflowInParser">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.StaticMembersAreNotSupported(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.StorageEntityContainerNameMismatchWhileSpecifyingPartialMapping(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.StoreItemCollectionMustHaveOneArtifact(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.SystemNamespaceEncountered(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TableAndSchemaAreMutuallyExclusiveWithDefiningQuery(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TargetRoleNameInNavigationPropertyNotValid(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TextNotAllowed(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TooManyAssociationEnds(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TooManyFunctionArguments">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TopAndLimitCannotCoexist">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TopAndSkipCannotCoexist">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TopExpressionMustBeParamOrLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeDoesNotSupportParameters(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeDoesNotSupportPrecisionOrScale(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeIndentifierArgMustBeLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeIndentifierMustHaveOneOrTwoArgs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeKindMismatch(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeMismatchRelationshipConstaint(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeMustBeEntityType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeMustBeInheritableType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeMustBeNominalType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeNameAlreadyDefinedDuplicate(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeNameNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeNotInAssociationSet(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeNotInEntitySet(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeSpecBellowMin(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.TypeSpecExceedsMax(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeSpecIsNotValid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.TypeUsageHasNoEdmType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnableToDetermineApplicationContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnableToDetermineStoreVersion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnableToFindReflectedType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnableToLoadResource">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnableToResolveAssembly(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnacceptableUri(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedRootElement(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedRootElementNoNamespace(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedTypeInCollection(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedXmlAttribute(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedXmlElement(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.UnexpectedXmlNodeType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnknownAstCommandExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnknownAstExpressionType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.UnknownBuiltInAstExpressionType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_AmbiguousServerGenIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_CircularRelationships">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_ConcurrencyError(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_ConstraintCycle">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_ErrorLoadingRecord">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_GeneralExecutionException">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_GeneratedDependent(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MappingNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingEntity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingModifiedProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingRequiredEntity(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingRequiredRelationshipValue(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_MissingResultColumn(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_ModifyingIdentityColumn(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NonEquatableColumnTypeInClause(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NotSupportedComputedKeyColumn(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NotSupportedIdentityType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NotSupportedServerGenKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NullReturnValueForNonNullableMember(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_NullValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_ReferentialConstraintIntegrityViolation">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_RelationshipCardinalityConstraintViolation(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_RelationshipCardinalityConstraintViolationSingleValue(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_RelationshipCardinalityViolation(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_ReturnValueHasUnexpectedType(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_SqlEntitySetWithoutDmlFunctions(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnableToConvertRowsAffectedParameterToInt32(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedCastArgument(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedExpressionKind(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedExtentType(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedJoinType(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Update_UnsupportedProjection(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Update_WorkspaceMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_BaseTypeHasMemberOfSameName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_CollectionHasNoTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_CollectionTypesCannotHaveBaseType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_EmptyIdentity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_FacetHasNoName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_FacetTypeIsNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_ItemAttributeHasNullTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_MemberHasNoName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_MemberHasNullDeclaringType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_MemberHasNullTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_MetadataPropertyHasNoName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_NavPropWithoutIEntityWithRelationships(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_NoKeyMembers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_NullableEntityKeyProperty(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_ComplexPropertyNotComplex(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_InvalidNavPropReturnType(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Validator_OSpace_ScalarPropertyNotPrimitive(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_RefTypeHasNullEntityType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_RefTypesCannotHaveBaseType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_TypeHasNoName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_TypeHasNoNamespace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Validator_TypeUsageHasNullEdmType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ValueNotUnderstood(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_AND">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_AssociationSet_AsUserString(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_AssociationSet_AsUserString_Negated(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_AssociationSetKey_Missing_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Cannot_Disambiguate_MultiConstant_2(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Cannot_Recover_Attributes_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Cannot_Recover_Types_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_CellIdBooleans_Invalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_CommaBlank">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Concurrency_Derived_Class_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Concurrency_Invalid_Condition_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ConfigurationErrorMsg(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_CQ_DomainConstraint_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_CQ_PartitionConstraint_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_DomainConstraint_EntityTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Duplicate_CProperties_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Duplicate_CProperties_IsMapped_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Entities">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_EntityInstanceToken">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_EntitySet_AsUserString(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_EntitySet_AsUserString_Negated(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_EntitySetKey_Missing_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Error">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_ErrorLog_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_ErrorLog_1(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ErrorPattern_ConditionMemberIsMapped(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ErrorPattern_DuplicateConditionValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Disj_Eq">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Disj_Subs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Disj_Subs_Ref">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Disj_Unk">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Disj">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Subs">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Subs_Ref">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Unk">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Eq_Unk_Ass">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Sub_Disj">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Sub_Eq">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Sub_Eq_Ref">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.Viewgen_ErrorPattern_Partition_Sub_Unk">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_ErrorPattern_TableMappedToMultipleES(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Extent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Failure">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_4(System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_ColumnOrder_Incorrect_8(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_LowerBound_MustBeOne_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_Missing_Relationship_Mapping_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_Missing_Table_Mapping_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_Not_Guaranteed_InCSpace_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_ParentTable_NotMappedToEnd_5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Foreign_Key_UpperBound_MustBeOne_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_HashOnMappingClosure_Not_Matching(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_InputCells_NotIsolated_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Internal_Error">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_InvalidCondition_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_KeyConstraint_Update_Violation_AssociationSet_2(System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_KeyConstraint_Update_Violation_EntitySet_3(System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_KeyConstraint_Violation_5(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Missing_Set_Mapping_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Missing_Sets_Mapping_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_Missing_Type_Mapping_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_NegatedCellConstant_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_No_Default_Value_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_No_Default_Value_For_Configuration_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_NonKeyProjectedWithOverlappingPartitions_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_NotNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_NotNull_No_Projected_Slot_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Null">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_NullableMappingForNonNullableColumn(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsEqualTo_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsNonNullable_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsNotEqualTo_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsNotOneOf_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsOneOf_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_IsOneOfTypes_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustBeEqualTo_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustBeNonNullable_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustBeNull_0(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustBeOneOf_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustNotBeEqualTo_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_OneOfConst_MustNotBeOneOf_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_OR">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_QV_RewritingNotFound(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.Viewgen_RightSideNotDisjoint(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_SlotNumber_Mismatch_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Entity.Strings.ViewGen_TableKey_Missing_1(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.ViewGen_Tuples">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Entity.Strings.WildcardEnumeratorReturnedNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityAdapter.IsStateManagerDirty(System.Data.IEntityStateManager)">
    <parameter name="entityCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityAdapter.Update(System.Data.IEntityStateManager)">
    <parameter name="entityCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.Data.EntityClient.EntityCommandDefinition)">
    <parameter name="commandDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.#ctor(System.Data.EntityClient.EntityConnection,System.Data.EntityClient.EntityCommandDefinition)">
    <parameter name="entityCommandDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.CreateCommandDefinition">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.CreateParameter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.DetermineFunctionImport">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.ExecuteDbDataReader(System.Data.CommandBehavior)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.ExecuteReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.ExecuteReader(System.Data.CommandBehavior)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.ExecuteScalar``1(System.Func{System.Data.Common.DbDataReader,``0})">
    <parameter name="resultSelector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommand.GetParameterTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.#ctor(System.Data.Common.DbProviderFactory,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="storeProviderFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.ConstantColumnMapGenerator.System#Data#EntityClient#EntityCommandDefinition#IColumnMapGenerator#CreateColumnMap(System.Data.Common.DbDataReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.CreateColumnMap(System.Data.Common.DbDataReader)">
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.CreateCommand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.DetermineStoreResultType(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.FunctionImportMapping,System.Data.EntityClient.EntityCommandDefinition.IColumnMapGenerator@)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.Execute(System.Data.EntityClient.EntityCommand,System.Data.CommandBehavior)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.ExecuteStoreCommands(System.Data.EntityClient.EntityCommand,System.Data.CommandBehavior)">
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.FunctionColumnMapGenerator.System#Data#EntityClient#EntityCommandDefinition#IColumnMapGenerator#CreateColumnMap(System.Data.Common.DbDataReader)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.GetTargetFunctionMapping(System.Data.Common.CommandTrees.DbFunctionCommandTree)">
    <parameter name="functionCommandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityClient.EntityCommandDefinition.MappedCommands">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityCommandDefinition.SyncParameterProperties(System.Data.EntityClient.EntityParameter,System.Data.Common.DbParameter)">
    <parameter name="entityParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.BeginDbTransaction(System.Data.IsolationLevel)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.BeginTransaction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.BeginTransaction(System.Data.IsolationLevel)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.ChangeDatabase(System.String)">
    <parameter name="databaseName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.CreateCommand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityClient.EntityConnection.Database">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.FormatProviderString(System.String)">
    <parameter name="providerString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetErrorMessageWorthyProviderName(System.Data.Common.DbProviderFactory)">
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetFactory(System.String)">
    <parameter name="providerString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetMetadataWorkspace(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.GetStoreConnection(System.Data.Common.DbProviderFactory)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.LoadEdmItemCollection(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="artifactLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.LoadStoreItemCollections(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.DbConnection,System.Data.Common.DbProviderFactory,System.Data.Common.DbConnectionOptions,System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="factory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connectionOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="artifactLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.OpenStoreConnectionIf(System.Boolean,System.Data.Common.DbConnection,System.Data.Common.DbConnection,System.String,System.String,System.Boolean@)">
    <parameter name="storeConnectionToOpen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exceptionCode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.SplitPaths(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.ValidateThatConnectionAndMetadataProvidersAreEqual(System.Data.Common.DbProviderFactory,System.String,System.Data.Common.DbProviderFactory)">
    <parameter name="connectionFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnection.ValidateValueForTheKeyword(System.Data.Common.DbConnectionOptions,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="effectiveConnectionOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keywordName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)">
    <parameter name="keyword">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)">
    <parameter name="keyword">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityDataReader.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityClient.EntityDataReader.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.#ctor(System.Data.EntityClient.EntityParameter)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.CloneHelper(System.Data.EntityClient.EntityParameter)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.CloneHelperCore(System.Data.EntityClient.EntityParameter)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.CopyTo(System.Data.Common.DbParameter)">
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameter.GetTypeUsage(System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="metadataWorkspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityClient.EntityParameterCollection.InnerList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityParameterCollection.Replace(System.Int32,System.Object)">
    <parameter name="newValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameterCollection.Validate(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityParameterCollection.ValidateType(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateCommand">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateConnection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateConnectionStringBuilder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.CreateParameter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderFactory.System#IServiceProvider#GetService(System.Type)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderServices.CreateCommandDefinition(System.Data.Common.DbProviderFactory,System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeProviderFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderServices.CreateDbCommandDefinition(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
    <parameter name="providerManifest">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityClient.EntityProviderServices.GetDbProviderManifest(System.String)">
    <parameter name="versionHint">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityCommandCompilationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityCommandExecutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.Data.Metadata.Edm.EntitySet,System.Data.IExtendedDataRecord)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Object)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Object[])">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.String)">
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
    <parameter name="keyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.CheckKeyValues(System.Data.Metadata.Edm.EntitySet,System.Data.IExtendedDataRecord,System.String[]@,System.Object@,System.Object[]@)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.CheckValue(System.String,System.String,System.Object,System.Data.Metadata.Edm.PrimitiveType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expectedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.ComplexKeyValuesEqual(System.Data.EntityKey,System.Data.EntityKey)">
    <parameter name="key1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.ConcatKeyValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="metadataWorkspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityKey.GetEntitySetName(System.String,System.String@,System.String@)">
    <parameter name="qualifiedEntitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.GetHashCode(System.Object[])">
    <parameter name="compositeKeyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.GetKeyValueExpressions(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityKey.KeyValueReader.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityKey.KeyValuesEqual(System.Data.EntityKey,System.Data.EntityKey)">
    <parameter name="key1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.AliasResolver.#ctor(System.Data.EntityModel.SchemaObjectModel.Schema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.AliasResolver.Add(System.Data.EntityModel.SchemaObjectModel.UsingElement)">
    <parameter name="usingElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.AliasResolver.CheckForSystemNamespace(System.Data.EntityModel.SchemaObjectModel.UsingElement,System.String,System.Data.EntityModel.SchemaObjectModel.AliasResolver.NameKind)">
    <parameter name="refSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.AliasResolver.TryResolveAlias(System.String,System.String@)">
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.DocumentationElement.HandleLongDescriptionElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.DocumentationElement.HandleSummaryElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.AreRelationshipEndsEqual(System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSetEnd,System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSetEnd)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.CheckForDuplicateTableMapping(System.Collections.Generic.HashSet{System.String},System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet)">
    <parameter name="tableKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.DuplicateOrEquivalentMemberNameWhileExtendingEntityContainer(System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.EntityModel.SchemaObjectModel.AddErrorKind)">
    <parameter name="schemaElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityContainer.EntitySets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.FindEntitySet(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityContainer.FunctionImports">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.HandleAssociationSetElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.HandleEntitySetElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.HandleExtendsAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.HandleFunctionImport(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityContainer.Members">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityContainer.RelationshipSets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.TypeDefinesNewConcurrencyProperties(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainer.TypeIsSubTypeOf(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet},System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet@)">
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseEntitySetTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSet.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSet.HandleEndElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSetEnd.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSetEnd.HandleRoleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerAssociationSetEnd.InferRelationshipEnd(System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet.HandleDbSchemaAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet.HandleDefiningQueryElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet.HandleTableAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSet.AddEnd(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd,System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet)">
    <parameter name="relationshipEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSet.HasEnd(System.String)">
    <parameter name="role">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSet.InferEntitySet(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="relationshipEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSetEnd.HandleEntitySetAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityKeyElement.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.EntityKeyElement.HandlePropertyRefElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.EntityKeyElement.KeyProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.HandleConstantAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.HandleDefaultAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.HandleMaximumAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.HandleMinimumAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.MaxValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FacetDescriptionElement.MinValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FacetEnabledSchemaElement.ParentElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FilteredSchemaElementLookUpTable`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.FilteredSchemaElementLookUpTable`2.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FilteredSchemaElementLookUpTable`2.LookUpEquivalentKey(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FilteredSchemaElementLookUpTable`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.#ctor(System.Data.EntityModel.SchemaObjectModel.EntityContainer)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleAggregateAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleBuiltInAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleCommandTextFunctionElment(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleDbSchemaAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleEntitySetAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleIsComposableFunctionAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleNiladicFunctionAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleParameterElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleParameterTypeSemanticsAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleReturnTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleReturnTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.HandleStoreFunctionNameAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Function.Identity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Function.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Function.RemoveTypeModifier(System.String@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.FunctionImportElement.#ctor(System.Data.EntityModel.SchemaObjectModel.EntityContainer)">
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.NavigationProperty.HandleAssociationAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.NavigationProperty.HandleFromRoleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.NavigationProperty.HandleToRoleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.NavigationProperty.ParentElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.OnOperation.HandleActionAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.HandleModeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Parameter.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.PrimitiveSchema.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Property.Type">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.PropertyRefElement.ResolveNames(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraint.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraint.HandleReferentialConstraintDependentRoleElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraint.HandleReferentialConstraintPrincipalRoleElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraint.IsKeyProperty(System.Data.EntityModel.SchemaObjectModel.ReferentialConstraintRoleElement,System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Boolean@,System.Boolean@,System.Boolean@)">
    <parameter name="roleElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraintRoleElement.HandlePropertyRefElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraintRoleElement.HandleRoleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.ReferentialConstraintRoleElement.RoleProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Relationship.Constraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Relationship.Ends">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Relationship.HandleConstraintElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Relationship.HandleEndElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Relationship.TryGetEnd(System.String,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd@)">
    <parameter name="roleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.HandleMultiplicityAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.HandleOnDeleteElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.HandleOnOperationElement(System.Xml.XmlReader,System.Data.EntityModel.SchemaObjectModel.Operation)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEnd.Operations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Add(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Contains(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Contains(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.CopyTo(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd[],System.Int32)">
    <parameter name="ends">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.EndLookup">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Enumerator.#ctor(System.Collections.Generic.Dictionary{System.String,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd},System.Collections.Generic.List{System.String})">
    <parameter name="keysInDefOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.IsEndValid(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.KeysInDefOrder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.Remove(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.System#Collections#Generic#IList{System#Data#EntityModel#SchemaObjectModel#IRelationshipEnd}#IndexOf(System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.System#Collections#Generic#IList{System#Data#EntityModel#SchemaObjectModel#IRelationshipEnd}#Insert(System.Int32,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.TryGetEnd(System.String,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.RelationshipEndCollection.ValidateUniqueName(System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.String)">
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ReturnType.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ScalarType.TryParse(System.String,System.Object@)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ScalarType.TryParseBinary(System.String,System.Object@)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.ScalarType.TryParseGuid(System.String,System.Object@)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.AddAllSchemaResourceNamespaceNames(System.Collections.Generic.HashSet{System.String},System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.XmlSchemaResource)">
    <parameter name="hashSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.AddFunctionType(System.Data.EntityModel.SchemaObjectModel.Function)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Schema.AliasResolver">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.CreateEdmStandardXmlReaderSettings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.CreateXmlReaderSettings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Schema.Functions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleAliasAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleAssociationElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleEntityContainerTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleEntityTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleFunctionElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleInlineTypeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleProviderAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleProviderManifestTokenAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleTopLevelSchemaElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleTypeInformationElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.HandleUsingElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.InternalParse(System.Xml.XmlReader,System.String)">
    <parameter name="sourceReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.OnSchemaValidationEvent(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.Parse(System.Xml.XmlReader,System.String)">
    <parameter name="sourceReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.ResolveTypeName(System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.String,System.Data.EntityModel.SchemaObjectModel.SchemaType@)">
    <parameter name="usingElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.Schema.SchemaTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.AddXmlSchemaToSet(System.Xml.Schema.XmlSchemaSet,System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.XmlSchemaResource,System.Collections.Generic.HashSet{System.String})">
    <parameter name="schemaSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schemasAlreadyAdded">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.ComputeSchemaSet(System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.GetPrimarySchemaNamespaces(System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.GetResourceStream(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.SomSchemaSetHelper.GetSchemaResourceMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.TryAddContainer(System.Data.EntityModel.SchemaObjectModel.SchemaType,System.Boolean)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Schema.TryAddType(System.Data.EntityModel.SchemaObjectModel.SchemaType,System.Boolean)">
    <parameter name="schemaType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddAlreadyDefinedError(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Object)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Int32,System.Int32,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.String,System.Int32,System.Int32,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddError(System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Xml.XmlReader,System.Object)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.AddOtherContent(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.CanHandleAttribute(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.CanHandleElement(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.Clone(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <parameter name="parentElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.CreateMetadataPropertyFromOtherNamespaceXmlAttribute(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElement.FQName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleBoolAttribute(System.Xml.XmlReader,System.Boolean@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleByteAttribute(System.Xml.XmlReader,System.Byte@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleDocumentationElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleDottedNameAttribute(System.Xml.XmlReader,System.String,System.Func{System.Object,System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleIntAttribute(System.Xml.XmlReader,System.Int32@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleNameAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleText(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.HandleUndottedNameAttribute(System.Xml.XmlReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElement.OtherContent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.Parse(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.ParseAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.ParseElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.ParseText(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.SkipThroughElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElement.TrySplitExtendedMetadataPropertyName(System.String,System.String@,System.String@)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.Add(`0,System.Boolean,System.Func{System.Object,System.String})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="duplicateKeyErrorFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.GetFilteredEnumerator``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.Item(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.KeyFromElement(`0)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.KeyToType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.LookUpEquivalentKey(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTable`1.TryAdd(`0)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTableEnumerator`2.#ctor(System.Collections.Generic.Dictionary{System.String,`1},System.Collections.Generic.List{System.String})">
    <parameter name="keysInOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTableEnumerator`2.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaElementLookUpTableEnumerator`2.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaEntityType.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaEntityType.HandleKeyElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaEntityType.HandleNavigationPropertyElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.SchemaEntityType.NavigationProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.AddSchema(System.Data.EntityModel.SchemaObjectModel.Schema)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.IsValidNamespaceName(System.String)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.LoadProviderManifest(System.Xml.XmlReader,System.String,System.Boolean,System.Data.EntityModel.SchemaObjectModel.Schema@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.ParseAndValidate(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IEnumerable{System.String},System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.Data.Common.DbProviderManifest,System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema}@)">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.ParseAndValidate(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.IEnumerable{System.String},System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.Data.EntityModel.SchemaObjectModel.AttributeValueNotification,System.Data.EntityModel.SchemaObjectModel.AttributeValueNotification,System.Data.EntityModel.SchemaObjectModel.ProviderManifestNeeded,System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.TryGetBaseUri(System.Xml.XmlReader,System.String@)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.SchemaManager.UpdateErrorCollectionAndCheckForMaxErrors(System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError},System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError},System.Boolean@)">
    <parameter name="errorCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredProperty.HandleCollectionKindAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredProperty.HandleTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredProperty.ResolveType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredType.AddMember(System.Data.EntityModel.SchemaObjectModel.SchemaElement)">
    <parameter name="newMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredType.HandleAbstractAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredType.HandleBaseTypeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.StructuredType.HandlePropertyElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.StructuredType.NamedMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntityModel.SchemaObjectModel.StructuredType.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TextElement.TextElementTextHandler(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandleFixedLengthElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandleMaxLengthElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandlePrecisionElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandlePrimitiveTypeKindAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandleScaleElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeElement.HandleUnicodeElement(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleCollationAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleConcurrencyModeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleDefaultAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleIsFixedLengthAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleMaxLengthAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleNullableAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandlePrecisionAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleScaleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleStoreGeneratedPatternAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.HandleUnicodeAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.InternalHandleAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetBinaryFacets(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetDecimalFacets(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetStringFacets(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateAndSetTypeUsage(System.Data.EntityModel.SchemaObjectModel.ScalarType,System.Boolean)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateBinaryDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateBooleanDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateDateTimeDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateDateTimeOffsetDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateDecimalDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateFloatingPointDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType,System.Double,System.Double)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateGuidDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateIntegralDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType,System.Int64,System.Int64)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateLengthFacets(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidatePrecisionFacetsForDateTimeFamily(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.Facet})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="facets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.TypeUsageBuilder.ValidateTimeDefaultValue(System.Data.EntityModel.SchemaObjectModel.ScalarType)">
    <parameter name="scalar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.UsingElement.HandleAliasAttribute(System.Xml.XmlReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.ExtractNamespaceAndName(System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.String,System.String@,System.String@)">
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.ExtractTypeName(System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.String)">
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetBeforeAndAfterLastPeriod(System.String,System.String@,System.String@)">
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetBool(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.Boolean@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetByte(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.Byte@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetDottedName(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.String@)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetEverythingAfterLastPeriod(System.String)">
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetEverythingBeforeLastPeriod(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="qualifiedTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetInt(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.Int32@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetString(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.String@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.GetUndottedName(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.String@)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.IsValidLanguageIndependentIdentifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityModel.SchemaObjectModel.Utils.ValidateDottedName(System.Data.EntityModel.SchemaObjectModel.Schema,System.Xml.XmlReader,System.String)">
    <parameter name="schema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.EntityRes.Culture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityRes.GetObject(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityRes.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityRes.GetString(System.String,System.Object[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntitySqlException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializationInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntitySqlException.Create(System.Data.Common.EntitySql.ErrorContext,System.String,System.Exception)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntitySqlException.Create(System.String,System.String,System.Int32,System.String,System.Boolean,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntitySqlException.ErrorContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntitySqlException.ErrorDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntitySqlException.FormatQueryError(System.String,System.String,System.Int32,System.String,System.Int32@,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.EntitySqlException.Message">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AcceptAllChangesFailure(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AcceptChangesEntityKeyIsNotValid">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AddedEntityAlreadyExists(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AddNewOperationNotAllowedOnAbstractBindingList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Argument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Argument(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Argument(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Argument(System.String,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ArgumentNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ArgumentOutOfRange(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ArgumentOutOfRange(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ArrayTooSmall(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AssociationInvalidMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AssociationSetNotInCSpace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.AttachContext(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="entityWithRelationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.BothMinAndMaxValueMustBeSpecifiedForNonConstantFacet(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAccessKeyEntryValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAddEntityWithKeyAttached">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAddMoreThanOneEntityToEntityReference">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAddMoreThanOneEntityToEntityReferenceTryOtherMergeOption">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAttachEntityWithoutKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotAttachEntityWithTemporaryKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCallDeleteOnKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotChangeEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotChangeReferentialConstraintProperty">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCloneStoreProvider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCreateObjectStateEntryDbDataRecord">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCreateObjectStateEntryDbUpdatableDataRecord">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCreateObjectStateEntryOriginalDbUpdatableDataRecord">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCreateRelationshipBetweenTrackedAndNoTrackedEntities(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotCreateRelationshipEntitiesInDifferentContexts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotDeleteEntityNotInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotDetachEntityNotInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotFillTryDifferentMergeOption(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotFixUpKeyToExistingValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotModifyKeyEntryState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotModifyKeyProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotReEnumerateQueryResults">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotRemergeCollections">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotReplacetheEntityorRow">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotResolveTheEntitySetforGivenEntity(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CannotSetDefaultContainerName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CannotSetSpecialKeys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CantModifyRelationState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CantModifyRelationValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CantSetEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ChangedInDifferentStateFromChanging(System.Data.EntityState,System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ChangeOnUnmappedComplexProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ChangeOnUnmappedProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CheckArgumentContainsNull``1(System.Collections.Generic.IEnumerable{``0}@,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CheckArgumentEmpty``1(System.Collections.Generic.IEnumerable{``0}@,System.Func{System.String,System.String},System.String)">
    <parameter name="errorMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckArgumentNull``1(``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CheckArgumentOutOfRange``1(``0[],System.Int32,System.String)">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckContextNull(System.Data.Objects.ObjectContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckEntityKeyNull(System.Data.EntityKey)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckEntityKeysMatch(System.Data.Objects.DataClasses.IEntityWithKey,System.Data.EntityKey)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CheckStringArgument(System.String,System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CircularRelationshipsWithReferentialConstraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ClientEntityRemovedFromStore(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ClosedDataReaderError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CollectionAlreadyInitialized">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CollectionParameterElementIsNull(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CollectionParameterElementIsNullOrEmpty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CollectionRelationshipManagerAttached">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandCompilation(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecution(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecution(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecutionDataReaderFieldCountForPrimitiveType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecutionDataReaderMissinDiscriminatorColumn(System.String,System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.CommandExecutionDataReaderMissingColumnForType(System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ComplexChangeRequestedOnScalarProperty(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ComplexObjectAlreadyAttachedToParent">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ComplexTypeInvalidMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Constraint(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ContainerQualifiedEntitySetNameRequired(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ContextMetadataHasChanged">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.CurrentValuesDoesNotExist">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Data(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.DataReaderClosed(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.DataRecordMustBeEntity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.DetachedObjectStateEntriesDoesNotExistInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EmptyIdentity(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitiesHaveDifferentType(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityAlreadyExistsInObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityCantHaveMultipleChangeTrackers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityConflictsWithKeyEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityContainterNotFoundForName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityIsNotPartOfRelationship">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityKeyDoesntMatchKeySetOnEntity(System.Data.Objects.DataClasses.IEntityWithKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.EntityKeyInvalidName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityKeyMustHaveValues(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityKeyValueMismatch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityMustBeUnchangedOrModified(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetDoesNotMatch(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetForNonEntityType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetInAnotherContainer(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetIsNotValidForRelationship(System.String,System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetNameOrEntityKeyRequired">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetNotFoundForName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySetNotInCSpace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.Data.Common.EntitySql.ErrorContext,System.String)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.Data.Common.EntitySql.ErrorContext,System.String,System.Exception)">
    <parameter name="errCtx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.String,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntitySqlError(System.String,System.String,System.Int32,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityTypeDoesNotMatchEntitySet(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityTypeDoesntMatchEntitySetFromKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityTypeInvalidMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityTypesDoNotMatch(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.EntityValueChangedWithoutEntityValueChanging">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ExecuteFunctionCalledWithNonReaderFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ExecuteFunctionTypeMismatch(System.Type,System.Data.Metadata.Edm.EdmType)">
    <parameter name="typeArgument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expectedElementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ExpectedCollectionGotReference(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ExpectedReferenceGotCollection(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.FacetValueHasIncorrectType(System.String,System.Type,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expectedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="actualType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.FoundMoreThanOneRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.GenericCheckArgumentNull``1(``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.GetAssemblyName(System.Reflection.Assembly)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.GetCheapestSafeEnumerableAsCollection``1(System.Collections.Generic.IEnumerable{``0}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="enumerable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.GetRelationshipManager(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ImplicitlyClosedDataReaderError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncompatibleArgument">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InconsistentReferentialConstraintProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncorrectNumberOfKeyValuePairs(System.String,System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncorrectNumberOfKeyValuePairsInvalidOperation(System.String,System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncorrectValueType(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IncorrectValueTypeInvalidOperation(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IndexBasedInsertIsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IndexOutOfRange(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InternalError(System.Data.EntityUtil.InternalErrorCode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InternalError(System.Data.EntityUtil.InternalErrorCode,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InternalError(System.Data.EntityUtil.InternalErrorCode,System.Int32,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidBaseTypeLoop(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidBufferSizeOrIndex(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidCollectionForMapping(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidCollectionSpecified(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidCommandTimeout(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidComplexDataRecordObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidConnection(System.Boolean,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidConnection(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidConnectionString(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidContainedTypeCollection(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidContainedTypeReference(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDataAdapter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDataLength(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDataType(System.TypeCode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDefaultContainerName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidDestinationBufferIndex(System.Int32,System.Int32,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityContextForAttach">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntitySetInKey(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntitySetInKeyFromName(System.String,System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntitySetName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntitySetOnEntity(System.String,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityStateForAttach">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityStateLoad(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityStateSource">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEntityType(System.String,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.InvalidEnumerationValue(System.Type,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.InvalidKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidMergeOption(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidModeInParameterInFunction(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidModeInReturnParameterInFunction(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidModifiedPropertyName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidNthElementContextForAttach(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidNthElementNullForAttach(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidNthElementStateForAttach(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidOperation(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidOperation(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidOwnerStateForAttach">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidQualifiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidRefreshMode(System.Data.Objects.RefreshMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidRelationshipManagerOwner">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidRelationshipSetName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidSchemaEncountered(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidSourceBufferIndex(System.Int32,System.Int64,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidStringArgument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.InvalidTargetRole(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.IsCatchableEntityExceptionType(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.IsCatchableExceptionType(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ItemCollectionAlreadyRegistered(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ItemDuplicateIdentity(System.String,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ItemInvalidIdentity(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.KeyPropertyDoesntMatchValueInKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.KeysRequiredForJoinOverNest(System.Data.Query.InternalTrees.Op)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.KeysRequiredForNesting">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.KeywordNotSupported(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.LessThanExpectedRelatedEntitiesFound">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.LoadCalledOnAlreadyLoadedNoTrackedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.LoadCalledOnNonEmptyNoTrackedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MaterializerUnsupportedType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MemberAlreadyBelongsToType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MemberInvalidIdentity(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Metadata(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Metadata(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MetadataGeneralError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MinAndMaxMustBePositive(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MinAndMaxValueMustBeDifferentForNonConstantFacet(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MinAndMaxValueMustBeSameForConstantFacet(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MinMustBeLessThanMax(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MismatchedMergeOptionOnLoad(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingDefaultValueForConstantFacet(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingKeyValue(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingKeyValue(System.String,System.String,System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingKeyValueInvalidOperation(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingMethod(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MissingQualifiedEntitySetName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MoreThanExpectedRelatedEntitiesFound">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MoreThanOneItemMatchesIdentity(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.MustUseSequentialAccess">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NestingNotSupported(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Op)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.NoCollectionForSpace(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoEntryExistForEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoEntryExistsForObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.NonSequentialChunkAccess(System.Int64,System.Int64,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NonSequentialColumnAccess(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoNullsAllowedInKeyValuePairs(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NoRelationshipSetMatched(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotBinaryTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotDateTimeOffsetTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotDateTimeTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotDecimalTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotIEntityWithChangeTracker(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotStringTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotSupported(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NotTimeTypeForTypeUsage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NthElementInAddedState(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NthElementIsDuplicate(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NthElementIsNull(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NthElementNotInObjectStateManager(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.NullableComplexTypesNotSupported(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectContextDisposed">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectDisposed(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectDoesNotHaveAKey(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ObjectNotFound">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectNotFound(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectStateEntryinInvalidState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectStateManagerContainsThisEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ObjectStateManagerDoesnotAllowToReAddUnchangedOrModifiedOrDeletedEntity(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OperationActionNotSupported">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OperationOnReadOnlyCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OperationOnReadOnlyItem">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OriginalValuesDoesNotExist">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OwnerIsNotSourceType(System.String,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.OwnerIsNull">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProcessStateEntries(System.Collections.Generic.IEnumerable{System.Data.IEntityStateEntry})">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.Provider(System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Provider(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.Provider(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProviderDoesNotSupportCommandTrees">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProviderExceptionWithMessage(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProviderIncompatible(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ProviderIncompatible(System.String,System.Exception)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.QualfiedEntitySetName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RecyclingEntity(System.Data.EntityKey,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="existingEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ReferenceAlreadyInitialized">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RelatedEndNotAttachedToContext(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RelatedEndNotFound">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RelationshipManagerAttached">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RequiredMetadataNotAvailable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.RowTypeInvalidMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.SetChangeTrackerOntoEntity(System.Object,System.Data.Objects.DataClasses.IEntityChangeTracker)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.SpanPathSyntaxError">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ThreeValuedAnd(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ThreeValuedNot(System.Nullable{System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ThreeValuedOr(System.Nullable{System.Boolean},System.Nullable{System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ThrowSetInvalidValue(System.Object,System.Type,System.String,System.String)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.TryGetProviderInvariantName(System.Data.Common.DbProviderFactory,System.String@)">
    <parameter name="providerFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.TypeNotInAssociationSet(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.TypeNotInEntitySet(System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.TypeUsageHasNoEdmType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToAddToDisconnectedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToFindRelationshipTypeInMetadata(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToRemoveFromDisconnectedRelatedEnd">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnableToRetrieveReferentialConstraintProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnexpectedMetadataType(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.UnexpectedNullContext">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnexpectedNullEntityKey">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnexpectedNullRelationshipManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UnknownDataTypeCode(System.Type,System.TypeCode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="dataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.Update(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.IEntityStateEntry})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.Update(System.String,System.Exception,System.Data.IEntityStateEntry[])">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UpdateConcurrency(System.Int32,System.Exception,System.Collections.Generic.IEnumerable{System.Data.IEntityStateEntry})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.UpdateEntityMissingConstraintViolation(System.String,System.String,System.Data.IEntityStateEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UpdateMissingEntity(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.UpdateRelationshipCardinalityConstraintViolation(System.String,System.Int32,System.Nullable{System.Int32},System.String,System.Int32,System.String,System.Data.IEntityStateEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.EntityUtil.ValidateEntitySetInKey(System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValidateEntitySetInKey(System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValidateRelationshipManager(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entityWithRelationships">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValidateRelationshipManager(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.RelationshipManager)">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValueInvalidCast(System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.ValueNullReferenceCast(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.EntityUtil.WriteOperationNotAllowedOnReadOnlyBindingList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.FieldNameLookup.#ctor(System.Data.IDataRecord,System.Int32)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.FieldNameLookup.GetOrdinal(System.String)">
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.FieldNameLookup.IndexOf(System.String)">
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.FieldNameLookup.LinearIndexOf(System.String,System.Globalization.CompareOptions)">
    <parameter name="fieldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.InternalMappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.InvalidCommandTreeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageComplexPropertyMapping)">
    <parameter name="storageComplexPropertyMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageComplexTypeMapping)">
    <parameter name="storageComplexTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageConditionPropertyMapping)">
    <parameter name="storageConditionPropertyMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="storageEntityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageMappingFragment)">
    <parameter name="storageMappingFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StoragePropertyMapping)">
    <parameter name="storagePropertyMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageScalarPropertyMapping)">
    <parameter name="storageScalarPropertyMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageSetMapping)">
    <parameter name="storageSetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Mapping.StorageTypeMapping)">
    <parameter name="storageTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="associationEndMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.AssociationSetEnd)">
    <parameter name="associationSetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.AssociationType)">
    <parameter name="associationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.CollectionType)">
    <parameter name="collectionType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.ComplexType)">
    <parameter name="complexType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="edmFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="edmProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.EnumType)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.Facet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.FunctionParameter)">
    <parameter name="functionParameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="navigationProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.ReferentialConstraint)">
    <parameter name="referentialConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.RefType)">
    <parameter name="refType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.RelationshipEndMember)">
    <parameter name="relationshipEndMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.BaseMetadataMappingVisitor.Visit(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.CompressingHashBuilder.AppendObjectStartDump(System.Object,System.Int32)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.AddInternalMapping(System.Data.Mapping.ObjectTypeMapping)">
    <parameter name="objectMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.ContainsMap(System.Data.Metadata.Edm.GlobalItem,System.Data.Mapping.ObjectTypeMapping@)">
    <parameter name="cspaceItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.ConvertCSpaceToOSpaceType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="cdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.ConvertOSpaceToCSpaceType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetDefaultMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetObjectMember(System.Data.Metadata.Edm.EdmMember,System.Data.Metadata.Edm.StructuralType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.GetOCMapForTransientType(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadAssociationTypeMapping(System.Data.Mapping.ObjectTypeMapping,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <parameter name="objectMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadComplexMemberMapping(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.EdmProperty,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="containingEdmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containingClrMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadEntityTypeOrComplexTypeMapping(System.Data.Mapping.ObjectTypeMapping,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <parameter name="objectMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadObjectMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection)">
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadObjectMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadScalarPropertyMapping(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.LoadTypeMapping(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.DefaultObjectMappingItemCollection,System.Collections.Generic.Dictionary{System.String,System.Data.Mapping.ObjectTypeMapping})">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.DefaultObjectMappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportEntityTypeMapping.GetDiscriminatorColumns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.FunctionImportEntityTypeMappingConditionValue.ConditionValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.FunctionImportEntityTypeMappingConditionValue.GetConditionValue(System.Type)">
    <parameter name="columnValueType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.#ctor(System.Data.Common.Utils.Boolean.DomainConstraintConversionContext{System.String,System.Data.Mapping.ValueCondition},System.Data.Common.Utils.Boolean.Vertex[])">
    <parameter name="converter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mappingConditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.#ctor(System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.IEnumerable{System.Data.Mapping.FunctionImportEntityTypeMapping},System.Data.Metadata.Edm.ItemCollection)">
    <parameter name="entityTypeMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.ConstructDomainVariables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.ConvertMappingConditionsToVertices(System.Data.Common.Utils.Boolean.ConversionContext{System.Data.Common.Utils.Boolean.DomainConstraint{System.String,System.Data.Mapping.ValueCondition}},System.Data.Common.Utils.Boolean.DomainVariable{System.String,System.Data.Mapping.ValueCondition}[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="converter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="variables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.Discriminate(System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="discriminatorValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.FunctionImportMapping.GetExpectedTargetResultType(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.FunctionImportNormalizedEntityTypeMapping.#ctor(System.Data.Mapping.FunctionImportMapping,System.Collections.Generic.List{System.Data.Mapping.FunctionImportEntityTypeMappingCondition},System.Collections.BitArray)">
    <parameter name="columnConditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="impliedEntityTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.InputForComputingCellGroups.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.GetMap(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.AddObjectStartDumpToHashBuilder(System.Object,System.Int32)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.GetMappingClosureHash(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storageEntityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.MetadataMappingHasherVisitor.HashValue">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.TryAddSeenItem(System.Object,System.Int32@)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.Visit(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="edmFunction">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.Visit(System.Data.Metadata.Edm.EnumType)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.MetadataMappingHasherVisitor.Visit(System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="navigationProperty">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ObjectTypeMapping.#ctor(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ObjectTypeMapping.AddMemberMap(System.Data.Mapping.ObjectMemberMapping)">
    <parameter name="memberMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ObjectTypeMapping.GetPropertyMap(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageAssociationTypeMapping.IsOfTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageAssociationTypeMapping.Types">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageComplexPropertyMapping.TypeMappings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.AddConditionProperty(System.Data.Mapping.StorageConditionPropertyMapping)">
    <parameter name="conditionPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.AddIsOfType(System.Data.Metadata.Edm.ComplexType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.AddProperty(System.Data.Mapping.StoragePropertyMapping)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.AddType(System.Data.Metadata.Edm.ComplexType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageComplexTypeMapping.AllProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageComplexTypeMapping.GetOwnerType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageComplexTypeMapping.IsOfTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageComplexTypeMapping.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageComplexTypeMapping.Types">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageConditionPropertyMapping.IsNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEndPropertyMapping.AddProperty(System.Data.Mapping.StoragePropertyMapping)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEndPropertyMapping.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.#ctor(System.Data.Metadata.Edm.EntityContainer,System.Data.Metadata.Edm.EntityContainer,System.Data.Mapping.StorageMappingItemCollection)">
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.AddAssociationSetMapping(System.Data.Mapping.StorageSetMapping)">
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.AddEntitySetMapping(System.Data.Mapping.StorageSetMapping)">
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.AddFunctionImportMapping(System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportMapping)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.ContainsAssociationSetMapping(System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEntityContainerMapping.EntitySetMaps">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetEntitySetMapping(System.String)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetPrettyPrintString(System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetRelationshipSetMapping(System.String)">
    <parameter name="relationshipSetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetRelationshipSetMappingsFor(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.GetSetMapping(System.String)">
    <parameter name="setName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.HasQueryViewForSetMap(System.String)">
    <parameter name="setName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEntityContainerMapping.RelationshipSetMaps">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityContainerMapping.TryGetFunctionImportMapping(System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportMapping@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntitySetMapping.AddFunctionMapping(System.Data.Mapping.StorageEntityTypeFunctionMapping)">
    <parameter name="functionMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEntitySetMapping.FunctionMappings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageEntitySetMapping.ImplicitlyMappedAssociationSetEnds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageEntityTypeMapping.AddIsOfType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityTypeMapping.AddType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageEntityTypeMapping.GetContainerType(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageEntityTypeMapping.IsOfTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageEntityTypeMapping.Types">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageFunctionMapping.AddReferencedAssociationSetEnds(System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.List{System.Data.Metadata.Edm.AssociationSetEnd})">
    <parameter name="associationSetEnds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingFragment.AddConditionProperty(System.Data.Mapping.StorageConditionPropertyMapping)">
    <parameter name="conditionPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.StorageMappingFragment.AllProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageMappingFragment.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.List{System.String})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.List{System.String},System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.String[])">
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.AddInternal(System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="storageMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.CheckForDuplicateItems(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="edmItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ComputeRequiredOriginalValueMembers(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.FindIfPropertyRequiresOriginalValue(System.Data.Mapping.StoragePropertyMapping,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmMember}@)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetGeneratedView(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetRequiredOriginalValueMembers(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase})">
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetUpdateViewLoader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.GetViews(System.Data.Metadata.Edm.MetadataWorkspace,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.HasFixedConcurrencyModeInAnyChildProperty(System.Data.Mapping.StorageComplexPropertyMapping)">
    <parameter name="complexMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.HasMappingFragment(System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.Init(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.StoreItemCollection,System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.List{System.String},System.Boolean)">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.LoadItems(System.Collections.Generic.IEnumerable{System.Xml.XmlReader},System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Collections.Generic.Dictionary{System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}},System.Data.Mapping.ViewGeneration.GeneratedView})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="userDefinedQueryViewsOfTypeDict">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="userDefinedQueryViewsDict">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.TryGetFunctionImportTarget(System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.FunctionImportMapping@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Mapping.Map@)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.CollectViews(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Mapping.StorageMappingItemCollection,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Collections.Generic.Dictionary{System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}},System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageMappingItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="userDefinedQueryViewsDict">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="userDefinedQueryViewsOfTypeDict">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.GetGeneratedView(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.StorageMappingItemCollection)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedAddGeneratedViews(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.EntityViewContainer,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="viewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentMappingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedAddGeneratedViewsInEntityViewContainer(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.EntityViewContainer,System.Data.Mapping.StorageMappingItemCollection,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityViewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageMappingItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentMappingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedCollectViewsFromObjectCollection(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.StorageMappingItemCollection,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="extentMappingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageMappingItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedCollectViewsFromReferencedAssemblies(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.StorageMappingItemCollection,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentMappingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageMappingItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedGeneratedViewOfType(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}})">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedGenerateViews(System.Data.Metadata.Edm.EntityContainer,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="resultDictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedGetGeneratedViews(System.Data.Metadata.Edm.EntityContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.SerializedVerifyHashOverMmClosure(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Mapping.EntityViewContainer,System.Data.Metadata.Edm.ItemCollection)">
    <parameter name="entityViewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.TryGenerateQueryViewOfType(System.Data.Metadata.Edm.EntityContainer,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean,System.Data.Mapping.ViewGeneration.GeneratedView@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.TryGetCorrespondingStorageEntityContainerMapping(System.Data.Mapping.EntityViewContainer,System.Collections.Generic.IEnumerable{System.Data.Mapping.StorageEntityContainerMapping},System.Data.Mapping.StorageEntityContainerMapping@)">
    <parameter name="viewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerMappingList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemCollection.ViewDictionary.VerifyViewsHaveNotChanged(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.EntityViewContainer)">
    <parameter name="viewContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.AddToSchemaErrors(System.String,System.Data.Mapping.StorageMappingErrorCode,System.String,System.Xml.IXmlLineInfo,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.AddToSchemaErrorsWithMemberInfo(System.Func{System.Object,System.String},System.String,System.Data.Mapping.StorageMappingErrorCode,System.String,System.Xml.IXmlLineInfo,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="messageFormat">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.AddToSchemaErrorWithMessage(System.String,System.Data.Mapping.StorageMappingErrorCode,System.String,System.Xml.IXmlLineInfo,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.#ctor(System.Data.Mapping.StorageMappingItemLoader,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="parentLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadAndValidateFunctionMetadata(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.FunctionParameter@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadAssociationEnd(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadAssociationSetFunctionMapping(System.Xml.XPath.XPathNavigator,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadComplexTypeProperty(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.ComplexType@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadEndProperty(System.Xml.XPath.XPathNavigator)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadEntityTypeFunctionMapping(System.Xml.XPath.XPathNavigator,System.Boolean,System.Boolean,System.Data.Metadata.Edm.EntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadParameterBindings(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.StructuralType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadResultBindings(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.FunctionMappingLoader.LoadScalarPropertyParameterBinding(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.StructuralType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetAliasResolvedAttributeValue(System.Xml.XPath.XPathNavigator,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetAttributeValue(System.Xml.XPath.XPathNavigator,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetEnumAttributeValue(System.Xml.XPath.XPathNavigator,System.String,System.Data.Metadata.Edm.EnumType,System.String,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError})">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetFacetsForDisplay(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetSchemaValidatingReader(System.Xml.XmlReader)">
    <parameter name="innerReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.GetXmlReaderSettings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.IncrementCount``1(System.Collections.Generic.Dictionary{``0,System.Int32},``0)">
    <parameter name="counts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadAssociationMappingFragment(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageAssociationSetMapping,System.Data.Mapping.StorageAssociationTypeMapping,System.String,System.Data.Metadata.Edm.EntityContainer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadAssociationSetMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadAssociationTypeFunctionMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageAssociationSetMapping,System.Data.Mapping.StorageAssociationTypeMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadAssociationTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageAssociationSetMapping,System.String,System.String,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadComplexPropertyMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadComplexTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntityType)">
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadConditionPropertyMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEndPropertyMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.EntityType)">
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEntityContainerMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEntitySetMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEntityTypeFunctionMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntitySetMapping,System.Data.Mapping.StorageEntityTypeMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityTypeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadEntityTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntitySetMapping,System.String,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadFunctionImportEntityTypeMappingCondition(System.Xml.XPath.XPathNavigator,System.Collections.Generic.List{System.Data.Mapping.FunctionImportEntityTypeMappingCondition})">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadFunctionImportMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadMappingChildNodes(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadMappingFragment(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityTypeMapping,System.String,System.Data.Metadata.Edm.EntityContainer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storageEntityContainerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadMappingItems(System.Xml.XmlReader)">
    <parameter name="innerReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadMappingItems(System.Xml.XPath.XPathNavigator)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadQueryView(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageSetMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.LoadScalarPropertyMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryGetFunctionImportModelFunction(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.EdmFunction@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryGetFunctionImportStoreFunction(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmFunction@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryGetTypedAttributeValue(System.Xml.XPath.XPathNavigator,System.String,System.Type,System.String,System.Collections.Generic.IList{System.Data.Metadata.Edm.EdmSchemaError},System.Object@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parsingErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.TryLoadFunctionImportEntityTypeMapping(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportEntityTypeMapping@)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateAllEntityTypesHaveFunctionMapping(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntitySetMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateAndUpdateScalarMemberMapping(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.EdmProperty,System.Xml.IXmlLineInfo)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lineInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateAssociationFunctionMappingConsistent(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateFunctionAssociationFunctionMappingUnique(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateFunctionImportMappingParameters(System.Xml.XPath.XPathNavigator,System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateFunctionMappingClosure(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.ValidateQueryViewsClosure(System.Xml.XPath.XPathNavigator,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageMappingItemLoader.XsdValidationCallBack(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageSetMapping.AddTypeSpecificQueryView(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}},System.String)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageSetMapping.ContainsTypeSpecificQueryView(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}})">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageSetMapping.GetTypeSpecificQueryView(System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntitySetBase,System.Data.Common.Utils.Pair{System.Data.Metadata.Edm.EntityTypeBase,System.Boolean}})">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StorageSetMapping.GetTypeSpecificQVKeys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageSetMapping.TypeMappings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.StorageTypeMapping.MappingFragments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.Append(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.AppendLine(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.ComputeHash">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.ComputeHash(System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.ConvertHashToString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="hash">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.StringHashBuilder.InternalAppend(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.AssociationSetMetadata.#ctor(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.AssociationEndMember})">
    <parameter name="requiredEnds">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.#ctor(System.Data.Mapping.Update.Internal.PropagatorResult[])">
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.CompositeKeyComparer.Equals(System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.CompositeKey)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.CompositeKeyComparer.GetHashCode(System.Data.Mapping.Update.Internal.CompositeKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.CompositeKey.CreateComparer(System.Data.Mapping.Update.Internal.KeyManager)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.#ctor(System.Data.Mapping.Update.Internal.TableChangeProcessor,System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.ModificationOperator,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Common.CommandTrees.DbModificationCommandTree,System.Collections.Generic.Dictionary{System.Int64,System.String})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.CreateCommand(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Collections.Generic.Dictionary{System.Int64,System.Object})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifierValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.GetStateEntries(System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.DynamicUpdateCommand.TryGetSetterExpression(System.Data.Common.CommandTrees.DbModificationCommandTree,System.Data.Metadata.Edm.EdmMember,System.Data.Mapping.Update.Internal.ModificationOperator,System.Data.Common.CommandTrees.DbSetClause@)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractedStateEntry.#ctor(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.IEntityStateEntry)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.#ctor(System.Data.Metadata.Edm.StructuralType,System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.CreateEntityKeyResult(System.Data.IEntityStateEntry,System.Data.EntityKey)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.CreateSimpleResult(System.Data.IEntityStateEntry,System.Data.IExtendedDataRecord,System.Data.Mapping.Update.Internal.ExtractorMetadata.MemberInformation,System.Int64,System.Boolean,System.Int32,System.Object)">
    <parameter name="memberInformation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.ExtractResultFromRecord(System.Data.IEntityStateEntry,System.Boolean,System.Data.IExtendedDataRecord,System.Collections.Generic.IEnumerable{System.String},System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.GetModifiedPropertiesBitArray(System.Collections.Generic.IEnumerable{System.String},System.Data.IEntityStateEntry)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.MemberInformation.#ctor(System.Int32,System.Data.Mapping.Update.Internal.PropagatorFlags,System.Data.Metadata.Edm.EdmMember,System.Boolean,System.Boolean)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ExtractorMetadata.RetrieveMember(System.Data.IEntityStateEntry,System.Data.IExtendedDataRecord,System.Data.EntityKey,System.Data.Metadata.Edm.EdmMember,System.Collections.BitArray)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.CreateAssociationSetFunctionMappingTranslator(System.Data.Mapping.StorageAssociationSetMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.CreateEntitySetFunctionMappingTranslator(System.Data.Mapping.StorageEntitySetMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.#ctor(System.Data.Mapping.StorageEntitySetMapping)">
    <parameter name="setMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.BindFunctionParameters(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.IEntityStateEntry,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.StorageFunctionMapping,System.Data.Mapping.Update.Internal.FunctionUpdateCommand)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="current">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.RetrieveNavigationResult(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.FunctionUpdateCommand,System.Data.EntityKey,System.Data.Mapping.StorageFunctionParameterBinding)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.RetrieveNavigationStateEntry(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.FunctionUpdateCommand,System.Data.EntityKey,System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.EntitySetFunctionMappingTranslator.Translate(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.ExtractedStateEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionMappingTranslator.Translate(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Mapping.Update.Internal.ExtractedStateEntry)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionUpdateCommand.#ctor(System.Data.Mapping.StorageFunctionMapping,System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.IEntityStateEntry)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionUpdateCommand.AddResultColumn(System.Data.Mapping.Update.Internal.UpdateTranslator,System.String,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionUpdateCommand.GetColumnOrdinal(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Common.DbDataReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.FunctionUpdateCommand.SetParameterValue(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.StorageFunctionParameterBinding,System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Graph`1.AddEdge(`0,`0)">
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Graph`1.AddVertex(`0)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Graph`1.EdgeMap.Add(`0,`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Graph`1.EdgeMap.Remove(`0,`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="valueElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Graph`1.RemoveEdge(`0,`0)">
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.GetKeyIdentifierForMemberOffset(System.Data.EntityKey,System.Int32,System.Int32)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.GetPrincipalValue(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.Partitioner.Partition.AddNode(System.Data.Mapping.Update.Internal.KeyManager.Partitioner,System.Int64)">
    <parameter name="partitioner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.Partitioner.Partition.CreatePartition(System.Data.Mapping.Update.Internal.KeyManager.Partitioner,System.Int64,System.Int64)">
    <parameter name="partitioner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.Partitioner.Partition.Merge(System.Data.Mapping.Update.Internal.KeyManager.Partitioner,System.Data.Mapping.Update.Internal.KeyManager.Partitioner.Partition)">
    <parameter name="partitioner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.RegisterIdentifierOwner(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.KeyManager.ValidateReferentialIntegrityGraphAcyclic(System.Int64,System.Collections.Generic.Dictionary{System.Int64,System.Byte},System.Data.Mapping.Update.Internal.KeyManager.IdentifierPath)">
    <parameter name="color">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.BuildChangeNode(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Cast(System.Object,System.Type)">
    <parameter name="clrPrimitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.ConvertBoolToResult(System.Nullable{System.Boolean},System.Data.Mapping.Update.Internal.PropagatorResult[])">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.ConvertResultToBool(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.CreatePerservedAndKnownResult(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Evaluate(System.Data.Common.CommandTrees.DbExpression,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.Propagator)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.EvaluatePredicate(System.Data.Common.CommandTrees.DbExpression,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.Propagator)">
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.PreservedAndKnown(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.PropagateUnknownAndPreserveFlags(System.Data.Mapping.Update.Internal.PropagatorResult,System.Collections.Generic.IEnumerable{System.Data.Mapping.Update.Internal.PropagatorResult})">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Evaluator.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.CreateAssociationSetPlaceholder(System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.CreateEntitySetPlaceholder(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.CreateMemberPlaceholder(System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.CreatePlaceholder(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.InitializeTypeDefaultMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.ExtentPlaceholderCreator.Visit(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.ExecutePropagation">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.GetKeyConstants(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.GetKeyMap(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.Join(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.ChangeNode)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.JoinPredicateVisitor.ExtractEquijoinProperties(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression[]@,System.Data.Common.CommandTrees.DbExpression[]@)">
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.PlaceholderPopulator.Populate(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.CompositeKey,System.Collections.Generic.Dictionary{System.Data.Mapping.Update.Internal.PropagatorResult,System.Int32},System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.PopulateMode,System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="placeholder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.PlaceholderPopulator.Visit(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.ProcessKeys(System.Collections.Generic.IEnumerable{System.Data.Mapping.Update.Internal.PropagatorResult},System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="instances">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.JoinPropagator.Propagate(System.Data.Mapping.Update.Internal.CompositeKey,System.Data.Mapping.Update.Internal.ChangeNode)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Project(System.Data.Common.CommandTrees.DbProjectExpression,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Propagate(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="umView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.Propagator.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateKeyValue(System.Data.Mapping.Update.Internal.PropagatorFlags,System.Object,System.Data.IEntityStateEntry,System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateServerGenKeyValue(System.Data.Mapping.Update.Internal.PropagatorFlags,System.Object,System.Data.IEntityStateEntry,System.Int64,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateServerGenSimpleValue(System.Data.Mapping.Update.Internal.PropagatorFlags,System.Object,System.Data.Objects.CurrentValueRecord,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateSimpleValue(System.Data.Mapping.Update.Internal.PropagatorFlags,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.CreateStructuralValue(System.Data.Mapping.Update.Internal.PropagatorResult[],System.Data.Metadata.Edm.StructuralType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.GetMemberValue(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.KeyValue.Record">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.Record">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.SimpleValue.ReplicateResultWithNewFlags(System.Data.Mapping.Update.Internal.PropagatorFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.PropagatorResult.SimpleValue.ReplicateResultWithNewValue(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.StateEntry">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.PropagatorResult.StructuralType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.RecordConverter.ConvertCurrentValuesToPropagatorResult(System.Data.IEntityStateEntry,System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.RecordConverter.ConvertOriginalValuesToPropagatorResult(System.Data.IEntityStateEntry,System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.RecordConverter.ConvertStateEntryToPropagatorResult(System.Data.IEntityStateEntry,System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.SourceInterpreter.GetAllStateEntries(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.SourceInterpreter.RetrieveResultMarkup(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.#ctor(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.CompileCommands(System.Data.Mapping.Update.Internal.ChangeNode,System.Data.Mapping.Update.Internal.UpdateCompiler)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="changeNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.GetKeyConstants(System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="row">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.InitializeKeyOrdinals(System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.TableChangeProcessor.ProcessKeys(System.Data.Mapping.Update.Internal.UpdateCompiler,System.Collections.Generic.List{System.Data.Mapping.Update.Internal.PropagatorResult},System.Data.Common.Utils.Set{System.Data.Mapping.Update.Internal.CompositeKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="compiler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UndirectedGraph`1.AddEdge(`0,`0)">
    <parameter name="first">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UndirectedGraph`1.AddVertex(`0)">
    <parameter name="vertex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UndirectedGraph`1.GenerateConnectedComponents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.CompareTo(System.Data.Mapping.Update.Internal.UpdateCommand)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.CompareToType(System.Data.Mapping.Update.Internal.UpdateCommand)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.Equals(System.Data.Mapping.Update.Internal.UpdateCommand)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommand.Execute(System.Data.Mapping.Update.Internal.UpdateTranslator,System.Data.EntityClient.EntityConnection,System.Collections.Generic.Dictionary{System.Int64,System.Object},System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Data.Mapping.Update.Internal.PropagatorResult,System.Object}})">
    <parameter name="identifierValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="generatedValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.UpdateCommand.Table">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.Update.Internal.UpdateCommand},System.Data.Mapping.Update.Internal.UpdateTranslator)">
    <parameter name="commands">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.AddForeignKeyEdges(System.Data.Common.Utils.KeyToListMap{System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue,System.Data.Mapping.Update.Internal.UpdateCommand})">
    <parameter name="predecessors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.DetermineForeignKeyPredecessors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue.#ctor(System.Data.Metadata.Edm.ReferentialConstraint,System.Data.Mapping.Update.Internal.PropagatorResult,System.Boolean,System.Boolean)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue.TryCreateSourceKey(System.Data.Metadata.Edm.ReferentialConstraint,System.Data.Mapping.Update.Internal.PropagatorResult,System.Boolean,System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue@)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue.TryCreateTargetKey(System.Data.Metadata.Edm.ReferentialConstraint,System.Data.Mapping.Update.Internal.PropagatorResult,System.Boolean,System.Data.Mapping.Update.Internal.UpdateCommandOrderer.ForeignKeyValue@)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCommandOrderer.InitializeForeignKeyMaps(System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntityContainer},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.EntitySet},System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.ReferentialConstraint}@,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.ReferentialConstraint}@)">
    <parameter name="containers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildDeleteCommand(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildInsertCommand(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="newRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildPredicate(System.Data.Common.CommandTrees.DbModificationCommandTree,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referenceRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildSetClauses(System.Data.Common.CommandTrees.DbModificationCommandTree,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor,System.Boolean,System.Collections.Generic.Dictionary{System.Int64,System.String}@,System.Data.Common.CommandTrees.DbExpression@,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="row">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.BuildUpdateCommand(System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.PropagatorResult,System.Data.Mapping.Update.Internal.TableChangeProcessor)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="newRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldRow">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.GenerateEqualityExpression(System.Data.Common.CommandTrees.DbModificationCommandTree,System.Data.Metadata.Edm.EdmProperty,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.GeneratePropertyExpression(System.Data.Common.CommandTrees.DbModificationCommandTree,System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.GenerateValueExpression(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.EdmProperty,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateCompiler.SetTarget(System.Data.Mapping.Update.Internal.TableChangeProcessor,System.Data.Common.CommandTrees.DbModificationCommandTree)">
    <parameter name="processor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.ConstructNotSupportedException(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateExpressionVisitor`1.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.#ctor(System.Data.IEntityStateManager,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.EntityClient.EntityConnection,System.Nullable{System.Int32})">
    <parameter name="metadataWorkspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.AcceptChanges(System.Data.IEntityAdapter)">
    <parameter name="adapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.AlignReturnValue(System.Object,System.Data.Metadata.Edm.EdmMember,System.Data.Mapping.Update.Internal.PropagatorResult)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.Update.Internal.UpdateTranslator.CommandTimeout">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.CreateCommand(System.Data.Common.CommandTrees.DbModificationCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GenerateCommandDefinition(System.Data.Mapping.StorageFunctionMapping)">
    <parameter name="functionMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetDynamicModifiedExtents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetExtentFunctionModifications(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetExtentModifications(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetExtractorMetadata(System.Data.Metadata.Edm.StructuralType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetFunctionModifiedExtents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetKeyMemberOffset(System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.EdmProperty,System.Int32@)">
    <parameter name="role">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.GetRelationships(System.Data.EntityKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.LoadStateEntry(System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.ProduceCommands">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RegisterReferentialConstraints(System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.AddExistingRelationship(System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship.#ctor(System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationSet,System.Data.IEntityStateEntry)">
    <parameter name="toEntityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship.AddToEquivalenceSet(System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship.Equals(System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.GetDirectionalRelationshipCountDelta(System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.DirectionalRelationship)">
    <parameter name="expectedRelationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.GetReferencingAssocationSets(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.RegisterAssociation(System.Data.Metadata.Edm.AssociationSet,System.Data.IExtendedDataRecord,System.Data.IEntityStateEntry)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RelationshipConstraintValidator.RegisterEntity(System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.RequiresContext(System.Exception)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.Update(System.Data.IEntityStateManager,System.Data.IEntityAdapter)">
    <parameter name="adapter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.ValidateAndRegisterStateEntry(System.Data.IEntityStateEntry)">
    <parameter name="stateEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.ValidateGraphPostSort(System.Data.Mapping.Update.Internal.UpdateCommandOrderer)">
    <parameter name="orderer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.ValidateRecord(System.Data.Metadata.Edm.EntitySetBase,System.Data.IExtendedDataRecord,System.Data.IEntityStateEntry)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.UpdateTranslator.VerifyExtent(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.GetAssociationSetMetadata(System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.GetFunctionMappingTranslator(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.InitializeEntitySet(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.InitializeFunctionMappingTranslators(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.StorageEntityContainerMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.SyncGetValue``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
    <parameter name="dictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.Update.Internal.ViewLoader.SyncInitializeEntitySet(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ValueCondition.Equals(System.Data.Mapping.ValueCondition)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.GroupByRightExtent(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsContainedIn(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="n1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsDisjoint(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="n1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsEquivalentTo(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="n1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsolateByOperator(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.IsolateUnions(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.BasicViewGenerator.TryAddChildToGroup(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode)">
    <parameter name="childNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="groupNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.ExtractCellsForContainer(System.Data.Mapping.StorageEntityContainerMapping,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="containerMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.ExtractCellsFromTableFragment(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.StorageMappingFragment,System.Data.Common.Utils.Set{System.Data.Metadata.Edm.EdmType},System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <parameter name="fragmentMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="allTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.ExtractProperties(System.Collections.Generic.IEnumerable{System.Data.Mapping.StoragePropertyMapping},System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.BoolExpression@,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.BoolExpression@)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sRootExtentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.GenerateCells(System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellCreator.GetConditionExpression(System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.StorageConditionPropertyMapping)">
    <parameter name="joinTreeNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conditionMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellNormalizer.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.SchemaContext,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schemaContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="updateDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellNormalizer.AlignFields(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellNormalizer.CreateLeftCellWrappers(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <parameter name="extentCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellNormalizer.IsEmpty(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellNormalizer.SetCachedRewriting(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellNormalizer.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellNormalizer.TryGetCachedRewriting(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellNormalizer.ValidateCells(System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extentCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellPartitioner.AreCellsConnectedViaRelationship(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <parameter name="cell1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cell2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellPartitioner.GenerateConnectedComponents(System.Data.Mapping.Update.Internal.UndirectedGraph{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="graph">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellPartitioner.GroupRelatedCells">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CellPartitioner.OverlapViaForeignKeys(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <parameter name="cell1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cell2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.AliasedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.AliasedSlot.CqlFieldAlias(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.AliasedSlot.FullCqlAlias">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.BooleanProjectedSlot.#ctor(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.BooleanProjectedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.BooleanProjectedSlot.CqlFieldAlias(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CaseCqlBlock.#ctor(System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Int32,System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock.#ctor(System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slotInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock.AsCql(System.Text.StringBuilder,System.Boolean,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock.GenerateProjectedtList(System.Text.StringBuilder,System.Int32,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlWriter.AppendEscapedName(System.Text.StringBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlWriter.AppendEscapedQualifiedName(System.Text.StringBuilder,System.String,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="namespc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlWriter.AppendEscapedTypeName(System.Text.StringBuilder,System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.CqlWriter.GetQualifiedName(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.ExtentCqlBlock.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.JoinCqlBlock.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.JoinCqlBlock.OnClause},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slotInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.JoinCqlBlock.OnClause.AsCql(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.JoinCqlBlock.OnClause.SingleClause.AsCql(System.Text.StringBuilder)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo.AsCql(System.Text.StringBuilder,System.String,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo.CqlFieldAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGeneration.UnionCqlBlock.#ctor(System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo[],System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32)">
    <parameter name="slotInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.ConstructCaseBlocks(System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Int32,System.Boolean[],System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement})">
    <parameter name="parentRequiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.CreateSlotInfosForCaseStatement(System.Boolean[],System.Int32,System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.CaseStatement,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentRequiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childBlock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisCaseStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.FindNextCaseStatementSlot(System.Int32,System.Boolean[],System.Int32)">
    <parameter name="parentRequiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.GenerateCql">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.GetRequiredSlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.GetRequiredSlotsForCaseMember(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean[])">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.CqlGenerator.GetSlotIndex(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.#ctor(System.Data.Common.CommandTrees.DbPropertyExpression,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Object,System.Data.Metadata.Edm.EntityType}},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EdmProperty,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.RelProperty,System.Data.Common.CommandTrees.DbExpression},System.Data.Metadata.Edm.EntitySet)">
    <parameter name="typeMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.CheckForMissingRelProperties(System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.RelProperty,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntityType,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty}})">
    <parameter name="relPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeToRelPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.ExpressionsCompatible(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.FlattenOr(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.TryCreateDiscriminatorMap(System.Data.Metadata.Edm.EntitySet,System.Data.Common.CommandTrees.DbExpression,System.Data.Mapping.ViewGeneration.DiscriminatorMap@)">
    <parameter name="queryView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.TryMatchConstant(System.Data.Common.CommandTrees.DbExpression,System.Object@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.TryMatchEntityTypeConstructor(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EdmProperty,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.RelProperty,System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntityType,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty}},System.Data.Metadata.Edm.EntityType@)">
    <parameter name="then">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeToRelPropertyMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.DiscriminatorMap.TryMatchPropertyEqualsValue(System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.CommandTrees.DbPropertyExpression@,System.Object@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.GeneratedView.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EdmType,System.String,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cqlString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.AntiSemiJoin(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.IsContainedIn(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.IsEquivalentTo(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.Join(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.DefaultTileProcessor`1.Union(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.#ctor(System.String,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Create(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Create(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Create(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CellQuery)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cellQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Create(System.String,System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean,System.Data.Mapping.ViewGeneration.Structures.CellQuery)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cellQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="roleBoolean">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.CreateMemberCondition(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CellConstant,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.CreateSlot(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.Description">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.FragmentQueryEqualityComparer.Equals(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.FragmentQueryEqualityComparer.GetHashCode(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="q">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery.GetEqualityComparer(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateAssociationConstraints(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateIsOfTypeCondition(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateVariableConstraints(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryKB.CreateVariableConstraintsRecursion(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.AttributeSetComparator.Equals(System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.AttributeSetComparator.GetHashCode(System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.IsContainedIn(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="q1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="q2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.IsDisjointFrom(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="q1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="q2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.IsEquivalentTo(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="q1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="q2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.IsSatisfiable(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor.Merge(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQueryProcessor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="qp1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="qp2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.#ctor(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.#ctor(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.ViewGenerationMode)">
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.AddElseDefaultToCaseStatement(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CaseStatement,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="caseStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightDomainQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unionCaseRewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.AddRewritingToCaseStatement(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.Structures.CaseStatement,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CellConstant)">
    <parameter name="caseStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.AddUnrecoverableAttributesError(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainAddedWhereClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CoverAttribute(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="projectedAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeConditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CoverAttributes(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="rewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeConditions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateMemberCondition(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CellConstant)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateMemberConditionQuery(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CellConstant)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateMemberConditionQuery(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CellConstant,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateSlot(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.CreateTile(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.EnsureConfigurationIsFullyMapped(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.EnsureExtentIsFullyMapped(System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.FindRewriting(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath}@)">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.FindRewritingAndUsedViews(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@)">
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.FindRewritingAndUsedViews(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath}@)">
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GenerateCaseStatements(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetConditionalComplexMembers(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetConditionalScalarMembers(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetDomain(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetDomainQuery(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fragmentQueries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetNonConditionalComplexMembers(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetNonConditionalScalarMembers(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetTopLevelWhereClause(System.Collections.Generic.HashSet{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="outputUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetTypeBasedMemberPathList(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nonConditionalScalarAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.GetUsedViewsAndRemoveTrueSurrogate(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.IsDefaultValue(System.Data.Mapping.ViewGeneration.Structures.CellConstant,System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="domainValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.IsTrue(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.NonKeys(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.PrintStatistics(System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor{System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}})">
    <parameter name="qp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.RemapFromVariables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.RemoveUnusedValueFromStoreDomain(System.Data.Mapping.ViewGeneration.Structures.CellConstant,System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="currentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.RewriteQuery(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath}@,System.Boolean)">
    <parameter name="toFill">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.RewriteQueryCached(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery}@)">
    <parameter name="toFill">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.TileToBoolExpr(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery})">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.TileToCellTree(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery},System.Data.Mapping.ViewGeneration.CellNormalizer)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter.TraceVerbose(System.String,System.Object[])">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingPass`1.AvailableViews">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingPass`1.RewriteQueryInternal(`0,`0,`0@,System.Collections.Generic.List{`0},System.Collections.Generic.HashSet{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor{`0})">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="recentlyUsedViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="qp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingPass`1.TryAntiSemiJoin(`0,`0@)">
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingPass`1.TryJoin(`0,`0@)">
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.GatherViews(`0,System.Collections.Generic.HashSet{`0})">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.IsContainedIn(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.IsDisjointFrom(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.IsEquivalentTo(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.Join(`0,`0)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.RandomPermutation``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.RewriteQuery(`0,`0,System.Collections.Generic.IEnumerable{`0},`0@)">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingProcessor`1.RewriteQueryOnce(`0,`0,System.Collections.Generic.IEnumerable{`0},`0@)">
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingSimplifier`1.GetRewritingHalf(`0,`0,System.Data.Mapping.ViewGeneration.QueryRewriting.TileOpKind)">
    <parameter name="remainingView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="halfRewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RewritingSimplifier`1.SimplifyRewritingOnce(`0,System.Collections.Generic.HashSet{`0},`0@)">
    <parameter name="remainingViews">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newRewriting">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.AsNegatedUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.GetRequiredSlots(System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Boolean[])">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.RoleBoolean.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.Tile`1.Arg1">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.Tile`1.Arg2">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.Tile`1.Description">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.QueryRewriting.TileBinaryOperator`1.Description">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileBinaryOperator`1.Replace(System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0},System.Data.Mapping.ViewGeneration.QueryRewriting.Tile{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.AntiSemiJoin(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.GetArg1(`0)">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.GetArg2(`0)">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.GetOpKind(`0)">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.IsEmpty(`0)">
    <parameter name="tile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.Join(`0,`0)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileProcessor`1.Union(`0,`0)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.CreateDerivedViewBySelectingConstantAttributes(`0)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.Difference(`0,`0)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.Intersect(`0,`0)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.IsSatisfiable(`0)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.QueryRewriting.TileQueryProcessor`1.Union(`0,`0)">
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.SignatureGenerator.GatherPartialSignature(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean,System.Boolean)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.SignatureGenerator.GatherSignatureFromScalars(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmType,System.Boolean)">
    <parameter name="possibleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.SignatureGenerator.GatherSignaturesFromNonScalars(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmType,System.Boolean)">
    <parameter name="possibleType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Simplifier.#ctor(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Simplifier.GroupLeafChildrenByExtent(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Simplifier.GroupNonAssociativeLeafChildren(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Simplifier.RestructureTreeForMerges(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Simplifier.Simplify(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Boolean)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Simplifier.SimplifyTree(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Boolean)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Simplifier.TryMergeCellQueries(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Boolean,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode@,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="node1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.#ctor(System.Data.Common.Utils.Boolean.ExprType,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.BoolExpression})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AddConjunctionToBools(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.BoolExpression},System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="bools">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsCqlVisitor.AsCql(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Text.StringBuilder,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsCqlVisitor.VisitAndOr(System.Data.Common.Utils.Boolean.TreeExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Data.Common.Utils.Boolean.ExprType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsUserString(System.Text.StringBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsUserStringVisitor.AsUserString(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Text.StringBuilder,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.AsUserStringVisitor.VisitAndOr(System.Data.Common.Utils.Boolean.TreeExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Data.Common.Utils.Boolean.ExprType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.BoolComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.BoolComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CompactStringVisitor.ToBuilder(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Text.StringBuilder)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CompactStringVisitor.VisitAndOr(System.Data.Common.Utils.Boolean.TreeExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.Create(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.Create(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateAnd(System.Data.Mapping.ViewGeneration.Structures.BoolExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateAndNot(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateLiteral(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateNot(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.CreateOr(System.Data.Mapping.ViewGeneration.Structures.BoolExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.FixRangeVisitor.FixRange(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.FixRangeVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.GetBoolLiteral(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="term">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.IsFinalVisitor.IsFinal(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.IsFinalVisitor.VisitAndOr(System.Data.Common.Utils.Boolean.TreeExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.MakeCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapBools(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.BoolExpression},System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <parameter name="bools">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapBoolVisitor.RemapJoinTreeNodes(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapBoolVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RemapLiterals(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.BoolLiteral})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RequiredSlotsVisitor.GetRequiredSlots(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Boolean[])">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.RequiredSlotsVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.GetTerms(System.Data.Common.Utils.Boolean.BoolExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Boolean)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.VisitAnd(System.Data.Common.Utils.Boolean.AndExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.TermVisitor.VisitTerm(System.Data.Common.Utils.Boolean.TermExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.VariableConstraints">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.BoolExpression.Variables">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.AsNegatedUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.BoolLiteralComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.BoolLiteralComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.FixRange(System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="memberDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.GetDomainBoolExpression(System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.GetRequiredSlots(System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Boolean[])">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.IdentifierComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.IdentifierComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral)">
    <parameter name="literal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.MakeTermExpression(System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellConstant})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.BoolLiteral.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.AddWhenThen(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.AppendWithBlock(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement},System.Data.Metadata.Edm.EdmType,System.String,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="withStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.AppendWithBlock(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement},System.String,System.Int32,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.AsCql(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.WithStatement},System.String,System.Int32)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.CaseSlotValueAsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.MakeCaseWithAliasedSlots(System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatement.WhenThen.ReplaceWithAliasedSlot(System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CaseStatementSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.#ctor(System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.Cell.CellNumberAsString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.CellsToBuilder(System.Text.StringBuilder,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.CreateCS(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellLabel,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.GetCSlotsForTableColumns(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.Cell.GetIdentifiers(System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstant.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstant.CellConstantComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.CellConstant,System.Data.Mapping.ViewGeneration.Structures.CellConstant)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstant.CellConstantComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.CellConstant)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstant.ConstantsToUserString(System.Text.StringBuilder,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant})">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstant.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstant.InternalToString(System.Text.StringBuilder,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstant.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Boolean)">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellConstant})">
    <parameter name="domain">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot,System.Data.Mapping.ViewGeneration.Structures.CellQuery)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cellQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.#ctor(System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.#ctor(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="memberPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.#ctor(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.#ctor(System.Data.Metadata.Edm.EnumType)">
    <parameter name="enumType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.CheckTwoDomainInvariants(System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain,System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain)">
    <parameter name="domain1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domain2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.GetDefaultValueForMemberPath(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper},System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="memberPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.GetNegatedConstant(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellConstant})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.Intersect(System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain.TryGetDefaultValueForMemberPath(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.CellConstant@)">
    <parameter name="memberPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.AsNegatedUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.CellIdBoolean.SlotName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellLabel.#ctor(System.Data.Mapping.StorageMappingFragment)">
    <parameter name="fragmentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellLabel.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellLabel)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.#ctor(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.ExtentJoinTreeNode)">
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellQuery)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[])">
    <parameter name="existing">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.AreSlotsEquivalentViaRefConstraints(System.Collections.ObjectModel.ReadOnlyCollection{System.Int32})">
    <parameter name="cSideSlotIndexes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CheckForDuplicateFields(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="cQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CheckForProjectedNotNullSlots(System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CheckRepInvariant(System.Data.Mapping.ViewGeneration.Structures.CellQuery)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CreateBasicCellRelation(System.Data.Mapping.ViewGeneration.Validation.ViewCellRelation)">
    <parameter name="viewCellRelation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.CreateFieldAlignedCellQueries(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Data.Mapping.ViewGeneration.Structures.CellQuery@,System.Data.Mapping.ViewGeneration.Structures.CellQuery@)">
    <parameter name="otherQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.FixCellConstantDomains(System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetAllQuerySlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetAssociationEndSlots(System.Data.Metadata.Edm.AssociationEndMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetIdentifiers(System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetNonNullSlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetProjectedPosition(System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetProjectedPositions(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetProjectedPositions(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Collections.Generic.List{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="slotsToSearchFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.GetProjectedPositions(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.MergeBoolExpressions(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conjunct1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="conjunct2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.ToESqlString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.TryMerge(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Boolean,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.CellQuery@)">
    <parameter name="query2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.VerifyKeysPresent(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Func{System.Object,System.Object,System.String},System.Func{System.Object,System.Object,System.Object,System.String},System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="formatEntitySetMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="formatAssociationSetMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellQuery.WhereClauseToUserString(System.Text.StringBuilder,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.Accept``2(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor{``0,``1},``0)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.Accept``2(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.SimpleCellTreeVisitor{``0,``1},``0)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.AssociativeOpFlatteningVisitor.Flatten(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.AssociativeOpFlatteningVisitor.VisitLeaf(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.AssociativeOpFlatteningVisitor.VisitOpNode(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitFullOuterJoin(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitInnerJoin(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitLeftAntiSemiJoin(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitLeftOuterJoin(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor`2.VisitUnion(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.DefaultCellTreeVisitor`1.AcceptChildren(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.FlatteningVisitor.Flatten(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.FlatteningVisitor.VisitLeaf(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.GetLeaves">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.GetProjectedSlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.LeafVisitor.GetLeaves(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.LeafVisitor.VisitLeaf(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.LeafVisitor.VisitOpNode(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,System.Boolean)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.SimpleCellTreeVisitor`2.VisitLeaf(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.SimpleCellTreeVisitor`2.VisitOpNode(System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode,`0)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.ToCqlBlock(System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32@,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.WithStatement}@)">
    <parameter name="withStatements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ConstantSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ConstantSlot.RemapSlot(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.AddIdentifier(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.GetBlockAlias">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.GetBlockAlias(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.GetFromVariable(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers.GetNonConflictingName(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Merge(System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.#ctor(System.Boolean,System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode,System.String,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.String)">
    <parameter name="sourceCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.#ctor(System.Data.Metadata.Edm.EdmSchemaError)">
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.GetUserLinesFromCells(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Text.StringBuilder,System.Boolean)">
    <parameter name="lineBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.Init(System.Boolean,System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode,System.String,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.String)">
    <parameter name="sourceCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.InternalToString(System.String,System.String,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.Cell},System.String,System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ErrorLog.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentJoinTreeNode.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberJoinTreeNode},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.#ctor(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="keyFields">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.GetKeyForRelationType(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.AssociationType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.GetKeysForEntityType(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.GetPrimaryKeyForEntityType(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ExtentKey.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.IfJoinedCondition.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.IfJoinedCondition.AsNegatedUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.IfJoinedCondition.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.IfJoinedCondition.RemapBool(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.#ctor(System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberJoinTreeNode},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.Add(System.Data.Mapping.ViewGeneration.Structures.MemberJoinTreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.CreateAttributeNode(System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.CreateNodeFromContext(System.Boolean,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.MemberJoinTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.DeepClone(System.Boolean,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.GatherDescendantSlots(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot})">
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.GetIdentifiers(System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.ProcessUnmergedChildren(System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode},System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="mergedNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="matched">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode.TryMergeNode(System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Data.Mapping.ViewGeneration.Structures.BoolExpression@,System.Data.Mapping.ViewGeneration.Structures.BoolExpression@,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="node2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot.GetKeySlots(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot},System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot.GetSlotForMember(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot},System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot.GetSlots(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot.JoinTreeSlotEqualityComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot,System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot.JoinTreeSlotEqualityComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot.RemapSlot(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.Children">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.GetForeignKeyEndMapFromAssocitionMap(System.Data.Mapping.StorageAssociationSetMapping,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="colocatedAssociationSetMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.LeafCellTreeNodeComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode,System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.LeafCellTreeNodeComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.LeafCellTreeNode.TryGetWithStatement(System.Data.Mapping.StorageAssociationSetMapping,System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.SlotInfo}@,System.Data.Mapping.ViewGeneration.Structures.WithStatement@)">
    <parameter name="colocatedAssociationSetMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sRootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="foreignKeySlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap.FixQueryDomainMap(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap)">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="updateDomainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberJoinTreeNode.#ctor(System.Data.Metadata.Edm.EdmMember,System.Boolean,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberJoinTreeNode},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.#ctor(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="prefix">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.#ctor(System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.AreAllMembersNullable(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.AreAssocationEndPathsEquivalentViaRefConstraint(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Metadata.Edm.AssociationSet)">
    <parameter name="assocPath0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assocPath1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.AsCql(System.Text.StringBuilder,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.MemberPath.CqlFieldAlias">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.Equals(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.GetCorrespondingAssociationPath(System.Data.Metadata.Edm.AssociationSet)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.GetIdentifiers(System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.GetKeyMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.IsEquivalentViaRefConstraint(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="path1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.MemberPathComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.MemberPathComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.PropertiesToUserString(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPath.ToCompactString(System.Text.StringBuilder,System.String)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPathMap.CreateIndex(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase.IndexOf(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase.KeySlots">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedCellConstant.AsCql(System.Text.StringBuilder,System.String,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedCellConstant.AsUserString(System.Text.StringBuilder,System.String,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedCellConstant.Contains(System.Data.Mapping.ViewGeneration.Structures.CellConstant)">
    <parameter name="constant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedCellConstant.CreateNotNull">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedCellConstant.GenerateAndsForSlot(System.Text.StringBuilder,System.String,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.NegatedCellConstant.ToStringHelper(System.Text.StringBuilder,System.String,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant},System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Boolean,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constants">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OneOfConst.CreateFullOneOfConst(System.Data.Mapping.ViewGeneration.Structures.OneOfConst,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellConstant})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="oneOfConst">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OneOfConst.Factory(System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot,System.Data.Mapping.ViewGeneration.Structures.CellConstantDomain,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OneOfConst.ToUserString(System.Boolean,System.Text.StringBuilder,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OneOfScalarConst.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OneOfScalarConst.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OneOfScalarConst.ToStringHelper(System.Text.StringBuilder,System.String,System.Boolean,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OneOfTypeConst.AsCql(System.Text.StringBuilder,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OneOfTypeConst.AsUserString(System.Text.StringBuilder,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.#ctor(System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.Accept``2(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode.CellTreeVisitor{``0,``1},``0)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.Add(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.AddCaseForOuterJoins(System.Data.Mapping.ViewGeneration.Structures.CaseStatement,System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Int32,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="caseForOuterJoins">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.AddFirst(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.AndWith(System.Boolean[],System.Boolean[])">
    <parameter name="boolArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="another">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.GetInnerJoinChildForSlot(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Int32)">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.GetJoinSlotInfo(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType,System.Boolean,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock},System.Int32,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.Insert(System.Int32,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.JoinToCqlBlock(System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32@,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.WithStatement}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.OpToCql(System.Data.Mapping.ViewGeneration.Structures.CellTreeOpType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.ToCqlBlock(System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32@,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.WithStatement}@)">
    <parameter name="withStatements">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.OpCellTreeNode.UnionToCqlBlock(System.Boolean[],System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Int32@,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.WithStatement}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="requiredSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifiers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.BoolIndexToSlot(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.CqlFieldAlias(System.Data.Mapping.ViewGeneration.Structures.MemberPath)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.GetMemberPath(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.IsBoolSlot(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.IsKeySlot(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.MakeAliasedSlot(System.Data.Mapping.ViewGeneration.CqlGeneration.CqlBlock,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.ProjectedSlotComparer.Equals(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot,System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.ProjectedSlotComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.RemapSlot(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.RemapSlots(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="oldSlots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.SlotToBoolIndex(System.Int32,System.Data.Mapping.ViewGeneration.Structures.MemberPathMapBase,System.Int32)">
    <parameter name="projectedSlotMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.TryMergeRemapSlots(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode,System.Data.Mapping.ViewGeneration.Structures.JoinTreeNode},System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[]@)">
    <parameter name="slots2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="slots1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="remap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot.TryMergeSlots(System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[],System.Data.Mapping.ViewGeneration.Structures.ProjectedSlot[]@)">
    <parameter name="slots1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="slots2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ScalarConstant.AppendEscapedScalar(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ScalarConstant.InternalToString(System.Text.StringBuilder,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.ScalarConstant.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.TypeConstant.InternalToString(System.Text.StringBuilder,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.TypeConstant.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.WithStatement.AsCql(System.Text.StringBuilder,System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Structures.WithStatement.ToCompactString(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExceptionHelpers.CheckAndThrowRes(System.Boolean,System.Func{System.String})">
    <parameter name="formatMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExceptionHelpers.ThrowMappingException(System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExceptionHelpers.ThrowMappingException(System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="errorRecord">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExternalCalls.CompileView(System.String,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Common.EntitySql.ParserOptions.CompilationMode)">
    <parameter name="viewDef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExternalCalls.GetItemCollection(System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Utils.ExternalCalls.IsReservedKeyword(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellQuery,System.Data.Mapping.ViewGeneration.Validation.ViewCellRelation,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot})">
    <parameter name="viewCellRelation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.AddKeyConstraints(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.ExtentKey},System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.PopulateKeyConstraints(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.PopulateKeyConstraintsForEntitySet(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation.PopulateKeyConstraintsForRelationshipSet(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint.Propagate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ConditionComparer.Equals(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="two">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="one">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ConditionComparer.GetHashCode(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.#ctor(System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.BuildCommaSeparatedErrorString``1(System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.Compare(System.Boolean,System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.ComparisonOP,System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.CompareC(System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.ComparisonOP,System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.CompareS(System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.ComparisonOP,System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery)">
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.CreateRightFragmentQuery(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.FindMappingErrors(System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ErrorPatternMatcher.ToIEnum(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.Cell)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.#ctor(System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty},System.Data.Metadata.Edm.ReadOnlyMetadataCollection{System.Data.Metadata.Edm.EdmProperty},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="i_parentColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="i_childColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.CheckConstraint(System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.CheckConstraintWhenOnlyParentMapped(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="assocSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="endMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.CheckConstraintWhenParentChildMapped(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.CheckForeignKeyColumnOrder(System.Data.Common.Utils.Set{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.CheckParentColumnsForForeignKey(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Metadata.Edm.AssociationEndMember,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.ErrorLog.Record}@)">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.FindEntitySetForColumnsMappedToEntityKeys(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <parameter name="tableColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GetForeignConstraints(System.Data.Metadata.Edm.EntityContainer,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GetRelationEndForColumns(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GetSlotNumsForColumns(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.MemberPath})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GuaranteeForeignKeyConstraintInCSpace(System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="childRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.GuaranteeMappedRelationshipForForeignKey(System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Data.Mapping.ViewGeneration.QueryRewriting.QueryRewriter,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="childRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentRewriter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.IsConstraintRelevantForCells(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell})">
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ForeignConstraint.ToUserString">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.#ctor(System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode)">
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.AddNullConditionOnCSideFragment(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberMaps)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="memberMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.CheckConstraintsOnProjectedConditionMembers(System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.MemberValueBinding,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode},System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="memberValueTrees">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.CheckEquivalence(System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.QueryRewriting.FragmentQuery,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.BoolExpression@)">
    <parameter name="cQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.ClauseToStringBuilder(System.Data.Common.Utils.Boolean.DnfClause{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}},System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.MemberMaps,System.Text.StringBuilder,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.CreateMemberValueTrees(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.DomainConstraintVisitor.CheckConstraints(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.EntityConfigurationToUserString(System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Text.StringBuilder)">
    <parameter name="condition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.GetCSideMappedSlotForSMember(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberMaps)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="memberMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.MemberValueBinding.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.OneOfConstToString``1(System.Collections.Generic.IEnumerable{``0},System.Text.StringBuilder,System.String,System.Boolean,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="oneOfConsts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.PropagateCellConstantsToWhereClause(System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Structures.CellConstant,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.Data.Mapping.ViewGeneration.Structures.MemberMaps)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.ReportConstraintViolation(System.String,System.Data.Mapping.ViewGeneration.Structures.BoolExpression,System.Data.Mapping.ViewGeneration.Utils.ViewGenErrorCode,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper})">
    <parameter name="relevantWrappers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extraConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.WhereClauseVisitor.#ctor(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Collections.Generic.Dictionary{System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.MemberValueBinding,System.Data.Mapping.ViewGeneration.Structures.CellTreeNode})">
    <parameter name="topLevelTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.WhereClauseVisitor.GetCellTreeNode(System.Data.Mapping.ViewGeneration.Structures.BoolExpression)">
    <parameter name="whereClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.WhereClauseVisitor.VisitNot(System.Data.Common.Utils.Boolean.NotExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.RewritingValidator.WhereClauseVisitor.VisitOr(System.Data.Common.Utils.Boolean.OrExpr{System.Data.Common.Utils.Boolean.DomainConstraint{System.Data.Mapping.ViewGeneration.Structures.BoolLiteral,System.Data.Mapping.ViewGeneration.Structures.CellConstant}})">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints`1.ConstraintsToBuilder``1(System.Collections.Generic.IEnumerable{``0},System.Text.StringBuilder)">
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellRelation.#ctor(System.Data.Mapping.ViewGeneration.Structures.Cell,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot},System.Int32)">
    <parameter name="cell">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellRelation.LookupViewSlot(System.Data.Mapping.ViewGeneration.Structures.JoinTreeSlot)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.AsCql(System.Text.StringBuilder,System.Data.Mapping.ViewGeneration.Structures.MemberPath,System.String,System.Int32)">
    <parameter name="outputMember">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="blockAlias">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.SlotsToUserString(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="slots">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.SlotToUserString(System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot,System.Boolean)">
    <parameter name="slot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.ViewCellSlotEqualityComparer.Equals(System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot,System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot.ViewCellSlotEqualityComparer.GetHashCode(System.Data.Mapping.ViewGeneration.Validation.ViewCellSlot)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint.GetErrorRecord(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint},System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rightKeyConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint.GetErrorRecord(System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rightKeyConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint.Implies(System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint)">
    <parameter name="second">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validator.CheckImplication(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint},System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="cViewConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sViewConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validator.CheckImplicationKeyConstraints(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint},System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.ViewKeyConstraint},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="leftViewConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightViewConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validator.ConstructCellRelationsWithConstraints(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint},System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="sConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validator.ExtentPair.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validator.PopulateBaseConstraints(System.Data.Mapping.ViewGeneration.Validation.BasicCellRelation,System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint},System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="baseRelation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.Validator.PropagateConstraints(System.Data.Mapping.ViewGeneration.Validation.SchemaConstraints{System.Data.Mapping.ViewGeneration.Validation.BasicKeyConstraint})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseConstraints">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.CheckForeignKeyConstraints(System.Data.Mapping.ViewGeneration.Structures.ErrorLog,System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.EnsureAllCSpaceContainerSetsAreMapped(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Mapping.StorageEntityContainerMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.FixCellConstantDomains(System.Data.Mapping.ViewGeneration.Structures.ViewTarget,System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.MemberDomainMap,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="extentCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="domainMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateAllViews(System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateQueryViewForExtentAndSchemaContext(System.Data.Mapping.ViewGeneration.SchemaContext,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Data.Mapping.ViewGeneration.ViewGenerationMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schemaContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateQueryViewForSingleExtent(System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Data.Mapping.ViewGeneration.ViewGenerationMode)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateQueryViewOfType(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="containerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateSimplifiedView(System.Data.Mapping.ViewGeneration.Structures.CellTreeNode,System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.LeftCellWrapper})">
    <parameter name="basicView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="usedCells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateViewsForExtent(System.Data.Mapping.ViewGeneration.SchemaContext,System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <parameter name="schemaContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateViewsForExtentAndType(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ViewGeneration.CellNormalizer,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView},System.Data.Mapping.ViewGeneration.ViewGenerationMode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="generatedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="normalizer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateViewsForSchema(System.Data.Mapping.StorageEntityContainerMapping,System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.ViewGeneration.ConfigViewGenerator)">
    <parameter name="config">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateViewsForSchemaCells(System.Collections.Generic.List{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Metadata.Edm.MetadataWorkspace,System.Data.Mapping.ViewGeneration.ConfigViewGenerator,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Mapping.StorageEntityContainerMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containerMapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GenerateViewsForSchemaContext(System.Data.Mapping.ViewGeneration.SchemaContext,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers,System.Data.Common.Utils.KeyToListMap{System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.GeneratedView})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="schemaContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="views">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GetCellNormalizer(System.Data.Metadata.Edm.EntitySetBase,System.Data.Mapping.ViewGeneration.SchemaContext,System.Data.Mapping.ViewGeneration.Structures.CqlIdentifiers)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="schemaContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenerator.GroupCellsByExtent(System.Collections.Generic.IEnumerable{System.Data.Mapping.ViewGeneration.Structures.Cell},System.Data.Mapping.ViewGeneration.Structures.ViewTarget)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cells">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenResults.AddErrors(System.Data.Mapping.ViewGeneration.Structures.ErrorLog)">
    <parameter name="errorLog">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewGeneration.ViewGenResults.ErrorsToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.ValidateQueryView(System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Metadata.Edm.StoreItemCollection,System.Data.Mapping.StorageSetMapping,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)">
    <parameter name="view">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Mapping.ViewValidator.ViewExpressionValidator.VisitExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.MappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AspProxy.MapWebPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.AssociationEndMember.#ctor(System.String,System.Data.Metadata.Edm.RefType,System.Data.Metadata.Edm.RelationshipMultiplicity)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssociationSet.#ctor(System.String,System.Data.Metadata.Edm.AssociationType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssociationSet.AddAssociationSetEnd(System.Data.Metadata.Edm.AssociationSetEnd)">
    <parameter name="associationSetEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.AssociationType.AddReferentialConstraint(System.Data.Metadata.Edm.ReferentialConstraint)">
    <parameter name="referentialConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CacheForPrimitiveTypes.Add(System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CacheForPrimitiveTypes.CreateInitialFacets(System.Data.Metadata.Edm.FacetDescription[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="facetDescriptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CacheForPrimitiveTypes.GetTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrComplexType.#ctor(System.Type,System.String,System.String)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrComplexType.CreateReadonlyClrComplexType(System.Type,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrEntityType.#ctor(System.Type,System.String,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrPerspective.GetMappedTypeUsage(System.Data.Mapping.Map)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrPerspective.TryGetMember(System.Data.Metadata.Edm.StructuralType,System.String,System.Boolean,System.Data.Metadata.Edm.EdmMember@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrPerspective.TryGetType(System.Type,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrProviderManifest.#ctor(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrProviderManifest.CreatePrimitiveType(System.Type,System.Data.Metadata.Edm.PrimitiveTypeKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="storeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ClrProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.ClrProviderManifest.NamespaceName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.CollectionType.#ctor(System.Data.Metadata.Edm.EdmType)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CollectionType.#ctor(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CollectionType.GetIdentity(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.AddOtherContent(System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ApplyPrimitiveTypePropertyFacets(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConversionCache.GetCollectionTypeUsageWithNullFacets(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConversionCache.GetTypeUsageWithNullFacets(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertSchema(System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema},System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somSchemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertSchema(System.Data.EntityModel.SchemaObjectModel.Schema,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="somSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertSchema(System.Data.EntityModel.SchemaObjectModel.Schema,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somSchema">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToAssociationSet(System.Data.EntityModel.SchemaObjectModel.EntityContainerRelationshipSet,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Data.Metadata.Edm.EntityContainer,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToAssociationType(System.Data.EntityModel.SchemaObjectModel.Relationship,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToComplexType(System.Data.EntityModel.SchemaObjectModel.SchemaComplexType,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToDocumentation(System.Data.EntityModel.SchemaObjectModel.DocumentationElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToEntityContainer(System.Data.EntityModel.SchemaObjectModel.EntityContainer,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToEntitySet(System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet,System.String,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToEntityType(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToFunction(System.Data.EntityModel.SchemaObjectModel.Function,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Data.Metadata.Edm.EntityContainer,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="somFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToNavigationProperty(System.Data.Metadata.Edm.EntityType,System.Data.EntityModel.SchemaObjectModel.NavigationProperty,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somNavigationProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="declaringEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.ConvertToProperty(System.Data.EntityModel.SchemaObjectModel.StructuredProperty,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetCsdlPrimitiveTypeUsageWithFacets(System.Data.EntityModel.SchemaObjectModel.StructuredProperty,System.Data.Metadata.Edm.Converter.ConversionCache)">
    <parameter name="somProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetEntitySet(System.Data.EntityModel.SchemaObjectModel.EntityContainerEntitySet,System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="container">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetFunctionTypeUsage(System.Data.EntityModel.SchemaObjectModel.FacetEnabledSchemaElement,System.Data.Common.DbProviderManifest,System.Boolean,System.Data.EntityModel.SchemaObjectModel.SchemaType,System.Data.Metadata.Edm.CollectionKind,System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetProperties(System.Data.Metadata.Edm.EntityTypeBase,System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.PropertyRefElement})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.GetSsdlPrimitiveType(System.Data.EntityModel.SchemaObjectModel.ScalarType,System.Data.Common.DbProviderManifest)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="scalarType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.InitializeAssociationEndMember(System.Data.Metadata.Edm.AssociationType,System.Data.EntityModel.SchemaObjectModel.IRelationshipEnd,System.Data.Metadata.Edm.EntityType)">
    <parameter name="associationType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="endMemberType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.LoadEntityTypePhase2(System.Data.EntityModel.SchemaObjectModel.SchemaEntityType,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.LoadSchemaElement(System.Data.EntityModel.SchemaObjectModel.SchemaType,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.Converter.ConversionCache,System.Collections.Generic.Dictionary{System.Data.EntityModel.SchemaObjectModel.SchemaElement,System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newGlobalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="convertedItemCache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.PopulateGeneralFacets(System.Data.EntityModel.SchemaObjectModel.StructuredProperty,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="somProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Converter.UpdateSentinelValuesInFacets(System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.CustomAssemblyResolver.TryResolveAssemblyReference(System.Reflection.AssemblyName,System.Reflection.Assembly@)">
    <parameter name="refernceName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.AssemblyComparer`1.Equals(`0,`0)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.AssemblyComparer`1.GetHashCode(`0)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.GetAllDiscoverableAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.GetAlreadyLoadedNonSystemAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.DefaultAssemblyResolver.ResolveAssembly(System.Reflection.AssemblyName)">
    <parameter name="referenceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.Documentation.Identity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmError.#ctor(System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmFunction.BuildIdentity(System.String,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmType})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmFunction.BuildIdentity(System.Text.StringBuilder,System.String,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmType})">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmFunction.BuildIdentity(System.Text.StringBuilder,System.String,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.FunctionParameter})">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.Collections.Generic.IEnumerable{})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema})">
    <parameter name="schemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.#ctor(System.String[])">
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.GetCanonicalInitializerMetadata(System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.Init(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.LoadItems(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String},System.Data.EntityModel.SchemaObjectModel.SchemaDataModelOption,System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.ItemCollection,System.Boolean)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.LoadItems(System.Data.Common.DbProviderManifest,System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema},System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somSchemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemCollection.LoadSomSchema(System.Collections.Generic.IList{System.Data.EntityModel.SchemaObjectModel.Schema},System.Data.Common.DbProviderManifest,System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="somSchemas">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmItemError.#ctor(System.String,System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmMember.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProperty.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProperty.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage,System.Reflection.PropertyInfo)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.#ctor(System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.CreateAggregateCannonicalFunction(System.String,System.Data.Metadata.Edm.FunctionParameter,System.Data.Metadata.Edm.FunctionParameter)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.CreateCannonicalFunction(System.String,System.Data.Metadata.Edm.FunctionParameter,System.Data.Metadata.Edm.FunctionParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.ForgetScalarConstraints(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="storeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.GetInitialFacetDescriptions(System.Data.Metadata.Edm.PrimitiveTypeKind)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmProviderManifest.InitializePrimitiveType(System.Data.Metadata.Edm.PrimitiveType,System.Data.Metadata.Edm.PrimitiveTypeKind,System.String,System.Type)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmProviderManifest.NamespaceName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmProviderManifest.Token">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Metadata.Edm.EdmSchemaErrorSeverity)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.Exception)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.String,System.Int32,System.Int32)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmSchemaError.#ctor(System.String,System.Int32,System.Data.Metadata.Edm.EdmSchemaErrorSeverity,System.String,System.Int32,System.Int32,System.Exception)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmType.ClrType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmType.FullName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.EdmType.Identity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmType.Initialize(System.Data.Metadata.Edm.EdmType,System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean,System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.AddError(System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Data.Metadata.Edm.EdmItemError)">
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.CustomValidate(System.Data.Metadata.Edm.MetadataItem)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.InternalValidate(System.Data.Metadata.Edm.MetadataItem,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.Validate``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ospaceErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateCollectionType(System.Data.Metadata.Edm.CollectionType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateComplexType(System.Data.Metadata.Edm.ComplexType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateEdmMember(System.Data.Metadata.Edm.EdmMember,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateEdmProperty(System.Data.Metadata.Edm.EdmProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateEdmType(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateEntityType(System.Data.Metadata.Edm.EntityType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateFacet(System.Data.Metadata.Edm.Facet,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateItem(System.Data.Metadata.Edm.MetadataItem,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateMetadataProperty(System.Data.Metadata.Edm.MetadataProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateNavigationProperty(System.Data.Metadata.Edm.NavigationProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidatePrimitiveType(System.Data.Metadata.Edm.PrimitiveType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateRefType(System.Data.Metadata.Edm.RefType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateSimpleType(System.Data.Metadata.Edm.SimpleType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateStructuralType(System.Data.Metadata.Edm.StructuralType,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EdmValidator.ValidateTypeUsage(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError},System.Collections.Generic.HashSet{System.Data.Metadata.Edm.MetadataItem})">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityContainer.#ctor(System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityContainer.AddEntitySetBase(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityContainer.AddFunctionImport(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityContainer.GetEntitySetByName(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EntitySet.#ctor(System.String,System.String,System.String,System.String,System.Data.Metadata.Edm.EntityType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntitySetBase.#ctor(System.String,System.String,System.String,System.String,System.Data.Metadata.Edm.EntityTypeBase)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntitySetBaseCollection.ThrowIfItHasEntityContainer(System.Data.Metadata.Edm.EntitySetBase,System.String)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.EntityType.NavigationProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityType.SetMemberSql(System.Data.Metadata.Edm.EdmMember,System.String)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityType.TryGetMemberSql(System.Data.Metadata.Edm.EdmMember,System.String@)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityTypeBase.AddKeyMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityTypeBase.CheckAndAddKeyMembers(System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="keyMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EntityTypeBase.CheckAndAddMembers(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.Metadata.Edm.EntityType)">
    <parameter name="members">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.EntityTypeBase.KeyMemberNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.EnumMember.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.EnumType.AddMember(System.Data.Metadata.Edm.EnumMember)">
    <parameter name="enumMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Facet.Create(System.Data.Metadata.Edm.FacetDescription,System.Object)">
    <parameter name="facetDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Facet.Create(System.Data.Metadata.Edm.FacetDescription,System.Object,System.Boolean)">
    <parameter name="facetDescription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FacetDescription.#ctor(System.String,System.Data.Metadata.Edm.EdmType,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Object)">
    <parameter name="facetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FacetDescription.IsNumericType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="facetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.FacetDescription.MaxValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.FacetDescription.MinValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.FacetDescription.UpdateMinMaxValueForConstant(System.String,System.Data.Metadata.Edm.EdmType,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@,System.Object)">
    <parameter name="facetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.FacetValues.NullFacetValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.FacetValues.TryGetFacet(System.Data.Metadata.Edm.FacetDescription,System.Data.Metadata.Edm.Facet@)">
    <parameter name="description">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FilteredReadOnlyMetadataCollection`2.#ctor(System.Data.Metadata.Edm.ReadOnlyMetadataCollection{`1},System.Predicate{`1})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FilteredReadOnlyMetadataCollection`2.Contains(System.String)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FilteredReadOnlyMetadataCollection`2.FilterCollection(System.Data.Metadata.Edm.ReadOnlyMetadataCollection{`1},System.Predicate{`1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FilteredReadOnlyMetadataCollection`2.System#Data#Metadata#Edm#IBaseList{TBase}#IndexOf(`1)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.FunctionParameter.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.ParameterMode)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.CombineErrorMessage(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmItemError})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.CombineErrorMessage(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmSchemaError})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.DisposeXmlReaders(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetAllStructuralMembers(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetAttributeValue(System.Xml.XPath.XPathNavigator,System.String)">
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetCommaDelimitedString(System.Collections.Generic.List{System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="stringList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetFacet(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.FacetDescription},System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="facetCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetFileNameFromUri(System.Uri)">
    <parameter name="uri">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetModelTypeUsage(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetModelTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.GetTypedAttributeValue(System.Xml.XPath.XPathNavigator,System.String,System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nav">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsAssignableFrom(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="firstType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsAssociationEndMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsAssociationType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsCollectionType(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsComplexType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEdmFunction(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEdmProperty(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEntityContainer(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEntitySet(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEntityType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEntityTypeBase(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsEnumType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsNavigationProperty(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsPrimitiveType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsPromotableTo(System.Collections.Generic.IList{System.Data.Metadata.Edm.PrimitiveType},System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="promotionTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRefType(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRelationshipEndMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRelationshipSet(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRelationshipType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsRowType(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsStructuralType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsSubtypeOf(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="firstType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsTransientType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.IsUnboundedFacetValue(System.Data.Metadata.Edm.Facet)">
    <parameter name="facet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.ValidateAndConvertTypeUsage(System.Data.Metadata.Edm.EdmMember,System.Xml.IXmlLineInfo,System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="sspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Helper.ValidateAndConvertTypeUsage(System.Data.Metadata.Edm.EdmProperty,System.Data.Metadata.Edm.EdmProperty,System.Xml.IXmlLineInfo,System.String,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmSchemaError},System.Data.Metadata.Edm.StoreItemCollection)">
    <parameter name="edmProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.AddInternal(System.Data.Metadata.Edm.GlobalItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.AtomicAddRange(System.Collections.Generic.List{System.Data.Metadata.Edm.GlobalItem})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.ComputeFunctionIdentity(System.String,System.Data.Metadata.Edm.TypeUsage[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetCaseSensitiveFunctions(System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionOverloads">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetEntityContainer(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.Collections.Generic.Dictionary{System.String,System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Metadata.Edm.EdmFunction}},System.String,System.Boolean)">
    <parameter name="functionCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String)">
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetFunctions(System.String,System.Boolean)">
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.GetItems``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ItemCollection.PopulateFunctionLookUpTable(System.Data.Metadata.Edm.ItemCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MappingMetadataHelper.GetEntityContainerMap(System.Data.Mapping.StorageMappingItemCollection,System.Data.Metadata.Edm.EntityContainer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mappingCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MappingMetadataHelper.GetMappingsForEntitySetAndSuperTypes(System.Data.Mapping.StorageMappingItemCollection,System.Data.Metadata.Edm.EntityContainer,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mappingCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MemberCollection.GetDeclaredOnlyMembers``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MemberCollection.ThrowIfItHasDeclaringType(System.Data.Metadata.Edm.EdmMember,System.String)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MemberCollection.ValidateMemberForAdd(System.Data.Metadata.Edm.EdmMember,System.String)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver.GetWildcardAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver.TryResolveAssemblyReference(System.Reflection.AssemblyName,System.Reflection.Assembly@)">
    <parameter name="refernceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.Create(System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoader})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="allCollections">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.Create(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader.ExtensionCheck,System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.Create(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader.ExtensionCheck,System.String,System.Collections.Generic.ICollection{System.String},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CreateCompositeFromFilePaths(System.Collections.Generic.IEnumerable{System.String},System.String)">
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CreateCompositeFromFilePaths(System.Collections.Generic.IEnumerable{System.String},System.String,System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CreateCompositeFromXmlReaders(System.Collections.Generic.IEnumerable{System.Xml.XmlReader})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.CreateReaders(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetOriginalPaths">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetOriginalPaths(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetPaths">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetPaths(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetReaders">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.GetReaders(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.MetadataArtifactLoader,System.Xml.XmlReader})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoader.PathStartsWithResPrefix(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.#ctor(System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoader})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.CreateReaders(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.GetReaders(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.MetadataArtifactLoader,})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.Path">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderComposite.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeFile.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeFile.CreateReaders(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeFile.GetArtifactsInDirectory(System.String,System.String,System.Collections.Generic.ICollection{System.String})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeFile.GetReaders(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.MetadataArtifactLoader,})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.#ctor(System.String,System.String,System.String,System.Collections.Generic.ICollection{System.String},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.AssemblyContainsResource(System.Reflection.Assembly,System.String@)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateAndAddSingleResourceLoader(System.Reflection.Assembly,System.String,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoaderResource})">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateReaders(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateResourceLoader(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader.ExtensionCheck,System.String,System.Collections.Generic.ICollection{System.String},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.CreateResPath(System.Reflection.Assembly,System.String)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.GetManifestResourceNamesForAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.GetReaders(System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.MetadataArtifactLoader,})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.LoadAllResourcesFromAssembly(System.Reflection.Assembly,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoaderResource},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.LoadResources(System.String,System.String,System.Collections.Generic.ICollection{System.String},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.LoadResourcesFromAssembly(System.Reflection.Assembly,System.String,System.Collections.Generic.ICollection{System.String},System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataArtifactLoaderResource},System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.ParseResourcePath(System.String,System.String@,System.String@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderCompositeResource.ResolveAssemblyName(System.String,System.Data.Metadata.Edm.MetadataArtifactAssemblyResolver)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resolver">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderFile.#ctor(System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderFile.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderFile.CreateXmlReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderFile.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.#ctor(System.Reflection.Assembly,System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="uriRegistry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.CreateReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataArtifactLoaderResource.Path">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.#ctor(System.Xml.XmlReader)">
    <parameter name="xmlReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.CollectFilePermissionPaths(System.Collections.Generic.List{System.String},System.Data.Metadata.Edm.DataSpace)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataArtifactLoaderXmlReaderWrapper.Path">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.DoCacheClean``1(System.Collections.Generic.Dictionary{System.String,``0},System.Object)">
    <parameter name="objectToLock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.EdmItemCollectionLoader.LoadItemCollection(System.Data.Metadata.Edm.MetadataCache.EdmMetadataEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.EdmMetadataEntry.LoadEdmItemCollection(System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.EdmMetadataEntryConstructor.GetMetadataEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.GetCacheEntry``1(System.Collections.Generic.Dictionary{System.String,``0},System.String,System.Object,System.Data.Metadata.Edm.MetadataCache.IMetadataEntryConstructor{``0},System.Object@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="cacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectToLock">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.GetOrCreateEdmItemCollection(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader,System.Object@)">
    <parameter name="cacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.GetOrCreateStoreAndMappingItemCollections(System.String,System.Data.Metadata.Edm.MetadataArtifactLoader,System.Data.Metadata.Edm.EdmItemCollection,System.Object@)">
    <parameter name="cacheKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.LoadItemCollection``1(System.Data.Metadata.Edm.MetadataCache.IItemCollectionLoader{``0},``0)">
    <parameter name="itemCollectionLoader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.#ctor(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.StoreItemCollectionLoader.LoadItemCollection(System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntry.LoadStoreCollection(System.Data.Metadata.Edm.EdmItemCollection,System.Data.Metadata.Edm.MetadataArtifactLoader)">
    <parameter name="loader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCache.StoreMetadataEntryConstructor.GetMetadataEntry">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AddInternal(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AddInternalHelper(`0,System.Data.Metadata.Edm.MetadataCollection{`0}.CollectionData,System.Boolean)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AddToDictionary(System.Data.Metadata.Edm.MetadataCollection{`0}.CollectionData,System.String,System.Int32,System.Boolean)">
    <parameter name="collectionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataCollection`1.AsReadOnly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AsReadOnlyMetadataCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.AtomicAddRange(System.Collections.Generic.List{`0})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.CollectionData.#ctor(System.Data.Metadata.Edm.MetadataCollection{`0}.CollectionData,System.Int32)">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.ContainsIdentity(System.String)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.EqualIdentity(System.Collections.Generic.List{`0},System.Int32,System.String)">
    <parameter name="orderedList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.GetValue(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.IndexOf(System.Data.Metadata.Edm.MetadataCollection{`0}.CollectionData,System.String,System.Boolean)">
    <parameter name="collectionData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.SetReadOnly">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataItem.AddMetadataProperties(System.Collections.Generic.List{System.Data.Metadata.Edm.MetadataProperty})">
    <parameter name="metadataProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataItem.BuildIdentity(System.Text.StringBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataItem.InitializeBuiltInTypes(System.Data.Metadata.Edm.ComplexType,System.String,System.Boolean,System.Data.Metadata.Edm.ComplexType)">
    <parameter name="builtInType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataItem.InitializeEnumType(System.Data.Metadata.Edm.BuiltInTypeKind,System.String,System.String[])">
    <parameter name="enumMemberNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.MetadataItem.MetadataProperties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataProperty.#ctor(System.String,System.Data.Metadata.Edm.EdmType,System.Boolean,System.Object)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyAttribute.#ctor(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.#ctor(System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.GetItemTypeInformation(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.GetSystemMetadataProperties(System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.ItemPropertyInfo.GetMetadataProperty(System.Data.Metadata.Edm.MetadataItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.ItemTypeInformation.#ctor(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataPropertyCollection.ItemTypeInformation.GetItemProperties(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.CreateMetadataWorkspaceWithResolver(System.Collections.Generic.IEnumerable{System.String},System.Func{System.Collections.Generic.IEnumerable{System.Reflection.Assembly}},System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly})">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetCqtView(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEdmSpaceType(System.Data.Metadata.Edm.StructuralType)">
    <parameter name="objectSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Boolean,System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetEntityContainer(System.String,System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetFunctions(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetGeneratedView(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetItems``1(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetMap(System.Data.Metadata.Edm.GlobalItem,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.DataSpace)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetObjectSpaceType(System.Data.Metadata.Edm.StructuralType)">
    <parameter name="edmSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetOSpaceTypeUsage(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="edmSpaceTypeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetPrimitiveTypes(System.Data.Metadata.Edm.DataSpace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetRequiredOriginalValueMembers(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.GetUpdateViewLoader">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.IsMetadataWorkspaceCSCompatible(System.Data.Metadata.Edm.MetadataWorkspace)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadAssemblyForType(System.Type,System.Reflection.Assembly)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.LoadFromAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.RegisterItemCollection(System.Data.Metadata.Edm.ItemCollection)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.ShallowCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetEdmSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)">
    <parameter name="objectSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetFunctionImportMapping(System.Data.Metadata.Edm.EdmFunction,System.Data.Mapping.FunctionImportMapping@)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetMap(System.String,System.Data.Metadata.Edm.DataSpace,System.Boolean,System.Data.Metadata.Edm.DataSpace,System.Data.Mapping.Map@)">
    <parameter name="typeIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.MetadataWorkspace.TryGetObjectSpaceType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.StructuralType@)">
    <parameter name="edmSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.NavigationProperty.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.NavigationProperty.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage,System.Reflection.PropertyInfo)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.InternalLoadAllReferencedAssemblies(System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.InternalLoadAssemblyFromCache(System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadAssemblyFromCache(System.Reflection.Assembly,System.Boolean,System.Collections.Generic.Dictionary{System.Reflection.Assembly,System.Boolean},System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.EdmType}@,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmItemError}@)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadComplexTypeProperty(System.Reflection.PropertyInfo,System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadFromType(System.Type,System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext.#ctor(System.Reflection.Assembly,System.Collections.Generic.Dictionary{System.Reflection.Assembly,System.Boolean})">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext.IsTypeAlreadyInCache(System.Type,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext.IsTypeAlreadyLoaded(System.Type,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext.UpdateCurrentAssembly(System.Reflection.Assembly,System.Boolean)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadPropertiesFromType(System.Data.Metadata.Edm.StructuralType,System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="structuralType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadRelationshipTypes(System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadScalarProperty(System.Reflection.PropertyInfo,System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadTypesFromAssembly(System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.NavigationPropertyInfo.ResolveNavigationProperty(System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.ResolveNavigationProperties(System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.ResolveNonSchemaType(System.Type,System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.SafeLoadReferencedAssembly(System.String)">
    <parameter name="assemblyFullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.SaveNavigationProperty(System.Data.Metadata.Edm.StructuralType,System.Reflection.PropertyInfo,System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.TryFindNullParametersInRelationshipAttribute(System.Data.Objects.DataClasses.EdmRelationshipAttribute,System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext)">
    <parameter name="roleAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.TryGetRelationshipEndEntityType(System.Data.Metadata.Edm.ObjectItemCollection.AssemblyCacheEntry.LoadingContext,System.Type,System.Data.Metadata.Edm.EntityType@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.CollectIfViewGenAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetClrType(System.Data.Metadata.Edm.StructuralType)">
    <parameter name="objectSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetModelNamespaceForEntityType(System.Collections.Generic.Dictionary{System.String,System.Data.Metadata.Edm.EdmType},System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typesInLoading">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetPrimitiveTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetRelationshipType(System.Type,System.String,System.String@)">
    <parameter name="entityClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.GetRelationshipTypeExpensiveWay(System.Type,System.String,System.String@)">
    <parameter name="entityClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.IsCompiledViewGenAttributePresent(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.IsQualifiedName(System.String)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.IsSchemaAttributePresent(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadAllReferencedAssemblies(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadAllReferencedAssemblies(System.Reflection.Assembly,System.Boolean)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadAssemblyForType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadAssemblyFromCache(System.Data.Metadata.Edm.ObjectItemCollection,System.Reflection.Assembly,System.Boolean)">
    <parameter name="objectItemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadFromAssembly(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.LoadTypesExpensiveWay(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.ShouldFilterAssembly(System.String)">
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.TryGetClrType(System.Data.Metadata.Edm.StructuralType,System.Type@)">
    <parameter name="objectSpaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.TryGetMappingCSpaceTypeIdentity(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ObjectItemCollection.TryGetOSpaceType(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="cspaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.GetDefaultContainer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.GetFunctions(System.String,System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="namespaceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.TryGetExtent(System.Data.Metadata.Edm.EntityContainer,System.String,System.Boolean,System.Data.Metadata.Edm.EntitySetBase@)">
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.TryGetMember(System.Data.Metadata.Edm.StructuralType,System.String,System.Boolean,System.Data.Metadata.Edm.EdmMember@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Perspective.TryGetTypeByName(System.String,System.Boolean,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="fullName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.PrimitiveType.#ctor(System.String,System.String,System.Data.Metadata.Edm.DataSpace,System.Data.Metadata.Edm.PrimitiveType,System.Data.Common.DbProviderManifest)">
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.PrimitiveType.#ctor(System.Type,System.Data.Metadata.Edm.PrimitiveType,System.Data.Common.DbProviderManifest)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.PrimitiveType.ClrEquivalentType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.PrimitiveType.Initialize(System.Data.Metadata.Edm.PrimitiveType,System.Data.Metadata.Edm.PrimitiveTypeKind,System.Boolean,System.Data.Common.DbProviderManifest)">
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.#ctor(System.Collections.Generic.IList{`0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Contains(System.String)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.Enumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.GetValue(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1.IndexOf(`0)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RefType.#ctor(System.Data.Metadata.Edm.EntityType)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RefType.GetIdentity(System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityTypeBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RelationshipEndMember.#ctor(System.String,System.Data.Metadata.Edm.RefType,System.Data.Metadata.Edm.RelationshipMultiplicity)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RelationshipSet.#ctor(System.String,System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipType)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RowType.AddProperty(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.RowType.CheckProperties(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.RowType.GetRowTypeIdentityFromProperties(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty},System.Data.Objects.ELinq.InitializerMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.SafeLink`1.BindChild``1(`0,System.Func{``0,System.Data.Metadata.Edm.SafeLink{`0}},``0)">
    <parameter name="getLink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.SafeLink`1.BindChildren``1(`0,System.Func{``0,System.Data.Metadata.Edm.SafeLink{`0}},System.Collections.Generic.IEnumerable{``0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getLink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.SafeLinkCollection`2.#ctor(`0,System.Func{`1,System.Data.Metadata.Edm.SafeLink{`0}},System.Data.Metadata.Edm.MetadataCollection{`1})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getLink">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.#ctor(System.String,System.Boolean)">
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.ConvertFunctionParameterToCType(System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sTypeFunction">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Init(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Data.Common.DbProviderManifest@,System.Data.Common.DbProviderFactory@,System.Data.Common.Utils.Memoizer{System.Data.Metadata.Edm.EdmFunction,System.Data.Metadata.Edm.EdmFunction}@)">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.#ctor(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.AddProviderIncompatibleError(System.Data.ProviderIncompatibleException,System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <parameter name="provEx">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.InitializeProviderManifest(System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.LoadItems(System.Collections.Generic.IEnumerable{},System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="xmlReaders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.OnProviderManifestNeeded(System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.OnProviderManifestTokenNotification(System.String,System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StoreItemCollection.Loader.OnProviderNotification(System.String,System.Action{System.String,System.Data.EntityModel.SchemaObjectModel.ErrorCode,System.Data.Metadata.Edm.EdmSchemaErrorSeverity})">
    <parameter name="addError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StructuralType.AddMember(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.StructuralType.GetDeclaredOnlyMembers``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.StructuralType.ValidateMemberForAdd(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.#ctor(System.Collections.Generic.IList{System.Data.Metadata.Edm.PrimitiveType},System.Collections.Generic.IList{System.Data.Metadata.Edm.PrimitiveType})">
    <parameter name="types1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="types2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.#ctor(System.Data.Metadata.Edm.PrimitiveType,System.Data.Metadata.Edm.PrimitiveType)">
    <parameter name="primitiveType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="primitiveType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.CompareTypes(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.ForgetConstraints(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.GetCommonType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.HasCommonType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsAggregateFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsCastAllowed(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsCollectionType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsComplexType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEntityType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEnumerationType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEqualComparable(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEqualComparable(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEqualComparableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEquivalent(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsEquivalentOrPromotableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsNominalType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsNullable(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsNullable(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsNullType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsOrderComparable(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsOrderComparable(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsOrderComparableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPartOfKey(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="edmMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPolymorphicType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPrimitiveType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPrimitiveTypePromotableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPrimitiveTypeSubTypeOf(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPromotableTo(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.RowType)">
    <parameter name="fromRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsPromotableTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsReferenceType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsRelationshipType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsRowType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsStructurallyEqualTo(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsStructuralType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsSubTypeOf(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="subEdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsSubTypeOf(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="subType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="superType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsTypeValidForRelationship(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.RelationshipType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.IsValidPolymorphicCast(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonPrimitiveType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.CollectionType,System.Data.Metadata.Edm.CollectionType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="collectionType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="edmType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.RefType,System.Data.Metadata.Edm.RefType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="refType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reftype2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.EdmType@)">
    <parameter name="rowType1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rowType2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeSemantics.TryGetCommonType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="type1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.Create(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.Create(System.Data.Metadata.Edm.EdmType,System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.Facet})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.Create(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.FacetValues)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateBinaryTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeOffsetTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDecimalTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Byte,System.Byte)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateDefaultTypeUsage(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateStringTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Boolean,System.Boolean,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.CreateTimeTypeUsage(System.Data.Metadata.Edm.PrimitiveType,System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="primitiveType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.GetDefaultFacetDescriptionsAndOverrideFacetValues(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.FacetValues)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.TypeUsage.ShallowCopy(System.Data.Metadata.Edm.FacetValues)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Metadata.Edm.Util.CheckItemHasIdentity(System.Data.Metadata.Edm.MetadataItem,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Metadata.Edm.Util.ThrowIfReadOnly(System.Data.Metadata.Edm.MetadataItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.MetadataException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.ObjectNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.#ctor(System.Linq.Expressions.LambdaExpression,System.Type)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterDelegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``4(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Compile``5(System.Linq.Expressions.Expression{System.Func{``0,``1,``2,``3,``4}})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.CreateObjectParameters(System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.ExecuteQuery``1(System.Data.Objects.ObjectContext,System.Object[])">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.GetElementType(System.Type,System.Boolean@)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``2(``0)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``3(``0,``1)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``4(``0,``1,``2)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Invoke``5(``0,``1,``2,``3)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.LockDown(System.Linq.Expressions.LambdaExpression)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Parameter.#ctor(System.Type,System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression[])">
    <parameter name="parameterExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterDelegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Parameter.CreateObjectParameter(System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CompiledQuery.Parameter.FindParameters(System.Linq.Expressions.LambdaExpression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterDelegateType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CurrentValueRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CurrentValueRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CurrentValueRecord.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.CurrentValueRecord.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CurrentValueRecord.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.CurrentValueRecord.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CurrentValueRecord.SetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.CurrentValueRecord.System#Data#IDataRecord#GetData(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EdmSchemaAttribute.#ctor(System.String)">
    <parameter name="assemblyGuid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
    <parameter name="entities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.ContainsEntity(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.GetInternalEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.DataClasses.EntityCollection`1.RelatedEntities">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.RetrieveReferentialConstraintProperties(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}},System.Collections.Generic.HashSet{System.Object})">
    <parameter name="visited">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.DataClasses.EntityObject.System#Data#Objects#DataClasses#IEntityWithRelationships#RelationshipManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference.ValidateOwnerWithRIConstraints">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.AddEntityToLocallyCachedCollection(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.ClearCollectionOrRef(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.RelationshipNavigation,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.ContainsEntity(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.DisconnectedAdd(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.DisconnectedRemove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.IncludeEntityKey(System.Boolean,System.Collections.Generic.HashSet{System.Data.Objects.DataClasses.EntityReference})">
    <parameter name="promotedEntityKeyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.EntityReference`1.RemoveEntityFromLocallyCachedCollection(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Add(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="targetEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddEntityToLocallyCachedCollection(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddEntityToObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddGraphToObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean,System.Boolean,System.Boolean,System.Collections.Generic.HashSet{System.Data.Objects.DataClasses.EntityReference})">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="promotedEntityKeyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AddRelationshipToObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Attach``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
    <parameter name="entities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AttachContext(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.AttachContext(System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.BulkDeleteAll(System.Collections.Generic.List{System.Data.Objects.DataClasses.IEntityWithRelationships})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CheckReferentialConstraintProperties(System.Data.EntityKey)">
    <parameter name="ownerKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CheckRelationEntitySet(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="set">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Clear(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.RelationshipNavigation,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ClearCollectionOrRef(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.RelationshipNavigation,System.Boolean)">
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ContainsEntity(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CreateSourceQuery``1(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.CreateSourceQueryInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.DetachRelationshipFromObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Metadata.Edm.RelationshipSet,System.Data.Objects.DataClasses.RelationshipNavigation)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.DisconnectedAdd(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.DisconnectedRemove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Exclude(System.Collections.Generic.HashSet{System.Data.Objects.DataClasses.EntityReference})">
    <parameter name="promotedEntityKeyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ExcludeEntity``1(``0,System.Collections.Generic.HashSet{System.Data.Objects.DataClasses.EntityReference})">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="promotedEntityKeyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.FindRelationshipEntryInObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.FixupOtherEndOfRelationshipForRemove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.GetOtherEndOfRelationship(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.GetResults``1(System.Data.Objects.ObjectQuery{``0})">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Include(System.Boolean,System.Boolean,System.Collections.Generic.HashSet{System.Data.Objects.DataClasses.EntityReference})">
    <parameter name="promotedEntityKeyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.IncludeEntity``1(``0,System.Boolean,System.Boolean,System.Collections.Generic.HashSet{System.Data.Objects.DataClasses.EntityReference})">
    <parameter name="promotedEntityKeyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.IsValidEntityKeyType(System.Data.EntityKey)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.MarkEntityAsDeletedInObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.MarkRelationshipAsDeletedInObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Metadata.Edm.RelationshipSet,System.Data.Objects.DataClasses.RelationshipNavigation)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Merge``1(System.Collections.Generic.IEnumerable{``0},System.Data.Objects.MergeOption,System.Boolean)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.Remove(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveEntityFromLocallyCachedCollection(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveEntityFromObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveEntityFromRelatedEnds(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.RelationshipNavigation)">
    <parameter name="entity1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RemoveRelationshipFromObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Metadata.Edm.RelationshipSet,System.Data.Objects.DataClasses.RelationshipNavigation)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.RetrieveReferentialConstraintProperties(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}},System.Collections.Generic.HashSet{System.Object})">
    <parameter name="visited">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Add(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#CreateSourceQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.System#Data#Objects#DataClasses#IRelatedEnd#Remove(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateEntityForAttach``1(``0,System.Int32,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateLoad``1(System.Data.Objects.MergeOption,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.ValidateStateForAdd(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.VerifyEntityForAdd(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.VerifyRIConstraintsWithRelatedEntry(System.Data.Metadata.Edm.ReferentialConstraint,System.Data.EntityKey,System.Data.EntityKey)">
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dependentKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="principalKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelatedEnd.WalkObjectGraphToIncludeAllRelatedEntities(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean,System.Boolean,System.Collections.Generic.HashSet{System.Data.Objects.DataClasses.EntityReference})">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="promotedEntityKeyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipFixer`2.System#Data#Objects#DataClasses#IRelationshipFixer#CreateSourceEnd(System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.RelationshipManager)">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.AttachContext(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.CheckIfAllPropertiesWereRetrieved(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}},System.Collections.Generic.List{System.String})">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertiesToRetrieve">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.CheckReferentialConstraintProperties(System.Data.EntityKey)">
    <parameter name="ownerKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.CreateRelatedEnd``2(System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``2(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetRoleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceRoleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.IRelationshipFixer)">
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipFixer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEndInternal(System.String,System.String,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Metadata.Edm.AssociationType)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEndInternal(System.String,System.String,System.Data.Objects.DataClasses.RelatedEnd,System.Data.Metadata.Edm.AssociationType,System.Boolean)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``2(System.String,System.String,System.String,System.Data.Metadata.Edm.RelationshipMultiplicity,System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetRoleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceRoleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelationshipType(System.Type,System.String,System.String@)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})">
    <parameter name="entityCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})">
    <parameter name="entityReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.DataClasses.RelationshipManager.Relationships">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.RemergeCollections``1(System.Data.Objects.DataClasses.EntityCollection{``0},System.Data.Objects.DataClasses.EntityCollection{``0})">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.RemoveEntity(System.Data.Objects.DataClasses.RelationshipNavigation,System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="navigation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.RemoveRelatedEntitiesFromObjectStateManager(System.Data.Objects.DataClasses.IEntityWithRelationships,System.Collections.Generic.HashSet{System.Data.Objects.DataClasses.EntityReference})">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="promotedEntityKeyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.ResetContext(System.Data.Objects.ObjectContext,System.Data.Metadata.Edm.EntitySet,System.Data.Objects.MergeOption)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.RetrieveReferentialConstraintProperties(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}}@,System.Boolean,System.Collections.Generic.HashSet{System.Object})">
    <parameter name="visited">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.TryGetRelatedEnd(System.String,System.String,System.Data.Objects.DataClasses.IRelatedEnd@)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.TryGetRelationshipType(System.Type,System.String,System.String@,System.Data.Metadata.Edm.AssociationType@)">
    <parameter name="entityClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipManager.VerifyRelationship(System.Data.Metadata.Edm.AssociationType,System.String,System.Boolean)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipNavigation.#ctor(System.String,System.String,System.String)">
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.RelationshipNavigation.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.DataClasses.RelationshipNavigation.Reverse">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanged(System.String)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.ReportPropertyChanging(System.String)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Boolean})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTime})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.DateTimeOffset})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Decimal})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Double})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Guid})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int16})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Int64})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.SByte})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.Single})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.TimeSpan})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt16})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.Nullable{System.UInt64})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue(System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.SetValidValue``1(``0,``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataClasses.StructuralObject.VerifyComplexObjectIsNotNull``1(``0,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.DataRecordObjectView.#ctor(System.Data.Objects.IObjectViewData{},System.Object,System.Data.Metadata.Edm.RowType,System.Type)">
    <parameter name="viewData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataRecordObjectView.GetListItemType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataRecordObjectView.GetTypedIndexer(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.DataRecordObjectView.System#ComponentModel#ITypedList#GetListName(System.ComponentModel.PropertyDescriptor[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.BindingContext.#ctor(System.Linq.Expressions.ParameterExpression,System.Data.Objects.ObjectContext,System.Data.Objects.ELinq.CompiledQueryParameter[])">
    <parameter name="compiledQueryParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ClosureBinding.CopyToContext(System.Data.Objects.ELinq.ExpressionConverter)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ELinq.ClosureBinding.Expression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ClosureBinding.GenerateParameterName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ClosureBinding.NestedLogicBinding.CopyToContext(System.Data.Objects.ELinq.ExpressionConverter)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ELinq.ClosureBinding.Parameter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ELinq.ClosureBinding.Query">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ClosureBinding.TryCreateClosureBinding(System.Linq.Expressions.Expression,System.Data.Metadata.Edm.ClrPerspective,System.Boolean,System.Collections.Generic.HashSet{System.Linq.Expressions.Expression},System.Data.Objects.ELinq.ClosureBinding@,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="closureCandidates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ClosureBinding.TryGetTypeUsageForObjectParameter(System.Data.Objects.ObjectParameter,System.Data.Metadata.Edm.ClrPerspective,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.CompiledELinqQueryState.#ctor(System.Type,System.Data.Objects.ObjectContext,System.Data.Objects.ObjectParameterCollection,System.Data.Objects.ELinq.CompiledQueryParameter[],System.Linq.Expressions.LambdaExpression,System.Guid)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.CompiledELinqQueryState.Create(System.Type,System.Data.Objects.ObjectContext,System.Linq.Expressions.LambdaExpression,System.Collections.Generic.Dictionary{System.Linq.Expressions.Expression,System.Data.Objects.ObjectParameter},System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.CompiledELinqQueryState.CreateDonateableExpressionVisitor.Replace(System.Linq.Expressions.Expression,System.Data.Objects.ObjectContext,System.Linq.Expressions.ParameterExpression,System.Data.Objects.ELinq.CompiledQueryParameter[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.CompiledELinqQueryState.CreateDonateableExpressionVisitor.TryReplaceRootQuery(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.CompiledQueryParameter.CreateParameterReferenceAndAddParameterToCommandTree(System.Data.Common.CommandTrees.DbCommandTree,System.Data.Metadata.Edm.ClrPerspective)">
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ELinqQueryState.CreateExpressionConverter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ELinq.ELinqQueryState.Expression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ELinqQueryState.GetExecutionPlan(System.Nullable{System.Data.Objects.MergeOption})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ELinqQueryState.Include``1(System.Data.Objects.ObjectQuery{``0},System.String)">
    <parameter name="includePath">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AddClosureBinding(System.Data.Objects.ELinq.ClosureBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AddClosureBinding(System.Data.Objects.ELinq.ClosureBinding,System.Boolean)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AddParameter(System.Data.Objects.ObjectParameter)">
    <parameter name="newParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AddSpanMapping(System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.Span)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AlignTypes(System.Data.Common.CommandTrees.DbExpression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="cqt">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AndAlsoTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AndTranslator.TranslateIntoLogicExpression(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.BinaryExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ApplySpanMapping(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="from">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.AsTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.BinaryTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.BinaryTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.BinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.BitwiseBinaryTranslator.TranslateIntoLogicExpression(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.BinaryExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.BitwiseBinaryTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.BinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CanOmitCast(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CanTranslatePropertyInfo(System.Reflection.PropertyInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CheckInitializerType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CoalesceTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ConditionalTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.ConditionalExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ConvertTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateCanonicalFunction(System.String,System.Linq.Expressions.Expression,System.Data.Common.CommandTrees.DbExpression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="translatedArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="linqExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateCastExpression(System.Data.Common.CommandTrees.DbExpression,System.Type,System.Type)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateEqualsExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern,System.Type,System.Type)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateIsNullExpression(System.Data.Common.CommandTrees.DbExpression,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operandClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.CreateNewRowExpression(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Data.Objects.ELinq.InitializerMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.DescribeClrType(System.Type)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Distinct(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.DivideTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.EqualsTranslator.CreateIsNullExpression(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.EqualsTranslator.LinqExpressionIsNullConstant(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.EqualsTranslator.UnwrapConvert(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Except(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Filter(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.FindCanonicalFunction(System.String,System.Collections.Generic.IList{System.Data.Metadata.Edm.TypeUsage},System.Boolean,System.Linq.Expressions.Expression)">
    <parameter name="linqExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetCastTargetType(System.Data.Metadata.Edm.TypeUsage,System.Type,System.Type,System.Boolean)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetIsOrAsTargetType(System.Data.Metadata.Edm.TypeUsage,System.Linq.Expressions.ExpressionType,System.Type,System.Type)">
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetLambdaExpression(System.Linq.Expressions.Expression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetLambdaExpression(System.Linq.Expressions.MethodCallExpression,System.Int32)">
    <parameter name="callExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GetValueLayerType(System.Type)">
    <parameter name="linqType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GreaterThanOrEqualsTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GreaterThanTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.#ctor(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Objects.ELinq.ExpressionConverter.DbGroupByTemplate)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.TryRewrite(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Common.CommandTrees.DbVariableReferenceExpression,System.Data.Objects.ELinq.ExpressionConverter.DbGroupByTemplate,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.VisitExpr(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.VisitExprList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="exprList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.GroupByExpressionRewriter.VisitList``1(System.Collections.Generic.IList{``0})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="exprList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ImplementEquality(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ImplementEqualityConstantAndUnknown(System.Data.Common.CommandTrees.DbConstantExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="unknown">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constant">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ImplementEqualityUnknownArguments(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.InitializeTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Intersect(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.IsCSharpGeneratedClass(System.String,System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.IsTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.TypeBinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.IsVBGeneratedClass(System.String,System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.LessThanOrEqualsTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.LessThanTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Limit(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.CanTranslatePropertyInfo(System.Reflection.PropertyInfo)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.DefaultCanonicalFunctionPropertyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.EntityCollectionCountTranslator.GetProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.NormalizeInstanceForReference(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.NullableHasValueTranslator.GetProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.NullableHasValueTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.NullableValueTranslator.GetProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.PropertyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.RenameCanonicalFunctionPropertyTranslator.GetProperty(System.Type,System.String,System.Reflection.BindingFlags,System.String)">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.RenameCanonicalFunctionPropertyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.TranslateNavigationProperty(System.Data.Objects.ELinq.ExpressionConverter,System.Reflection.MemberInfo,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.NavigationProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.TryGetTranslator(System.Reflection.PropertyInfo,System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.PropertyTranslator@)">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.TryResolveAsProperty(System.Data.Objects.ELinq.ExpressionConverter,System.Reflection.MemberInfo,System.Data.Metadata.Edm.TypeUsage,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definingType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.VBDateAndTimeNowTranslator.#ctor(System.Reflection.Assembly)">
    <parameter name="vbAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.VBDateAndTimeNowTranslator.GetProperty(System.Reflection.Assembly)">
    <parameter name="vbAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberAccessTranslator.VBDateAndTimeNowTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MemberInitTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MemberInitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.FindFunction(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.TryCreateOptimizedTranslation(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.LambdaExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EdmFunction,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="originalTranslation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.WrapCollectionOperand(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AggregateTranslator.WrapNonCollectionOperand(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.AnyTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.BinarySequenceMethodTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.BinarySequenceMethodTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CallTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CanonicalFunctionDefaultTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CastMethodTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ContainsTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CountTranslatorBase.WrapCollectionOperand(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CountTranslatorBase.WrapNonCollectionOperand(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultTranslator.InitializeAlternateMethodInfos">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultTranslator.InitializeVBMethods(System.Reflection.Assembly)">
    <parameter name="vbAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DefaultTranslator.TryGetAlternativeMethod(System.Reflection.MethodInfo,System.Reflection.MethodInfo@)">
    <parameter name="originalMethodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.DistinctTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.EndsWithTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.FirstTranslatorBase.AddDefaultCase(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Type)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.GroupByTranslator.ProcessResultSelector(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Objects.ELinq.SequenceMethod,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="topLevelProject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.GroupByTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.GroupJoinTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.IndexOfTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.InitializeMethodTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.InitializeObjectQueryTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.InitializeSequenceMethodTranslators">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.InsertTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.IsNullOrEmptyTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.JoinTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ObjectQueryIncludeTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.OneLambdaTranslator.TranslateOneLambda(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.PagingTranslator.TranslatePagingOperator(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.PassthroughTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.RemoveTranslator.IsNonNegativeIntegerConstant(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.RemoveTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SequenceMethodTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SequenceMethodTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression,System.Data.Objects.ELinq.SequenceMethod)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SingleTranslatorNotSupported.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.StartsWithTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.SubstringTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.ThenByTranslatorBase.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TrimStartTrimEndBaseTranslator.IsEmptyArray(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TrimStartTrimEndBaseTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.TryGetCallTranslator(System.Reflection.MethodInfo,System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.CallTranslator@)">
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.UnarySequenceMethodTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.UnarySequenceMethodTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.MethodCallExpression)">
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="call">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.VBCanonicalFunctionDefaultTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.VBCanonicalFunctionRenameTranslator.GetMethod(System.Type,System.String,System.String,System.Type[])">
    <parameter name="declaringType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.VBCanonicalFunctionRenameTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MethodCallTranslator.VBDatePartTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ModuloTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.MultiplyTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NegateTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="unary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NewTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.NewExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NormalizeExpression(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NormalizeSetSource(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NotSupportedTranslator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.Expression)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.NotTranslator.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OfType(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ofType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrElseTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.OrTranslator.TranslateIntoLogicExpression(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.BinaryExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Project(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ELinq.ExpressionConverter.PropagatedMergeOption">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.QuoteTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="unary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.RecursivelyRewriteEqualsExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.ELinq.ExpressionConverter.EqualsPattern)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Skip(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="skipCount">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Sort(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.SubtractTranslator.TranslateBinary(System.Data.Objects.ELinq.ExpressionConverter,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Linq.Expressions.BinaryExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ThrowUnresolvableCanonicalFunction(System.Linq.Expressions.Expression)">
    <parameter name="linqExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ThrowUnresolvableStoreFunction(System.Linq.Expressions.Expression)">
    <parameter name="linqExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateExpression(System.Linq.Expressions.Expression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateInlineQueryOfT(System.Data.Objects.ObjectQuery)">
    <parameter name="inlineQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateIntoCanonicalFunction(System.String,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="linqArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="linqExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateLambda(System.Linq.Expressions.LambdaExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateLambda(System.Linq.Expressions.LambdaExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionBinding@)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateLambda(System.Linq.Expressions.LambdaExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbGroupExpressionBinding@)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TranslateSet(System.Linq.Expressions.Expression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.Translator.Translate(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.Expression)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TryGetSpan(System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.Span@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TryGetValueLayerType(System.Type,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="linqType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TryRewrite(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TypedTranslator`1.TypedTranslate(System.Data.Objects.ELinq.ExpressionConverter,`0)">
    <parameter name="linq">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.TypeUsageEquals(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.UnaryPlusTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="unary">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.UnaryTranslator.TranslateUnary(System.Data.Objects.ELinq.ExpressionConverter,System.Linq.Expressions.UnaryExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="operand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="unary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.UnifySpanMappings(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="to">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.UnionAll(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ValidateAndAdjustCastTypes(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromClrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.ValidateInitializerMetadata(System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.VerifyRowTypeSupportedForComparison(System.Type,System.Data.Metadata.Edm.RowType,System.Collections.Generic.Stack{System.Data.Metadata.Edm.EdmMember})">
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionConverter.VerifyTypeSupportedForComparison(System.Type,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.Stack{System.Data.Metadata.Edm.EdmMember})">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionEvaluator.DebugOnlyVerifyMethodOverloadCount(System.Type,System.String,System.Int32)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionEvaluator.EvaluateExpression(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionEvaluator.IsExpressionNodeAClosure(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionEvaluator.RootQueryCreator`2.Invoke(System.Linq.Expressions.Expression,System.Linq.Expressions.ParameterExpression,System.Data.Objects.ObjectContext)">
    <parameter name="body">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ExpressionEvaluator.TryEvaluateRootQuery(System.Data.Objects.ELinq.BindingContext,System.Linq.Expressions.Expression,System.Data.Objects.ObjectQuery@)">
    <parameter name="bindingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.AppendColumnMapKey(System.Data.Common.Internal.Materialization.ColumnMapKeyBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateEmptyProjectionInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Linq.Expressions.NewExpression)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateEntityCollectionInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Type,System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateGroupingInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Type)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateProjectionInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Linq.Expressions.MemberInitExpression,System.Reflection.MemberInfo[])">
    <parameter name="initExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.CreateProjectionInitializer(System.Data.Metadata.Edm.EdmItemCollection,System.Linq.Expressions.NewExpression)">
    <parameter name="itemCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Emit(System.Data.Common.Internal.Materialization.Translator,System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <parameter name="propertyTranslatorResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.EmptyProjectionNewMetadata.#ctor(System.Linq.Expressions.NewExpression)">
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.EmptyProjectionNewMetadata.Emit(System.Data.Common.Internal.Materialization.Translator,System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <parameter name="propertyReaders">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.EntityCollectionInitializerMetadata.CreateEntityCollection``1(System.Data.Common.Internal.Materialization.Shaper,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Common.Internal.Materialization.Coordinator{``0},System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="coordinator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.EntityCollectionInitializerMetadata.Emit(System.Data.Common.Internal.Materialization.Translator,System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Equals(System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.GetPropertyReaders(System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propertyTranslatorResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.Grouping`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.GroupingInitializerMetadata.Emit(System.Data.Common.Internal.Materialization.Translator,System.Collections.Generic.List{System.Data.Common.Internal.Materialization.TranslatorResult})">
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.IsStructurallyEquivalent(System.Data.Objects.ELinq.InitializerMetadata)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.ProjectionInitializerMetadata.#ctor(System.Linq.Expressions.MemberInitExpression,System.Reflection.MemberInfo[])">
    <parameter name="initExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.ProjectionNewMetadata.#ctor(System.Linq.Expressions.NewExpression)">
    <parameter name="newExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.ProjectionNewMetadata.GetChildTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.InitializerMetadata.TryGetInitializerMetadata(System.Data.Metadata.Edm.TypeUsage,System.Data.Objects.ELinq.InitializerMetadata@)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.CreateCompareExpression(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.CreateRelationalOperator(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.HasPredicateArgument(System.Linq.Expressions.MethodCallExpression,System.Int32@)">
    <parameter name="callExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.IsConstantZero(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.NormalizePredicateArgument(System.Linq.Expressions.MethodCallExpression)">
    <parameter name="callExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.TryCreateRelationalOperator(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.BinaryExpression@)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.TryMatchCoalescePattern(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqExpressionNormalizer.UnwrapObjectConvert(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.LinqTreeNodeEvaluator.Evaluate(System.Linq.Expressions.Expression,System.Collections.Generic.HashSet{System.Linq.Expressions.Expression})">
    <parameter name="nodesToEvaluate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.ExecuteSingle``1(System.Collections.Generic.IEnumerable{``0},System.Linq.Expressions.Expression)">
    <parameter name="queryRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.GetElementFunction``1(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="queryRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.System#Linq#IQueryProvider#CreateQuery(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.System#Linq#IQueryProvider#CreateQuery``1(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.System#Linq#IQueryProvider#Execute(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ObjectQueryProvider.System#Linq#IQueryProvider#Execute``1(System.Linq.Expressions.Expression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ReflectionUtil.AppendCanonicalTypeDescription(System.Type,System.Collections.Generic.Dictionary{System.Type,System.Int32},System.Text.StringBuilder)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="description">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ReflectionUtil.GetCanonicalMethodDescription(System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ReflectionUtil.TryIdentifySequenceMethod(System.Linq.Expressions.Expression,System.Boolean,System.Data.Objects.ELinq.SequenceMethod@)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.ReflectionUtil.TryIdentifySequenceMethod(System.Reflection.MethodInfo,System.Data.Objects.ELinq.SequenceMethod@)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.TypeSystem.GetDefaultValue(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.TypeSystem.GetNonNullableType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ELinq.TypeSystem.PropertyOrField(System.Reflection.MemberInfo,System.String@,System.Type@)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.AddRelationshipEnd(System.Data.Objects.RelationshipEntry)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntityEntry.RelationshipEndEnumerable.System#Collections#Generic#IEnumerable{System#Data#IEntityStateEntry}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.RelationshipEndEnumerable.System#Collections#Generic#IEnumerable{System#Data#Objects#RelationshipEntry}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.RelationshipEndEnumerable.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.EntityEntry.RelationshipEndEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.EntityEntry.RelationshipEndEnumerator.System#Collections#Generic#IEnumerator{System#Data#IEntityStateEntry}#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.EntityEntry.RelationshipEndEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.EntityEntry.UpdateRelationshipEnds(System.Data.EntityKey,System.Data.Objects.EntityEntry)">
    <parameter name="oldKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntitySqlQueryState.#ctor(System.Type,System.String,System.Boolean,System.Data.Objects.ObjectContext,System.Data.Objects.ObjectParameterCollection,System.Data.Objects.Span)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntitySqlQueryState.Include``1(System.Data.Objects.ObjectQuery{``0},System.String)">
    <parameter name="sourceQuery">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.EntitySqlQueryState.Parse(System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.#ctor(System.Type,System.Boolean,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.CanResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.DetermineClrType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.ResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.FieldDescriptor.ShouldSerializeValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.CreateComplex(System.Data.IExtendedDataRecord,System.Data.Common.DataRecordInfo,System.Object)">
    <parameter name="recordInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.CreateComplexRecursive(System.Data.IExtendedDataRecord,System.Object)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.CreateComplexRecursive(System.Object,System.Object)">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.GetPlan(System.Data.IExtendedDataRecord,System.Data.Common.DataRecordInfo)">
    <parameter name="recordInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.PlanEdmProperty.#ctor(System.Int32,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ComplexTypeMaterializer.SetProperties(System.Data.IExtendedDataRecord,System.Object,System.Data.Objects.Internal.ComplexTypeMaterializer.PlanEdmProperty[])">
    <parameter name="record">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.BuildOrderByOrWhere(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[],System.String,System.String,System.Boolean)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicateOrKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.BuildSelectOrSelectValue(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[],System.String,System.Type)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.BuildSetOp(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Span,System.String)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Distinct(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Except(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.GetCommandText(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.GroupBy(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Intersect(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.MergeParameters(System.Data.Objects.ObjectContext,System.Data.Objects.ObjectParameterCollection,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builderMethodParams">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.MergeParameters(System.Data.Objects.ObjectParameterCollection,System.Data.Objects.ObjectParameterCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.NewBuilderQuery(System.Data.Objects.Internal.ObjectQueryState,System.Type,System.Text.StringBuilder,System.Boolean,System.Data.Objects.Span,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectParameter})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.NewBuilderQuery(System.Data.Objects.Internal.ObjectQueryState,System.Type,System.Text.StringBuilder,System.Data.Objects.Span,System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectParameter})">
    <parameter name="queryText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.OfType(System.Data.Objects.Internal.ObjectQueryState,System.Data.Metadata.Edm.EdmType,System.Type)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.OrderBy(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Select(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.SelectValue(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[],System.Type)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Skip(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Top(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Union(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.UnionAll(System.Data.Objects.Internal.ObjectQueryState,System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="leftQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.EntitySqlQueryBuilder.Where(System.Data.Objects.Internal.ObjectQueryState,System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.#ctor(System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.Span)">
    <parameter name="span">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toRewrite">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.AddSpanPath(System.Data.Objects.Internal.ObjectFullSpanRewriter.SpanPathInfo,System.Collections.Generic.List{System.String})">
    <parameter name="navPropNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.ConvertSpanPath(System.Data.Objects.Internal.ObjectFullSpanRewriter.SpanPathInfo,System.Collections.Generic.List{System.String},System.Int32)">
    <parameter name="parentInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navPropNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.EntityTypeFromResultType(System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="navProp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.GetNavigationPropertyTargetEnd(System.Data.Metadata.Edm.NavigationProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectFullSpanRewriter.TryGetEntityType(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EntityType@)">
    <parameter name="resultType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryExecutionPlan.Execute``1(System.Data.Objects.ObjectContext,System.Data.Objects.ObjectParameterCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryExecutionPlan.ExecuteCommandTree``1(System.Data.Objects.ObjectContext,System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryExecutionPlan.Prepare(System.Data.Objects.ObjectContext,System.Data.Common.CommandTrees.DbQueryCommandTree,System.Type,System.Data.Objects.MergeOption,System.Data.Objects.Span)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.ApplySettingsTo(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.CreateObjectQuery``1(System.Data.Objects.Internal.ObjectQueryState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="queryState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.EnsureMergeOption(System.Nullable{System.Data.Objects.MergeOption}[])">
    <parameter name="preferredMergeOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.EnsureParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.GetMergeOption(System.Nullable{System.Data.Objects.MergeOption}[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="preferredMergeOptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectQueryState.Include``1(System.Data.Objects.ObjectQuery{``0},System.String)">
    <parameter name="sourceQuery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="includePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.#ctor(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="toRewrite">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.AddSpanMap(System.Data.Metadata.Edm.RowType,System.Collections.Generic.Dictionary{System.Int32,System.Data.Metadata.Edm.AssociationEndMember})">
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.AddSpannedRowType(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="spannedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.CreateEntitySpanTrackingInfo(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.EnterNavigationCollection(System.Data.Metadata.Edm.AssociationEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="navSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.GetRelationshipSpanEnds(System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.IsValidRelationshipSpan(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="compareType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.NavigationInfo.#ctor(System.Data.Metadata.Edm.AssociationEndMember,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.NavigationInfo.CreateSourceReference">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Find(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.FindNavigationExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RelationshipNavigationVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.Rewrite(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteCollection(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.CollectionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteElementExpression(System.Data.Common.CommandTrees.DbElementExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteEntity(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteLimitExpression(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteQuery">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.RewriteRow(System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.RowType)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Internal.ObjectSpanRewriter.TryRewrite(System.Data.Common.CommandTrees.DbExpression,System.Data.Objects.Span,System.Data.Objects.MergeOption,System.Data.Common.CommandTrees.DbExpression@,System.Data.Objects.Internal.SpanIndex@)">
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.AddSpanMap(System.Data.Metadata.Edm.RowType,System.Collections.Generic.Dictionary{System.Int32,System.Data.Metadata.Edm.AssociationEndMember})">
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.AddSpannedRowType(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="spannedRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.GetSpanMap(System.Data.Metadata.Edm.RowType)">
    <parameter name="rowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.GetSpannedRowType(System.Data.Metadata.Edm.RowType)">
    <parameter name="spannedRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.HasSpanMap(System.Data.Metadata.Edm.RowType)">
    <parameter name="spanRowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.RowTypeEqualityComparer.Equals(System.Data.Metadata.Edm.RowType,System.Data.Metadata.Edm.RowType)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Internal.SpanIndex.RowTypeEqualityComparer.GetHashCode(System.Data.Metadata.Edm.RowType)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreateConstructor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreateDynamicMethod(System.String,System.Type,System.Type[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreateEntityConstructor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreateGetRelatedEndMethod(System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Objects.DataClasses.RelatedEnd)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreatePropertyGetter(System.RuntimeMethodHandle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.CreatePropertySetter(System.RuntimeMethodHandle,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GenerateNecessaryPermissionDemands(System.Reflection.Emit.ILGenerator,System.Reflection.MethodBase)">
    <parameter name="gen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetConstructorDelegateForType(System.Data.Metadata.Edm.ClrComplexType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetConstructorDelegateForType(System.Data.Metadata.Edm.ClrEntityType)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetConstructorDelegateForType(System.Data.Metadata.Edm.EdmType)">
    <parameter name="clrType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetConstructorForType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetGetterDelegateForProperty(System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetRelatedEnd(System.Data.Objects.DataClasses.RelationshipManager,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Objects.DataClasses.RelatedEnd)">
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetSetterDelegateForProperty(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetValue(System.Data.Metadata.Edm.EdmProperty,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.GetValue(System.Data.Metadata.Edm.NavigationProperty,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.HasLinkDemand(System.Reflection.MemberInfo)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.IsPublic(System.Reflection.MethodBase)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.RequiresPermissionDemands(System.Reflection.MethodBase)">
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.LightweightCodeGenerator.SetValue(System.Data.Metadata.Edm.EdmProperty,System.Object,System.Object)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.CreatePropertyDescriptorCollection(System.Data.Metadata.Edm.StructuralType,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.MaterializedDataRecord.DataRecordInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.InitializePropertyDescriptors">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.MaterializedDataRecord.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetAttributes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetClassName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetComponentName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.MaterializedDataRecord.System#ComponentModel#ICustomTypeDescriptor#GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.#ctor(System.Data.EntityClient.EntityConnection,System.Boolean)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.#ctor(System.String)">
    <parameter name="connectionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.#ctor(System.String,System.String)">
    <parameter name="connectionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AddObject(System.String,System.Object)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AddRefreshKey(System.Object,System.Collections.Generic.Dictionary{System.Data.EntityKey,System.Data.Objects.ObjectStateEntry},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.List{System.Data.EntityKey}})">
    <parameter name="entityLike">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AddSingleObject(System.Data.Metadata.Edm.EntitySet,System.Object,System.String)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ApplyPropertyChanges(System.String,System.Object)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="changed">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.Attach(System.Data.Objects.DataClasses.IEntityWithKey)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AttachSingleObject(System.Object,System.Data.Metadata.Edm.EntitySet,System.String)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.AttachTo(System.String,System.Object)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.BatchRefreshEntitiesByKey(System.Data.Objects.RefreshMode,System.Collections.Generic.Dictionary{System.Data.EntityKey,System.Data.Objects.ObjectStateEntry},System.Data.Metadata.Edm.EntitySet,System.Collections.Generic.List{System.Data.EntityKey},System.Int32)">
    <parameter name="trackedEntities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectContext.Connection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ConnectionStateChange(System.Object,System.Data.StateChangeEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateEntityConnection(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="connectionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateEntityKey(System.Data.Metadata.Edm.EntitySet,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateEntityKey(System.String,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateFunctionObjectResult``1(System.Data.EntityClient.EntityCommand,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.CreateQuery``1(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.DeleteObject(System.Object)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.Detach(System.Object)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ExecuteFunction``1(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="functionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.FindEntityKey(System.Object,System.Data.Objects.ObjectContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetEntitySetFromName(System.String)">
    <parameter name="entitySetName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetEntitySetName(System.String,System.String,System.Data.Objects.ObjectContext,System.String@,System.String@)">
    <parameter name="qualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.GetObjectByKey(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectContext.ObjectStateManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectContext.Perspective">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.PopulateFunctionEntityCommandParameters(System.Data.Objects.ObjectParameter[],System.Data.Metadata.Edm.EdmFunction,System.Data.EntityClient.EntityCommand)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectContext.Provider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.QuoteIdentifier(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.Refresh(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.RefreshCheck(System.Collections.Generic.Dictionary{System.Data.EntityKey,System.Data.Objects.ObjectStateEntry},System.Object,System.Data.EntityKey)">
    <parameter name="entities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.RefreshEntities(System.Data.Objects.RefreshMode,System.Collections.IEnumerable)">
    <parameter name="collection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.RetrieveMetadataWorkspaceFromConnection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectContext.TryGetObjectByKey(System.Data.EntityKey,System.Object@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectContext.ValidateEntitySet(System.Data.Metadata.Edm.EntitySet,System.Type)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.#ctor(System.Data.Objects.ObjectParameter)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Object)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.#ctor(System.String,System.Type)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.FindMappableType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.ShallowCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.ValidateParameterName(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameter.ValidateParameterType(System.Data.Metadata.Edm.ClrPerspective)">
    <parameter name="perspective">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.Add(System.Data.Objects.ObjectParameter)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.Contains(System.Data.Objects.ObjectParameter)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.CopyTo(System.Data.Objects.ObjectParameter[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.DeepCopy(System.Data.Objects.ObjectParameterCollection)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.Remove(System.Data.Objects.ObjectParameter)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.System#Collections#Generic#IEnumerable{System#Data#Objects#ObjectParameter}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectParameterCollection.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.#ctor(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="queryState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.Execute(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.ExecuteInternal(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.GetIListSourceListInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.GetResultType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectQuery.Parameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.#ctor(System.Data.Objects.Internal.ObjectQueryState)">
    <parameter name="queryState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Distinct">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.GetResults(System.Nullable{System.Data.Objects.MergeOption})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Include(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.OfType``1">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="count">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="query">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#Equals(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectReferenceEqualityComparer.System#Collections#Generic#IEqualityComparer{System#Object}#GetHashCode(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectResult.ElementType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectResult.GetEnumeratorInternal">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectResult.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectResult.System#ComponentModel#IListSource#GetList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectResult`1.#ctor(System.Data.Common.Internal.Materialization.Shaper{`0},System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectResult`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.#ctor(System.Data.Objects.ObjectStateManager,System.Data.EntityState,System.Data.Objects.RelationshipWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.AddOrIncreaseCounter(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}},System.String,System.Object)">
    <parameter name="propertyValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.CurrentValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.DetachRelationshipsEntries(System.Data.Objects.DataClasses.RelationshipManager)">
    <parameter name="relationshipManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.EditableOriginalValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.ExpandComplexTypeAndAddValues(System.Data.Objects.StateManagerMemberMetadata,System.Object,System.Object,System.Boolean)">
    <parameter name="memberMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetAssociationEndMember(System.Data.Objects.ObjectStateEntry)">
    <parameter name="relationshipEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetCLayerName(System.Int32,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetCurrentEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Data.Objects.ObjectStateValueRecord)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetDataRecordInfo(System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetFieldCount(System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetFieldType(System.Int32,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetOrdinalforCLayerName(System.String,System.Data.Objects.StateManagerTypeMetadata)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetOriginalEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Data.Objects.ObjectStateValueRecord)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetOtherEndOfRelationship(System.Data.Objects.ObjectStateEntry)">
    <parameter name="relationshipEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.GetOtherKeyProperties(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}})">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.IsSameAssociationSetAndRole(System.Data.Metadata.Edm.AssociationSet,System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="associationMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntry.OriginalValues">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.RetrieveReferentialConstraintPropertiesFromKeyEntries(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.KeyValuePair{System.Object,System.Data.Objects.IntBox}})">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.SetCurrentEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.SetOriginalEntityValue(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.Object,System.Object)">
    <parameter name="metadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntry.VerifyEntityValueIsEditable(System.Data.Objects.StateManagerTypeMetadata,System.Int32,System.String)">
    <parameter name="typeMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.#ctor(System.Data.Objects.ObjectStateEntry)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.#ctor(System.Data.Objects.ObjectStateEntry,System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbDataRecord.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectStateEntryDbDataRecord.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbUpdatableDataRecord.#ctor(System.Data.Objects.ObjectStateEntry)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryDbUpdatableDataRecord.#ctor(System.Data.Objects.ObjectStateEntry,System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateEntryOriginalDbUpdatableDataRecord.#ctor(System.Data.Objects.ObjectStateEntry,System.Data.Objects.StateManagerTypeMetadata,System.Object)">
    <parameter name="cacheEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntityEntryToDictionary(System.Data.Objects.ObjectStateEntry,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntityToCollectionOrReference(System.Data.Objects.MergeOption,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Metadata.Edm.AssociationEndMember,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntry(System.Object,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet,System.String,System.Boolean)">
    <parameter name="dataObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddEntryToKeylessStore(System.Object,System.Data.Objects.ObjectStateEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddKeyEntry(System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddNewRelation(System.Data.Objects.RelationshipWrapper,System.Data.EntityState)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddRelation(System.Data.Objects.RelationshipWrapper,System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddRelationshipEndToLookup(System.Data.EntityKey,System.Data.Objects.RelationshipEntry)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddRelationshipEntryToDictionary(System.Data.Objects.ObjectStateEntry,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddRelationshipToLookup(System.Data.Objects.RelationshipEntry)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddStateManagerTypeMetadata(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ObjectTypeMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AddStateManagerTypeMetadata(System.Data.Metadata.Edm.EntitySet,System.Data.Mapping.ObjectTypeMapping)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.AttachEntry(System.Data.EntityKey,System.Object,System.Data.Metadata.Edm.EntitySet,System.String)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="dataObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ChangeState(System.Data.Objects.ObjectStateEntry,System.Data.EntityState,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.CheckKeyMatchesEntity(System.Object,System.Data.EntityKey,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySetForType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectStateManager.ComplexTypeMaterializer">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DeleteRelationship(System.Data.Metadata.Edm.RelationshipSet,System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey},System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DeleteRelationshipEndFromLookup(System.Data.EntityKey,System.Data.Objects.RelationshipEntry)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.DeleteRelationshipFromLookup(System.Data.Objects.RelationshipEntry)">
    <parameter name="relationship">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FindKeyOnEntityWithRelationships(System.Data.Objects.DataClasses.IEntityWithRelationships)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FindObjectStateEntry(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FindRelationship(System.Data.Metadata.Edm.RelationshipSet,System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey},System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey})">
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FindRelationship(System.Data.Objects.RelationshipWrapper)">
    <parameter name="relationshipWrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.FixupKey(System.Data.Objects.EntityEntry)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetEntityKey(System.Object)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntriesInternal(System.Data.EntityState)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetOrAddStateManagerTypeMetadata(System.Data.Metadata.Edm.EdmType)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.GetOrAddStateManagerTypeMetadata(System.Type,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.PromoteKeyEntry(System.Data.Objects.ObjectStateEntry,System.Object,System.Data.IExtendedDataRecord,System.Boolean,System.Boolean,System.Boolean,System.String)">
    <parameter name="keyEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.PromoteKeyEntryInitialization(System.Data.Objects.ObjectStateEntry,System.Object,System.Data.IExtendedDataRecord,System.Boolean)">
    <parameter name="keyEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveObjectStateEntryFromDictionary(System.Data.Objects.ObjectStateEntry,System.Data.EntityState)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveRelatedEndsAndDetachRelationship(System.Data.Objects.ObjectStateEntry,System.Boolean)">
    <parameter name="relationshipToRemove">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.RemoveRelationships(System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Data.Metadata.Edm.AssociationSet,System.Data.EntityKey,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.ResetEntityKey(System.Data.Objects.ObjectStateEntry,System.Data.EntityKey)">
    <parameter name="entry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.System#Data#IEntityStateManager#FindRelationshipsByKey(System.Data.EntityKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.System#Data#IEntityStateManager#GetEntityStateEntry(System.Data.EntityKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.System#Data#IEntityStateManager#TryGetEntityStateEntry(System.Data.EntityKey,System.Data.IEntityStateEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TrackPromotedRelationship(System.Data.Objects.DataClasses.RelatedEnd,System.Object)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TryGetEntityKey(System.Object,System.Data.EntityKey@)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TryGetEntryFromKeylessStore(System.Object,System.Data.Objects.ObjectStateEntry@)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)">
    <parameter name="entity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.TryUpdateExistingRelationships(System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey,System.Boolean,System.Data.EntityState@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.UnloadReferenceRelatedEnds(System.Data.Objects.ObjectStateManager,System.Data.Objects.RelationshipEntry,System.Data.EntityKey,System.String)">
    <parameter name="cache">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.UpdateRelatedEnd(System.Data.Objects.DataClasses.RelatedEnd,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Boolean,System.Data.Objects.MergeOption)">
    <parameter name="relatedEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectStateManager.UpdateRelationships(System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption,System.Data.Metadata.Edm.AssociationSet,System.Data.Metadata.Edm.AssociationEndMember,System.Data.EntityKey,System.Data.Objects.DataClasses.IEntityWithRelationships,System.Data.Metadata.Edm.AssociationEndMember,System.Collections.IList,System.Boolean)">
    <parameter name="associationSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceEntity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.#ctor(System.Data.Objects.IObjectViewData{`0},System.Object)">
    <parameter name="viewData">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Objects.ObjectView`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#AddIndex(System.ComponentModel.PropertyDescriptor)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#AddNew">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#RemoveIndex(System.ComponentModel.PropertyDescriptor)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.ObjectView`1.System#ComponentModel#IBindingList#SortProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Data#Objects#IObjectView#CollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectView`1.System#Data#Objects#IObjectView#EntityPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewEntityCollectionData`2.#ctor(System.Data.Objects.DataClasses.EntityCollection{`1})">
    <parameter name="entityCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewEntityCollectionData`2.Add(`0,System.Boolean)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewEntityCollectionData`2.OnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs,System.Data.Objects.ObjectViewListener)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectViewEntityCollectionData`2.Remove(`0,System.Boolean)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.CreateObjectView(System.Type,System.Type,System.Object,System.Object)">
    <parameter name="objectViewDataType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.CreateViewForEntityCollection``1(System.Data.Metadata.Edm.EntityType,System.Data.Objects.DataClasses.EntityCollection{``0})">
    <parameter name="entityCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.CreateViewForQuery``1(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.IEnumerable{``0},System.Data.Objects.ObjectContext,System.Boolean,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="objectContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queryResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.GetClrType``1(System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ospaceEdmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewFactory.GetOSpaceTypeUsage(System.Data.Metadata.Edm.TypeUsage,System.Data.Objects.ObjectContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectViewListener.CollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewListener.EntityPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewQueryResultData`1.#ctor(System.Collections.IEnumerable,System.Data.Objects.ObjectContext,System.Boolean,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="queryResults">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewQueryResultData`1.Add(`0,System.Boolean)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.ObjectViewQueryResultData`1.OnCollectionChanged(System.Object,System.ComponentModel.CollectionChangeEventArgs,System.Data.Objects.ObjectViewListener)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="listener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.ObjectViewQueryResultData`1.Remove(`0,System.Boolean)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.#ctor(System.Data.Objects.ObjectStateManager,System.Data.EntityState,System.Data.Objects.RelationshipWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.ChangeRelatedEnd(System.Data.EntityKey,System.Data.EntityKey)">
    <parameter name="oldKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.GetNextRelationshipEnd(System.Data.EntityKey)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipEntry.SetNextRelationshipEnd(System.Data.EntityKey,System.Data.Objects.RelationshipEntry)">
    <parameter name="entityKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.#ctor(System.Data.Metadata.Edm.AssociationSet,System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey},System.Collections.Generic.KeyValuePair{System.String,System.Data.EntityKey})">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.#ctor(System.Data.Metadata.Edm.AssociationSet,System.String,System.Data.EntityKey,System.String,System.Data.EntityKey)">
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.#ctor(System.Data.Objects.RelationshipWrapper,System.Int32,System.Data.EntityKey)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.Equals(System.Data.Objects.RelationshipWrapper)">
    <parameter name="wrapper">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.RelationshipWrapper.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.AddSpanPath(System.Data.Objects.Span.SpanPath)">
    <parameter name="spanPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.Span.Include(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.IncludeIn(System.Data.Objects.Span,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pathToInclude">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.ParsePath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.RemoveExistingSubPaths(System.Data.Objects.Span.SpanPath)">
    <parameter name="spanPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.SpanPath.IsSubPath(System.Data.Objects.Span.SpanPath)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.Span.ValidateSpanPath(System.Data.Objects.Span.SpanPath)">
    <parameter name="spanPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.StateManagerMemberMetadata.#ctor(System.Data.Mapping.ObjectPropertyMapping,System.Data.Metadata.Edm.EdmProperty,System.Boolean)">
    <parameter name="memberMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Objects.StateManagerMemberMetadata.ClrType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Objects.StateManagerTypeMetadata.#ctor(System.Data.Metadata.Edm.EdmType,System.Data.Mapping.ObjectTypeMapping)">
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Objects.StateManagerTypeMetadata.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{})">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.ProviderIncompatibleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.AggregateOp.#ctor(System.Data.Metadata.Edm.EdmFunction,System.Boolean)">
    <parameter name="aggFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ArithmeticOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ComparisonOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ConstantOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ConstantPredicateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CrossApplyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ExceptOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.FullOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.InnerJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.InternalConstantOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.IntersectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.LeftOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.LikeOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.OuterApplyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SoftCastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitAncillaryOpDefault(System.Data.Query.InternalTrees.AncillaryOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitChildren(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitConstantOp(System.Data.Query.InternalTrees.ConstantBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitPhysicalOpDefault(System.Data.Query.InternalTrees.PhysicalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitScalarOpDefault(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitor.VisitTableOp(System.Data.Query.InternalTrees.ScanTableBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfNode.VisitAncillaryOpDefault(System.Data.Query.InternalTrees.AncillaryOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfNode.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfNode.VisitPhysicalOpDefault(System.Data.Query.InternalTrees.PhysicalOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfNode.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfNode.VisitScalarOpDefault(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ArithmeticOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ComparisonOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ConstantOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ConstantPredicateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CrossApplyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ExceptOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.FullOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.InnerJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.InternalConstantOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.IntersectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.LeftOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.LikeOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.OuterApplyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SoftCastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitAncillaryOpDefault(System.Data.Query.InternalTrees.AncillaryOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitChildren(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitConstantOp(System.Data.Query.InternalTrees.ConstantBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitNode(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitPhysicalOpDefault(System.Data.Query.InternalTrees.PhysicalOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitScalarOpDefault(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.BasicOpVisitorOfT`1.VisitTableOp(System.Data.Query.InternalTrees.ScanTableBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMap.Accept``1(System.Data.Query.InternalTrees.ColumnMapVisitor{``0},``0)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMap.Accept``2(System.Data.Query.InternalTrees.ColumnMapVisitorWithResults{``0,``1},``1)">
    <parameter name="visitor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Copy(System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.GetReplacementVar(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.VarMap)">
    <parameter name="originalVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.ComplexTypeColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.DiscriminatedCollectionColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.EntityColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.RecordColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.RefColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.SimpleCollectionColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.SimplePolymorphicColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.VisitList``1(``0[],System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.VisitSortKey(System.Data.Query.InternalTrees.SortKeyInfo,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapCopier.VisitSortKey(System.Data.Query.InternalTrees.SortKeyInfo[],System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeyInfoList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateColumnMapFromReaderAndType(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntitySet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateDiscriminatorColumnMaps(System.Data.Common.DbDataReader,System.Data.Mapping.FunctionImportMapping)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateEntityTypeElementColumnMap(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EntitySet,System.Data.Query.InternalTrees.ColumnMap[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyColumnMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.CreateFunctionImportEntityColumnMap(System.Data.Common.DbDataReader,System.Data.Mapping.FunctionImportMapping,System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.EntityType)">
    <parameter name="mapping">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.GetColumnMapsForType(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.EdmType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="edmType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.GetDiscriminatorOrdinalFromReader(System.Data.Common.DbDataReader,System.String,System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="functionImport">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.GetMemberOrdinalFromReader(System.Data.Common.DbDataReader,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapFactory.TryGetColumnOrdinalFromReader(System.Data.Common.DbDataReader,System.String,System.Int32@)">
    <parameter name="storeDataReader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.ComplexTypeColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.DiscriminatedCollectionColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.EntityColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.RecordColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.RefColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,`0)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.SimpleCollectionColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.SimplePolymorphicColumnMap,`0)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,`0)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.VisitEntityIdentity(System.Data.Query.InternalTrees.DiscriminatedEntityIdentity,`0)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.VisitEntityIdentity(System.Data.Query.InternalTrees.EntityIdentity,`0)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.VisitEntityIdentity(System.Data.Query.InternalTrees.SimpleEntityIdentity,`0)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitor`1.VisitList``1(``0[],`0)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMaps">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.ComplexTypeColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.DiscriminatedCollectionColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.EntityColumnMap,`1)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap,`1)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.RecordColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.RefColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.SimpleCollectionColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.SimplePolymorphicColumnMap,`1)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,`1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.VisitEntityIdentity(System.Data.Query.InternalTrees.DiscriminatedEntityIdentity,`1)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.VisitEntityIdentity(System.Data.Query.InternalTrees.EntityIdentity,`1)">
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMapVisitorWithResults`2.VisitEntityIdentity(System.Data.Query.InternalTrees.SimpleEntityIdentity,`1)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnMD.#ctor(System.Data.Query.InternalTrees.TableMD,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ColumnVar.#ctor(System.Int32,System.Data.Query.InternalTrees.Table,System.Data.Query.InternalTrees.ColumnMD)">
    <parameter name="columnMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.AddRelPropertyReference(System.Data.Query.InternalTrees.RelProperty)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildCollect(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var)">
    <parameter name="relOpVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildComparison(System.Data.Query.InternalTrees.OpType,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <parameter name="arg0">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildOfTypeTree(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var,System.Data.Metadata.Edm.TypeUsage,System.Boolean,System.Data.Query.InternalTrees.Node@,System.Data.Query.InternalTrees.Var@)">
    <parameter name="inputVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildProject(System.Data.Query.InternalTrees.Node,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Node})">
    <parameter name="computedExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildProject(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildUnionAllLadder(System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Collections.Generic.IList{System.Data.Query.InternalTrees.Var},System.Data.Query.InternalTrees.Node@,System.Collections.Generic.IList{System.Data.Query.InternalTrees.Var}@)">
    <parameter name="inputNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.BuildUnionAllLadder(System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Collections.Generic.IList{System.Data.Query.InternalTrees.Var},System.Data.Query.InternalTrees.Node@,System.Data.Query.InternalTrees.Var@)">
    <parameter name="inputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateAggregateOp(System.Data.Metadata.Edm.EdmFunction,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="aggFunc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateArithmeticOp(System.Data.Query.InternalTrees.OpType,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateCaseOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateCastOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateCollectionInfo(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateCollectOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateColumnVar(System.Data.Query.InternalTrees.Table,System.Data.Query.InternalTrees.ColumnMD)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnMD">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateComparisonOp(System.Data.Query.InternalTrees.OpType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateComputedVar(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateConditionalOp(System.Data.Query.InternalTrees.OpType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateConstantOp(System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateConstrainedSortOp(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateConstrainedSortOp(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateDerefOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateDiscriminatedNewEntityOp(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap,System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateDistinctOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateDistinctOp(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateElementOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateExceptOp(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="leftMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateExistsOp">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateFakeTreatOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateFlatTableDefinition(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty},System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyMembers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateFlatTableDefinition(System.Data.Metadata.Edm.RowType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateFunctionOp(System.Data.Metadata.Edm.EdmFunction)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateGetEntityRefOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateGetRefKeyOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateGroupByOp(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateInternalConstantOp(System.Data.Metadata.Edm.TypeUsage,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateIntersectOp(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.VarMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="leftMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateIsOfOnlyOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateIsOfOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateLikeOp">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateMultiStreamNestOp(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.CollectionInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNavigateOp(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.RelProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewEntityOp(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewEntityOp(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Query.InternalTrees.RelProperty},System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewInstanceOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewMultisetOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewRecordOp(System.Data.Metadata.Edm.RowType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewRecordOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNewRecordOp(System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNode(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateNullOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateParameterVar(System.String,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreatePhysicalProjectOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="outputVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreatePhysicalProjectOp(System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.SimpleCollectionColumnMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateProjectOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateProjectOp(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreatePropertyOp(System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateRefOp(System.Data.Metadata.Edm.EntitySet,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateRelPropertyOp(System.Data.Query.InternalTrees.RelProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateScanTableOp(System.Data.Query.InternalTrees.Table)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateScanTableOp(System.Data.Query.InternalTrees.TableMD)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tableMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateScanViewOp(System.Data.Query.InternalTrees.Table)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateScanViewOp(System.Data.Query.InternalTrees.TableMD)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tableMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSetOpVar(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSingleStreamNestOp(System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.CollectionInfo},System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSoftCastOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSortKey(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSortKey(System.Data.Query.InternalTrees.Var,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSortKey(System.Data.Query.InternalTrees.Var,System.Boolean,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateSortOp(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateTableDefinition(System.Data.Metadata.Edm.EntitySetBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="extent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateTableDefinition(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateTableInstance(System.Data.Query.InternalTrees.TableMD)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tableMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateTreatOp(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateUnionAllOp(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.VarMap)">
    <parameter name="leftMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateUnionAllOp(System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.VarMap,System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="leftMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateUnnestOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateUnnestOp(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Table)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarDefListNode(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="definingExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarDefNode(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="definingExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarDefOp(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarList">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarList(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarRefOp(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarVec">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarVec(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarVec(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.CreateVarVec(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.EqualTypes(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetExtendedNodeInfo(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetNodeInfo(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetParameter(System.String)">
    <parameter name="paramName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetParameters(System.Collections.Generic.List{System.Data.Query.InternalTrees.ParameterVar})">
    <parameter name="destList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.GetVarVecEnumerator(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.IsRelPropertyReferenced(System.Data.Query.InternalTrees.RelProperty)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.PullupKeys(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Command.RecomputeNodeInfo(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ConstantBaseOp.IsEquivalent(System.Data.Query.InternalTrees.Op)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoString.#ctor(System.Data.Query.InternalTrees.Dump,System.Data.Query.InternalTrees.Op)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoXml.#ctor(System.Data.Query.InternalTrees.Dump,System.Data.Query.InternalTrees.Op)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoXml.#ctor(System.Data.Query.InternalTrees.Dump,System.Data.Query.InternalTrees.Op,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoXml.#ctor(System.Data.Query.InternalTrees.Dump,System.String)">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nodeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.AutoXml.#ctor(System.Data.Query.InternalTrees.Dump,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nodeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.Begin(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ColumnMapDumper.DumpCollection(System.Data.Query.InternalTrees.CollectionColumnMap,System.Data.Query.InternalTrees.Dump)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dumper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ColumnMapDumper.GetAttributes(System.Data.Query.InternalTrees.ColumnMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.DumpTable(System.Data.Query.InternalTrees.Table)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.DumpVar(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.DumpVars(System.Collections.Generic.List{System.Data.Query.InternalTrees.Var})">
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.FormatVarList(System.Text.StringBuilder,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.FormatVarList(System.Text.StringBuilder,System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ToXml(System.Data.Query.InternalTrees.ColumnMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ToXml(System.Data.Query.InternalTrees.Command)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.ToXml(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="subtree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.VisitNewOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Dump.WriteString(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ExplicitDiscriminatorMap.#ctor(System.Data.Mapping.ViewGeneration.DiscriminatorMap)">
    <parameter name="template">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ExtendedNodeInfo.#ctor(System.Data.Query.InternalTrees.Command)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.ExtendedNodeInfo.InitRowCountFrom(System.Data.Query.InternalTrees.ExtendedNodeInfo)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.FunctionOp.#ctor(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.#ctor(System.Data.Query.InternalTrees.Command)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="varSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Boolean)">
    <parameter name="varSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Collections.Generic.List{System.Data.Query.InternalTrees.KeyVec})">
    <parameter name="keyVecList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Data.Query.InternalTrees.KeyVec)">
    <parameter name="keyset">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.KeyVec.InitFrom(System.Data.Query.InternalTrees.KeyVec,System.Data.Query.InternalTrees.KeyVec)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.MultipleDiscriminatorPolymorphicColumnMap.Accept``2(System.Data.Query.InternalTrees.ColumnMapVisitorWithResults{``0,``1},``1)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NewRecordOp.#ctor(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.#ctor(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node[])">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.GetExtendedNodeInfo(System.Data.Query.InternalTrees.Command)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.GetNodeInfo(System.Data.Query.InternalTrees.Command)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.InitializeNodeInfo(System.Data.Query.InternalTrees.Command)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Node.IsEquivalent(System.Data.Query.InternalTrees.Node)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfo.#ctor(System.Data.Query.InternalTrees.Command)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfo.ComputeHashValue(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="cmd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfo.GetHashValue(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.ComputeNodeInfo(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.ComputeVarRemappings(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varDefListNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.GetExtendedNodeInfo(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.GetNodeInfo(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.InitExtendedNodeInfo(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.InitNodeInfo(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.NodeInfoVisitor.VisitTableOp(System.Data.Query.InternalTrees.ScanTableBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Op.Accept(System.Data.Query.InternalTrees.BasicOpVisitor,System.Data.Query.InternalTrees.Node)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Op.Accept``1(System.Data.Query.InternalTrees.BasicOpVisitorOfT{``0},System.Data.Query.InternalTrees.Node)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.Op.IsEquivalent(System.Data.Query.InternalTrees.Op)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.ColumnMap)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.Command,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.VarList@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarMap@)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.SortKey)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Copy(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.CopyDefault(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.CopyNode(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.CopySetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.GetMappedVar(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.MapTable(System.Data.Query.InternalTrees.Table,System.Data.Query.InternalTrees.Table)">
    <parameter name="newTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.ProcessChildren(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.SetMappedVar(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ArithmeticOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CastOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ComparisonOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ConstantOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ConstantPredicateOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CrossApplyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ExceptOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.FullOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.InnerJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.InternalConstantOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.IntersectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.LeftOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.LikeOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.OuterApplyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SoftCastOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.OpCopier.VisitNestOp(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.PatternMatchRule.#ctor(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Rule.ProcessNodeDelegate)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.PatternMatchRule.Match(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RelProperty.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RelPropertyHelper.#ctor(System.Data.Metadata.Edm.MetadataWorkspace,System.Collections.Generic.HashSet{System.Data.Query.InternalTrees.RelProperty})">
    <parameter name="ws">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RelPropertyHelper.AddRelProperty(System.Data.Metadata.Edm.AssociationType,System.Data.Metadata.Edm.AssociationEndMember,System.Data.Metadata.Edm.AssociationEndMember)">
    <parameter name="fromEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toEnd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Rule.Match(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.GetHashCode(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.PostProcess(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Rule)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.PreProcess(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessingContext.PreProcessSubTree(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessor.ApplyRulesToNode(System.Data.Query.InternalTrees.RuleProcessingContext,System.Collections.ObjectModel.ReadOnlyCollection{System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Query.InternalTrees.Rule}},System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessor.ApplyRulesToSubtree(System.Data.Query.InternalTrees.RuleProcessingContext,System.Collections.ObjectModel.ReadOnlyCollection{System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Query.InternalTrees.Rule}},System.Data.Query.InternalTrees.Node)">
    <parameter name="subTreeRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.RuleProcessor.ApplyRulesToSubtree(System.Data.Query.InternalTrees.RuleProcessingContext,System.Collections.ObjectModel.ReadOnlyCollection{System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Query.InternalTrees.Rule}},System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Int32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="subTreeRoot">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.InternalTrees.StructuredColumnMap.NullSentinel">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.SubTreeId.#ctor(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Int32)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.SubTreeId.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.Table.#ctor(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.TableMD,System.Int32)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableMetadata">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.TableMD.#ctor(System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmProperty},System.Collections.Generic.IEnumerable{System.Data.Metadata.Edm.EdmMember},System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.TableMD.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarList.#ctor(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarMap.GetReverseMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarRefColumnMap.#ctor(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarRefOp.#ctor(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarRefOp.IsEquivalent(System.Data.Query.InternalTrees.Op)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Align(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.And(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Clear(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.Query.InternalTrees.VarVec.First">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.InitFrom(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.InitFrom(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Boolean)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.InitFrom(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.IsSet(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Minus(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Or(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Overlaps(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Remap(System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Set(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.Subsumes(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.VarVecEnumerator.#ctor(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.InternalTrees.VarVec.VarVecEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.InternalTrees.VarVec.VarVecEnumerator.Init(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.InternalTrees.VarVec.VarVecEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.CanRewriteApply(System.Data.Query.InternalTrees.ExtendedNodeInfo,System.Data.Query.InternalTrees.OpType)">
    <parameter name="applyRightChildNodeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessApplyIntoScalarSubquery(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessApplyOverAnything(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessApplyOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessCrossApplyOverLeftOuterJoinOverSingleRowTable(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessCrossApplyOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessOuterApplyOverDummyProjectOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ApplyOpRules.ProcessOuterApplyOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AugmentedJoinNode.#ctor(System.Int32,System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.PlanCompiler.AugmentedNode})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AugmentedNode.#ctor(System.Int32,System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.PlanCompiler.AugmentedNode})">
    <parameter name="children">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.AugmentedTableNode.#ctor(System.Int32,System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CodeGen.BuildResultColumnMap(System.Data.Query.InternalTrees.PhysicalProjectOp)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="projectOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CodeGen.BuildVarMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.#ctor(System.Data.Query.InternalTrees.VarRefColumnMap,System.Data.Query.PlanCompiler.VarInfo,System.Data.Query.PlanCompiler.StructuredTypeInfo)">
    <parameter name="varInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.BuildRelPropertyColumnMaps(System.Data.Query.PlanCompiler.TypeInfo,System.Boolean)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateColumnMap(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateComplexTypeColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String,System.Data.Query.InternalTrees.ComplexTypeColumnMap,System.Collections.Generic.Dictionary{System.Object,System.Data.Query.InternalTrees.TypedColumnMap},System.Collections.Generic.List{System.Data.Query.InternalTrees.TypedColumnMap})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateEntityColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String,System.Data.Query.InternalTrees.EntityColumnMap,System.Collections.Generic.Dictionary{System.Object,System.Data.Query.InternalTrees.TypedColumnMap},System.Collections.Generic.List{System.Data.Query.InternalTrees.TypedColumnMap},System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateEntityIdentity(System.Data.Metadata.Edm.EntityType,System.Data.Query.InternalTrees.SimpleColumnMap,System.Data.Query.InternalTrees.SimpleColumnMap[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateEntitySetIdColumnMap(System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreatePolymorphicColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateRecordColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateRefColumnMap(System.Data.Query.PlanCompiler.TypeInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateSimpleColumnMap(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateStructuralColumnMap(System.Data.Metadata.Edm.TypeUsage,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.CreateTypeIdColumnMap(System.Data.Metadata.Edm.EdmProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.ExpandColumnMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapProcessor.GetNextVar">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.GetReplacementVar(System.Data.Query.InternalTrees.Var,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <parameter name="originalVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementVarMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Translate(System.Data.Query.InternalTrees.ColumnMap,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="columnMapToTranslate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varToCommandColumnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Translate(System.Data.Query.InternalTrees.ColumnMap,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.ColumnMap})">
    <parameter name="columnMapToTranslate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varToColumnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Translate(System.Data.Query.InternalTrees.ColumnMap,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <parameter name="columnMapToTranslate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Translate(System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.PlanCompiler.ColumnMapTranslatorTranslationDelegate)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translationDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Visit(System.Data.Query.InternalTrees.ScalarColumnMap,System.Data.Query.PlanCompiler.ColumnMapTranslatorTranslationDelegate)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.Visit(System.Data.Query.InternalTrees.VarRefColumnMap,System.Data.Query.PlanCompiler.ColumnMapTranslatorTranslationDelegate)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ColumnMapTranslator.VisitList``1(``0[],System.Data.Query.PlanCompiler.ColumnMapTranslatorTranslationDelegate)">
    <parameter name="tList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translationDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ConstrainedSortOpRules.ProcessConstrainedSortOpOverEmptySet(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ConstraintManager.IsBinary(System.Data.Metadata.Edm.RelationshipType)">
    <parameter name="relationshipType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ConstraintManager.IsParentChildRelationship(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntitySetBase,System.Collections.Generic.List{System.Data.Query.PlanCompiler.ForeignKeyConstraint}@)">
    <parameter name="table1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="table2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ConstraintManager.LoadRelationships(System.Data.Metadata.Edm.EntityContainer)">
    <parameter name="entityContainer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.#ctor(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toConvert">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.AssertBinary(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.AssertRelOp(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.BuildEmptyProjection(System.Data.Query.InternalTrees.Node)">
    <parameter name="relOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.BuildProjection(System.Data.Query.InternalTrees.Node,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="relOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectionVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.ConsumeRelOp(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.CreateLimitExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="limit">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.CreateProject(System.Data.Query.PlanCompiler.CTreeGenerator.RelOpInfo,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sourceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterExpressionBindingScope(System.Data.Query.InternalTrees.Node)">
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterExpressionBindingScope(System.Data.Query.InternalTrees.Node,System.Boolean)">
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterVarDefListScope(System.Data.Query.InternalTrees.Node)">
    <parameter name="varDefListNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.EnterVarDefScope(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <parameter name="varDefNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Generate(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toConvert">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.GenerateNameForVar(System.Data.Query.InternalTrees.Var,System.Collections.Generic.Dictionary{System.String,System.Data.Common.Utils.AliasGenerator},System.Data.Common.Utils.AliasGenerator,System.Collections.Generic.Dictionary{System.String,System.String})">
    <parameter name="projectedVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="aliasMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="defaultAliasGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="alreadyUsedNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.GetTableVars(System.Data.Query.InternalTrees.Table)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.IqtVarScope.TryResolveVar(System.Data.Query.InternalTrees.Var,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="targetVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.PublishRelOp(System.String,System.Data.Common.CommandTrees.DbExpression,System.Data.Query.PlanCompiler.CTreeGenerator.VarInfoList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.RelOpInfo.#ctor(System.String,System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Query.PlanCompiler.CTreeGenerator.VarInfo})">
    <parameter name="publisher">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.RelOpInfo.CreateBinding">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.RelOpInfo.TryResolveVar(System.Data.Query.InternalTrees.Var,System.Data.Common.CommandTrees.DbExpression@)">
    <parameter name="targetVar">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.ResolveVar(System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="referencedVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VarInfoList.#ctor(System.Collections.Generic.IEnumerable{System.Data.Query.PlanCompiler.CTreeGenerator.VarInfo})">
    <parameter name="elements">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.AggregateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CastOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ConstantOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ConstantPredicateOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CrossApplyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.CrossJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ExceptOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.FullOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.InnerJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.InternalConstantOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.IntersectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.LeftOuterJoinOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.LikeOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.OuterApplyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SingleRowTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SoftCastOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitApply(System.Data.Query.InternalTrees.Node,System.Data.Common.CommandTrees.DbExpressionKind)">
    <parameter name="applyNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitBinaryJoin(System.Data.Query.InternalTrees.Node,System.Data.Common.CommandTrees.DbExpressionKind)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitChild(System.Data.Query.InternalTrees.Node,System.Int32)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitChildren(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitConstantOp(System.Data.Query.InternalTrees.ConstantBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitJoinInput(System.Data.Query.InternalTrees.Node)">
    <parameter name="joinInputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitProject(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.CTreeGenerator.VarInfoList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="publishedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitSetOpArgument(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarMap)">
    <parameter name="argNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.CTreeGenerator.VisitSortKeys(System.Collections.Generic.IList{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.DiscriminatorMapInfo.Merge(System.Data.Metadata.Edm.EntityTypeBase,System.Boolean,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap)">
    <parameter name="neededRootEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.DistinctOpRules.ProcessDistinctOpOfKeys(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ExtentPair.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.GetPushdownPredicate(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Node@)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverDistinct(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverGroupBy(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverJoin(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverOuterApply(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterOverSetOp(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filterNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.FilterOpRules.ProcessFilterWithConstantPredicate(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ForeignKeyConstraint.#ctor(System.Data.Metadata.Edm.RelationshipType,System.Data.Metadata.Edm.RelationshipSet,System.Data.Metadata.Edm.ReferentialConstraint)">
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="constraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ForeignKeyConstraint.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ForeignKeyConstraint.GetParentProperty(System.String,System.String@)">
    <parameter name="childPropertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.ProcessGroupByOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.ProcessGroupByWithSimpleVarRedefinitions(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefReplacer.Replace(System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Command)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefReplacer.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefUsageFinder.#ctor(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Command)">
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefUsageFinder.AnyVarUsedMoreThanOnce(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Command)">
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.GroupByOpRules.VarRefUsageFinder.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.#ctor(System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Mapping.ViewGeneration.DiscriminatorMap)">
    <parameter name="ctree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.BuildEntityRef(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.BuildSoftCast(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EdmType)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.BuildSoftCast(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CapWithPhysicalProject(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CapWithProject(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ConvertToScalarOpTree(System.Data.Query.InternalTrees.Node,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CqtVariableScope.Contains(System.String)">
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.ITreeGenerator.CqtVariableScope.Item(System.String)">
    <parameter name="varName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CreateLimitNode(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.CreateNewInstanceArgument(System.Data.Metadata.Edm.EdmMember,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.EnsureRelOp(System.Data.Query.InternalTrees.Node)">
    <parameter name="inputNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.EnterExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.EnterGroupExpressionBinding(System.Data.Common.CommandTrees.DbGroupExpressionBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.EnterLambdaFunction(System.Data.Metadata.Edm.EdmFunction,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExitExpressionBinding">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExitLambdaFunction">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExpressionBindingScope.Contains(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.ITreeGenerator.ExpressionBindingScope.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ExtractElementRowType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Generate(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <parameter name="ctree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Generate(System.Data.Common.CommandTrees.DbQueryCommandTree,System.Data.Mapping.ViewGeneration.DiscriminatorMap)">
    <parameter name="ctree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.GenerateDiscriminatedProject(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.GenerateStandardProject(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.InitializeExpressionKindToOpTypeMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.IsPredicate(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.LambdaScope.#ctor(System.Data.Query.PlanCompiler.ITreeGenerator,System.Data.Query.InternalTrees.Command,System.Collections.Generic.Dictionary{System.String,System.Data.Query.InternalTrees.Node})">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.LambdaScope.MapCopiedNodeVars(System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Collections.Generic.IList{System.Data.Query.InternalTrees.Node},System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <parameter name="sources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="copies">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varMappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.ProjectNewRecord(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.RowType,System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="colVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbJoinExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbNotExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitBinary(System.Data.Common.CommandTrees.DbBinaryExpression,System.Data.Query.InternalTrees.Op,System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprDelegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExpr(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprDelegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="exprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExpr(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprAsPredicate(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprAsScalar(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="exprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprAsScalar(System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitJoin(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding},System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitSetOpExpression(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitSortArguments(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause},System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortOrder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ITreeGenerator.VisitUnary(System.Data.Common.CommandTrees.DbUnaryExpression,System.Data.Query.InternalTrees.Op,System.Data.Query.PlanCompiler.ITreeGenerator.VisitExprDelegate)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="exprDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinEdge.#ctor(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Data.Query.PlanCompiler.JoinKind,System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar})">
    <parameter name="leftVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinEdge.CreateJoinEdge(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Data.Query.InternalTrees.ColumnVar,System.Data.Query.InternalTrees.ColumnVar)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinEdge.CreateTransitiveJoinEdge(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.JoinKind,System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rightVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.NeedsJoinGraph(System.Data.Query.InternalTrees.Node)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.Process(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.ProcessJoinGraph(System.Data.Query.InternalTrees.Node)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.VisitDefaultForAllNodes(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinElimination.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.#ctor(System.Data.Query.InternalTrees.Command,System.Data.Query.PlanCompiler.ConstraintManager,System.Data.Query.PlanCompiler.VarRefManager,System.Data.Query.InternalTrees.Node)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.AddJoinEdge(System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Data.Query.InternalTrees.ColumnVar,System.Data.Query.InternalTrees.ColumnVar)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.BuildAugmentedNodeTree(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.BuildJoinEdges(System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Int32)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.BuildJoinEdges(System.Data.Query.PlanCompiler.AugmentedNode,System.Int32)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.CanBeEliminated(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacingTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.CanBeMoved(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="replacingTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.ChildTableHasKeyReferences(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.ClassifyPredicate(System.Int32,System.Data.Query.InternalTrees.Node,System.Int32,System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Node,System.Int32})">
    <parameter name="predicateNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outPredicates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateChildTable(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateParentChildJoin(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateParentChildJoins(System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateParentTable(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateSelfJoin(System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateSelfJoinedTable(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateSelfJoins(System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateStarSelfJoin(System.Collections.Generic.List{System.Data.Query.PlanCompiler.JoinEdge})">
    <parameter name="joinEdges">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.EliminateStarSelfJoins(System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GenerateTransitiveEdge(System.Data.Query.PlanCompiler.JoinEdge,System.Data.Query.PlanCompiler.JoinEdge)">
    <parameter name="edge1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="edge2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GetColumnVars(System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar},System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="columnVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GetColumnVars(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varVec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GetLeastCommonAncestor(System.Data.Query.PlanCompiler.AugmentedNode,System.Data.Query.PlanCompiler.AugmentedNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.GetLocationId(System.Data.Query.InternalTrees.Var,System.Int32)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.HasNonKeyReferences(System.Data.Query.InternalTrees.Table)">
    <parameter name="table">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.MarkTableAsEliminated``1(System.Data.Query.PlanCompiler.AugmentedTableNode,System.Data.Query.PlanCompiler.AugmentedTableNode,System.Collections.Generic.List{``0},System.Collections.Generic.List{``0})">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="replacementNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.PickSubtree(System.Int32,System.Data.Query.PlanCompiler.AugmentedNode)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="root">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildNodeTree(System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Node,System.Int32}@)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildNodeTree(System.Data.Query.PlanCompiler.AugmentedNode,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Node,System.Int32}@)">
    <parameter name="augmentedNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildNodeTree(System.Data.Query.PlanCompiler.AugmentedTableNode)">
    <parameter name="tableNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildNodeTreeForCrossJoins(System.Data.Query.PlanCompiler.AugmentedJoinNode)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.RebuildPredicate(System.Data.Query.PlanCompiler.AugmentedJoinNode,System.Int32@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.SingleTableVars(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.ColumnVar})">
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.SplitPredicate(System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar}@,System.Collections.Generic.List{System.Data.Query.InternalTrees.ColumnVar}@,System.Data.Query.InternalTrees.Node@)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinGraph.TryEliminateParentChildJoin(System.Data.Query.PlanCompiler.JoinEdge,System.Data.Query.PlanCompiler.ForeignKeyConstraint)">
    <parameter name="joinEdge">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fkConstraint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinOpRules.ProcessJoinOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinOpRules.ProcessJoinOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.JoinOpRules.ProcessJoinOverSingleRowTable(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="joinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.KeyPullup.GetKeys(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestedPropertyRef.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.#ctor(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ApplyOpJoinOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.AugmentNodeWithInternalConstant(System.Data.Query.InternalTrees.Node,System.Int32,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.BuildSortForNestElimination(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="nestNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ssnOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.BuildSortKeyList(System.Data.Query.InternalTrees.SingleStreamNestOp)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="ssnOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.CapWithIsNotNullFilter(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ConsolidateSortKeys(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortKeyList1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKeyList2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ConvertToNestOpInput(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var,System.Collections.Generic.List{System.Data.Query.InternalTrees.CollectionInfo},System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="physicalProjectNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionInfoList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="externalReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="collectionReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ConvertToSingleStreamNest(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.ColumnMap},System.Data.Query.InternalTrees.VarList@,System.Data.Query.InternalTrees.SimpleColumnMap[]@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nestNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varRefReplacementMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.CopyCollectionVarDefinition(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="refVarDefiningNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.EnsureReferencedVarsAreRemapped(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <parameter name="referencedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.EnsureReferencedVarsAreRemoved(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Data.Query.InternalTrees.VarVec)">
    <parameter name="referencedVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.GetNestOpWithConsolidatedSortKeys(System.Data.Query.InternalTrees.NestBaseOp,System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputNestOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.GetUnionOutputs(System.Data.Query.InternalTrees.UnionAllOp,System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="unionOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.IsNestOpNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.MergeNestedNestOps(System.Data.Query.InternalTrees.Node)">
    <parameter name="nestNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.NestingNotSupported(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.NormalizeNestOpInputs(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarList@,System.Collections.Generic.List{System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey}}@)">
    <parameter name="nestOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nestNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Process(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ProjectOpCase1(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ProjectOpCase2(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.RemapSortKeys(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.RemapVarList(System.Data.Query.InternalTrees.VarList,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.RemapVarVec(System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.ResolveVarReference(System.Data.Query.InternalTrees.Var)">
    <parameter name="refVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.UpdateReplacementVarMap(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var},System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="fromVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.SingleRowOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.VarDefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NestPullup.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.BuildAccessor(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.BuildAccessorWithNulls(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.BuildSoftCast(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.BuildTypeIdAccessor(System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Copy(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateDisjunctiveTypeComparisonOp(System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateNullConstantNode(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateNullSentinelConstant">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateTypeComparisonOp(System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.TypeInfo,System.Boolean)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateTypeEqualsOp(System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateTypeIdConstant(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.CreateTypeIdConstantForPrefixMatch(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.EliminateInternalConstantAndNullGroupByKeys(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.ExpandColumnMap(System.Data.Query.InternalTrees.SimpleCollectionColumnMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FixupSetOpChild(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarMap,System.Collections.Generic.List{System.Data.Query.InternalTrees.ComputedVar})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenCaseOp(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.PlanCompiler.PropertyRefList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="desiredProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenComputedVar(System.Data.Query.InternalTrees.ComputedVar,System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node}@,System.Data.Metadata.Edm.TypeUsage@)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenConstructor(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenGetKeyOp(System.Data.Query.InternalTrees.ScalarOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenSetOpVar(System.Data.Query.InternalTrees.SetOpVar)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenVarList(System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenVarMap(System.Data.Query.InternalTrees.VarMap,System.Collections.Generic.List{System.Data.Query.InternalTrees.ComputedVar}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.FlattenVarSet(System.Data.Query.InternalTrees.VarVec)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetEntitySetIdExpr(System.Data.Metadata.Edm.EdmProperty,System.Data.Query.InternalTrees.NewEntityBaseOp)">
    <parameter name="entitySetIdProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetNewType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetPropertyRefs(System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.PlanCompiler.NominalTypeEliminator.OperationKind)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetPropertyValue(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EdmProperty,System.Boolean)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetPropertyValues(System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.PlanCompiler.NominalTypeEliminator.OperationKind,System.Data.Query.InternalTrees.Node,System.Boolean,System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty}@,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node}@)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.GetSingletonVar(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.HandleSortKeys(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.NormalizeTypeDiscriminatorValues(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Process(System.Data.Query.PlanCompiler.PlanCompiler,System.Data.Query.PlanCompiler.StructuredTypeInfo)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.TryRewriteCaseOp(System.Data.Query.InternalTrees.Node,System.Boolean,System.Data.Query.InternalTrees.Node@)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.ConstrainedSortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.GetRefKeyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NewInstanceOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NewMultisetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NewRecordOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.NullOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.RelPropertyOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.VisitPropertyOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.NominalTypeEliminator.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.OpCopierTrackingCollectionVars.Copy(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarMap@,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node}@)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PlanCompiler.SwitchToPhase(System.Data.Query.PlanCompiler.PlanCompilerPhase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PlanCompilerUtil.IsRowTypeCaseOpWithNullability(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node,System.Boolean@)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.GetEquiJoinPredicates(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var}@,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var}@,System.Data.Query.PlanCompiler.Predicate@)">
    <parameter name="rightTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.GetJoinPredicates(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.PlanCompiler.Predicate@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rightTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.GetSingleTablePredicates(System.Collections.Generic.List{System.Data.Query.InternalTrees.VarVec},System.Collections.Generic.List{System.Data.Query.PlanCompiler.Predicate}@,System.Data.Query.PlanCompiler.Predicate@)">
    <parameter name="tableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.InitFromAndTree(System.Data.Query.InternalTrees.Node)">
    <parameter name="andTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.IsEquiJoinPredicate(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@,System.Data.Query.InternalTrees.Var@)">
    <parameter name="simplePredicateNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.IsEquiJoinPredicate(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Var@,System.Data.Query.InternalTrees.Var@)">
    <parameter name="leftTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rightTableDefinitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="simplePredicateNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.IsKeyPredicate(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Var@)">
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.PreservesNulls(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="simplePredNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tableColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.PreservesNulls(System.Data.Query.InternalTrees.VarVec,System.Boolean)">
    <parameter name="tableColumns">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.Predicate.SatisfiesKey(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="keyVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="definitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AddEntitySetReference(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AddSubqueryToParentRelOp(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node)">
    <parameter name="subquery">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AddSubqueryToRelOpNode(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <parameter name="relOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AddTypeReference(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AreAllConstantsOrNulls(System.Collections.Generic.List{System.Data.Query.InternalTrees.Node})">
    <parameter name="nodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.AugmentWithSubqueries(System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.InternalTrees.Node},System.Boolean)">
    <parameter name="subqueries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildDummyProjectForExists(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildJoinForNavProperty(System.Data.Metadata.Edm.RelationshipSet,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Query.InternalTrees.Var@,System.Data.Query.InternalTrees.Var@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="end">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildKeyExpressionForNewEntityOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildOfTypeTable(System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.Var@)">
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildRelPropertyExpression(System.Data.Metadata.Edm.EntitySetBase,System.Data.Query.InternalTrees.RelProperty,System.Data.Query.InternalTrees.Node)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="keyExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.BuildUnnest(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="collectionNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.CanRewriteTypeTest(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="testType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ConvertToInternalTree(System.Data.Mapping.ViewGeneration.GeneratedView)">
    <parameter name="generatedView">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.DetermineDiscriminatorMapUsage(System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.EntitySetBase,System.Data.Metadata.Edm.EntityTypeBase,System.Boolean)">
    <parameter name="viewNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootEntityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ExpandView(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.IsOfOp@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="scanTableOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.FindPosition(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmMember)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.FindRelationshipSet(System.Data.Metadata.Edm.EntitySetBase,System.Data.Query.InternalTrees.RelProperty)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="entitySet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.FindRelOpAncestor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.FindTargetEntitySet(System.Data.Metadata.Edm.RelationshipSet,System.Data.Metadata.Edm.RelationshipEndMember)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="relationshipSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.GetDefiningQueryForSSpaceSet(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.ScanTableOp)">
    <parameter name="scanTableOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.GetEntitySets(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.GetRelationshipSets(System.Data.Metadata.Edm.RelationshipType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.HandleTableOpMetadata(System.Data.Query.InternalTrees.ScanTableBaseOp)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.IsCollectionAggregateFunction(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.IsCollectionFunction(System.Data.Query.InternalTrees.FunctionOp)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.IsOfTypeOverScanTable(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.IsOfOp@)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Process(System.Data.Query.PlanCompiler.PlanCompiler,System.Data.Query.PlanCompiler.StructuredTypeInfo@)">
    <parameter name="planCompilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ProcessScanTable(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.IsOfOp@)">
    <parameter name="scanTableOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteDerefOp(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.DerefOp,System.Data.Query.InternalTrees.Var@)">
    <parameter name="derefOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="derefOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteIsOfAsIsNull(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteManyToManyNavigationProperty(System.Data.Query.InternalTrees.RelProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.RelationshipSet},System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipSets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceRefNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteNavigateOp(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.NavigateOp,System.Data.Query.InternalTrees.Var@)">
    <parameter name="navigateOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="navigateOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteNavigationProperty(System.Data.Metadata.Edm.NavigationProperty,System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="navProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteOneToManyNavigationProperty(System.Data.Query.InternalTrees.RelProperty,System.Collections.Generic.List{System.Data.Metadata.Edm.RelationshipSet},System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="relationshipSets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceRefNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.RewriteToOneNavigationProperty(System.Data.Query.InternalTrees.RelProperty,System.Data.Query.InternalTrees.Node,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.ValidateNavPropertyOp(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.ConditionalOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.DiscriminatedNewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.NewEntityOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.RefOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.ScanViewOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.SortOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitCollectionAggregateFunction(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitCollectionFunction(System.Data.Query.InternalTrees.FunctionOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitNavPropertyOp(System.Data.Query.InternalTrees.PropertyOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PreProcessor.VisitRelOpDefault(System.Data.Query.InternalTrees.RelOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.#ctor(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.AddReference(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Var})">
    <parameter name="varSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.AddReference(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.ColumnMapVarTracker.FindVars(System.Data.Query.InternalTrees.ColumnMap,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.IsReferenced(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.IsUnreferenced(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Process(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Process(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Process(System.Data.Query.PlanCompiler.PlanCompiler,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.PruneVarMap(System.Data.Query.InternalTrees.VarMap)">
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.PruneVarSet(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="varSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.DistinctOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.ExistsOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.FilterOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.GroupByOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.VarDefListOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.Visit(System.Data.Query.InternalTrees.VarRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitApplyOp(System.Data.Query.InternalTrees.ApplyBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitSetOp(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectionPruner.VisitSortOp(System.Data.Query.InternalTrees.SortBaseOp,System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectOpRules.ProcessProjectOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectOpRules.ProcessProjectWithNoLocalDefinitions(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProjectOpRules.ProcessProjectWithSimpleVarRedefinitions(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.AddPropertyRefs(System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.PropertyRefList)">
    <parameter name="propertyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.AddPropertyRefs(System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.PropertyRefList)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.GetIdentityProperties(System.Data.Metadata.Edm.EntityType)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.GetKeyProperties(System.Data.Metadata.Edm.EntityType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.GetPropertyRefList(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.GetPropertyRefList(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Process(System.Data.Query.InternalTrees.Command,System.Data.Query.PlanCompiler.StructuredTypeInfo,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.PropertyRefList}@,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.PropertyRefList}@)">
    <parameter name="itree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Process(System.Data.Query.InternalTrees.Node)">
    <parameter name="rootNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.CollectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.ComparisonOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.ElementOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.GetEntityRefOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.IsOfOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.MultiStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.ProjectOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.ScanTableOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.SingleStreamNestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.TreatOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.Visit(System.Data.Query.InternalTrees.UnnestOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.VisitJoinOp(System.Data.Query.InternalTrees.JoinBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyPushdownHelper.VisitPropertyOp(System.Data.Query.InternalTrees.Op,System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRef.CreateNestedPropertyRef(System.Data.Metadata.Edm.EdmMember)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRef.CreateNestedPropertyRef(System.Data.Query.InternalTrees.RelProperty)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRef.CreateNestedPropertyRef(System.Data.Query.PlanCompiler.PropertyRef)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRefList.Add(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRefList.Append(System.Data.Query.PlanCompiler.PropertyRefList)">
    <parameter name="propertyRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRefList.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.PropertyRefList.Contains(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.PropertyRefList.Properties">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProviderCommandInfoUtils.BuildOutputVarMap(System.Data.Query.InternalTrees.PhysicalProjectOp,System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="projectOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProviderCommandInfoUtils.Create(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ProviderCommandInfoUtils.Create(System.Data.Query.InternalTrees.Command,System.Data.Query.InternalTrees.Node,System.Collections.Generic.List{System.Data.Query.PlanCompiler.ProviderCommandInfo})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="command">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RelPropertyRef.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RootTypeInfo.#ctor(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RootTypeInfo.AddPropertyMapping(System.Data.Query.PlanCompiler.PropertyRef,System.Data.Metadata.Edm.EdmProperty)">
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RootTypeInfo.GetNestedStructureOffset(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.RootTypeInfo.GetNewProperty(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.MatchesPattern(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessAndOverConstantPredicate1(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessAndOverConstantPredicate2(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessCase(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="caseOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessCase_Collapse(System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="caseOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessCase_EliminateWhenClauses(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.CaseOp,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="caseOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessComparisonsOverConstant(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessIsNullOverConstant(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessIsNullOverNull(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessLikeOverConstant(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessLogOpOverConstant(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessNotOverConstantPredicate(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessNullCast(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="castNullOp">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessOrOverConstantPredicate1(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScalarOpRules.ProcessOrOverConstantPredicate2(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScopedVarRemapper.AddMapping(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node)">
    <parameter name="hidingScopeNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScopedVarRemapper.RemapSubtreeUsingBaseRemapNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="subTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScopedVarRemapper.TryGetHiddenMappingKey(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Var@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.ScopedVarRemapper.VisitHonoringHiding(System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.VarRemapper.VisitNodeDelegate)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="visitMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SetOpRules.ProcessSetOpOverFilter(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Int32,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SetOpRules.ProcessSetOpOverFilter0(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="setOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SetOpRules.ProcessSetOpOverFilter1(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="setOpNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SimplePropertyRef.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SingleRowOpRules.ProcessSingleRowOpOverAnything(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="singleRowNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SingleRowOpRules.ProcessSingleRowOpOverProject(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="singleRowNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.SortOpRules.ProcessSortOpOverAtMostOneRow(System.Data.Query.InternalTrees.RuleProcessingContext,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node@)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AddEntityTypeToSetEntry(System.Data.Metadata.Edm.EntityType,System.Data.Metadata.Edm.EntitySet)">
    <parameter name="entityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AddRelProperties(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AssignEntitySetIds(System.Collections.Generic.List{System.Data.Metadata.Edm.EntitySet})">
    <parameter name="referencedEntitySets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AssignRootTypeId(System.Data.Query.PlanCompiler.TypeInfo,System.String)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AssignTypeId(System.Data.Query.PlanCompiler.TypeInfo,System.Int32)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.AssignTypeIdsToSubTypes(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.CreateFlattenedRecordType(System.Data.Query.PlanCompiler.RootTypeInfo)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.CreateTypeInfoForStructuredType(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.CreateTypeInfoForType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ExplodeRootStructuredType(System.Data.Query.PlanCompiler.RootTypeInfo)">
    <parameter name="rootType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ExplodeRootStructuredTypeHelper(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ExplodeType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ExplodeType(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetEntitySet(System.Data.Metadata.Edm.EntityTypeBase)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetEntitySetId(System.Data.Metadata.Edm.EntitySet)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetNewType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetPropertyType(System.Data.Query.PlanCompiler.RootTypeInfo,System.Data.Query.PlanCompiler.PropertyRef)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetRootType(System.Data.Metadata.Edm.EntityTypeBase)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.GetTypeInfo(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.NeedsEntitySetIdProperty(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.NeedsNullSentinelProperty(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.NeedsTypeIdProperty(System.Data.Query.PlanCompiler.TypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.PopulateTypeInfoMap(System.Collections.Generic.List{System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="referencedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.Process(System.Data.Query.InternalTrees.Command,System.Collections.Generic.List{System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.List{System.Data.Metadata.Edm.EntitySet},System.Collections.Generic.List{System.Data.Metadata.Edm.EntityType},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Query.PlanCompiler.DiscriminatorMapInfo},System.Data.Query.InternalTrees.RelPropertyHelper)">
    <parameter name="referencedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="freeFloatingEntityConstructorTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referencedEntitySets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.Process(System.Data.Query.InternalTrees.Command,System.Collections.Generic.List{System.Data.Metadata.Edm.TypeUsage},System.Collections.Generic.List{System.Data.Metadata.Edm.EntitySet},System.Collections.Generic.List{System.Data.Metadata.Edm.EntityType},System.Collections.Generic.Dictionary{System.Data.Metadata.Edm.EntitySetBase,System.Data.Query.PlanCompiler.DiscriminatorMapInfo},System.Data.Query.InternalTrees.RelPropertyHelper,System.Collections.Generic.HashSet{System.String},System.Data.Query.PlanCompiler.StructuredTypeInfo@)">
    <parameter name="freeFloatingEntityConstructorTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referencedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referencedEntitySets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ProcessEntitySets(System.Collections.Generic.List{System.Data.Metadata.Edm.EntitySet},System.Collections.Generic.List{System.Data.Metadata.Edm.EntityType})">
    <parameter name="referencedEntitySets">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="freeFloatingEntityConstructorTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.ProcessTypes(System.Collections.Generic.List{System.Data.Metadata.Edm.TypeUsage})">
    <parameter name="referencedTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeInfo.TryGetDiscriminatorMap(System.Data.Metadata.Edm.EdmType,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeNullabilityAnalyzer.AddTypeNeedingNullSentinel(System.Collections.Generic.HashSet{System.String},System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typesNeedingNullSentinel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredTypeNullabilityAnalyzer.MarkAsNeedingNullSentinel(System.Collections.Generic.HashSet{System.String},System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typesNeedingNullSentinel">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredVarInfo.#ctor(System.Data.Metadata.Edm.RowType,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty})">
    <parameter name="newVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newTypeProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.StructuredVarInfo.TryGetVar(System.Data.Metadata.Edm.EdmProperty,System.Data.Query.InternalTrees.Var@)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.ApplyAllRules(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.ApplyKeyInfoDependentRules(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.ApplyProjectRules(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.ApplyRules(System.Data.Query.PlanCompiler.PlanCompiler,System.Collections.ObjectModel.ReadOnlyCollection{System.Collections.ObjectModel.ReadOnlyCollection{System.Data.Query.InternalTrees.Rule}})">
    <parameter name="rulesTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.BuildLookupTableForRules(System.Collections.Generic.IEnumerable{System.Data.Query.InternalTrees.Rule})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRules.InitializeRulesRequiringProjectionPruning">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.#ctor(System.Data.Query.PlanCompiler.PlanCompiler)">
    <parameter name="compilerState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.AddVarMapping(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var)">
    <parameter name="oldVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.AddVarMapping(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node)">
    <parameter name="oldVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hidingScopeNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.BuildNullIfExpression(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node)">
    <parameter name="conditionVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.Copy(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.GetNonNullableVar(System.Data.Query.InternalTrees.Node)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="subTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.GetVarMap(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Int32})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="varDefListNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsFilterPushdownSuppressed(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsScalarOpTree(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsScalarOpTree(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Int32})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.IsScalarOpTree(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Int32},System.Int32@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.ReMap(System.Data.Query.InternalTrees.Node,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Node})">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TransformationRulesContext.SuppressFilterPushdown(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeInfo.Create(System.Data.Metadata.Edm.TypeUsage,System.Data.Query.PlanCompiler.TypeInfo,System.Data.Query.InternalTrees.ExplicitDiscriminatorMap)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeInfo.GetNewProperty(System.Data.Query.PlanCompiler.PropertyRef)">
    <parameter name="propertyRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeInfo.GetTypeHierarchy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeInfo.GetTypeHierarchy(System.Collections.Generic.List{System.Data.Query.PlanCompiler.TypeInfo})">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.TypeInfo.RootType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUsageEqualityComparer.Equals(System.Data.Metadata.Edm.EdmType,System.Data.Metadata.Edm.EdmType)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUsageEqualityComparer.Equals(System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUsageEqualityComparer.GetHashCode(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUtils.CreateCollectionType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="elementType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUtils.IsCollectionType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUtils.IsStructuredType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.TypeUtils.IsUdt(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.PlanCompiler.VarInfo.NewVars">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarInfoMap.CreateCollectionVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarInfoMap.CreateStructuredVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Metadata.Edm.RowType,System.Collections.Generic.List{System.Data.Query.InternalTrees.Var},System.Collections.Generic.List{System.Data.Metadata.Edm.EdmProperty})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="newVars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarInfoMap.TryGetVarInfo(System.Data.Query.InternalTrees.Var,System.Data.Query.PlanCompiler.VarInfo@)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.AddChildren(System.Data.Query.InternalTrees.Node)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasKeyReferences(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.Node)">
    <parameter name="definingNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetJoinNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferences(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey},System.Data.Query.InternalTrees.VarVec)">
    <parameter name="listToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferences(System.Data.Query.InternalTrees.SetOp,System.Data.Query.InternalTrees.VarVec,System.Int32)">
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferences(System.Data.Query.InternalTrees.VarList,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="listToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferences(System.Data.Query.InternalTrees.VarVec,System.Data.Query.InternalTrees.VarVec)">
    <parameter name="listToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRefManager.HasVarReferencesShallow(System.Data.Query.InternalTrees.Node,System.Data.Query.InternalTrees.VarVec,System.Int32,System.Boolean@)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="vars">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.AddMapping(System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var)">
    <parameter name="oldVar">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.HideMappingKey(System.Data.Query.InternalTrees.Var)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.IsHiddenMappingKey(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Collections.Generic.List{System.Data.Query.InternalTrees.SortKey})">
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Data.Query.InternalTrees.Var)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Data.Query.InternalTrees.VarList)">
    <parameter name="varList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Data.Query.InternalTrees.VarMap)">
    <parameter name="varMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.Map(System.Data.Query.InternalTrees.VarVec)">
    <parameter name="vec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapNode(System.Data.Query.InternalTrees.Node)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapSubtree(System.Data.Query.InternalTrees.Node)">
    <parameter name="subTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapSubtree(System.Data.Query.InternalTrees.Node,System.Data.Query.PlanCompiler.VarRemapper.VisitNodeDelegate)">
    <parameter name="subTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="remapNodeDelegate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapVarList(System.Data.Query.InternalTrees.Command,System.Collections.Generic.Dictionary{System.Data.Query.InternalTrees.Var,System.Data.Query.InternalTrees.Var},System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.RemapVarList(System.Data.Query.InternalTrees.VarList)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.UnhideMappingKey(System.Data.Query.InternalTrees.Var)">
    <parameter name="var">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.VisitDefault(System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.PlanCompiler.VarRemapper.VisitNestOp(System.Data.Query.InternalTrees.NestBaseOp,System.Data.Query.InternalTrees.Node)">
    <parameter name="n">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="op">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BitVec.ToString">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.#ctor(System.Data.Common.Internal.Materialization.Shaper{System.Data.Common.Internal.Materialization.RecordState},System.Data.Common.Internal.Materialization.CoordinatorFactory{System.Data.Common.Internal.Materialization.RecordState},System.Int32)">
    <parameter name="shaper">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="coordinatorFactory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.Create(System.Data.Common.DbDataReader,System.Data.Query.InternalTrees.ColumnMap,System.Data.Metadata.Edm.MetadataWorkspace)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="columnMap">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workspace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetClrTypeFromTypeMetadata(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetDataTypeName(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetProviderSpecificValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataReader.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.ResultAssembly.BridgeDataReader.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetDataTypeName(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetFieldType(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetOrdinal(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.Query.ResultAssembly.BridgeDataRecord.GetValues(System.Object[])">
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.Query.ResultAssembly.BridgeDataRecord.Item(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator.CreateParameter(System.Object,System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator.RegisterMemberValue(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="propertyExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator.VisitBinary(System.Data.Common.CommandTrees.DbBinaryExpression,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateDeleteSql(System.Data.Common.CommandTrees.DbDeleteCommandTree,System.Data.SqlClient.SqlVersion,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateInsertSql(System.Data.Common.CommandTrees.DbInsertCommandTree,System.Data.SqlClient.SqlVersion,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateMemberTSql(System.Data.Metadata.Edm.EdmMember)">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateReturningSql(System.Text.StringBuilder,System.Data.Common.CommandTrees.DbModificationCommandTree,System.Data.SqlClient.SqlGen.DmlSqlGenerator.ExpressionTranslator,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="commandText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="translator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.GenerateUpdateSql(System.Data.Common.CommandTrees.DbUpdateCommandTree,System.Data.SqlClient.SqlVersion,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.DmlSqlGenerator.IsValidIdentityColumnType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="typeUsage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.JoinSymbol.#ctor(System.String,System.Data.Metadata.Edm.TypeUsage,System.Collections.Generic.List{System.Data.SqlClient.SqlGen.Symbol})">
    <parameter name="extents">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.NeedsRewrite(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbApplyExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate)">
    <parameter name="aggregate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitAggregateList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitBinaryExpression(System.Data.Common.CommandTrees.DbBinaryExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitExpressionBinding(System.Data.Common.CommandTrees.DbExpressionBinding)">
    <parameter name="expressionBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitExpressionBindingList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitExpressionList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitList``1(System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.ListElementHandler{``0},System.Collections.Generic.IList{``0})">
    <parameter name="handler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitSortClause(System.Data.Common.CommandTrees.DbSortClause)">
    <parameter name="sortClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitSortClauseList(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ConformanceChecker.VisitUnaryExpression(System.Data.Common.CommandTrees.DbUnaryExpression)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.AreMatching(System.Data.Common.CommandTrees.DbPropertyExpression,System.Data.Common.CommandTrees.DbPropertyExpression,System.String,System.String)">
    <parameter name="expr1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.CapWithProject(System.Data.Common.CommandTrees.DbExpressionBinding,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="flattenedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputBinding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.FlattenProperties(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression})">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="flattenedProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.HasMatchInList(System.Data.Common.CommandTrees.DbPropertyExpression,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.String,System.String)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.RemoveNonSortProperties(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.String,System.String)">
    <parameter name="list1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="list2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.Rewrite(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="originalTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.TransformIntersectOrExcept(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Sql8ExpressionRewriter.TransformIntersectOrExcept(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpressionKind,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbPropertyExpression},System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sortExpressionsOverLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlBuilder.sqlFragments">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlBuilder.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="sqlGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.AddColumn(System.Data.SqlClient.SqlGen.SqlSelectStatement,System.Data.SqlClient.SqlGen.Symbol,System.Collections.Generic.List{System.Data.SqlClient.SqlGen.Symbol},System.Collections.Generic.Dictionary{System.String,System.Data.SqlClient.SqlGen.Symbol},System.String@,System.String)">
    <parameter name="selectStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnDictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.AddColumns(System.Data.SqlClient.SqlGen.SqlSelectStatement,System.Data.SqlClient.SqlGen.Symbol,System.Collections.Generic.List{System.Data.SqlClient.SqlGen.Symbol},System.Collections.Generic.Dictionary{System.String,System.Data.SqlClient.SqlGen.Symbol},System.String@)">
    <parameter name="selectStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="columnDictionary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.AddDefaultColumns(System.Data.SqlClient.SqlGen.SqlSelectStatement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="selectStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.AddFromSymbol(System.Data.SqlClient.SqlGen.SqlSelectStatement,System.String,System.Data.SqlClient.SqlGen.Symbol)">
    <parameter name="fromSymbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="selectStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.AddFromSymbol(System.Data.SqlClient.SqlGen.SqlSelectStatement,System.String,System.Data.SqlClient.SqlGen.Symbol,System.Boolean)">
    <parameter name="selectStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fromSymbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputVarName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.AddSortKeys(System.Data.SqlClient.SqlGen.SqlBuilder,System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbSortClause})">
    <parameter name="orderByClause">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sortKeys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.AssertKatmaiOrNewer(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.ByteArrayToBinaryString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="binaryArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.CastReturnTypeToInt32(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.CreateNewSelectStatement(System.Data.SqlClient.SqlGen.SqlSelectStatement,System.String,System.Data.Metadata.Edm.TypeUsage,System.Boolean,System.Data.SqlClient.SqlGen.Symbol@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="oldStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.CreateNewSelectStatement(System.Data.SqlClient.SqlGen.SqlSelectStatement,System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.SqlClient.SqlGen.Symbol@)">
    <parameter name="oldStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.EscapeSingleQuote(System.String,System.Boolean)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GenerateFunctionSql(System.Data.Common.CommandTrees.DbFunctionCommandTree,System.Data.CommandType@)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GenerateSql(System.Data.Common.CommandTrees.DbCommandTree,System.Data.SqlClient.SqlVersion,System.Collections.Generic.List{System.Data.SqlClient.SqlParameter}@,System.Data.CommandType@)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GenerateSql(System.Data.Common.CommandTrees.DbQueryCommandTree)">
    <parameter name="tree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GetPrimitiveType(System.Data.Metadata.Edm.PrimitiveTypeKind)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GetSqlPrimitiveType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GetTargetTSql(System.Data.Metadata.Edm.EntitySetBase)">
    <parameter name="entitySetBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GroupByAggregateNeedsInnerQuery(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GroupByAggregatesNeedInnerQuery(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate},System.String)">
    <parameter name="aggregates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GroupByExpressionNeedsInnerQuery(System.Data.Common.CommandTrees.DbExpression,System.String,System.Boolean)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GroupByKeyNeedsInnerQuery(System.Data.Common.CommandTrees.DbExpression,System.String)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.GroupByKeysNeedInnerQuery(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression},System.String)">
    <parameter name="keys">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionBitwise(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionCurrentDateTime(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionCurrentDateTimeOffset(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionCurrentUtcDateTime(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionDatepart(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionDatepart(System.String,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionGetTotalOffsetMinutes(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionIndexOf(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionLength(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionNewGuid(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionRound(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionToLower(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionToUpper(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCanonicalFunctionTrim(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleConcatFunction(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleCountExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleDatepartDateFunction(System.Data.SqlClient.SqlGen.SqlGenerator,System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sqlgen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleFunctionArgumentsDefault(System.Data.Common.CommandTrees.DbFunctionExpression,System.Data.SqlClient.SqlGen.SqlBuilder)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleFunctionDefault(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleFunctionDefaultGivenName(System.Data.Common.CommandTrees.DbFunctionExpression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleFunctionGivenNameBasedOnVersion(System.Data.Common.CommandTrees.DbFunctionExpression,System.String,System.String)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleSpecialCanonicalFunction(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleSpecialFunction(System.Collections.Generic.Dictionary{System.String,System.Data.SqlClient.SqlGen.SqlGenerator.FunctionHandler},System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="handlers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleSpecialFunctionToOperator(System.Data.Common.CommandTrees.DbFunctionExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.HandleSpecialStoreFunction(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.InitializeCanonicalFunctionHandlers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.InitializeFunctionNameToOperatorDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.InitializeStoreFunctionHandlers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlGenerator.IntegerType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.IsApplyExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.IsCompatible(System.Data.SqlClient.SqlGen.SqlSelectStatement,System.Data.Common.CommandTrees.DbExpressionKind)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.IsComplexExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.IsJoinExpression(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.IsSpecialCanonicalFunction(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.IsSpecialStoreFunction(System.Data.Common.CommandTrees.DbFunctionExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.IsStoreFunction(System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.ParanthesizeExpressionIfNeeded(System.Data.Common.CommandTrees.DbExpression,System.Data.SqlClient.SqlGen.SqlBuilder)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.ProcessJoinInputResult(System.Data.SqlClient.SqlGen.ISqlFragment,System.Data.SqlClient.SqlGen.SqlSelectStatement,System.Data.Common.CommandTrees.DbExpressionBinding,System.Int32)">
    <parameter name="fromExtentFragment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.QuoteIdentifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbAndExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbCaseExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbCastExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbConstantExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbDerefExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbElementExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbExceptExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbFilterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbLikeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbLimitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbNullExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbOrExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbProjectExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbRefExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbScanExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbSkipExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbSortExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbTreatExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitAggregate(System.Data.Common.CommandTrees.DbAggregate,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="aggregate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitBinaryExpression(System.String,System.Data.Common.CommandTrees.DbExpressionKind,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitCollectionConstructor(System.Data.Common.CommandTrees.DbNewInstanceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitComparisonExpression(System.String,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitConstant(System.Data.Common.CommandTrees.DbConstantExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitExpressionEnsureSqlStatement(System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitExpressionEnsureSqlStatement(System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitFilterExpression(System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="predicate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitInputExpression(System.Data.Common.CommandTrees.DbExpression,System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.SqlClient.SqlGen.Symbol@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="inputExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitIsEmptyExpression(System.Data.Common.CommandTrees.DbIsEmptyExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitIsNullExpression(System.Data.Common.CommandTrees.DbIsNullExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitJoinExpression(System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpressionBinding},System.Data.Common.CommandTrees.DbExpressionKind,System.String,System.Data.Common.CommandTrees.DbExpression)">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="joinCondition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitNewInstanceExpression(System.Data.Common.CommandTrees.DbNewInstanceExpression,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.Data.SqlClient.SqlGen.Symbol}@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.VisitSetOpExpression(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="left">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="right">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.WrapNonQueryExtent(System.Data.SqlClient.SqlGen.SqlSelectStatement,System.Data.SqlClient.SqlGen.ISqlFragment,System.Data.Common.CommandTrees.DbExpressionKind)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.WrapWithCastIfNeeded(System.Boolean,System.String,System.String,System.Data.SqlClient.SqlGen.SqlBuilder)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.WriteFunctionName(System.Data.SqlClient.SqlGen.SqlBuilder,System.Data.Metadata.Edm.EdmFunction)">
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="function">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlGenerator.WriteSql(System.Data.SqlClient.SqlGen.ISqlFragment)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sqlStatement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.FromExtents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.GroupBy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.OrderBy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.OuterExtents">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.SqlSelectStatement.Where">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlSelectStatement.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="sqlGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SqlWriter.#ctor(System.Text.StringBuilder)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Data.SqlClient.SqlGen.Symbol.Columns">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.Symbol.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="sqlGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolPair.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="sqlGenerator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolTable.Add(System.String,System.Data.SqlClient.SqlGen.Symbol)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.SymbolTable.Lookup(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlGen.TopClause.WriteSql(System.Data.SqlClient.SqlGen.SqlWriter,System.Data.SqlClient.SqlGen.SqlGenerator)">
    <parameter name="sqlGenerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.#ctor(System.String)">
    <parameter name="manifestToken">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetEdmType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetProviderManifest">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetStoreSchemaDescription">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetStoreSchemaMapping">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderManifest.GetStoreType(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.CreateCommand(System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.CreateCommand(System.Data.Common.DbProviderManifest,System.Data.Common.CommandTrees.DbCommandTree)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="providerManifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandTree">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.CreateSqlParameter(System.String,System.Data.Metadata.Edm.TypeUsage,System.Data.Metadata.Edm.ParameterMode,System.Object,System.Boolean,System.Data.SqlClient.SqlVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetBinaryDbType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetDbProviderManifest(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetKatmaiDateTimePrecision(System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetParameterPrecision(System.Data.Metadata.Edm.TypeUsage,System.Nullable{System.Byte})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetParameterSize(System.Data.Metadata.Edm.TypeUsage,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetScale(System.Data.Metadata.Edm.TypeUsage)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetSqlDbType(System.Data.Metadata.Edm.TypeUsage,System.Boolean,System.Data.SqlClient.SqlVersion,System.Nullable{System.Int32}@,System.Nullable{System.Byte}@,System.Nullable{System.Byte}@)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlProviderServices.GetStringDbType(System.Data.Metadata.Edm.TypeUsage)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlVersionUtils.GetSqlVersion(System.Data.SqlClient.SqlConnection)">
    <parameter name="connection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlVersionUtils.GetSqlVersion(System.String)">
    <parameter name="versionHint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.SqlClient.SqlVersionUtils.GetVersionHint(System.Data.SqlClient.SqlVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Data.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Data.UpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{})">
    <parameter name="stateEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.Error.UnhandledBindingType(System.Linq.Expressions.MemberBindingType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Linq.Expressions.Error.UnhandledExpressionType(System.Linq.Expressions.ExpressionType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitBinding(System.Linq.Expressions.MemberBinding)">
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitBindingList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.MemberBinding})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitElementInitializer(System.Linq.Expressions.ElementInit)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="initializer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitElementInitializerList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.ElementInit})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitExpressionList(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="iv">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)">
    <parameter name="lambda">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="init">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAccess(System.Linq.Expressions.MemberExpression)">
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="assignment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="init">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="binding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="m">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="na">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitTypeIs(System.Linq.Expressions.TypeBinaryExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
    <parameter name="u">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
</assembly>