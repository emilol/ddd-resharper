<?xml version="1.0" encoding="utf-8"?>
<assembly name="Microsoft.Build.Tasks.v4.0" version="4.0.0.0">
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.CopyOnWriteDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.CopyOnWriteDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.EmptyEnumerable`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.EmptyEnumerable`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Add(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Contains(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.DictionaryEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.DictionaryEnumerator.Key">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.DictionaryEnumerator.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.EmptyEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.FindEntryInList(`0)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.Item(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.Remove(System.Object)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.SingleEnumerator.System#Collections#IEnumerator#Current">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.System#Collections#IDictionary#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.System#Collections#IDictionary#Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.System#Collections#IDictionary#Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.HybridDictionary`2.TryRemoveFromList(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.HybridDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyCollection`1.BackingCollection">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.CreateClone(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.CreateFrom(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}},System.Collections.Generic.IEqualityComparer{`0})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.CreateWrapper(System.Collections.Generic.IDictionary{`0,`1})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyCollection`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Add(`0,`1)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.ContainsKey(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Item(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Keys">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Remove(`0)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.TryGetValue(`0,`1@)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyDictionary`2.Values">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.Add(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.Contains(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.CopyTo(`0[],System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.IndexOf(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.Insert(System.Int32,`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.Remove(`0)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Collections.ReadOnlyEmptyList`1.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Collections.ReadOnlyEmptyList`1.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Internal.Tracing.List``1(System.Collections.Generic.IEnumerable{``0})">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Internal.Tracing.Record(System.String)">
    <parameter name="counter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareBaseNamesStringWise(System.String,System.String)">
    <parameter name="asString1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="asString2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareBaseNameTo(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareBaseNameToImpl(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareCulture(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.ComparePublicKeyToken(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.CompareTo(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="that">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.EscapeDisplayNameCharacters(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.GetAssemblyNameEx(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameExtension.GetAssemblyNameFromDisplayName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="displayName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyNameReverseVersionComparer.Compare(Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.AssemblyResources.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ConvertDecimalOrHexToDouble(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ConvertDecimalToDouble(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ConvertHexToDouble(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ValidDecimalOrHexNumber(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ConversionUtilities.ValidHexNumber(System.String)">
    <parameter name="number">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowArgument(System.Exception,System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowArgument(System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(System.String,System.Exception,System.Object[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowInternalError(System.String,System.Object[])">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.ThrowInvalidOperation(System.String,System.Object[])">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String,System.Object)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String,System.Object,System.Object)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String,System.Object,System.Object,System.Object)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrow(System.Boolean,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="unformattedMessage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.Exception,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgument(System.Boolean,System.String,System.Object,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgumentArraysSameLength(System.Array,System.Array,System.String,System.String)">
    <parameter name="parameter1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameter2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgumentLength(System.String,System.String)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowArgumentNull(System.Object,System.String,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInternalLength(System.String,System.String)">
    <parameter name="parameterValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(System.Boolean,System.String)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(System.Boolean,System.String,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(System.Boolean,System.String,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ErrorUtilities.VerifyThrowInvalidOperation(System.Boolean,System.String,System.Object,System.Object,System.Object)">
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.ContainsEscapedWildcards(System.String)">
    <parameter name="escapedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.ContainsReservedCharacters(System.String)">
    <parameter name="unescapedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.Escape(System.String)">
    <parameter name="unescapedString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.UnescapeAll(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.EscapingUtilities.UnescapeAll(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.ExceptionHandling.DumpExceptionToFile(System.Exception)">
    <parameter name="ex">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ExceptionHandling.UnhandledExceptionHandler(System.Object,System.UnhandledExceptionEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.FileMatch(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileToMatch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetAccessibleDirectories(System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetAccessibleFiles(System.String,System.String,System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetAccessibleFilesAndDirectories(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetAccessibleFileSystemEntries(Microsoft.Build.Shared.FileMatcher.FileSystemEntity,System.String,System.String,System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pattern">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="projectDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFiles(System.String,System.String)">
    <parameter name="filespecUnescaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFiles(System.String,System.String,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries,Microsoft.Build.Shared.DirectoryExists)">
    <parameter name="filespecUnescaped">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directoryExists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFileSpecInfo(System.String,System.String@,System.String@,System.String@,System.String@,System.Boolean@,System.Boolean@,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFileSpecInfo(System.String,System.Text.RegularExpressions.Regex@,System.Boolean@,System.Boolean@,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetFilesRecursive(System.Collections.IList,System.String,System.String,System.String,System.Int32,System.Text.RegularExpressions.Regex,System.Boolean,System.String,System.Boolean,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="listOfFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetLongPathName(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.GetLongPathName(System.String,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.HasWildcards(System.String)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.HasWildcardsSemicolonItemOrPropertyReferences(System.String)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.PreprocessFileSpecForSplitting(System.String,System.String@,System.String@,System.String@)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.RegularExpressionFromFileSpec(System.String,System.String,System.String,System.Boolean@)">
    <parameter name="fixedDirectoryPart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wildcardDirectoryPart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filenamePart">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.RemoveInitialDotSlash(System.String[])">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.RemoveProjectDirectory(System.String[],System.String)">
    <parameter name="paths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="projectDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileMatcher.SplitFileSpec(System.String,System.String@,System.String@,System.String@,Microsoft.Build.Shared.FileMatcher.GetFileSystemEntries)">
    <parameter name="filespec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.AttemptToShortenPath(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.CreateUriFromPath(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Shared.FileUtilities.CurrentExecutableDirectory">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.DeleteNoThrow(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.DirectoryExistsNoThrow(System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.EndsWithSlash(System.String)">
    <parameter name="fileSpec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.EnsureNoLeadingSlash(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.EnsureNoTrailingSlash(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.EnsureTrailingSlash(System.String)">
    <parameter name="fileSpec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.FileExistsNoThrow(System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.FileOrDirectoryExistsNoThrow(System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetDirectoryNameOfFullPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetFileInfoNoThrow(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="filePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetFullPath(System.String,System.String)">
    <parameter name="currentDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetFullPathNoThrow(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetTemporaryFile(System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.GetTemporaryFile(System.String,System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.HasExtension(System.String,System.String[])">
    <parameter name="allowedExtensions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.ItemSpecModifiers.IsDerivableItemSpecModifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.ItemSpecModifiers.ThrowForUrl(System.String,System.String,System.String)">
    <parameter name="fullPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemSpec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.MakeRelative(System.String,System.String)">
    <parameter name="basePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.NormalizePath(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.FileUtilities.TrimAndStripAnyQuotes(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.InternalErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.LanguageParser.CSharpTokenizer.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.LanguageParser.StreamMappedString.Substring(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.LanguageParser.TokenCharReader.GetCurrentMatchedString(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.LanguageParser.TokenCharReader.Sink(System.String)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.LanguageParser.TokenCharReader.Sink(System.String,System.Boolean)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.LanguageParser.TokenCharReader.SinkIgnoreCase(System.String)">
    <parameter name="match">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.LanguageParser.TokenCharReader.SinkUntil(System.String)">
    <parameter name="find">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Shared.LanguageParser.TokenEnumerator.Current">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.LanguageParser.VisualBasicTokenizer.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.MetadataConversionUtilities.TryConvertItemMetadataToBool(Microsoft.Build.Framework.ITaskItem,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemMetadataName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.MetadataConversionUtilities.TryConvertItemMetadataToBool(Microsoft.Build.Framework.ITaskItem,System.String,System.Boolean@)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="itemMetadataName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.FindOnPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetChildProcessIds(System.Int32,System.DateTime)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetCurrentDirectory">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetLongFilePath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetMemoryStatus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.GetShortFilePath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.MsgWaitOne(System.Threading.WaitHandle)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.MsgWaitOne(System.Threading.WaitHandle,System.Int32)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.NativeMethodsShared.MsgWaitOne(System.Threading.WaitHandle,System.TimeSpan)">
    <parameter name="handle">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.ExtractMessageCode(System.Boolean,System.String,System.String@)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.FormatResourceString(System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.FormatResourceString(System.String@,System.String@,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.FormatString(System.String,System.Object[])">
    <parameter name="unformatted">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Shared.ResourceUtilities.GetResourceString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.AL.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AppConfig.Load(System.String)">
    <parameter name="appConfigFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AppConfig.Read(System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AppConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.AspNetCompiler.TargetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.AspNetCompiler.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.AssemblyEntry.AssemblyNameExtension">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.AssemblyEntry.IsRedistRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFolder.AddFoldersFromRegistryKey(Microsoft.Win32.RegistryKey,System.String,System.Collections.Hashtable)">
    <parameter name="hive">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFolder.AddFoldersFromRegistryKey(System.String,System.Collections.Hashtable)">
    <parameter name="directories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFolder.GetAssemblyFolders(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersEx.#ctor(System.String,System.String,System.String,System.String,System.String,Microsoft.Build.Tasks.GetRegistrySubKeyNames,Microsoft.Build.Tasks.GetRegistrySubKeyDefaultValue,System.Reflection.ProcessorArchitecture,Microsoft.Build.Tasks.OpenBaseKey)">
    <parameter name="getRegistrySubKeyNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getRegistrySubKeyDefaultValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="openBaseKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetRuntimeVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersEx.AddCandidateVersion(System.Collections.Generic.SortedDictionary{System.Version,System.Collections.ArrayList},System.String,System.Version)">
    <parameter name="targetFrameworkVersionToRegistryVersions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="candidateVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersEx.FindDirectories(Microsoft.Win32.RegistryView,Microsoft.Win32.RegistryHive,System.String,System.String,System.String,System.String,System.String,Microsoft.Build.Tasks.GetRegistrySubKeyNames,Microsoft.Build.Tasks.GetRegistrySubKeyDefaultValue,Microsoft.Build.Tasks.OpenBaseKey)">
    <parameter name="getRegistrySubKeyNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getRegistrySubKeyDefaultValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="openBaseKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetRuntimeVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersEx.FindUnderRegistryHive(Microsoft.Win32.RegistryView,System.String,System.String,System.String,System.String,System.String,Microsoft.Build.Tasks.GetRegistrySubKeyNames,Microsoft.Build.Tasks.GetRegistrySubKeyDefaultValue,Microsoft.Build.Tasks.OpenBaseKey)">
    <parameter name="getRegistrySubKeyNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="openBaseKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getRegistrySubKeyDefaultValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetRuntimeVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersEx.GatherVersionStrings(System.String,System.Collections.IEnumerable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetRuntimeVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersEx.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersEx.IsVersionInsideRange(System.Version,Microsoft.Win32.RegistryKey)">
    <parameter name="keyPlatform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersExResolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyFoldersResolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyInformation.ConstructAssemblyName(System.IntPtr,System.Char[],System.UInt32,System.IntPtr,System.UInt32,System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyInformation.GetRuntimeVersion(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNameComparer.Compare(System.Object,System.Object)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNameComparer.Equals(Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNameComparer.Equals(System.Object,System.Object)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNameComparer.GetHashCode(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNameComparer.GetHashCode(System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNameReferenceAscendingVersionComparer.Compare(System.Object,System.Object)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNamesTypeResolutionService.GetAssembly(System.Reflection.AssemblyName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNamesTypeResolutionService.GetAssembly(System.Reflection.AssemblyName,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNamesTypeResolutionService.GetAssemblyByPath(System.String,System.Boolean)">
    <parameter name="pathToAssembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNamesTypeResolutionService.GetPathOfAssembly(System.Reflection.AssemblyName)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNamesTypeResolutionService.GetType(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNamesTypeResolutionService.GetType(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyNamesTypeResolutionService.GetType(System.String,System.Boolean,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyResolution.CompileDirectories(System.Collections.Generic.IEnumerable{System.String},Microsoft.Build.Shared.FileExists,Microsoft.Build.Tasks.GetAssemblyName,Microsoft.Build.Tasks.GetAssemblyRuntimeVersion,System.Version)">
    <parameter name="directories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyResolution.CompileSearchPaths(System.String[],System.String[],System.Reflection.ProcessorArchitecture,System.String[],Microsoft.Build.Shared.FileExists,Microsoft.Build.Tasks.GetAssemblyName,Microsoft.Build.Tasks.GetRegistrySubKeyNames,Microsoft.Build.Tasks.GetRegistrySubKeyDefaultValue,Microsoft.Build.Tasks.OpenBaseKey,Microsoft.Build.Tasks.InstalledAssemblies,Microsoft.Build.Tasks.GetAssemblyRuntimeVersion,System.Version)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="searchPaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyResolution.ResolveReference(System.Collections.Generic.IEnumerable{Microsoft.Build.Tasks.Resolver[]},Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="jaggedResolvers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="executableExtensions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssemblyTableInfo.CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.PopulateMappingDictionary(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
    <parameter name="map">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mappingList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AssignProjectConfiguration.ResolveProject(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem@)">
    <parameter name="projectRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AxTlbBaseReference.GetWrapperFileName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AxTlbBaseReference.GetWrapperFileName(System.String,System.String,System.Boolean,System.Int16,System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AxTlbBaseReference.GetWrapperFileNameInternal(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.AxTlbBaseReference.IsWrapperUpToDate(Microsoft.Build.Tasks.ComReferenceWrapperInfo,System.DateTime)">
    <parameter name="wrapperInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.AxTlbBaseTask.AddStrongNameOptions(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
    <parameter name="commandLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.BadImageReferenceException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.BindingRedirect.Read(System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CandidateAssemblyFilesResolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CombineUsingNamespaces">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateExecuteMethodFromFragment(System.CodeDom.CodeTypeDeclaration,System.String)">
    <parameter name="codeTypeDeclaration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateProperty(System.CodeDom.CodeTypeDeclaration,Microsoft.Build.Framework.TaskPropertyInfo,System.Object)">
    <parameter name="propInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="codeTypeDeclaration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateProperty(System.CodeDom.CodeTypeDeclaration,System.String,System.Type,System.Object)">
    <parameter name="ctd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateTaskBody(System.CodeDom.CodeTypeDeclaration,System.String)">
    <parameter name="codeTypeDeclaration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateTaskClass">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.CreateTaskProperties(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="codeTypeDeclaration">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.ExtractReferencedAssemblies">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.ExtractTaskContent(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.ExtractUsingNamespaces">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.CodeTaskFactory.FactoryName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.GetTaskParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.HasInvalidChildNodes(System.Xml.XmlNode,System.Xml.XmlNodeType[])">
    <parameter name="parentNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="allowedNodeTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CodeTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)">
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.AnalyzeElement(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Runtime.InteropServices.ComTypes.ELEMDESC)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.AnalyzeTypeInfo(System.Runtime.InteropServices.ComTypes.ITypeInfo)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.AnalyzeTypeLibrary(System.Runtime.InteropServices.ComTypes.ITypeLib)">
    <parameter name="typeLibrary">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.CanSkipType(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Runtime.InteropServices.ComTypes.ITypeLib,System.Runtime.InteropServices.ComTypes.TYPEATTR,System.Runtime.InteropServices.ComTypes.TYPELIBATTR)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.GetAnalyzedTypeNames">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.GetDependencies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.ScanDefinedFunctions(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Runtime.InteropServices.ComTypes.TYPEATTR)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.ScanDefinedVariables(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Runtime.InteropServices.ComTypes.TYPEATTR)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComDependencyWalker.ScanImplementedTypes(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Runtime.InteropServices.ComTypes.TYPEATTR)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.AppendByChoiceSwitch(System.String,System.Collections.Hashtable,System.String,System.String,System.String)">
    <parameter name="bag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.AppendPlusOrMinusSwitch(System.String,System.Collections.Hashtable,System.String)">
    <parameter name="bag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String[])">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String[],System.Boolean[])">
    <parameter name="metadataNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.AppendSwitchWithInteger(System.String,System.Collections.Hashtable,System.String)">
    <parameter name="bag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.AppendWhenTrue(System.String,System.Collections.Hashtable,System.String)">
    <parameter name="bag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CommandLineBuilderExtension.GetQuotedText(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.GetFuncDescForDescIndex(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Int32,System.Runtime.InteropServices.ComTypes.FUNCDESC@,System.IntPtr@)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.GetPathOfTypeLib(Microsoft.Build.Utilities.TaskLoggingHelper,System.Runtime.InteropServices.ComTypes.TYPELIBATTR@,System.String@)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.GetTypeAttrForTypeInfo(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Runtime.InteropServices.ComTypes.TYPEATTR@)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.GetTypeLibAttrForTypeLib(System.Runtime.InteropServices.ComTypes.ITypeLib@,System.Runtime.InteropServices.ComTypes.TYPELIBATTR@)">
    <parameter name="typeLib">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.GetTypeLibNameForITypeLib(Microsoft.Build.Utilities.TaskLoggingHelper,System.Runtime.InteropServices.ComTypes.ITypeLib,System.String,System.String@)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeLib">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.GetTypeLibNameForTypeLibAttrs(Microsoft.Build.Utilities.TaskLoggingHelper,System.Runtime.InteropServices.ComTypes.TYPELIBATTR,System.String@)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.GetVarDescForVarIndex(System.Runtime.InteropServices.ComTypes.ITypeInfo,System.Int32,System.Runtime.InteropServices.ComTypes.VARDESC@,System.IntPtr@)">
    <parameter name="typeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.RemapAdoTypeLib(Microsoft.Build.Utilities.TaskLoggingHelper,System.Runtime.InteropServices.ComTypes.TYPELIBATTR@)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.StripTypeLibNumberFromPath(System.String,Microsoft.Build.Shared.FileExists)">
    <parameter name="fileExists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReference.UniqueKeyFromTypeLibAttr(System.Runtime.InteropServices.ComTypes.TYPELIBATTR)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReferenceInfo.#ctor(Microsoft.Build.Tasks.ComReferenceInfo)">
    <parameter name="copyFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReferenceInfo.GetTypeLibId(Microsoft.Build.Utilities.TaskLoggingHelper)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReferenceInfo.InitializeWithPath(Microsoft.Build.Utilities.TaskLoggingHelper,System.String,Microsoft.Build.Framework.ITaskItem,System.String)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReferenceInfo.InitializeWithTypeLibAttrs(Microsoft.Build.Utilities.TaskLoggingHelper,System.Runtime.InteropServices.ComTypes.TYPELIBATTR,Microsoft.Build.Framework.ITaskItem,System.String)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ComReferenceResolutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Copy.CopyFileWithLogging(Microsoft.Build.Tasks.FileState,Microsoft.Build.Tasks.FileState)">
    <parameter name="sourceFileState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destinationFileState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Copy.DoCopyIfNecessary(Microsoft.Build.Tasks.FileState,Microsoft.Build.Tasks.FileState,Microsoft.Build.Tasks.CopyFileWithState)">
    <parameter name="sourceFileState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destinationFileState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="copyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Copy.DoCopyWithRetries(Microsoft.Build.Tasks.FileState,Microsoft.Build.Tasks.FileState,Microsoft.Build.Tasks.CopyFileWithState)">
    <parameter name="sourceFileState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destinationFileState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="copyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Copy.Execute(Microsoft.Build.Tasks.CopyFileWithState)">
    <parameter name="copyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Copy.IsMatchingSizeAndTimeStamp(Microsoft.Build.Tasks.FileState,Microsoft.Build.Tasks.FileState)">
    <parameter name="sourceFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destinationFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Copy.MakeFileWriteable(Microsoft.Build.Tasks.FileState,System.Boolean)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Copy.PathsAreIdentical(System.String,System.String)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="destination">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateCSharpManifestResourceName.CreateManifestNameImpl(System.String,System.String,System.Boolean,System.String,System.String,System.IO.Stream,Microsoft.Build.Utilities.TaskLoggingHelper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateItem.CreateOutputItems(System.Collections.Hashtable,System.Collections.Hashtable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="excludeItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateItem.GetUniqueItems(Microsoft.Build.Framework.ITaskItem[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.CreateFileStreamOverNewFileStream(System.String,System.IO.FileMode,System.IO.FileAccess)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.CreateManifestName(System.String,System.String,System.String,System.String,System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.Execute(Microsoft.Build.Tasks.CreateFileStream)">
    <parameter name="createFileStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettFolderIdentifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettIdentifier(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateManifestResourceName.MakeValidEverettSubFolderIdentifier(System.String)">
    <parameter name="subName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CreateVisualBasicManifestResourceName.CreateManifestNameImpl(System.String,System.String,System.Boolean,System.String,System.String,System.IO.Stream,Microsoft.Build.Utilities.TaskLoggingHelper)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Csc.AddReferencesToCommandLine(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
    <parameter name="commandLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Csc.GetDefineConstantsSwitch(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Csc.InitializeHostCompiler(Microsoft.Build.Tasks.Hosting.ICscHostObject)">
    <parameter name="cscHostObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Csc.IsLegalIdentifier(System.String)">
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.Csc.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.CSharpParserUtilities.Extract(Microsoft.Build.Shared.LanguageParser.CSharpTokenizer)">
    <parameter name="tokens">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.CultureStringUtilities.IsValidCultureString(System.String)">
    <parameter name="cultureString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Delete.LogError(Microsoft.Build.Framework.ITaskItem,System.Exception)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.DependencyResolutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.DependentAssembly.Read(System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.#ctor(System.String)">
    <parameter name="visualStudioVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AddAttribute(System.Xml.XmlNode,System.String,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AddBuiltProducts(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AddDependencies(Microsoft.Build.Tasks.Deployment.Bootstrapper.Product,System.Collections.Hashtable)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="availableProducts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AddIncludedProducts(Microsoft.Build.Tasks.Deployment.Bootstrapper.Product,System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.Product})">
    <parameter name="product">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="includedProducts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AddIncludes(Microsoft.Build.Tasks.Deployment.Bootstrapper.Product,System.Collections.Hashtable)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="availableProducts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AddProduct(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.Product},Microsoft.Build.Tasks.Deployment.Bootstrapper.Product)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="product">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AddStringResourceForUrl(Microsoft.Build.Tasks.Deployment.Bootstrapper.ResourceUpdater,System.String,System.String,System.String)">
    <parameter name="resourceUpdater">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AddVerificationInformation(System.Xml.XmlNode,System.String,System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults)">
    <parameter name="packageFileNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.AppendNode(System.Xml.XmlElement,System.String,System.Xml.XmlElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mergeElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Build(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.BuildResources(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings,Microsoft.Build.Tasks.Deployment.Bootstrapper.ResourceUpdater)">
    <parameter name="resourceUpdater">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ByteArrayToString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ClearReadOnlyAttribute(System.String)">
    <parameter name="strFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.CombineElements(System.Xml.XmlElement,System.Xml.XmlElement,System.String,System.String,System.Xml.XmlElement)">
    <parameter name="langElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mergeElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strNodeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ContainsCulture(System.String)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ConvertChildsNodeToAttributes(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.CopySetupToOutputDirectory(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings,System.String)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strOutputExe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.CorrectPackageFiles(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.CreateApplicationElement(System.Xml.XmlElement,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings)">
    <parameter name="configElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.CreatePackage(System.Xml.XmlNode,Microsoft.Build.Tasks.Deployment.Bootstrapper.Product)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="product">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.CreateProduct(System.Xml.XmlNode)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.CreateProductNode(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Cultures">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.DumpStringToFile(System.String,System.String,System.Boolean)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.DumpXmlToFile(System.Xml.XmlNode,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.EnsureFolderExists(System.String)">
    <parameter name="strFolderPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ExploreDirectory(System.String,System.Xml.XmlElement)">
    <parameter name="rootElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strSubDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetAssemblyPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetCodePage(System.String,System.Int32@)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetFileHash(System.String)">
    <parameter name="filePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetIncludedProducts(Microsoft.Build.Tasks.Deployment.Bootstrapper.Product)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="product">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetOutputFolders(System.String[],System.String,System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.ComponentsLocation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="productCodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetPackageForSettings(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings,Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetPackageForSettings_Helper(System.Globalization.CultureInfo,System.Globalization.CultureInfo,Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetPublicKeyOfFile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="fileSource">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.GetResourcesNodeForSettings(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults,System.Int32@)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.LoadAndValidateXmlDocument(System.String,System.Boolean,System.String,System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.XmlValidationResults)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.MapLCIDToCultureName(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.Merge(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.Product},System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.Product})">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.MergeAttribute(System.Xml.XmlNode,System.Xml.XmlAttribute)">
    <parameter name="targetNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.OrderProducts(System.Collections.Hashtable,System.Collections.Hashtable)">
    <parameter name="availableProducts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buildQueue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.QueryForSubNode(System.Xml.XmlNode,System.String,System.String)">
    <parameter name="subNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ReadAttribute(System.Xml.XmlNode,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.RemoveDependency(System.Collections.Hashtable,Microsoft.Build.Tasks.Deployment.Bootstrapper.Product)">
    <parameter name="availableProducts">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ReplaceAttribute(System.Xml.XmlNode,System.String,System.String)">
    <parameter name="targetNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ReplaceAttributes(System.Xml.XmlNode,System.String,System.String,System.String)">
    <parameter name="attributeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ReplaceAttributeString(System.Xml.XmlNode,System.String,System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stringsNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ReplacePackageFileAttributes(System.Xml.XmlNode,System.String,System.Xml.XmlNode,System.String,System.String,System.String)">
    <parameter name="sourceNodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.ReplaceStrings(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.SelectEitherProducts(Microsoft.Build.Tasks.Deployment.Bootstrapper.Product)">
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.SelectRelatedProducts(Microsoft.Build.Tasks.Deployment.Bootstrapper.Product,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="p">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.UpdatePackageFileNodes(System.Xml.XmlNode,System.String,System.String)">
    <parameter name="packageFilesNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strTargetPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strSourcePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.VerifyHomeSiteInformation(System.Xml.XmlNode,Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilder,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildSettings,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults)">
    <parameter name="packageFileNode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BootstrapperBuilder.XmlToConfigurationFile(System.Xml.XmlNode)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessage.CreateMessage(Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildMessageSeverity,System.String,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.AddComponentFiles(System.String[])">
    <parameter name="filePaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.ComponentFiles">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults.Messages">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.PackageCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.Package)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.PackageCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.PackageCollection.Package(System.String)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.AddIncludedProduct(Microsoft.Build.Tasks.Deployment.Bootstrapper.Product)">
    <parameter name="product">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.AddMissingDependency(System.Collections.ArrayList)">
    <parameter name="productCodes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.AddPackage(Microsoft.Build.Tasks.Deployment.Bootstrapper.Package)">
    <parameter name="package">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ContainsCulture(System.String)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ContainsDependencies(System.Collections.Generic.List{Microsoft.Build.Tasks.Deployment.Bootstrapper.Product})">
    <parameter name="dependenciesToCheck">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.GetPackageValidationResults(System.String)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.Product.ProductBuilder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductBuilderCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Add(Microsoft.Build.Tasks.Deployment.Bootstrapper.Product)">
    <parameter name="product">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductCollection.Product(System.String)">
    <parameter name="productCode">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductValidationResults.AddPackageResults(System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.XmlValidationResults)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ProductValidationResults.PackageResults(System.String)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ResourceUpdater.StringToByteArray(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.ResourceUpdater.UpdateResources(System.String,Microsoft.Build.Tasks.Deployment.Bootstrapper.BuildResults)">
    <parameter name="results">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Util.AddTrailingChar(System.String,System.Char)">
    <parameter name="str">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Util.GetCultureInfoFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="cultureName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Util.IsWebUrl(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.Util.ReadRegistryString(Microsoft.Win32.RegistryKey,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.Bootstrapper.XmlValidationResults.SchemaValidationEventHandler(System.Object,System.Xml.Schema.ValidationEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.XmlValidationResults.ValidationErrors">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.Bootstrapper.XmlValidationResults.ValidationWarnings">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.#ctor(System.String,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="deployManifestIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applicationManifestIdentity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationIdentity.#ctor(System.String,System.String,System.String)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="deployManifestPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applicationManifestPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.FileAssociations">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest.ValidateReferenceForPartialTrust(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference,Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="trustInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromAssemblyName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromFile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManagedAssembly(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManifest(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManifest(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromManifest(System.Xml.XmlDocument)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FromNativeAssembly(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.GetFullName(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity.FullNameFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.Find(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.FindTargetPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComImporter.#ctor(System.String,Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection,System.String)">
    <parameter name="outputMessages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComImporter.CheckForUnknownSubKeys(Microsoft.Win32.RegistryKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComImporter.CheckForUnknownSubKeys(Microsoft.Win32.RegistryKey,System.String[])">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="knownNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComImporter.CheckForUnknownValues(Microsoft.Win32.RegistryKey)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ComImporter.CheckForUnknownValues(Microsoft.Win32.RegistryKey,System.String[])">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="knownNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.CompatibleFrameworkCollection.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.CompatibleFrameworks">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.DiscoverCompatibleFrameworks(System.Runtime.Versioning.FrameworkName)">
    <parameter name="frameworkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.GetFullCompatFramework(System.Runtime.Versioning.FrameworkName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="frameworkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.GetInstallableFramework(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="redistListFilePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.GetInstallableFrameworkName(System.Runtime.Versioning.FrameworkName)">
    <parameter name="frameworkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.GetPathToReferenceAssemblies(System.Runtime.Versioning.FrameworkName)">
    <parameter name="targetFrameworkMoniker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.GetRedistListFilePath(System.String)">
    <parameter name="referenceAssemblyPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.GetSubsetCompatFramework(System.Runtime.Versioning.FrameworkName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="frameworkName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest.PatchCLRVersion(System.String)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.EmbeddedManifestReader.Read(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileAssociationCollection.ToArray">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReference.ImportComComponent(System.String,Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection,System.String)">
    <parameter name="outputMessages">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.FindTargetPath(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.FileReferenceCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.AssemblyReferences">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.FileReferences">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.IsMismatchedPlatform(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ReferenceComparer.Compare(System.Object,System.Object)">
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolveFiles(System.String[])">
    <parameter name="searchPaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.ResolvePath(System.String,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateAssemblyReference(Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReference)">
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateEntryPoint(System.String,System.String,System.String,System.String)">
    <parameter name="outputPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="applicationManifestPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest.UpdateFileReference(Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference)">
    <parameter name="f">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestFormatter.Format(System.IO.Stream)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.Deserialize(System.IO.Stream)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.Deserialize(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.GetComInfo(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.GetXmlDocument(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadEmbeddedManifest(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.IO.Stream,System.Boolean)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.Boolean)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.IO.Stream,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestReader.ReadManifest(System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.Serialize(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.IO.Stream)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.ManifestWriter.WriteManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.Manifest,System.String)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.MetadataReader.Create(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.MetadataReader.GetGuidOfType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.MetadataReader.HasAssemblyAttribute(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessage.#ctor(Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageType,System.String,System.String,System.String[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.AddErrorMessage(System.String,System.String[])">
    <parameter name="taskResourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.AddWarningMessage(System.String,System.String[])">
    <parameter name="taskResourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.OutputMessageCollection.LogTaskMessages(Microsoft.Build.Utilities.Task)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.CanonicalizeUrl(System.String)">
    <parameter name="url">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.GetPathSegments(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.IsAssembly(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.IsDataFile(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.IsLocalPath(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.IsManagedAssembly(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.IsNativeAssembly(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.IsPEFile(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.PathUtil.IsProgramFile(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSet(System.String,System.Security.PermissionSet,System.String[])">
    <parameter name="includedPermissionSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ComputeZonePermissionSetHelper(System.String,System.Security.PermissionSet,Microsoft.Build.Framework.ITaskItem[],System.String)">
    <parameter name="includedPermissionSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.CreateXmlDocV2(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.CreateXmlDocV3(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.GetCert(System.String)">
    <parameter name="thumbprint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.GetCommandLineParameters(System.String,System.Uri,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.GetCurrentCLRPermissions(System.String)">
    <parameter name="targetZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.GetNamedPermissionSet(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
    <parameter name="targetZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.GetNamedPermissionSetFromZone(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.GetRegistryPermissionSetByName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.GetXmlElement(System.String,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.GetXmlElement(System.String,System.Runtime.Versioning.FrameworkName)">
    <parameter name="targetZone">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fn">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IdentityListToPermissionSet(System.String[])">
    <parameter name="ids">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.IsCertInStore(System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="cert">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ParseElementForAssemblyIdentification(System.Security.SecurityElement,System.String@,System.String@,System.String@)">
    <parameter name="el">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToIdentityList(System.Security.PermissionSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.PermissionSetToXml(System.Security.PermissionSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.RemoveNonReferencedPermissions(System.String[],Microsoft.Build.Framework.ITaskItem[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String)">
    <parameter name="cert">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Security.SecureString,System.Uri,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="certPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignFile(System.String,System.Uri,System.String)">
    <parameter name="certThumbprint">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.SignPEFile(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Uri,System.String,System.Resources.ResourceManager)">
    <parameter name="cert">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resources">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlElementToSecurityElement(System.Xml.XmlElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="xe">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToIdentityList(System.Xml.XmlElement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="psElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.SecurityUtilities.XmlToPermissionSet(System.Xml.XmlElement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.AddSameSiteAttribute(System.Xml.XmlElement)">
    <parameter name="permissionSetElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.FixupPermissionSetElement(System.Xml.XmlElement)">
    <parameter name="permissionSetElement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.GetInputPermissionSetElement">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.GetInputRequestedPrivilegeElement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.GetOutputPermissionSetDocument">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.GetPermissionSetElement(System.Xml.XmlDocument)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.GetRequestedPrivilegeElement(System.Xml.XmlElement,System.Xml.XmlDocument)">
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.IO.Stream,System.String)">
    <parameter name="xpath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Read(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadManifest(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.ReadTrustInfo(System.String)">
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(System.IO.Stream)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.Write(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.IO.Stream,System.IO.Stream)">
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TrustInfo.WriteManifest(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.#ctor(System.Guid,System.Version,System.String,System.Int32,System.Int32)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.TypeLib.FlagsFromInt(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.ByteArrayToHex(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.ByteArrayToString(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.CompareFrameworkVersions(System.String,System.String)">
    <parameter name="versionB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versionA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.ConvertFrameworkVersionToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.CopyStream(System.IO.Stream,System.IO.Stream)">
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="output">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.FilterNonprintableChars(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.GetAssemblyPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.GetEmbeddedResourceString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.GetFileInfo(System.String,System.String@,System.Int64@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.GetRegisteredOrganization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.IsValidAssemblyName(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.IsValidCulture(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.IsValidFileName(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.IsValidFrameworkVersion(System.String)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.IsValidVersion(System.String,System.Int32)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.ItemComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="obj2">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="obj1">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.RemoveDuplicateItems(Microsoft.Build.Framework.ITaskItem[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.SortItems(Microsoft.Build.Framework.ITaskItem[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.WriteFile(System.String,System.IO.Stream)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.WriteFile(System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.WriteLog(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.WriteLogFile(System.String,System.IO.Stream)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.WriteLogFile(System.String,System.String)">
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.WriteLogFile(System.String,System.Xml.XmlElement)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.Util.WriteTempFile(System.IO.Stream)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.XmlNamespaces.GetNamespaceManager(System.Xml.XmlNameTable)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="nameTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.XmlUtil.CloneElementToDocument(System.Xml.XmlElement,System.Xml.XmlDocument,System.String)">
    <parameter name="element">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.XmlUtil.GetQName(System.Xml.XmlTextReader,System.Xml.XmlNamespaceManager)">
    <parameter name="r">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nsmgr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.XmlUtil.TrimPrefix(System.String)">
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Deployment.ManifestUtilities.XmlUtil.XslTransform(System.String,System.IO.Stream,System.Collections.DictionaryEntry[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="input">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="entries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.DirectoryResolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Exec.OutputMatchesRegex(System.String,System.String@)">
    <parameter name="singleLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.Exec.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.FileState.FileInfo">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.FindAppConfigFile.IsMatchingItem(Microsoft.Build.Framework.ITaskItem,System.Boolean)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.FindInList.IsMatchingItem(System.StringComparison,Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.FrameworkPathResolver.GetHighestVersionInRedist(Microsoft.Build.Tasks.InstalledAssemblies,Microsoft.Build.Shared.AssemblyNameExtension)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.FrameworkPathResolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GacResolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="executableExtensions">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.AddClickOnceFileAssociations(Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.AddClickOnceFiles(Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.AddIsolatedComReferences(Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.BuildApplicationManifest(Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.BuildResolvedSettings(Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.CreateAssemblyIdentity(System.String[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="values">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateApplicationManifest.EnsureAssemblyReferenceExists(Microsoft.Build.Tasks.Deployment.ManifestUtilities.ApplicationManifest,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyIdentity)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateDeploymentManifest.BuildResolvedSettings(Microsoft.Build.Tasks.Deployment.ManifestUtilities.DeployManifest)">
    <parameter name="manifest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyFromItem(Microsoft.Build.Framework.ITaskItem)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddAssemblyNameFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddEntryPointFromItem(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.AssemblyReferenceType)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.AddFileFromItem(Microsoft.Build.Framework.ITaskItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.FindFileFromItem(Microsoft.Build.Framework.ITaskItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.GetItemAssemblyType(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.GetItemDependencyType(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.GetObjectType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.IsEmbedInteropEnabledForAssembly(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateManifestBase.SetItemAttributes(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.Deployment.ManifestUtilities.BaseReference)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.ByteArrayFromBase64WrappedString(System.String)">
    <parameter name="text">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.CalculateResourceBatchSize(System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem},System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem},System.String,System.Int32)">
    <parameter name="inputsToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputsToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.CreateResGenTaskWithDefaultParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.DetermineWhetherSerializedObjectLoads(System.String)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.GenerateResGenCommandLineWithoutResources(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
    <parameter name="resGenCommand">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.GenerateResourcesUsingResGen(System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem},System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem})">
    <parameter name="outputsToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputsToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.GenerateStronglyTypedResourceUsingResGen(System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem},System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem})">
    <parameter name="inputsToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputsToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.GenerateTrackerLogDirectory">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.LogResgenCommandLine(System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem},System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem})">
    <parameter name="inputFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputFiles">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.NeedSeparateAppDomainBasedOnSerializedType(System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.ResGen.GenerateResGenFullPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.GenerateResource.ResGen.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.GenerateResource.TLogReadFiles">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.GenerateResource.TLogWriteFiles">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateResource.TransformResourceFilesUsingResGen(System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem},System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem})">
    <parameter name="inputsToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputsToProcess">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GenerateTrustInfo.StringToIdentityList(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="s">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GetAssemblyIdentity.ByteArrayToHex(System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.FullFrameworkReferenceAssemblyPaths">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.GetPaths(System.String,System.Runtime.Versioning.FrameworkName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="frameworkmoniker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.GetReferenceAssemblyPaths.ReferenceAssemblyPaths">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.GlobalAssemblyCache.CheckForFullFusionNameInGac(Microsoft.Build.Shared.AssemblyNameExtension,System.String,Microsoft.Build.Tasks.GetPathFromFusionName)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getPathFromFusionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GlobalAssemblyCache.GenerateListOfAssembliesByRuntime(System.String,Microsoft.Build.Tasks.GetAssemblyRuntimeVersion,System.Version,Microsoft.Build.Shared.FileExists,Microsoft.Build.Tasks.GetPathFromFusionName,Microsoft.Build.Tasks.GetGacEnumerator,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="getRuntimeVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetedRuntime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileExists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getPathFromFusionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="getGacEnumerator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.GlobalAssemblyCache.GetGacNativeEnumerator(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.GlobalAssemblyCache.GetGacPath">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.GlobalAssemblyCache.GetLocation(Microsoft.Build.Shared.AssemblyNameExtension,System.Reflection.ProcessorArchitecture,Microsoft.Build.Tasks.GetAssemblyRuntimeVersion,System.Version,System.Boolean,Microsoft.Build.Shared.FileExists,Microsoft.Build.Tasks.GetPathFromFusionName,Microsoft.Build.Tasks.GetGacEnumerator,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="strongName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.HintPathResolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="executableExtensions">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.InstalledAssemblies.FindAssemblyNameFromSimpleName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="simpleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.InstalledAssemblies.FindHighestVersionInRedistList(Microsoft.Build.Shared.AssemblyNameExtension)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.InstalledAssemblies.GetInfo(Microsoft.Build.Shared.AssemblyNameExtension,System.Version@,System.Boolean@,System.Nullable{System.Boolean}@,System.String@)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.InteropUtilities.RCWForCurrentContext`1.RCW">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.InvalidParameterValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.InvalidReferenceAssemblyNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.LC.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Move.MakeWriteableIfReadOnly(System.String)">
    <parameter name="file">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Move.MoveFileWithLogging(System.String,System.String)">
    <parameter name="destinationFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sourceFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.MSBuild.BuildProjectsInParallel(System.Collections.Hashtable,System.String[],System.Collections.ArrayList,System.Boolean,System.Boolean[])">
    <parameter name="skipProjects">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.MSBuild.CreateTargetLists(System.String[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.MSBuild.ExecuteTargets(Microsoft.Build.Framework.ITaskItem[],System.Collections.Hashtable,System.String[],System.Collections.ArrayList,System.Boolean,System.Boolean,Microsoft.Build.Framework.IBuildEngine3,Microsoft.Build.Utilities.TaskLoggingHelper,System.Collections.ArrayList,System.Boolean,System.Boolean,System.String)">
    <parameter name="projects">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetLists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buildEngine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetOutputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.NativeMethods.AssemblyCacheEnum.GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.NativeMethods.AssemblyCacheEnum.GetFullName(Microsoft.Build.Tasks.IAssemblyName)">
    <parameter name="fusionAsmName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.NativeMethods.AssemblyCacheEnum.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ParseState.ComposeQualifiedClassName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.AddResource(System.String,System.Object,System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.AddResource(System.String,System.Object,System.String,System.Int32,System.Int32)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.GenerateDefaultStronglyTypedFilename(System.CodeDom.Compiler.CodeDomProvider,System.String)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.LineNumberStreamReader.#ctor(System.IO.Stream)">
    <parameter name="stream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.LineNumberStreamReader.#ctor(System.String,System.Text.Encoding,System.Boolean)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="encoding">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.ProcessFile(System.String,System.String)">
    <parameter name="inFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.ReadResources(System.Resources.IResourceReader,System.String)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.ReadResources(System.String,System.Boolean)">
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.ReadTextResources(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.ResolveAssembly(System.Object,System.ResolveEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.Run(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Framework.ITaskItem[],System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem},System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem},System.Boolean,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
    <parameter name="inputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="outputs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.TextFileException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.TryCreateCodeDomProvider(Microsoft.Build.Utilities.TaskLoggingHelper,System.String,System.CodeDom.Compiler.CodeDomProvider@)">
    <parameter name="logger">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stronglyTypedLanguage">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.ProcessResourceFiles.UnsuccessfullyCreatedOutFiles">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.WriteResources(System.Resources.IResourceWriter)">
    <parameter name="writer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.WriteResources(System.String)">
    <parameter name="filename">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ProcessResourceFiles.WriteTextResources(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.PropertyParser.GetTableWithEscaping(Microsoft.Build.Utilities.TaskLoggingHelper,System.String,System.String,System.String[],System.Collections.Hashtable@)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RawFilenameResolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="executableExtensions">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReadLinesFromFile.LogError(Microsoft.Build.Framework.ITaskItem,System.Exception,System.Boolean@)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.#ctor(Microsoft.Build.Tasks.AssemblyTableInfo[])">
    <parameter name="assemblyTableInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.FindAssemblyNameFromSimpleName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="simpleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.FrameworkAssemblyEntryInRedist(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.GenerateBlackList(Microsoft.Build.Tasks.AssemblyTableInfo[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="whiteListAssemblyTableInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.GetRedistList(Microsoft.Build.Tasks.AssemblyTableInfo[])">
    <parameter name="assemblyTables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.GetRedistListPathsFromDisk(System.String)">
    <parameter name="frameworkDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.GetSimpleName(System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.GetUnifiedAssemblyEntry(System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.GetUnifiedAssemblyName(System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.IsFrameworkAssembly(System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.IsPrerequisiteAssembly(System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.IsRedistRoot(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.ReadFile(Microsoft.Build.Tasks.AssemblyTableInfo,System.Collections.Generic.List{Microsoft.Build.Tasks.AssemblyEntry},System.Collections.ArrayList,System.Collections.ArrayList)">
    <parameter name="assemblyTableInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assembliesList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errorFilenamesList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.RedistList.RedistListFolder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.RedistName(System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.SortByVersionDescending.Compare(Microsoft.Build.Tasks.AssemblyEntry,Microsoft.Build.Tasks.AssemblyEntry)">
    <parameter name="secondEntry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="firstEntry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RedistList.SortByVersionDescending.Compare(System.Object,System.Object)">
    <parameter name="b">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="a">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.AddAssembliesConsideredAndRejected(System.Collections.ArrayList)">
    <parameter name="assembliesConsideredAndRejectedToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.AddDependee(Microsoft.Build.Tasks.Reference)">
    <parameter name="dependee">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.AddDependency(Microsoft.Build.Tasks.Reference)">
    <parameter name="dependency">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.AddPreUnificationVersion(System.String,System.Version,Microsoft.Build.Tasks.UnificationReason)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.AddSourceItem(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="sourceItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.AddSourceItems(System.Collections.IEnumerable)">
    <parameter name="sourceItemsToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.Reference.FileNameWithoutExtension">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.GetDependees">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.GetPreUnificationVersions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.GetSourceItems">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.MakeDependentAssemblyReference(Microsoft.Build.Tasks.Reference)">
    <parameter name="sourceReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.MakePrimaryAssemblyReference(Microsoft.Build.Framework.ITaskItem,System.Boolean,System.String)">
    <parameter name="sourceItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.PropagateSourceItems(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="sourceItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.RemoveDependee(Microsoft.Build.Tasks.Reference)">
    <parameter name="dependeeToRemove">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.RemoveDependency(Microsoft.Build.Tasks.Reference)">
    <parameter name="dependencyToRemove">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.SetExecutableExtension(System.String)">
    <parameter name="extension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Reference.SetFinalCopyLocalState(Microsoft.Build.Shared.AssemblyNameExtension,System.String[],System.Reflection.ProcessorArchitecture,Microsoft.Build.Tasks.GetAssemblyRuntimeVersion,System.Version,Microsoft.Build.Shared.FileExists,System.Boolean,Microsoft.Build.Tasks.ReferenceTable,Microsoft.Build.Tasks.CheckIfAssemblyInGac)">
    <parameter name="referenceTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="checkIfAssemblyInGac">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceResolutionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String[],System.String[],System.String[],System.String[],System.String[],Microsoft.Build.Tasks.InstalledAssemblies,System.Reflection.ProcessorArchitecture,Microsoft.Build.Shared.FileExists,Microsoft.Build.Shared.DirectoryExists,Microsoft.Build.Tasks.GetDirectories,Microsoft.Build.Tasks.GetAssemblyName,Microsoft.Build.Tasks.GetAssemblyMetadata,Microsoft.Build.Tasks.GetRegistrySubKeyNames,Microsoft.Build.Tasks.GetRegistrySubKeyDefaultValue,Microsoft.Build.Tasks.OpenBaseKey,Microsoft.Build.Tasks.GetAssemblyRuntimeVersion,System.Version,System.Version,System.Runtime.Versioning.FrameworkName,Microsoft.Build.Utilities.TaskLoggingHelper,System.String[],System.Boolean,Microsoft.Build.Tasks.CheckIfAssemblyInGac)">
    <parameter name="searchPaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.AddReference(Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.AddToDependencyGraph(System.Collections.Generic.Dictionary{Microsoft.Build.Tasks.Reference,System.Collections.Generic.List{Microsoft.Build.Tasks.ReferenceTable.ReferenceAssemblyExtensionPair}},Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference)">
    <parameter name="dependencyGraph">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.BuildSimpleNameTable">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.CalcuateParentAssemblyDirectories(System.Collections.Hashtable,System.Collections.Generic.List{System.String},Microsoft.Build.Tasks.Reference)">
    <parameter name="parentReferenceFolderHash">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentReferenceFolders">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.ComputeClosure(Microsoft.Build.Tasks.DependentAssembly[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.Collections.ArrayList)">
    <parameter name="exceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.FindCopyLocalItems(Microsoft.Build.Framework.ITaskItem[],System.Collections.ArrayList)">
    <parameter name="items">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="copyLocalItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.FindDependenciesAndScatterFiles(Microsoft.Build.Tasks.Reference,System.Collections.ArrayList)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newEntries">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.FindRelatedFiles(Microsoft.Build.Tasks.Reference)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.FindSatellites(Microsoft.Build.Tasks.Reference)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.FindSerializationAssemblies(Microsoft.Build.Tasks.Reference)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.GetHighestVersionReferenceAssemblyDirectories(System.Runtime.Versioning.FrameworkName,System.Runtime.Versioning.FrameworkName@)">
    <parameter name="targetFrameworkMoniker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.GetReference(Microsoft.Build.Shared.AssemblyNameExtension)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.GetUnifiedAssemblyMetadata(Microsoft.Build.Tasks.Reference,System.Collections.Generic.IEnumerable{Microsoft.Build.Tasks.UnifiedAssemblyName}@,System.String[]@)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.InLatestRedistList(Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.LogAnotherFrameworkUnResolve(System.Boolean,Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.ITaskItem,System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referenceItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.LogHigherVersionUnresolve(System.Boolean,Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.ITaskItem,System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referenceItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.LogProfileExclusionUnresolve(System.Boolean,Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.ITaskItem,System.String)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="referenceItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.MarkReferenceForExclusionDueToHigherThanCurrentFramework(Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.MarkReferencesExcludedDueToOtherFramework(Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.MarkReferenceWithHighestVersionInCurrentRedistList(Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.NameAssemblyFileReference(Microsoft.Build.Tasks.Reference,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyFileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.RemoveDependencies(Microsoft.Build.Tasks.Reference,System.Collections.Generic.Dictionary{Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference},System.Collections.Generic.Dictionary{Microsoft.Build.Tasks.Reference,System.Collections.Generic.List{Microsoft.Build.Tasks.ReferenceTable.ReferenceAssemblyExtensionPair}})">
    <parameter name="referenceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dependencyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="removedReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.RemoveDependencyMarkedForExclusion(Microsoft.Build.Tasks.ReferenceTable.LogExclusionReason,System.Boolean,System.String,System.Collections.Generic.Dictionary{Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference},System.Collections.Generic.List{Microsoft.Build.Tasks.Reference},Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference)">
    <parameter name="goodReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="removedReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.RemovePrimaryReferenceMarkedForExclusion(Microsoft.Build.Tasks.ReferenceTable.LogExclusionReason,System.Boolean,System.String,System.Collections.Generic.List{Microsoft.Build.Tasks.Reference},Microsoft.Build.Shared.AssemblyNameExtension,Microsoft.Build.Tasks.Reference)">
    <parameter name="removedReferences">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.ResolveReference(Microsoft.Build.Shared.AssemblyNameExtension,System.String,Microsoft.Build.Tasks.Reference)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.SetItemMetadata(System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.Collections.ArrayList,System.String,Microsoft.Build.Tasks.Reference)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="relatedItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="satelliteItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="serializationAssemblyItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="scatterItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fusionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.SetPrimaryAssemblyReferenceItem(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="referenceAssemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.SetPrimaryFileItem(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="referenceAssemblyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.SetPrimaryItems(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.Collections.ArrayList)">
    <parameter name="exceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.TryConvertToAssemblyName(System.String,System.String,Microsoft.Build.Shared.AssemblyNameExtension@)">
    <parameter name="itemSpec">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.TryGatherAssemblyNameEssentials(System.String,Microsoft.Build.Shared.AssemblyNameExtension@)">
    <parameter name="fusionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.TryGetAssemblyNameComponent(System.String,System.String,System.String@)">
    <parameter name="fusionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReferenceTable.UnifyAssemblyNameVersions(Microsoft.Build.Shared.AssemblyNameExtension,System.Version@,Microsoft.Build.Tasks.UnificationReason@,System.Boolean@,System.Nullable{System.Boolean}@,System.String@)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RegisterAssembly.Register(System.String,System.String)">
    <parameter name="assemblyPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeLibPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RegisterAssembly.ResolveRef(System.Reflection.Assembly)">
    <parameter name="assemblyToResolve">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.RegistryHelper.GetDefaultValue(Microsoft.Win32.RegistryKey,System.String)">
    <parameter name="baseKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="subkey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RegistryHelper.GetSubKeyNames(Microsoft.Win32.RegistryKey,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="subkey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RegistryHelper.OpenBaseKey(Microsoft.Win32.RegistryHive,Microsoft.Win32.RegistryView)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.RemoveDir.RemoveDirectory(Microsoft.Build.Framework.ITaskItem,System.Boolean,System.Boolean@)">
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RemoveDir.RemoveReadOnlyAttributeRecursively(System.IO.DirectoryInfo)">
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.CompareFrameworkVersions(System.String,System.String)">
    <parameter name="versionB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versionA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RequiresFramework35SP1Assembly.ConvertFrameworkVersionToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.CheckForAssemblyInGac(Microsoft.Build.Shared.AssemblyNameExtension,System.Reflection.ProcessorArchitecture,Microsoft.Build.Tasks.GetAssemblyRuntimeVersion,System.Version,Microsoft.Build.Shared.FileExists)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.ChooseReferenceLoggingImportance(Microsoft.Build.Tasks.Reference)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.DumpTargetProfileLists(Microsoft.Build.Tasks.AssemblyTableInfo[],Microsoft.Build.Tasks.AssemblyTableInfo[],Microsoft.Build.Tasks.ReferenceTable)">
    <parameter name="referenceTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.Execute(Microsoft.Build.Shared.FileExists,Microsoft.Build.Shared.DirectoryExists,Microsoft.Build.Tasks.GetDirectories,Microsoft.Build.Tasks.GetAssemblyName,Microsoft.Build.Tasks.GetAssemblyMetadata,Microsoft.Build.Tasks.GetRegistrySubKeyNames,Microsoft.Build.Tasks.GetRegistrySubKeyDefaultValue,Microsoft.Build.Tasks.GetLastWriteTime,Microsoft.Build.Tasks.GetAssemblyRuntimeVersion,Microsoft.Build.Tasks.OpenBaseKey,Microsoft.Build.Tasks.CheckIfAssemblyInGac)">
    <parameter name="getRuntimeVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.FrameworkVersionFromString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.GenerateSubSetName(System.String[],Microsoft.Build.Framework.ITaskItem[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.GetInstalledAssemblyTableInfo(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Tasks.ResolveAssemblyReference.GetListPath,System.String[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="assemblyTables">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="GetAssemblyListPaths">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetFrameworkDirectories">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.HandleProfile(Microsoft.Build.Tasks.AssemblyTableInfo[],Microsoft.Build.Tasks.AssemblyTableInfo[]@,System.Collections.Hashtable@,Microsoft.Build.Tasks.RedistList@)">
    <parameter name="installedAssemblyTableInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogAssembliesConsideredAndRejected(Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogAttribute(Microsoft.Build.Framework.ITaskItem,System.String)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="metadataName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogConflict(Microsoft.Build.Tasks.Reference,System.String)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogCopyLocalState(Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogDependeeReference(Microsoft.Build.Tasks.Reference)">
    <parameter name="dependeeReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogDependees(Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogFullName(Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogPrimaryOrDependency(Microsoft.Build.Tasks.Reference,System.String,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogReference(Microsoft.Build.Tasks.Reference,System.String)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogReferenceDependenciesAndSourceItems(System.String,Microsoft.Build.Tasks.Reference)">
    <parameter name="conflictCandidate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogReferenceErrors(Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogRelatedFiles(Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogResults(Microsoft.Build.Tasks.ReferenceTable,Microsoft.Build.Tasks.DependentAssembly[],Microsoft.Build.Tasks.AssemblyNameReference[],System.Collections.ArrayList)">
    <parameter name="dependencyTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="idealAssemblyRemappings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="idealAssemblyRemappingsIdentities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="generalResolutionExceptions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogSatellites(Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.LogScatterFiles(Microsoft.Build.Tasks.Reference,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveAssemblyReference.ProcessorArchitectureToString(System.Reflection.ProcessorArchitecture)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.ResolveComReference.AxImp.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ConvertAttrReferencesToComReferenceInfo(System.Collections.Generic.List{Microsoft.Build.Tasks.ComReferenceInfo},Microsoft.Build.Framework.ITaskItem[])">
    <parameter name="projectRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ConvertFileReferencesToComReferenceInfo(System.Collections.Generic.List{Microsoft.Build.Tasks.ComReferenceInfo},Microsoft.Build.Framework.ITaskItem[])">
    <parameter name="projectRefs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.GetResolvedAssemblyReferenceItemSpecs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.InitializeDefaultMetadataForFileItem(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.InitializeDefaultMetadataForNameItem(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.Microsoft#Build#Tasks#IComReferenceResolver#ResolveNetAssemblyReference(System.String,System.String@)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ResolveComClassicReference(Microsoft.Build.Tasks.ComReferenceInfo,System.String,System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String},Microsoft.Build.Tasks.ComReferenceWrapperInfo@)">
    <parameter name="referenceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ResolveComReferenceAx(Microsoft.Build.Tasks.ComReferenceInfo,System.String,System.String,Microsoft.Build.Tasks.ComReferenceWrapperInfo@)">
    <parameter name="referenceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ResolveComReferencePia(Microsoft.Build.Tasks.ComReferenceInfo,System.String,Microsoft.Build.Tasks.ComReferenceWrapperInfo@)">
    <parameter name="referenceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ResolveComReferenceTlb(Microsoft.Build.Tasks.ComReferenceInfo,System.String,System.String,System.Boolean,System.Collections.Generic.List{System.String},Microsoft.Build.Tasks.ComReferenceWrapperInfo@)">
    <parameter name="referenceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ResolveReference(Microsoft.Build.Tasks.ComDependencyWalker,Microsoft.Build.Tasks.ComReferenceInfo,System.String,Microsoft.Build.Framework.ITaskItem@)">
    <parameter name="referenceInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dependencyWalker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ResolveReferenceAndAddToList(Microsoft.Build.Tasks.ComDependencyWalker,Microsoft.Build.Tasks.ComReferenceInfo,System.Collections.ArrayList,System.Collections.ArrayList)">
    <parameter name="projectRefInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resolvedReferenceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="moduleList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dependencyWalker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.ScanAndResolveAllDependencies(Microsoft.Build.Tasks.ComDependencyWalker,Microsoft.Build.Tasks.ComReferenceInfo)">
    <parameter name="dependencyWalker">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.SetCopyLocalToFalseOnGacOrNoPIAAssemblies(System.Collections.ArrayList,System.String)">
    <parameter name="outputTaskItems">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="gacPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.TaskItemToTypeLibAttr(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="taskItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.TlbImp.ConvertTransformFlagsToCommandLineCommand(Microsoft.Build.Tasks.ResolveComReference.TlbImpTransformFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.TlbImp.GetTlbImpTransformFlagsParameterWithDefault(System.String,Microsoft.Build.Tasks.ResolveComReference.TlbImpTransformFlags)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.ResolveComReference.TlbImp.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveComReference.VerifyReferenceMetadataForNameItem(Microsoft.Build.Framework.ITaskItem,System.String@)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.ResolveComReferenceCache.Item(System.String)">
    <parameter name="componentPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveKeySource.HashFromBlob(System.Byte[])">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.AssemblyMap.Add(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.AssemblyMap.Item(System.String)">
    <parameter name="fusionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.AssemblyMap.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.CompareFrameworkVersions(System.String,System.String)">
    <parameter name="versionB">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="versionA">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.ConvertFrameworkVersionToString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.CreateAssemblyItem(Microsoft.Build.Framework.ITaskItem,System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.CreateFileItem(Microsoft.Build.Framework.ITaskItem,System.String,System.String,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.CreatePrerequisiteItem(Microsoft.Build.Framework.ITaskItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.FileMap.Add(Microsoft.Build.Framework.ITaskItem,System.Boolean)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.ResolveManifestFiles.FileMap.Item(System.String)">
    <parameter name="targetPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.FileMap.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.GetItemCopyLocal(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.GetItemCulture(Microsoft.Build.Framework.ITaskItem)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.GetItemTargetPath(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.GetOutputAssemblies(Microsoft.Build.Tasks.ResolveManifestFiles.PublishInfo[],System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem}@)">
    <parameter name="publishInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.GetOutputAssembliesAndSatellites(Microsoft.Build.Tasks.ResolveManifestFiles.PublishInfo[],Microsoft.Build.Tasks.ResolveManifestFiles.PublishInfo[])">
    <parameter name="satellitePublishInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyPublishInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.GetOutputEntryPoint(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Tasks.ResolveManifestFiles.PublishInfo[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="manifestEntryPointList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.GetOutputFiles(Microsoft.Build.Tasks.ResolveManifestFiles.PublishInfo[])">
    <parameter name="publishInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.GetOutputSatellites(Microsoft.Build.Tasks.ResolveManifestFiles.PublishInfo[],System.Collections.Generic.List{Microsoft.Build.Framework.ITaskItem}@)">
    <parameter name="publishInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.IsFiltered(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.PublishFlags.GetAssemblyFlags(Microsoft.Build.Tasks.ResolveManifestFiles.PublishState,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.PublishFlags.GetFileFlags(Microsoft.Build.Tasks.ResolveManifestFiles.PublishState,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="fileExtension">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.PublishFlags.GetSatelliteFlags(Microsoft.Build.Tasks.ResolveManifestFiles.PublishState,System.Globalization.CultureInfo,System.Globalization.CultureInfo,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveManifestFiles.PublishInfo.#ctor(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.ExtractFromManifest(Microsoft.Build.Framework.ITaskItem,System.String,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Hashtable,System.Collections.Hashtable)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containingReferenceFilesTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containedPrerequisiteAssembliesTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containedComComponentsTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containedTypeLibrariesTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containedLooseTlbFilesTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="containedLooseEtcFilesTable">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveNativeReference.ItemSpecComparerClass.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="taskItem1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="taskItem2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveNonMSBuildProjectOutput.ResolveProject(Microsoft.Build.Framework.ITaskItem,Microsoft.Build.Framework.ITaskItem@)">
    <parameter name="projectRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.GetProjectElement(Microsoft.Build.Framework.ITaskItem)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="projectRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.GetProjectItem(Microsoft.Build.Framework.ITaskItem)">
    <parameter name="projectRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.VerifyProjectReferenceItems(Microsoft.Build.Framework.ITaskItem[],System.Boolean)">
    <parameter name="references">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ResolveProjectBase.VerifyReferenceAttributes(Microsoft.Build.Framework.ITaskItem,System.String@)">
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Resolver.FileMatchesAssemblyName(Microsoft.Build.Shared.AssemblyNameExtension,System.Boolean,System.Boolean,System.Boolean,System.String,Microsoft.Build.Tasks.ResolutionSearchLocation)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="searchLocation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Resolver.Resolve(Microsoft.Build.Shared.AssemblyNameExtension,System.String,System.Boolean,System.Boolean,System.String[],System.String,System.String,System.Collections.ArrayList,System.String@,System.Boolean@)">
    <parameter name="executableExtensions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Resolver.ResolveAsFile(System.String,Microsoft.Build.Shared.AssemblyNameExtension,System.Boolean,System.Boolean,System.Boolean,System.Collections.ArrayList)">
    <parameter name="assemblyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Resolver.ResolveFromDirectory(Microsoft.Build.Shared.AssemblyNameExtension,System.Boolean,System.Boolean,System.String[],System.String,System.Collections.ArrayList)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="executableExtensions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReverseVersionComparer.System#Collections#IComparer#Compare(System.Object,System.Object)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ReverseVersionGenericComparer.System#Collections#Generic#IComparer{System#Version}#Compare(System.Version,System.Version)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.RuntimeSection.Read(System.Xml.XmlTextReader)">
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SdkToolsPathUtility.FileExists(System.String)">
    <parameter name="filePath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SdkToolsPathUtility.GeneratePathToTool(Microsoft.Build.Shared.FileExists,System.String,System.String,System.String,Microsoft.Build.Utilities.TaskLoggingHelper,System.Boolean)">
    <parameter name="fileExists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toolName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.SGen.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.SR.Culture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.SR.GetObject(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SR.GetString(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.SR.GetString(System.String,System.Boolean@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SR.GetString(System.String,System.Object[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.StateFileBase.DeleteFile(System.String,Microsoft.Build.Utilities.TaskLoggingHelper)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StateFileBase.DeserializeCache(System.String,Microsoft.Build.Utilities.TaskLoggingHelper,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="requiredReturnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StateFileBase.SerializeCache(System.String,Microsoft.Build.Utilities.TaskLoggingHelper)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.AddGeneratedCodeAttributeforMember(System.CodeDom.CodeTypeMember)">
    <parameter name="typeMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
    <parameter name="resourceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.Create(System.Collections.IDictionary,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
    <parameter name="resourceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
    <parameter name="resxFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.Create(System.String,System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
    <parameter name="resxFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.DefineResourceFetchingProperty(System.String,System.String,Microsoft.Build.Tasks.StronglyTypedResourceBuilder.ResourceData,System.CodeDom.CodeTypeDeclaration,System.Boolean,System.Boolean)">
    <parameter name="data">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="srClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.EmitBasicClassMembers(System.CodeDom.CodeTypeDeclaration,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="srClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.InternalCreate(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Tasks.StronglyTypedResourceBuilder.ResourceData},System.String,System.String,System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean,System.String[]@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="baseName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="resourceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.VerifyResourceName(System.String,System.CodeDom.Compiler.CodeDomProvider,System.Boolean)">
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StronglyTypedResourceBuilder.VerifyResourceNames(System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Tasks.StronglyTypedResourceBuilder.ResourceData},System.CodeDom.Compiler.CodeDomProvider,System.Collections.ArrayList,System.Collections.Hashtable@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="resourceList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="codeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="errors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StrongNameException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StrongNameUtils.GetStrongNameKey(Microsoft.Build.Utilities.TaskLoggingHelper,System.String,System.String,System.Reflection.StrongNameKeyPair@,System.Byte[]@)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.StrongNameUtils.ReadKeyFile(Microsoft.Build.Utilities.TaskLoggingHelper,System.String,System.Reflection.StrongNameKeyPair@,System.Byte[]@)">
    <parameter name="log">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="keyFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SubsetListFinder.GetSubsetListPathsFromDisk(System.String)">
    <parameter name="frameworkDirectory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.SubsetListFinder.SubsetListFolder">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.CacheDelegate(Microsoft.Build.Shared.FileExists)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.CacheDelegate(Microsoft.Build.Tasks.GetAssemblyMetadata)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.CacheDelegate(Microsoft.Build.Tasks.GetAssemblyName)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.CacheDelegate(Microsoft.Build.Tasks.GetAssemblyRuntimeVersion)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="getAssemblyRuntimeVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.CacheDelegate(Microsoft.Build.Tasks.GetDirectories)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.FileExists(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.FileState.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.FileState.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.GetAssemblyMetadata(System.String,Microsoft.Build.Shared.AssemblyNameExtension[]@,System.String[]@)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.GetAssemblyName(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.GetDirectories(System.String,System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.GetFileState(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.GetRuntimeVersion(System.String)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.SystemState.SetInstalledAssemblyInformation(Microsoft.Build.Tasks.AssemblyTableInfo[])">
    <parameter name="installedAssemblyTableInfos">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.TaskItemSpecFilenameComparer.Compare(System.Object,System.Object)">
    <parameter name="o1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="o2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.TaskLoggingHelperExtension.#ctor(Microsoft.Build.Framework.ITask,System.Resources.ResourceManager,System.Resources.ResourceManager,System.String)">
    <parameter name="taskInstance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.TlbReference.GetWrapperFileName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.TlbReference.GetWrapperFileName(System.String,System.Boolean,System.Int16,System.Int16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.TlbReference.System#Runtime#InteropServices#ITypeLibImporterNotifySink#ResolveRef(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="objTypeLib">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.TlbReference.WriteWrapperToDisk(System.Reflection.Emit.AssemblyBuilder,System.String)">
    <parameter name="assemblyBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="wrapperPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddCommandLineCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
    <parameter name="commandLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.AddResponseFileCommands(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
    <parameter name="commandLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetBoolParameterWithDefault(System.String,System.Boolean)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.ToolTaskExtension.GetIntParameterWithDefault(System.String,System.Int32)">
    <parameter name="parameterName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Touch.CreateFile(System.String,Microsoft.Build.Shared.FileCreate)">
    <parameter name="fileCreate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Touch.ExecuteImpl(Microsoft.Build.Shared.FileExists,Microsoft.Build.Shared.FileCreate,Microsoft.Build.Tasks.GetAttributes,Microsoft.Build.Tasks.SetAttributes,Microsoft.Build.Tasks.SetLastAccessTime,Microsoft.Build.Tasks.SetLastWriteTime)">
    <parameter name="fileExists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileSetLastWriteTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileCreate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileSetAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileSetLastAccessTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileGetAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Touch.TouchFile(System.String,System.DateTime,Microsoft.Build.Shared.FileExists,Microsoft.Build.Shared.FileCreate,Microsoft.Build.Tasks.GetAttributes,Microsoft.Build.Tasks.SetAttributes,Microsoft.Build.Tasks.SetLastAccessTime,Microsoft.Build.Tasks.SetLastWriteTime)">
    <parameter name="fileExists">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileCreate">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileGetAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileSetAttributes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileSetLastAccessTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="fileSetLastWriteTime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.UnifiedAssemblyName.IsRedistRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.UnregisterAssembly.Unregister(System.String,System.String)">
    <parameter name="assemblyPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Vbc.AddReferencesToCommandLine(Microsoft.Build.Tasks.CommandLineBuilderExtension)">
    <parameter name="commandLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Vbc.GetDefineConstantsSwitch(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Vbc.InitializeHostCompiler(Microsoft.Build.Tasks.Hosting.IVbcHostObject)">
    <parameter name="vbcHostObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Vbc.ParseVBErrorOrWarning(System.String,Microsoft.Build.Framework.MessageImportance)">
    <parameter name="singleLine">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:Microsoft.Build.Tasks.Vbc.ToolName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.VersionUtilities.ConvertToVersion(System.String)">
    <parameter name="version">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.VisualBasicParserUtilities.Extract(Microsoft.Build.Shared.LanguageParser.VisualBasicTokenizer)">
    <parameter name="tokens">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.WriteCodeFragment.GenerateCode(System.String@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.WriteLinesToFile.LogError(Microsoft.Build.Framework.ITaskItem,System.Exception,System.Boolean@)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.#ctor(Microsoft.Build.Framework.XamlTypes.Rule,System.Collections.Generic.Dictionary{System.String,System.Object})">
    <parameter name="parameterValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitBooleanSwitch(Microsoft.Build.Utilities.CommandLineBuilder,Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="clb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandLineToolSwitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitIntegerSwitch(Microsoft.Build.Utilities.CommandLineBuilder,Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="clb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandLineToolSwitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitReversibleBooleanSwitch(Microsoft.Build.Utilities.CommandLineBuilder,Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="clb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandLineToolSwitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitStringArraySwitch(Microsoft.Build.Utilities.CommandLineBuilder,Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="clb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandLineToolSwitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitStringSwitch(Microsoft.Build.Utilities.CommandLineBuilder,Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="clb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandLineToolSwitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.EmitTaskItemArraySwitch(Microsoft.Build.Utilities.CommandLineBuilder,Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="clb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandLineToolSwitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.GenerateCommandLine">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.GenerateCommandsAccordingToType(Microsoft.Build.Utilities.CommandLineBuilder,Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch,System.Boolean)">
    <parameter name="clb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandLineToolSwitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.GenerateStandardCommandLine(Microsoft.Build.Utilities.CommandLineBuilder,System.Boolean)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.GenerateTemplatedCommandLine(Microsoft.Build.Utilities.CommandLineBuilder)">
    <parameter name="builder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.HasSwitch(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.PerformSwitchValueSubstition(Microsoft.Build.Utilities.CommandLineBuilder,Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch,System.String)">
    <parameter name="clb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="commandLineToolSwitch">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="switchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.CommandLineGenerator.VerifyDependenciesArePresent(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.Property.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.IsXmlRootElement(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.LoadFile(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.LoadXml(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="xml">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.LogError(System.String,System.Object[])">
    <parameter name="messageResourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.ObtainAttributes(System.Xml.XmlNode,Microsoft.Build.Tasks.Xaml.SwitchRelations)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.ParseImportOption(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.ParseSwitch(System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Tasks.Xaml.SwitchRelations},Microsoft.Build.Tasks.Xaml.SwitchRelations)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="switchRelationsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.ParseSwitchGroupOrSwitch(System.Xml.XmlNode,System.Collections.Generic.Dictionary{System.String,Microsoft.Build.Tasks.Xaml.SwitchRelations},Microsoft.Build.Tasks.Xaml.SwitchRelations)">
    <parameter name="switchRelationsList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.ParseXmlDocument(System.String)">
    <parameter name="fileName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.VerifyAttributeExists(System.Xml.XmlNode,System.String)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.RelationsParser.VerifyNodeName(System.Xml.XmlNode)">
    <parameter name="node">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.SwitchRelations.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.ContainsCurrentPlatform(Microsoft.Build.Tasks.Xaml.Property)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.ContainsCurrentPlatform(System.String)">
    <parameter name="SwitchValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateAssignPropertyToString(System.CodeDom.CodeMemberProperty,System.String,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateAssignPropertyToValue(System.CodeDom.CodeMemberProperty,System.String,System.CodeDom.CodeExpression)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateAssignToolSwitch(System.CodeDom.CodeMemberProperty,System.String,System.String,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateBooleans(Microsoft.Build.Tasks.Xaml.Property,System.CodeDom.CodeMemberProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateCode">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateCommon(Microsoft.Build.Tasks.Xaml.Property,System.CodeDom.CodeMemberProperty,System.String,System.Type,System.String)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="returnType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateCommonSetStatements(Microsoft.Build.Tasks.Xaml.Property,System.CodeDom.CodeMemberProperty,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateConstructor(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="taskClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateDefaultSetProperties(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="taskClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateFallbacks(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="taskClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateImports(System.CodeDom.CodeNamespace)">
    <parameter name="codeNamespace">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateIntegers(Microsoft.Build.Tasks.Xaml.Property,System.CodeDom.CodeMemberProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateITaskItemArray(Microsoft.Build.Tasks.Xaml.Property,System.CodeDom.CodeMemberProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateOverrides(Microsoft.Build.Tasks.Xaml.Property,System.CodeDom.CodeMemberProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateProperties(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.LinkedList{Microsoft.Build.Tasks.Xaml.Property})">
    <parameter name="taskClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateRelations(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="taskClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateStringArrays(Microsoft.Build.Tasks.Xaml.Property,System.CodeDom.CodeMemberProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateStrings(Microsoft.Build.Tasks.Xaml.Property,System.CodeDom.CodeMemberProperty)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.GenerateToolNameProperty(System.CodeDom.CodeTypeDeclaration)">
    <parameter name="taskClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.LogError(System.String,System.Object[])">
    <parameter name="messageResourceName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskGenerator.RemovePropertiesWithIgnoredTypes(System.Collections.Generic.LinkedList{Microsoft.Build.Tasks.Xaml.Property})">
    <parameter name="propertyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskParser.Parse(System.String,System.String)">
    <parameter name="contentOrFile">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="desiredRule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskParser.ParseParameter(Microsoft.Build.Framework.XamlTypes.BaseProperty,System.Collections.Generic.LinkedList{Microsoft.Build.Tasks.Xaml.Property},Microsoft.Build.Tasks.Xaml.Property)">
    <parameter name="baseProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskParser.ParseParameterGroupOrParameter(Microsoft.Build.Framework.XamlTypes.BaseProperty,System.Collections.Generic.LinkedList{Microsoft.Build.Tasks.Xaml.Property},Microsoft.Build.Tasks.Xaml.Property)">
    <parameter name="propertyList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.TaskParser.ParseXamlDocument(System.IO.TextReader,System.String)">
    <parameter name="desiredRule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reader">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.AddActiveSwitchToolValue(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="switchToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.GenerateCommands">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.HasSwitch(System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.Xaml.XamlDataDrivenToolTask.ReplaceToolSwitch(Microsoft.Build.Tasks.Xaml.CommandLineToolSwitch)">
    <parameter name="switchToAdd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)">
    <parameter name="task">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:Microsoft.Build.Tasks.XamlTaskFactory.FactoryName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)">
    <parameter name="taskName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.XmlPeek.LoadNamespaces(System.Xml.XmlNamespaceManager@,System.String)">
    <parameter name="namespaceManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.XmlPeek.XmlInput.CreateReader">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.XmlPoke.LoadNamespaces(System.Xml.XmlNamespaceManager@,System.String)">
    <parameter name="namespaceManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Build.Tasks.XslTransformation.ProcessXsltArguments(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.XslTransformation.XmlInput.CreateReader(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Tasks.XslTransformation.XsltInput.LoadXslt">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:Microsoft.Build.Utilities.CanonicalError.Parse(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:Microsoft.Internal.Performance.CodeMarkers.CodeMarkerEx(Microsoft.Internal.Performance.CodeMarkerEvent,System.Byte[])">
    <parameter name="aBuff">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.CmiManifestSigner.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)">
    <parameter name="strongNameKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.CmiManifestSigner.#ctor(System.Security.Cryptography.AsymmetricAlgorithm,System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="strongNameKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.ManifestSignedXml.#ctor(System.Xml.XmlDocument)">
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.ManifestSignedXml.#ctor(System.Xml.XmlDocument,System.Boolean)">
    <parameter name="document">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.ManifestSignedXml.#ctor(System.Xml.XmlElement)">
    <parameter name="elem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.ManifestSignedXml.FindIdElement(System.Xml.XmlElement,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.#ctor(System.Xml.XmlDocument)">
    <parameter name="manifestDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.AuthenticodeSignLicenseDom(System.Xml.XmlDocument,System.Deployment.Internal.CodeSigning.CmiManifestSigner,System.String)">
    <parameter name="licenseDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.BytesToHexString(System.Byte[],System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.ComputeHashFromManifest(System.Xml.XmlDocument)">
    <parameter name="manifestDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.ComputeHashFromManifest(System.Xml.XmlDocument,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manifestDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.CreateLicenseDom(System.Deployment.Internal.CodeSigning.CmiManifestSigner,System.Xml.XmlElement,System.Byte[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="principal">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="hash">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.ExtractPrincipalFromManifest">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.GetPublicKeyToken(System.Xml.XmlDocument)">
    <parameter name="manifestDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.HexStringToBytes(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="hexString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.InsertPublisherIdentity(System.Xml.XmlDocument,System.Security.Cryptography.X509Certificates.X509Certificate2)">
    <parameter name="manifestDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="signerCert">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.RemoveExistingSignature(System.Xml.XmlDocument)">
    <parameter name="manifestDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.ReplacePublicKeyToken(System.Xml.XmlDocument,System.Security.Cryptography.AsymmetricAlgorithm)">
    <parameter name="manifestDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="snKey">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.Sign(System.Deployment.Internal.CodeSigning.CmiManifestSigner)">
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.Sign(System.Deployment.Internal.CodeSigning.CmiManifestSigner,System.String)">
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.StrongNameSignManifestDom(System.Xml.XmlDocument,System.Xml.XmlDocument,System.Deployment.Internal.CodeSigning.CmiManifestSigner)">
    <parameter name="manifestDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="signer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Deployment.Internal.CodeSigning.SignedCmiManifest.TimestampSignedLicenseDom(System.Xml.XmlDocument,System.String)">
    <parameter name="licenseDom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
</assembly>