<?xml version="1.0" encoding="utf-8"?>
<assembly name="System.Workflow.Activities, Version=4.0.0.0">
  <member name="P:SR.Culture">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:SR.Error_SenderMustBeActivityExecutionContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_BlackBoxCustomStateNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_CannotExecuteStateMachineWithoutInitialState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_CantRemoveEventDrivenFromExecutingState(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_CantRemoveState(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_CompletedStateMustPointToALeafNodeState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_CompletedStateMustPointToAState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_EventActivityNotValidInStateFinalization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_EventActivityNotValidInStateInitialization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_EventDrivenInvalidFirstActivity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_EventDrivenParentNotListen">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_InitialStateMustBeDifferentThanCompletedState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_InitialStateMustPointToALeafNodeState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_InitialStateMustPointToAState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_InvalidCompositeStateChild">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_InvalidLeafStateChild">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_InvalidStateActivityParent">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_InvalidTargetStateInStateInitialization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_MultipleStateFinalizationActivities">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_MultipleStateInitializationActivities">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_SetStateMustPointToALeafNodeState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_SetStateMustPointToAState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_SetStateOnlyWorksOnStateMachineWorkflow">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_StateActivityMustBeContainedInAStateMachine">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_StateFinalizationParentNotState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_StateInitializationParentNotState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetError_StateMachineWorkflowMustBeARootActivity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetInvalidActivityStatus(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetInvalidSetStateInStateInitialization">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetInvalidStateMachineAction(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetInvalidStateTransitionPath">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetInvalidUserDataInStateChangeTrackingRecord">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetMoveSetState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetSqlTrackingServiceRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetStateAlreadySubscribesToThisEvent(System.String,System.IComparable)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetStateMachineWorkflowMustHaveACurrentState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetStateMachineWorkflowRequired">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetString(System.Globalization.CultureInfo,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:SR.GetString(System.Globalization.CultureInfo,System.String,System.Object[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:SR.GetString(System.String,System.Object[])">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetUnableToTransitionToState(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetUndoSetAsCompletedState(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SR.GetUndoSetAsInitialState(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:SRDescriptionAttribute.#ctor(System.String)">
    <parameter name="description">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:SRDescriptionAttribute.#ctor(System.String,System.String)">
    <parameter name="resourceSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="description">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:SRDisplayNameAttribute.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:SRDisplayNameAttribute.#ctor(System.String,System.String)">
    <parameter name="resourceSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.#ctor(System.DirectoryServices.DirectoryEntry,System.Collections.Generic.ICollection{System.Workflow.Activities.IDirectoryOperation})">
    <parameter name="rootEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.#ctor(System.DirectoryServices.DirectoryEntry,System.Workflow.Activities.IDirectoryOperation)">
    <parameter name="rootEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetAllReports">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetDirectReports">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetEntries">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetManager">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetManagerialChain">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetPeers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.GetSecurityIdentifiers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.IncludesIdentity(System.String)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRole.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromAlias(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="alias">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromEmailAddress(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="emailAddress">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.CreateFromSecurityIdentifier(System.Security.Principal.SecurityIdentifier)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sid">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActiveDirectoryRoleFactory.ValidateRole(System.Workflow.Activities.ActiveDirectoryRole)">
    <parameter name="adRole">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ActivityHelpers.InitializeCorrelationTokenCollection(System.Workflow.ComponentModel.Activity,System.Workflow.Runtime.CorrelationToken)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CallExternalMethodActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CallExternalMethodActivity.GetParameterPropertyDescriptors(System.Collections.IDictionary)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.CallExternalMethodActivity.ParameterBindings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#Activities#Common#IPropertyValueProvider#GetPropertyValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CallExternalMethodActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.CallExternalMethodActivityDesigner.AddRemoveCorrelationToken(System.Type,System.Collections.IDictionary,System.Object)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="corrRefProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CodeActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CodeActivity.CodeActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CodeActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CodeCondition.CodeConditionValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CodeCondition.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
    <parameter name="ownerActivity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.CompilerHelpers.CreateCodeProviderInstance(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.CompilerHelpers.CreateCodeProviderInstance(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.CompilerHelpers.GetCodeDomProvider(System.Workflow.Activities.Common.SupportedLanguages,System.String)">
    <parameter name="compilerVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.CompilerHelpers.GetCodeProviderInstance(System.Type,System.String)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="compilerVersion">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.CompilerHelpers.GetSupportedLanguage(System.IServiceProvider)">
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ComponentChangeDispatcher.#ctor(System.IServiceProvider,System.Object,System.ComponentModel.PropertyDescriptor)">
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.DebuggerHelpers.GetActivity(System.Workflow.ComponentModel.Activity,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.DebuggerHelpers.IsDeclaringActivityMatchesContext(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity)">
    <parameter name="currentActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.DebuggerHelpers.ParseActivity(System.Workflow.ComponentModel.Activity,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parsingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.DelegateTypeInfo.#ctor(System.Type)">
    <parameter name="delegateClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.DelegateTypeInfo.Equals(System.Object)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.DelegateTypeInfo.Resolve(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.DelegateTypeInfo.Resolve(System.Type)">
    <parameter name="delegateClass">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.DynamicPropertyDescriptor.#ctor(System.IServiceProvider,System.ComponentModel.PropertyDescriptor)">
    <parameter name="descriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.AddTypeProviderAssembliesFromRegistry(System.Workflow.ComponentModel.Compiler.TypeProvider,System.IServiceProvider)">
    <parameter name="typeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.AreAllActivities(System.Collections.ICollection)">
    <parameter name="c">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.CreateXmlWriter(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.DeserializeDesignersFromStream(System.Collections.ICollection,System.IO.Stream)">
    <parameter name="activities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stateStream">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetAccessType(System.Reflection.PropertyInfo,System.Object,System.IServiceProvider)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetActivity(System.Workflow.ComponentModel.Activity,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetAllEnabledActivities(System.Workflow.ComponentModel.CompositeActivity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="compositeActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetAllNestedActivities(System.Workflow.ComponentModel.CompositeActivity)">
    <parameter name="compositeActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetBaseIdentifier(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetBaseType(System.Reflection.PropertyInfo,System.Object,System.IServiceProvider)">
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetClassName(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetCodeNamespaceAndClass(System.CodeDom.CodeNamespaceCollection,System.String,System.String,System.CodeDom.CodeNamespace@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="namespaces">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetDataSourceActivity(System.Workflow.ComponentModel.Activity,System.String,System.String@)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="inputName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetDataSourceClass(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetDeclaringActivity(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetDelegateFromEvent(System.Reflection.EventInfo)">
    <parameter name="eventInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetDesignTimeTypeName(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetEnclosingActivity(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetIdentifiersInCompositeActivity(System.Workflow.ComponentModel.CompositeActivity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetInstallDirectory(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetInterfaceMethod(System.Type,System.String)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetMethodExactMatch(System.Type,System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetNestedActivities(System.Workflow.ComponentModel.CompositeActivity)">
    <parameter name="compositeActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetRootActivity(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetRootNamespace(System.IServiceProvider)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetRuntimeContextGuid(System.Workflow.ComponentModel.Activity)">
    <parameter name="currentActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetSerializationVisibility(System.Reflection.MemberInfo)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.GetTopLevelActivities(System.Collections.ICollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="activities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.IsActivityLocked(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.IsChildActivity(System.Workflow.ComponentModel.CompositeActivity,System.Workflow.ComponentModel.Activity)">
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.IsCustomActivity(System.Workflow.ComponentModel.CompositeActivity)">
    <parameter name="compositeActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.IsDeclaringActivityMatchesContext(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity)">
    <parameter name="currentActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.MergeNamespaces(System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.PairUpCommonParentActivities(System.Collections.ICollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="activities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.ParseActivity(System.Workflow.ComponentModel.Activity,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parsingContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.ParseActivityForBind(System.Workflow.ComponentModel.Activity,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.SerializeDesignersToStream(System.Collections.ICollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="activities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.TypesEqual(System.CodeDom.CodeTypeReference,System.CodeDom.CodeTypeReference)">
    <parameter name="typeLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Helpers.TypesEqual(System.CodeDom.CodeTypeReference,System.Type)">
    <parameter name="typeLeft">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeRight">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.NativeMethods.XFORM.#ctor(System.Drawing.Drawing2D.Matrix)">
    <parameter name="transform">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.#ctor(System.Type,System.Reflection.ParameterInfo,System.Boolean,System.Attribute[])">
    <parameter name="componentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paramInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.#ctor(System.Type,System.String,System.Type,System.Boolean,System.Attribute[])">
    <parameter name="componentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.CanResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.Converter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.FindMatchingMember(System.String,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="ownerType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.GetParameterBindings(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.GetParameterPropertyName(System.Type,System.String)">
    <parameter name="componentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.PropertyType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.ResetValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParameterInfoBasedPropertyDescriptor.ShouldSerializeValue(System.Object)">
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParseHelpers.AssemblyNameEquals(System.Reflection.AssemblyName,System.Reflection.AssemblyName)">
    <parameter name="thisName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thatName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParseHelpers.FormatType(System.String,System.Workflow.Activities.Common.SupportedLanguages)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParseHelpers.FormatType(System.Type,System.Workflow.Activities.Common.SupportedLanguages)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParseHelpers.ParseTypeName(System.String,System.Workflow.Activities.Common.ParseHelpers.ParseTypeNameLanguage,System.String@,System.String[]@,System.String@)">
    <parameter name="inputTypeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ParseHelpers.ParseTypeName(System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Workflow.Activities.Common.SupportedLanguages,System.String)">
    <parameter name="typeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.PropertyDescriptorUtils.GetBaseType(System.ComponentModel.PropertyDescriptor,System.Object,System.IServiceProvider)">
    <parameter name="property">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="owner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.PropertyDescriptorUtils.GetComponent(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.PropertyDescriptorUtils.GetSite(System.IServiceProvider,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.PropertyDescriptorUtils.SetPropertyValue(System.IServiceProvider,System.ComponentModel.PropertyDescriptor,System.Object,System.Object)">
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyDescriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.PropertyValueProviderTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.PropertyValueProviderTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Common.TypeDescriptorContext.Container">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.TypeDescriptorContext.GetService(System.Type)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Common.TypeDescriptorContext.Instance">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Common.TypeDescriptorContext.PropertyDescriptor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.TypePropertyDescriptor.#ctor(System.IServiceProvider,System.ComponentModel.PropertyDescriptor)">
    <parameter name="actualPropDesc">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Common.TypePropertyDescriptor.Converter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.TypePropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.TypePropertyTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="valueToConvert">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.TypePropertyValueProviderTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Common.TypePropertyValueProviderTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.IsActivitySourceInOrder(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity)">
    <parameter name="request">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.ValidateActivity(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.ValidateIdentifier(System.IServiceProvider,System.String)">
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="identifier">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.ValidateIdentifier(System.String,System.IServiceProvider,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.ValidateNameProperty(System.String,System.IServiceProvider,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.ValidateObject(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.ValidateProperty(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Workflow.ComponentModel.Activity,System.Object,System.Workflow.ComponentModel.Compiler.PropertyValidationContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyValidationContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.ValidateProperty(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Workflow.ComponentModel.Activity,System.Object,System.Workflow.ComponentModel.Compiler.PropertyValidationContext,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="propertyValidationContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.ValidationHelpers.ValidateUniqueIdentifiers(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rootActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Walker.GetSerializationVisibility(System.Reflection.PropertyInfo)">
    <parameter name="prop">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Walker.IsBrowsableType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Walker.WalkProperties(System.Workflow.ComponentModel.Activity)">
    <parameter name="seedActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Common.Walker.WalkProperties(System.Workflow.ComponentModel.Activity,System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CompensatableSequenceActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.AllChildrenQuiet(System.Workflow.Activities.ConditionedActivityGroup,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="cag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.Cleanup(System.Workflow.Activities.ConditionedActivityGroup,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="cag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.CleanupChildAtClosure(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.EvaluateChildConditions(System.Workflow.Activities.ConditionedActivityGroup,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="cag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.EvaluateConditions(System.Workflow.Activities.ConditionedActivityGroup,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="cag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.ExecuteChild(System.Workflow.Activities.ConditionedActivityGroup,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="cag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)">
    <parameter name="child">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetChildExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity,System.Boolean)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)">
    <parameter name="childActivityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.Workflow.ComponentModel.Activity)">
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetRuntimeInitializedActivity(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)">
    <parameter name="dependencyObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.HandleEvent(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.SubscriptionEventArg)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)">
    <parameter name="dependencyObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.TriggerChildren(System.Workflow.Activities.ConditionedActivityGroup,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="cag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroup.WhenUnlessConditionDynamicPropertyValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroupDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroupStateInfo.#ctor(System.Workflow.Activities.ConditionedActivityGroup)">
    <parameter name="cag">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionedActivityGroupValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionPropertyProviderExtender.CanExtend(System.Object)">
    <parameter name="extendee">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionPropertyProviderExtender.GetWhenCondition(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ConditionPropertyProviderExtender.SetWhenCondition(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityCondition)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.CorrelationMethodResolver.CorrelationProvider">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.CorrelationPropertyValue.GetMemberType(System.Reflection.MemberInfo)">
    <parameter name="mInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationPropertyValue.GetValue(System.Object[])">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationResolver.GetCorrelationProvider(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationResolver.GetResolver(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationResolver.IsInitializingMember(System.Type,System.String,System.Object[])">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationResolver.ResolveCorrelationValues(System.Type,System.String,System.Object[],System.Boolean)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.CreateFollowerEntry(System.IServiceProvider,System.Type,System.String,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="initializermethodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.GetCorrelationToken(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.Initialize(System.IServiceProvider,System.Workflow.ComponentModel.Activity,System.Type,System.String,System.Guid)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.InitializeFollowers(System.IServiceProvider,System.Type,System.String)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="followermethodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.InvalidateCorrelationToken(System.Workflow.ComponentModel.Activity,System.Type,System.String,System.Object[])">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.ResolveQueueName(System.Workflow.ComponentModel.Activity,System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.Subscribe(System.IServiceProvider,System.Workflow.ComponentModel.Activity,System.Type,System.String,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.Guid)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.SubscribeForCorrelationTokenInvalidation(System.Workflow.ComponentModel.Activity,System.Type,System.String,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs},System.Guid)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.UninitializeFollowers(System.Type,System.String,System.Workflow.Runtime.WorkflowQueue)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="initializer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="initializerQueue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.Unsubscribe(System.IServiceProvider,System.Workflow.ComponentModel.Activity,System.Type,System.String,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventListener">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationService.ValidateCorrelation(System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty},System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty},System.String,System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.FetchParameterType(System.Reflection.MemberInfo,System.String)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="paramPath">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.FillCorrelationAliasAttrs(System.Reflection.MemberInfo,System.Collections.Hashtable,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="memberInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="correlationAliasAttrs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.GetCorrelationParameterType(System.String,System.Object)">
    <parameter name="parameterPropertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.GetTransactionalScopeParent(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.IsOwnerActivitySame(System.String,System.String,System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity)">
    <parameter name="ownerActivityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="existingOwnerActivityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="existingActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.ValidateHostInterface(System.IServiceProvider,System.Type,System.Workflow.ComponentModel.Activity)">
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.ValidateHostInterfaceAttributes(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.ValidateHostInterfaceMembers(System.Type,System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationSetsValidator.ValidateInvalidHostInterfaceAttributes(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenInvalidatedHandler.CreateSubscription(System.Guid,System.Workflow.ComponentModel.ActivityExecutionContext,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenInvalidatedHandler.DeleteSubscription(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenInvalidatedHandler.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#Runtime#CorrelationTokenEventArgs}#OnEvent(System.Object,System.Workflow.Runtime.CorrelationTokenEventArgs)">
    <parameter name="dataChangeEventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenTypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenTypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
    <parameter name="destinationType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.CorrelationTokenTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DefaultCorrelationProvider.GetCorrelationParameterAttributes(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DefaultCorrelationProvider.GetCorrelationProperties(System.Type,System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DefaultCorrelationProvider.GetCorrelationProperty(System.Reflection.ParameterInfo[],System.String,System.String)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="location">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.DefaultCorrelationProvider.GetCorrelationProperty(System.Reflection.ParameterInfo[],System.String,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.DefaultCorrelationProvider.GetMatchingCorrelationAlias(System.Workflow.Activities.CorrelationParameterAttribute,System.Collections.Generic.Dictionary{System.String,System.Workflow.Activities.CorrelationAliasAttribute},System.Boolean)">
    <parameter name="paramAttribute">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DefaultCorrelationProvider.GetMethodInfo(System.Type,System.String,System.Reflection.MethodInfo@,System.Collections.Generic.Dictionary{System.String,System.Workflow.Activities.CorrelationAliasAttribute}@)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.DefaultCorrelationProvider.InitializerCorrelationPropertys">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.DefaultCorrelationProvider.System#Workflow#Activities#ICorrelationProvider#IsInitializingMember(System.Type,System.String,System.Object[])">
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DefaultCorrelationProvider.System#Workflow#Activities#ICorrelationProvider#ResolveCorrelationPropertyValues(System.Type,System.String,System.Object[],System.Boolean)">
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DelayActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DelayActivity.DelayActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#QueueName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
    <parameter name="parentEventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
    <parameter name="parentEventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DelayActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DelayActivity.TimeoutDurationConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DelayActivity.TimeoutDurationConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.DelayActivity.TimeoutDurationConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryGroupQuery.BuildUri(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="propValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryGroupQuery.Contains(System.Collections.ICollection,System.String)">
    <parameter name="propertyNames">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryGroupQuery.GetResult(System.DirectoryServices.DirectoryEntry,System.DirectoryServices.DirectoryEntry,System.Collections.Generic.List{System.DirectoryServices.DirectoryEntry})">
    <parameter name="currentEntry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootEntry">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryLocalQuery.#ctor(System.String,System.String,System.Workflow.Activities.DirectoryQueryOperation)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryLocalQuery.GetResult(System.DirectoryServices.DirectoryEntry,System.DirectoryServices.DirectoryEntry,System.Collections.Generic.List{System.DirectoryServices.DirectoryEntry})">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryRedirect.#ctor(System.String,System.String)">
    <parameter name="getPropertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="searchPropertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryRedirect.#ctor(System.String,System.String,System.Boolean)">
    <parameter name="getPropertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="searchPropertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryRedirect.CreateSearcher(System.DirectoryServices.DirectoryEntry,System.DirectoryServices.DirectoryEntry)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="currentEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryRedirect.GetResult(System.DirectoryServices.DirectoryEntry,System.DirectoryServices.DirectoryEntry,System.Collections.Generic.List{System.DirectoryServices.DirectoryEntry})">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryRootQuery.#ctor(System.String,System.String,System.Workflow.Activities.DirectoryQueryOperation)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DirectoryRootQuery.GetResult(System.DirectoryServices.DirectoryEntry,System.DirectoryServices.DirectoryEntry,System.Collections.Generic.List{System.DirectoryServices.DirectoryEntry})">
    <parameter name="response">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootEntry">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DR.GetImage(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="resID">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.DR.GetString(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="resID">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventActivitySubscription.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.StateActivity,System.Workflow.Activities.IEventActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventActivitySubscription.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.IEventActivity)">
    <parameter name="eventActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventDeliveryFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.EventDrivenActivity.EventActivity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.EventDrivenValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersActivity.AllHandlersAreQuiet(System.Workflow.Activities.EventHandlersActivity,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="handlers">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersActivity.EventHandlerEventActivitySubscriber.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.String)">
    <parameter name="childActivityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersActivity.GetDynamicActivity(System.Workflow.ComponentModel.Activity)">
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersActivity.Initialize(System.IServiceProvider)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersActivity.OnUnsubscribeAndClose(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlersValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlingScopeActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.EventHandlingScopeActivity.EventHandlersActivity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.EventHandlingScopeActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlingScopeDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="activitiesToInsert">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventHandlingScopeValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.Collections.Generic.ICollection{System.Workflow.Runtime.CorrelationProperty})">
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventQueueName.#ctor(System.Type,System.String,System.String)">
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventQueueName.CompareTo(System.Object)">
    <parameter name="toCompare">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventQueueName.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.EventQueueName.FindCorrelationValue(System.String,System.Workflow.Runtime.CorrelationProperty[])">
    <parameter name="correlationValues">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExtendedPropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="index">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExtendedPropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeBinder.ReorderArgumentArray(System.Object[]@,System.Object)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider.CanFilterType(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.ExternalDataExchangeInterfaceTypeFilterProvider.FilterDescription">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Collections.Specialized.NameValueCollection)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.String)">
    <parameter name="configSectionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.#ctor(System.Workflow.Activities.ExternalDataExchangeServiceSection)">
    <parameter name="settings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.AddRemove(System.Object,System.Delegate,System.Boolean,System.String)">
    <parameter name="addedservice">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.AddService(System.Object)">
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.EnqueueMessageWrapper.DeliverMessage(System.Workflow.Activities.ExternalDataEventArgs,System.IComparable,System.Object,System.Object,System.Workflow.Runtime.IPendingWork)">
    <parameter name="queueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="workItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.EnqueueMessageWrapper.PrepareEventArgsArray(System.Object,System.Workflow.Activities.ExternalDataEventArgs,System.Object@,System.Workflow.Runtime.IPendingWork@)">
    <parameter name="eventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.GetAllServices">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.GetService(System.Type)">
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.InterceptService(System.Object,System.Boolean)">
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.RemoveService(System.Object)">
    <parameter name="service">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ExternalDataExchangeService.ServiceFromSettings(System.Workflow.Runtime.Configuration.WorkflowRuntimeServiceElement)">
    <parameter name="serviceSettings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.FollowerQueueCreator.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.FollowerQueueCreator.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
    <parameter name="args">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.GetParameterPropertyDescriptors(System.Collections.IDictionary)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.HandleExternalEventActivity.ParameterBindings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#Common#IPropertyValueProvider#GetPropertyValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#QueueName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
    <parameter name="parentEventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
    <parameter name="parentEventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivity.UnsubscribeForActivity(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.HandleExternalEventActivityDesigner.AddRemoveCorrelationToken(System.Type,System.Collections.IDictionary,System.Object)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="corrRefProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IdentityContextData.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IdentityContextData.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="activities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.IfElseActivity.AddBranch(System.Collections.Generic.ICollection{System.Workflow.ComponentModel.Activity},System.Workflow.ComponentModel.ActivityCondition)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="activities">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseBranchActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseBranchValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="moveLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseDesigner.GetDiamondPath(System.Drawing.Rectangle)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.IfElseDesigner.OnCreateNewBranch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.IfElseToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.IfElseValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ImageBrowserEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ImageBrowserEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InboundActivityHelper.DequeueMessage(System.IComparable,System.Workflow.Runtime.WorkflowQueuingService,System.Workflow.ComponentModel.Activity,System.Workflow.Runtime.WorkflowQueue@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="queueSvcs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queueId">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InboundActivityHelper.ExecuteForActivity(System.Workflow.Activities.HandleExternalEventActivity,System.Workflow.ComponentModel.ActivityExecutionContext,System.Type,System.String,System.Object[]@)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InboundActivityHelper.ProcessEvent(System.Workflow.Activities.HandleExternalEventActivity,System.Workflow.ComponentModel.ActivityExecutionContext,System.Object,System.Type,System.String)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.InboundActivityHelper.ProcessEventParameters(System.Workflow.ComponentModel.WorkflowParameterBindingCollection,System.Runtime.Remoting.Messaging.IMethodMessage,System.Type,System.String)">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InboundActivityHelper.ValidateRoles(System.Workflow.ComponentModel.Activity,System.String)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InterfaceTypeFilterProvider.CanFilterType(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.InterfaceTypeFilterProvider.FilterDescription">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.InvokeHelper.CloneOutboundValue(System.Object,System.Runtime.Serialization.Formatters.Binary.BinaryFormatter,System.String)">
    <parameter name="formatter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeHelper.GetParameters(System.Reflection.MethodBase,System.Workflow.ComponentModel.WorkflowParameterBindingCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="methodBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeHelper.GetParameters(System.Reflection.MethodBase,System.Workflow.ComponentModel.WorkflowParameterBindingCollection,System.Reflection.ParameterModifier[]@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="methodBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeHelper.InitializeParameters(System.Reflection.MethodInfo,System.Workflow.ComponentModel.WorkflowParameterBindingCollection)">
    <parameter name="methodBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeHelper.SaveOutRefParameters(System.Object[],System.Reflection.MethodBase,System.Workflow.ComponentModel.WorkflowParameterBindingCollection)">
    <parameter name="actualParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodBase">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.GetParameterPropertyDescriptors(System.Collections.IDictionary)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.GetRootActivity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.InvokeWebServiceActivity.ParameterBindings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#Activities#Common#IPropertyValueProvider#GetPropertyValues(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeWebServiceActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.InvokeWebServiceToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.InvokeWorkflowActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.ParameterBindings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#CanFilterType(System.Type,System.Boolean)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.InvokeWorkflowActivity.System#Workflow#ComponentModel#Design#ITypeFilterProvider#FilterDescription">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ListenActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ListenActivity.ListenEventActivitySubscriber.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ListenActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ListenDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ListenDesigner.OnCreateNewBranch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ListenToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ListenValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.MethodMessage.CallContextProxy.#ctor(System.Type)">
    <parameter name="proxiedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.MethodMessage.CallContextProxy.Invoke(System.Runtime.Remoting.Messaging.IMessage)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.MethodMessage.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.MethodMessage.GetLogicalCallContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.MethodMessage.PopulateIdentity(System.Runtime.Remoting.Messaging.LogicalCallContext,System.String)">
    <parameter name="callContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.MethodMessage.System#Runtime#Remoting#Messaging#IMessage#Properties">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.MethodMessage.System#Runtime#Remoting#Messaging#IMethodMessage#Args">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.MethodMessage.System#Runtime#Remoting#Messaging#IMethodMessage#GetArg(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.MethodMessage.System#Runtime#Remoting#Messaging#IMethodMessage#LogicalCallContext">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.MethodMessage.System#Runtime#Remoting#Messaging#IMethodMessage#MethodBase">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.MethodMessage.System#Runtime#Remoting#Messaging#IMethodMessage#MethodSignature">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.MethodMessage.System#Runtime#Remoting#Messaging#IMethodMessage#Uri">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.MethodMessage.WaitForResponseMessage">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.NonCorrelatedProvider.System#Workflow#Activities#ICorrelationProvider#IsInitializingMember(System.Type,System.String,System.Object[])">
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.NonCorrelatedProvider.System#Workflow#Activities#ICorrelationProvider#ResolveCorrelationPropertyValues(System.Type,System.String,System.Object[],System.Boolean)">
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ParallelActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ParallelActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
    <parameter name="removedActivity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="rootExecutionContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ParallelActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ParallelDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ParallelDesigner.OnCreateNewBranch">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ParallelToolboxItem.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ParallelValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ParameterBindingValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ParameterBindingValidator.ValidateParameterBinding(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Workflow.ComponentModel.Activity,System.Boolean,System.String,System.Reflection.MethodInfo,System.Workflow.ComponentModel.WorkflowParameterBindingCollection,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="mInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterBindings">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ParameterBindingValidator.ValidateParameterSerializabiltiy(System.Workflow.ComponentModel.Compiler.ValidationErrorCollection,System.Type)">
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.PolicyActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.PolicyDesigner.GetService(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.CancelChildExecution(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.ReplicatorActivity.ChildExecutionStateInfo)">
    <parameter name="childStateInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.ReplicatorActivity.CurrentChildData">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.ReplicatorActivity.DynamicActivities">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ExecuteTemplate(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.ReplicatorActivity.ChildExecutionStateInfo)">
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childStateInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.GetExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContextManager,System.Guid)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="contextManager">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.HandleChildUpdateOperation(System.Object,System.Workflow.Activities.ReplicatorActivity.ReplicatorInterActivityEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.HandleStatusChange(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs,System.Workflow.Activities.ReplicatorActivity.ReplicatorSubscriber)">
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="subscriber">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorChildInstanceList.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
    <parameter name="array">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.ReplicatorActivity.ReplicatorChildInstanceList.System#Collections#ICollection#SyncRoot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorChildInstanceList.System#Collections#IEnumerable#GetEnumerator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorChildInstanceList.System#Collections#IList#Add(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorChildInstanceList.System#Collections#IList#Contains(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorChildInstanceList.System#Collections#IList#IndexOf(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorChildInstanceList.System#Collections#IList#Insert(System.Int32,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorChildInstanceList.System#Collections#IList#Remove(System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorSubscriber.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ReplicatorSubscriber.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.ScheduleExecutionIfNeeded(System.Workflow.Activities.ReplicatorActivity.ChildExecutionStateInfo,System.Int32)">
    <parameter name="childStateInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.TryCancelChild(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.ReplicatorActivity.ChildExecutionStateInfo)">
    <parameter name="outerProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childStateInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorActivity.TryCancelChildren(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.ReplicatorValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.AddedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)">
    <parameter name="addedConditionDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.AddedConditionAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
    <parameter name="rootActivity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.AddedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)">
    <parameter name="addedRuleSetDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.AddedRuleSetAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
    <parameter name="rootActivity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Add(System.Workflow.Activities.Rules.ArithmeticLiteral)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitAnd">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitAnd(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitAnd(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitAnd(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitAnd(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitAnd(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitAnd(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitAnd(System.Workflow.Activities.Rules.ArithmeticLiteral)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitOr">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitOr(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitOr(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitOr(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitOr(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitOr(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.BitOr(System.Workflow.Activities.Rules.ArithmeticLiteral)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.CreateSupportedTypesDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.CreateTypesDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Divide(System.Workflow.Activities.Rules.ArithmeticLiteral)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeBoolean(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeByte(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeChar(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeDecimal(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeDouble(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeFloat(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeInt(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeLiteral(System.Type,System.Object)">
    <parameter name="literalType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeLong(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeSByte(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeShort(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeString(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeUInt(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeULong(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.MakeUShort(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Modulus(System.Workflow.Activities.Rules.ArithmeticLiteral)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Multiply(System.Workflow.Activities.Rules.ArithmeticLiteral)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.ResultType(System.CodeDom.CodeBinaryOperatorType,System.Type,System.CodeDom.CodeExpression,System.Type,System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleValidation,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="lhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.ResultType(System.CodeDom.CodeBinaryOperatorType,System.Workflow.Activities.Rules.ArithmeticLiteral.TypeFlags,System.Workflow.Activities.Rules.ArithmeticLiteral.TypeFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArithmeticLiteral.Subtract(System.Workflow.Activities.Rules.ArithmeticLiteral)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.ArithmeticLiteral.TypeName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.ArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArrayCreateExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArrayCreateExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArrayCreateExpression.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
    <parameter name="comperand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArrayIndexerExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ArrayIndexerExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.AssignmentStatement.Create(System.CodeDom.CodeStatement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.BaseMethodInfo.#ctor(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.BaseMethodInfo.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.BaseMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.BinaryExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.BinaryExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.BinaryExpression.EvaluateBinaryOperation(System.CodeDom.CodeBinaryOperatorExpression,System.Type,System.Object,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Object)">
    <parameter name="lhsType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rhsType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.BooleanArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.BooleanArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.BoolLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.ByteLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CastExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CastExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Add(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitAnd(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitAnd(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitAnd(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitAnd(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitAnd(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitOr(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitOr(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitOr(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitOr(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.BitOr(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Divide(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Divide(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Modulus(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Modulus(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Modulus(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Multiply(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Multiply(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Subtract(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CharArithmeticLiteral.Subtract(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.CharArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.CharLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CodeDomStatementWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeStatement)">
    <parameter name="statement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.CodeDomStatementWalker.Clone(System.CodeDom.CodeStatement)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CodeDomStatementWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeStatement)">
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="statement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.CodeDomStatementWalker.Execute(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeStatement)">
    <parameter name="execution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="statement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.CodeDomStatementWalker.GetStatement(System.CodeDom.CodeStatement)">
    <parameter name="statement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.CodeDomStatementWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeStatement)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="statement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.CloneObject(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.CloneUserData(System.CodeDom.CodeObject,System.CodeDom.CodeObject)">
    <parameter name="original">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="result">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.Flush_Rules_DT(System.IServiceProvider,System.Workflow.ComponentModel.Activity)">
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.GetContextType(System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Workflow.ComponentModel.Activity)">
    <parameter name="typeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.GetRuleDefinitionsFromManifest(System.Type)">
    <parameter name="workflowType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.IsNonNullableValueType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.IsNullableValueType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.Load_Rules_DT(System.IServiceProvider,System.Workflow.ComponentModel.DependencyObject)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ConditionHelper.Load_Rules_RT(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="declaringActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Add(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Add(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Divide(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Divide(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Multiply(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Multiply(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Subtract(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Subtract(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.DecimalArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.DecimalLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.#ctor(System.Workflow.ComponentModel.Activity,System.String)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.ConfirmDeleteMessageText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.ConfirmDeleteTitleText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.DescriptionText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.DuplicateNameErrorText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.EmptyNameErrorText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.InitializeListView(System.Collections.IList,System.String)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.IsUniqueName(System.String)">
    <parameter name="ruleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.NewNameLabelText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.OnHelpClicked(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.OnItemSelectionChanged(System.Object,System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.OnNewInternal">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.PreviewLabelText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.RenameTitleText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.TitleText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.UpdateListViewItem(System.Object,System.Windows.Forms.ListViewItem)">
    <parameter name="listViewItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.BasicBrowserDialog.UpdatePreview(System.Windows.Forms.TextBox,System.Object)">
    <parameter name="previewTextBox">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.ConditionBrowserDialog.#ctor(System.Workflow.ComponentModel.Activity,System.String)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.ConditionNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.ConditionNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.DesignerHelpers.GetRulePreview(System.Workflow.Activities.Rules.Rule)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.DesignerHelpers.GetRuleSetPreview(System.Workflow.Activities.Rules.RuleSet)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.IntellisenseTextBox.AppendParameterInfo(System.Text.StringBuilder,System.Reflection.ParameterInfo,System.Boolean)">
    <parameter name="toolTipText">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.IntellisenseTextBox.CurrentPrefix">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.IntellisenseTextBox.IntellisenseTextBox_KeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.IntellisenseTextBox.IntellisenseTextBox_KeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.IntellisenseTextBox.UpdateAutoCompleteSelection(System.String)">
    <parameter name="currentValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.LogicalExpressionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.LogicalExpressionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RenameRuleObjectDialog.#ctor(System.IServiceProvider,System.String,System.Workflow.Activities.Rules.Design.RenameRuleObjectDialog.NameValidatorDelegate,System.Workflow.Activities.Rules.Design.BasicBrowserDialog)">
    <parameter name="serviceProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="oldName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="nameValidator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.CodeDom.CodeExpression)">
    <parameter name="activityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.#ctor(System.Workflow.ComponentModel.Activity,System.CodeDom.CodeExpression)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.ConditionTextBox_PopulateAutoCompleteList(System.Object,System.Workflow.Activities.Rules.Design.AutoCompletionEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.OnHelpClicked(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionDialog.RuleConditionDialog_FormClosing(System.Object,System.Windows.Forms.FormClosingEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionReferenceNamePropertyDescriptor.#ctor(System.IServiceProvider,System.ComponentModel.PropertyDescriptor)">
    <parameter name="descriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionReferenceNamePropertyDescriptor.GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionReferenceNamePropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionReferencePropertyDescriptor.#ctor(System.IServiceProvider,System.ComponentModel.PropertyDescriptor)">
    <parameter name="descriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.RuleConditionReferencePropertyDescriptor.Converter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionReferencePropertyDescriptor.GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionReferencePropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleConditionReferenceTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleDefinitionDynamicPropertyDescriptor.#ctor(System.IServiceProvider,System.ComponentModel.PropertyDescriptor)">
    <parameter name="descriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleDefinitionDynamicPropertyDescriptor.GetRuleDefinitions(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="component">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetBrowserDialog.#ctor(System.Workflow.ComponentModel.Activity,System.String)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDefinitionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDefinitionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Workflow.Activities.Rules.RuleSet)">
    <parameter name="activityType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.Activities.Rules.RuleSet)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.AddNewItem(System.Workflow.Activities.Rules.Rule)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.conditionTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.elseTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.GetActionsString(System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction})">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="actions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.ListViewItemComparer.Compare(System.Object,System.Object)">
    <parameter name="x">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="y">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.nameTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.OnHelpClicked(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.PopulateAutoCompleteList(System.Object,System.Workflow.Activities.Rules.Design.AutoCompletionEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.priorityTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.rulesListView_ColumnClick(System.Object,System.Windows.Forms.ColumnClickEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.SetCaretAt(System.Windows.Forms.TextBoxBase,System.Int32)">
    <parameter name="textBox">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.thenTextBox_Validating(System.Object,System.ComponentModel.CancelEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetDialog.UpdateItem(System.Windows.Forms.ListViewItem,System.Workflow.Activities.Rules.Rule)">
    <parameter name="listViewItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetNameEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetNameEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetPropertyDescriptor.#ctor(System.IServiceProvider,System.ComponentModel.PropertyDescriptor)">
    <parameter name="descriptor">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.Design.RuleSetPropertyDescriptor.Converter">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetPropertyDescriptor.GetEditor(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="editorBaseType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetPropertyDescriptor.SetValue(System.Object,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetReferenceTypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
    <parameter name="valueToConvert">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Design.RuleSetReferenceTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="attributes">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.DirectionExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Add(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Divide(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Modulus(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Modulus(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Modulus(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Multiply(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Subtract(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.DoubleArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.DoubleLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.EnumHelper.GetUnderlyingType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.EnumOperationMethodInfo.#ctor(System.Type,System.CodeDom.CodeBinaryOperatorType,System.Type,System.Boolean)">
    <parameter name="lhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.EnumOperationMethodInfo.DeclaringType">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.EnumOperationMethodInfo.GetCustomAttributes(System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.EnumOperationMethodInfo.GetCustomAttributes(System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.EnumOperationMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="culture">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="binder">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.EnumOperationMethodInfo.IsDefined(System.Type,System.Boolean)">
    <parameter name="attributeType">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.EnumOperationMethodInfo.Name">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.AdjustType(System.Type,System.Object,System.Type)">
    <parameter name="operandType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.AdjustTypeWithCast(System.Type,System.Object,System.Type)">
    <parameter name="operandType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.AdjustValueStandard(System.Type,System.Object,System.Type,System.Object@)">
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operandType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.AnalyzeRule(System.Workflow.Activities.Rules.RuleChainingBehavior,System.Workflow.Activities.Rules.Rule,System.Workflow.Activities.Rules.RuleValidation,System.Workflow.Activities.Rules.Tracer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rule">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.AnalyzeRules(System.Workflow.Activities.Rules.RuleChainingBehavior,System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleState},System.Workflow.Activities.Rules.RuleValidation,System.Workflow.Activities.Rules.Tracer)">
    <parameter name="ruleStates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.AnalyzeSideEffects(System.Collections.Generic.ICollection{System.String},System.Workflow.Activities.Rules.Executor.RuleSymbolInfo[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="sideEffects">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ruleSymbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.EvaluateBool(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.ExecuteRuleSet(System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleState},System.Workflow.Activities.Rules.RuleExecution,System.Workflow.Activities.Rules.Tracer,System.String)">
    <parameter name="orderedRules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ruleExecution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.GetActionSideEffects(System.Workflow.Activities.Rules.RuleChainingBehavior,System.Collections.Generic.IList{System.Workflow.Activities.Rules.RuleAction},System.Workflow.Activities.Rules.RuleValidation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="actions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Executor.Preprocess(System.Workflow.Activities.Rules.RuleChainingBehavior,System.Collections.Generic.ICollection{System.Workflow.Activities.Rules.Rule},System.Workflow.Activities.Rules.RuleValidation,System.Workflow.Activities.Rules.Tracer)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ExpressionStatement.Create(System.CodeDom.CodeStatement)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ExtensionMethodInfo.#ctor(System.Reflection.MethodInfo,System.Reflection.ParameterInfo[])">
    <parameter name="actualParameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ExtensionMethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.FieldReferenceExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FieldReferenceExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Add(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Divide(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Modulus(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Modulus(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Modulus(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Multiply(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Subtract(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.FloatArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.FloatLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IndexerPropertyExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IndexerPropertyExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.BitAnd(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.BitAnd(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.BitAnd(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.BitAnd(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.BitOr(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.BitOr(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.BitOr(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.BitOr(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Divide(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Modulus(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Modulus(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Multiply(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Subtract(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.IntArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntellisenseParser.#ctor(System.String)">
    <parameter name="inputString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.IntellisenseParser.BackParse">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.IntLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LiftedArithmeticOperatorMethodInfo.#ctor(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.LiftedConversionMethodInfo.#ctor(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.LiftedEqualityOperatorMethodInfo.#ctor(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.LiftedRelationalOperatorMethodInfo.#ctor(System.Reflection.MethodInfo)">
    <parameter name="method">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.AddLiftedOperators(System.Type,System.String,System.Workflow.Activities.Rules.Literal.OperatorGrouping,System.Type,System.Type,System.Collections.Generic.List{System.Reflection.MethodInfo})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="candidates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.AddOperatorOverloads(System.Type,System.String,System.Type,System.Type,System.Collections.Generic.List{System.Reflection.MethodInfo})">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="candidates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.AllowedComparison(System.Type,System.CodeDom.CodeExpression,System.Type,System.CodeDom.CodeExpression,System.CodeDom.CodeBinaryOperatorType,System.Workflow.Activities.Rules.RuleValidation,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="lhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.CreateMakersDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.CreateTypesDictionary">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.Equal(System.Workflow.Activities.Rules.Literal)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.EvaluateLiftedMethod(System.Reflection.MethodInfo,System.Reflection.ParameterInfo[],System.Workflow.Activities.Rules.Literal.OperatorGrouping,System.Type,System.Type)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.EvaluateMethod(System.Reflection.ParameterInfo[],System.Type,System.Type)">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arg2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.GreaterThan(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.GreaterThan(System.Workflow.Activities.Rules.Literal)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.GreaterThanOrEqual(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.GreaterThanOrEqual(System.Workflow.Activities.Rules.Literal)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.LessThan(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.LessThan(System.Workflow.Activities.Rules.Literal)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.LessThanOrEqual(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.LessThanOrEqual(System.Workflow.Activities.Rules.Literal)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeBool(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeByte(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeChar(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeDecimal(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeDouble(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeFloat(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeInt(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeLiteral(System.Type,System.Object)">
    <parameter name="literalType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeLong(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeSByte(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeShort(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeString(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeUInt(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeULong(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MakeUShort(System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Literal.MapOperatorToMethod(System.CodeDom.CodeBinaryOperatorType,System.Type,System.CodeDom.CodeExpression,System.Type,System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleValidation,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <parameter name="lhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.Literal.Value">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.BitAnd(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.BitAnd(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.BitAnd(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.BitAnd(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.BitOr(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.BitOr(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.BitOr(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.BitOr(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Divide(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Modulus(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Modulus(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Multiply(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Subtract(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.LongArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.LongArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.LongLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AmbiguousConstructor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AmbiguousConversion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AmbiguousIndexerMatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AmbiguousMatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AmbiguousOperator">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ArithOpBadTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ArrayIndexBadRank">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ArrayIndexBadType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ArraySizeBoth">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ArraySizeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ArraySizeTypeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ArrayTypeInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AssignLeftNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AssignNotAllowed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AssignNotHandled">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AssignRightNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AttributeFieldName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AttributeMethodName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AttributeMethodNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AttributePropertyName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.AttributePropertyNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.BinaryOpFails">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.BinaryOpNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CannotAccessInternalMember">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CannotAccessPrivateMember">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CannotCastNullToValueType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CannotIndexType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CannotWriteToExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CastIncompatibleTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CastOfNullInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CodeExpressionNotHandled">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CodeStatementNotHandled">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Condition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionConfirmDeleteMessageText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionDescriptionText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionDuplicateNameErrorText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionEditor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionEmptyNameErrorText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionExists">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionExpressionNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionMustBeBoolean">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionNameNotIdentical">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionNameNotSet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionNewNameLableText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionPreviewLabelText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionRenameTitleText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionTitleText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConditionValidationFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ConstructorOverloadNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ContextStackItemMissing">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ContextStackMissing">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CouldNotDetermineMemberType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.CyclicalExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.DebugModeEditsDisallowed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.DeleteCondition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.DeleteRule">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.DeleteRuleSet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.DuplicateConditions">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Else">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_ActionsParser">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_ConditionParser">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_ConfigFileMissingOrInvalid">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_ConstructorInvoke">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_DuplicateRuleName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_ExpressionNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_InvalidPriority">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_MethodInvoke">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_PropertyGet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_PropertySet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_RuleNameIsEmpty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Error_TypeNotAuthorized">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ErrorsCollectionMissing">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ExplicitUpdateOnly">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ExpressionNotValidated">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ExpressionPropertyDescription">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.FieldSetNotAllowed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.FullChaining">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.GenericMethodsNotSupported">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.IncompatibleArithmeticTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.IncompatibleComparisonTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.IncompatibleNullTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.IndexerArgCannotBeRefOrOut">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.IndexerCountMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.IndexerNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.IndexerOverloadNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.IndexersCannotBeStatic">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InitializerCountMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InitializerMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidCast">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidConditionExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidConditionName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidConditionNameCaption">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidOutRefParameter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidRuleAttributeParameter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidRuleSetExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidRuleSetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvalidWildCardInPathQualifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvokeAttrRefersToParameterAttribute">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvokeNotHandled">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.InvokeStatementNull">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.LogicalOpBadTypeLHS">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.LogicalOpBadTypeRHS">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.MethodArgCountMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.MethodArgumentTypeMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.MethodDirectionMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.MethodOverloadNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.MissingIndexExpressions">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.MissingInitializer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.MissingRuleCondition">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.MissingService">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NamePropertyDescription">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NewConditionName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NewRuleName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NewRuleSetName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.No">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NoActivity">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NoConversion">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NoHelp">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NonStaticMember">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NotARuleConditionReference">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NotCloneable">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullAssignLeft">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullAssignRight">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullBinaryOpLHS">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullBinaryOpRHS">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullCastExpr">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullCastType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullConstructorParameter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullConstructorTypeParameter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullDirectionTarget">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullFieldTarget">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullIndexerTarget">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullIndexExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullInvokeStatementExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullMethodParameter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullMethodTarget">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullMethodTypeParameter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullPropertyTarget">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullStatement">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullTypeType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullUpdate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.NullValue">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_BadTypeArgCount">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_EmptyExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_ExtraCharactersIgnored">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidCharacter">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidDecimalConstant">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidEscapeSequence">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidExponentDigit">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidFloatingPointConstant">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidHexDigit">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidIntegerConstant">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidNew">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidTypeArgument">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_InvalidUpdateExpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingCloseAngleBracket">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingCloseSquareBracket">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingCloseSquareBracket1">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingDotAfterNamespace">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingIdentifierAfterDot">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingLparenAfterCommand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingOperand">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingRCurlyAfterInitializers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingRParenAfterArgumentList">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingRParenInSubexpression">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_MissingTypeArguments">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_NoArrayCreationSize">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_NotAGenericType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_UnknownIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_UnknownLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_UnknownNamespaceMember">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_UnterminatedCharacterLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Parser_UnterminatedStringLiteral">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ReevaluationAlways">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ReevaluationNever">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RelationalOpBadTypes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleConfirmDeleteMessageText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleNameMissing">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetConfirmDeleteMessageText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetDescriptionText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetDuplicateNameErrorText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetEmptyNameErrorText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetExists">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetNameNotSet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetNewNameLableText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetNotFound">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetPreviewLabelText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetRenameTitleText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetTitleText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleSetValidationFailed">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.RuleValidationError">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Sequential">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.StaticMember">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TargetEvaluatedNullField">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TargetEvaluatedNullIndexer">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TargetEvaluatedNullMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TargetEvaluatedNullProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Then">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleActions">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleActionSideEffect">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleConditionDependency">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleEvaluate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleHeader">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleIdentifier">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleResult">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleSetEvaluate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceRuleTriggers">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.TraceUpdate">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnexpectedArgumentType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownConstructor">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownField">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownFieldOrProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownGenericType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownMethod">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownPropertyGet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownPropertySet">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnknownType">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UnreachableCodeHalt">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UpdateNotThis">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.UpdateUnknownFieldOrProperty">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.ValidationMismatch">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Messages.Yes">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.MethodInvokeExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.MethodInvokeExpression.CloneMethodReference(System.CodeDom.CodeMethodReferenceExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="oldReference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.MethodInvokeExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.NamespaceSymbol.AddNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="nsName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.NamespaceSymbol.AddType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.NamespaceSymbol.FindMember(System.String)">
    <parameter name="memberName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.NamespaceSymbol.GetMembers">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.NamespaceSymbol.GetQualifiedName">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.NullArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.NullLiteral.GreaterThan(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.NullLiteral.GreaterThanOrEqual(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.NullLiteral.LessThan(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.NullLiteral.LessThanOrEqual(System.String)">
    <parameter name="literalValue">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ObjectCreateExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ObjectCreateExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ObjectCreateExpression.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
    <parameter name="comperand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.#ctor(System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.BinaryOperationDescriptor.CreateBinaryExpression(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression,System.Int32,System.Workflow.Activities.Rules.Parser,System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parser">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.BinaryPrecedenceDescriptor.FindOperation(System.Workflow.Activities.Rules.TokenID)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.CandidateConstructor.CompareConstructor(System.Workflow.Activities.Rules.Parser.CandidateConstructor)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ConstructCustomType(System.Type,System.Collections.Generic.List{System.CodeDom.CodeExpression},System.Int32)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.FindBestConstructor(System.Collections.Generic.List{System.Workflow.Activities.Rules.Parser.CandidateConstructor})">
    <parameter name="candidates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.GetCandidateConstructors(System.Reflection.ConstructorInfo[],System.Collections.Generic.List{System.CodeDom.CodeExpression})">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.GetExpressionCompletions(System.String)">
    <parameter name="expressionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.GetRootCompletions(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.MatchArgument(System.Type,System.CodeDom.CodeExpression)">
    <parameter name="arg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameterType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseArgument(System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseArgumentList(System.Workflow.Activities.Rules.ParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseArrayCreationArguments(System.Workflow.Activities.Rules.ParserContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseArrayType(System.Workflow.Activities.Rules.ParserContext,System.Type)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="baseType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseAssignmentStatement(System.Workflow.Activities.Rules.ParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseBinaryExpression(System.Workflow.Activities.Rules.ParserContext,System.Int32,System.Boolean,System.Workflow.Activities.Rules.Parser.ValueCheck)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseCondition(System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expressionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseConstructorArguments(System.Workflow.Activities.Rules.ParserContext,System.Type,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseElementOperator(System.Workflow.Activities.Rules.ParserContext,System.CodeDom.CodeExpression,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="primaryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseFieldOrProperty(System.Workflow.Activities.Rules.ParserContext,System.CodeDom.CodeExpression,System.String,System.Int32,System.Boolean,System.Workflow.Activities.Rules.Parser.ValueCheck)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="postfixExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseGenericType(System.Workflow.Activities.Rules.ParserContext,System.Collections.Generic.List{System.Type},System.String)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="candidateGenericTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseGenericTypeArgList(System.Workflow.Activities.Rules.ParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseIndexList(System.Workflow.Activities.Rules.ParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseInitializer(System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseMemberOperator(System.Workflow.Activities.Rules.ParserContext,System.CodeDom.CodeExpression,System.Boolean,System.Workflow.Activities.Rules.Parser.ValueCheck)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="primaryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseMethodInvoke(System.Workflow.Activities.Rules.ParserContext,System.CodeDom.CodeExpression,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="postfixExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseNestedType(System.Workflow.Activities.Rules.ParserContext,System.Type)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="currentType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseObjectCreation(System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParsePostfixExpression(System.Workflow.Activities.Rules.ParserContext,System.Boolean,System.Workflow.Activities.Rules.Parser.ValueCheck)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParsePrimaryExpression(System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseRootIdentifier(System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseRootNamespaceIdentifier(System.Workflow.Activities.Rules.ParserContext,System.Workflow.Activities.Rules.NamespaceSymbol,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseRootOverloadedTypeIdentifier(System.Workflow.Activities.Rules.ParserContext,System.Collections.Generic.List{System.Workflow.Activities.Rules.TypeSymbol},System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="candidateTypeSymbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseRootTypeIdentifier(System.Workflow.Activities.Rules.ParserContext,System.Workflow.Activities.Rules.TypeSymbol,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeSym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseSingleStatement(System.String)">
    <parameter name="statementString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseStatementList(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="statementString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseStatements(System.Workflow.Activities.Rules.ParserContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseTypeRef(System.Workflow.Activities.Rules.ParserContext,System.Type,System.Int32,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseUnadornedFieldOrProperty(System.Workflow.Activities.Rules.ParserContext,System.String,System.Int32,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseUnadornedMemberIdentifier(System.Workflow.Activities.Rules.ParserContext,System.Workflow.Activities.Rules.MemberSymbol,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseUnadornedMethodInvoke(System.Workflow.Activities.Rules.ParserContext,System.String,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ParseUnaryExpression(System.Workflow.Activities.Rules.ParserContext,System.Boolean,System.Workflow.Activities.Rules.Parser.ValueCheck)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.TryParsePostfixOperator(System.Workflow.Activities.Rules.ParserContext,System.CodeDom.CodeExpression,System.Boolean,System.Workflow.Activities.Rules.Parser.ValueCheck)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="primaryExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.TryParseTypeName(System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.TryParseTypeSpecifier(System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.TryParseTypeSpecifierWithOptionalSize(System.Workflow.Activities.Rules.ParserContext,System.Boolean,System.CodeDom.CodeExpression@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ValidateAction(System.Workflow.Activities.Rules.ParserContext,System.Workflow.Activities.Rules.RuleAction)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="action">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ValidateExpression(System.Workflow.Activities.Rules.ParserContext,System.CodeDom.CodeExpression,System.Boolean,System.Workflow.Activities.Rules.Parser.ValueCheck)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Parser.ValidateStatement(System.Workflow.Activities.Rules.ParserContext,System.CodeDom.CodeStatement)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="statement">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.#ctor(System.String)">
    <parameter name="expressionString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.AddCandidates(System.Collections.Generic.List{System.Reflection.MemberInfo},System.Reflection.MemberInfo[])">
    <parameter name="candidateMethods">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.IsNonPrivate(System.Reflection.FieldInfo,System.Type)">
    <parameter name="fieldInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.IsNonPrivate(System.Reflection.MethodInfo,System.Type)">
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.IsNonPrivate(System.Type,System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.SetConstructorCompletions(System.Type,System.Type)">
    <parameter name="computedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.SetMethodCompletions(System.Type,System.Type,System.String,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="computedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.SetNamespaceCompletions(System.Workflow.Activities.Rules.NamespaceSymbol)">
    <parameter name="nsSym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.SetNestedClassCompletions(System.Type,System.Type)">
    <parameter name="computedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ParserContext.SetTypeMemberCompletions(System.Type,System.Type,System.Boolean,System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="computedType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.PrimitiveExpression.AnalyzeUsage(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.PrimitiveExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.PrimitiveExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="execution">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.PropertyReferenceExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.PropertyReferenceExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RemovedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition)">
    <parameter name="removedConditionDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RemovedConditionAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
    <parameter name="rootActivity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet)">
    <parameter name="removedRuleSetDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RemovedRuleSetAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
    <parameter name="rootActivity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Rule.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.Rule.ElseActions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Rule.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.Rule.ThenActions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Rule.Validate(System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Rule.ValidateRuleActions(System.Collections.Generic.ICollection{System.Workflow.Activities.Rules.RuleAction},System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="ruleActions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.AddSymbol(System.String)">
    <parameter name="symbol">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.AnalyzeRuleAttributes(System.Reflection.MemberInfo,System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RulePathQualifier,System.CodeDom.CodeExpressionCollection,System.Reflection.ParameterInfo[],System.Collections.Generic.List{System.CodeDom.CodeExpression})">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argExprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributedExprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleAnalysis.GetSymbols">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleArrayElementResult.#ctor(System.Array,System.Int64[])">
    <parameter name="targetArray">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="indexerArguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleAttribute.Analyze(System.Workflow.Activities.Rules.RuleAnalysis,System.Reflection.MemberInfo,System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RulePathQualifier,System.CodeDom.CodeExpressionCollection,System.Reflection.ParameterInfo[],System.Collections.Generic.List{System.CodeDom.CodeExpression})">
    <parameter name="attributedExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleAttribute.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Reflection.MemberInfo,System.Type,System.Reflection.ParameterInfo[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contextType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleBinaryExpressionInfo.#ctor(System.Type,System.Type,System.Reflection.MethodInfo)">
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCodeDomStatement.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis)">
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCodeDomStatement.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCodeDomStatement.Decompile(System.Text.StringBuilder)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCodeDomStatement.Execute(System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="execution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCodeDomStatement.Validate(System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCondition.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCondition.Evaluate(System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="execution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCondition.GetDependencies(System.Workflow.Activities.Rules.RuleValidation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleCondition.Validate(System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleConditionChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleConditionCollection.Add(System.Workflow.Activities.Rules.RuleCondition)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleConditionCollection.Diff(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleConditionReference.Evaluate(System.Workflow.ComponentModel.Activity,System.IServiceProvider)">
    <parameter name="provider">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleConditionReference.GetRuleDefinitions(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.CompositeActivity@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleConstructorExpressionInfo.#ctor(System.Reflection.ConstructorInfo,System.Boolean)">
    <parameter name="ci">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.AppendCharacter(System.Text.StringBuilder,System.Char,System.Char)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileCharacterLiteral(System.Text.StringBuilder,System.Char)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileFloatingPointLiteral(System.Text.StringBuilder,System.Object,System.Char)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileMethod(System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileObjectLiteral(System.Text.StringBuilder,System.Object)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileStringLiteral(System.Text.StringBuilder,System.String)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="strValue">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileSuffixedIntegerLiteral(System.Text.StringBuilder,System.Object,System.String)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileType(System.Text.StringBuilder,System.CodeDom.CodeTypeReference)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileType(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.DecompileType_Helper(System.Text.StringBuilder,System.Type)">
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.GetBinaryPrecedence(System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.GetPrecedence(System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.InitializeKnownOperatorMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.InitializeKnownTypeMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.InitializePrecedenceMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.MustParenthesize(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
    <parameter name="childExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.TryReplaceKnownTypes(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDecompiler.UnmangleTypeName(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDefinitions.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.RuleDefinitions.Conditions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDefinitions.Diff(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleDefinitions.OnGetRuleConditions(System.Workflow.ComponentModel.DependencyObject)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="dependencyObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.RuleDefinitions.RuleSets">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Type)">
    <parameter name="ruleSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="objectType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="ruleSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEngine.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleValidation,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="ruleSet">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object)">
    <parameter name="thisObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="thisObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEngine.Execute(System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="ruleExecution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEvaluationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleEvaluationIncompatibleTypesException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExecution.#ctor(System.Workflow.Activities.Rules.RuleValidation,System.Object,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="thisObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.RuleExecution.Activity">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String)">
    <parameter name="conditionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.#ctor(System.String,System.CodeDom.CodeExpression)">
    <parameter name="conditionName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionCondition.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionInternal.AnalyzeUsage(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionInternal.Clone(System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionInternal.Decompile(System.CodeDom.CodeExpression,System.Text.StringBuilder,System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionInternal.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="execution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionInternal.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
    <parameter name="rightExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionInternal.Validate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.AnalyzeUsage(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.CustomExpressionWrapper.AnalyzeUsage(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.CustomExpressionWrapper.Clone(System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.CustomExpressionWrapper.Decompile(System.CodeDom.CodeExpression,System.Text.StringBuilder,System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="decompilation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.CustomExpressionWrapper.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="execution">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.CustomExpressionWrapper.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
    <parameter name="rightExpression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="leftExpression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.CustomExpressionWrapper.Validate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Decompile(System.Text.StringBuilder,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
    <parameter name="stringBuilder">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Evaluate(System.Workflow.Activities.Rules.RuleExecution,System.CodeDom.CodeExpression)">
    <parameter name="execution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.GetExpression(System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleExpressionWalker.Validate(System.Workflow.Activities.Rules.RuleValidation,System.CodeDom.CodeExpression,System.Boolean)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleFieldExpressionInfo.#ctor(System.Reflection.FieldInfo)">
    <parameter name="fi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleFieldResult.#ctor(System.Object,System.Reflection.FieldInfo)">
    <parameter name="fieldInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleInvokeAttribute.AnalyzeInvokeAttribute(System.Workflow.Activities.Rules.RuleAnalysis,System.Type,System.Collections.Generic.Stack{System.Reflection.MemberInfo},System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RulePathQualifier,System.CodeDom.CodeExpressionCollection,System.Reflection.ParameterInfo[],System.Collections.Generic.List{System.CodeDom.CodeExpression})">
    <parameter name="contextType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodStack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributedExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleInvokeAttribute.Validate(System.Workflow.Activities.Rules.RuleValidation,System.Reflection.MemberInfo,System.Type,System.Reflection.ParameterInfo[])">
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleInvokeAttribute.ValidateInvokeAttribute(System.Workflow.Activities.Rules.RuleValidation,System.Reflection.MemberInfo,System.Type,System.Collections.Generic.Stack{System.Reflection.MemberInfo})">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="contextType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodStack">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleMethodInvokeExpressionInfo.#ctor(System.Reflection.MethodInfo,System.Boolean)">
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RulePropertyResult.#ctor(System.Reflection.PropertyInfo,System.Object,System.Object[])">
    <parameter name="propertyInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleReadAttribute.Analyze(System.Workflow.Activities.Rules.RuleAnalysis,System.Reflection.MemberInfo,System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RulePathQualifier,System.CodeDom.CodeExpressionCollection,System.Reflection.ParameterInfo[],System.Collections.Generic.List{System.CodeDom.CodeExpression})">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleReadWriteAttribute.AnalyzeReadWrite(System.Workflow.Activities.Rules.RuleAnalysis,System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RulePathQualifier,System.CodeDom.CodeExpressionCollection,System.Reflection.ParameterInfo[],System.Collections.Generic.List{System.CodeDom.CodeExpression})">
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parameters">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="attributedExpressions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetExpression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSet.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSet.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSet.Execute(System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="ruleExecution">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSet.Execute(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSet.Validate(System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSetChangeAction.ValidateChanges(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSetCollection.Add(System.Workflow.Activities.Rules.RuleSet)">
    <parameter name="item">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSetCollection.Diff(System.Object,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSetValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleState.System#IComparable#CompareTo(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Clone">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleStatementAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleSyntaxException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="serializeInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.Execute(System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleUpdateAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Object)">
    <parameter name="thisObject">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Type,System.Workflow.ComponentModel.Compiler.ITypeProvider)">
    <parameter name="thisType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.#ctor(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Boolean)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeProvider">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.AddError(System.Workflow.ComponentModel.Compiler.ValidationError)">
    <parameter name="error">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.AddExplicitConversions(System.Type,System.Type,System.Type,System.Collections.Generic.List{System.Reflection.MethodInfo})">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methods">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.AddImplicitConversions(System.Type,System.Type,System.Type,System.Collections.Generic.List{System.Reflection.MethodInfo})">
    <parameter name="t">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methods">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.AddTypeReference(System.CodeDom.CodeTypeReference,System.Type)">
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.AllowInternalMembers(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.Argument.#ctor(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.CandidateMember.CompareMember(System.Type,System.Workflow.Activities.Rules.RuleValidation.CandidateMember,System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleValidation.Argument},System.Workflow.Activities.Rules.RuleValidation)">
    <parameter name="other">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validator">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.CandidateMember.MatchNameSpace(System.String[],System.String[])">
    <parameter name="test">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="reference">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.CandidateParameter.#ctor(System.Reflection.ParameterInfo)">
    <parameter name="paramInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.CandidateParameter.BetterSignedConversion(System.Type,System.Type)">
    <parameter name="t1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="t2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.CandidateParameter.CompareConversion(System.Workflow.Activities.Rules.RuleValidation.CandidateParameter,System.Workflow.Activities.Rules.RuleValidation.Argument)">
    <parameter name="otherParam">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.CandidateParameter.Equals(System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.CandidateParameter.Match(System.Workflow.Activities.Rules.RuleValidation.Argument,System.String,System.Int32,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <parameter name="argument">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.CheckValueRange(System.CodeDom.CodeExpression,System.Type,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <parameter name="lhsType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.DetermineExtensionMethods(System.Type[])">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.EvaluateCandidate(System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleValidation.CandidateMember},System.Reflection.MemberInfo,System.Reflection.ParameterInfo[],System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleValidation.Argument},System.Workflow.ComponentModel.Compiler.ValidationError@,System.Workflow.Activities.Rules.RuleValidation.BuildArgCountMismatchError)">
    <parameter name="candidates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="candidateMember">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="buildArgCountMismatchError">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ExplicitConversionSpecified(System.Type,System.Type,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ExpressionInfo(System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.FindBestCandidate(System.Type,System.Collections.Generic.List{System.Reflection.MethodInfo},System.Type[])">
    <parameter name="methods">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.FindBestCandidate(System.Type,System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleValidation.CandidateMember},System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleValidation.Argument})">
    <parameter name="candidates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.FindExplicitConversion(System.Type,System.Type,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.FindImplicitConversion(System.Type,System.Type,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.FindType(System.String)">
    <parameter name="typeName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.GetCandidateConstructors(System.Collections.Generic.List{System.Reflection.ConstructorInfo},System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleValidation.Argument},System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="constructors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.GetCandidateIndexers(System.Collections.Generic.List{System.Reflection.PropertyInfo},System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleValidation.Argument},System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="indexerProperties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.GetCandidateMethods(System.String,System.Collections.Generic.List{System.Reflection.MethodInfo},System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleValidation.Argument},System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="methods">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="arguments">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.GetCandidateTargetTypes(System.Type)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.GetConstructors(System.Collections.Generic.List{System.Type},System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.GetIndexerProperties(System.Collections.Generic.List{System.Type},System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="candidateTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.GetNamedMethods(System.Collections.Generic.List{System.Type},System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="targetTypes">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.GetProperty(System.Type,System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ImplicitConversion(System.Type,System.Type)">
    <parameter name="fromType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="toType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.InterfaceMatch(System.Type[],System.Type)">
    <parameter name="types">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsAuthorized(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsAuthorizedSimpleType(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsExplicitNumericConversion(System.Type,System.Type)">
    <parameter name="sourceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="testType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsInternal(System.Reflection.FieldInfo)">
    <parameter name="fieldInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsInternal(System.Reflection.MethodInfo)">
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsMarkedExtension(System.Reflection.Assembly)">
    <parameter name="assembly">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsMarkedExtension(System.Reflection.MethodInfo)">
    <parameter name="mi">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsMarkedExtension(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsPrivate(System.Reflection.FieldInfo)">
    <parameter name="fieldInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsPrivate(System.Reflection.MethodInfo)">
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsStruct(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.IsValidBooleanResult(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.PushParentExpression(System.CodeDom.CodeExpression)">
    <parameter name="newParent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ResolveConstructor(System.Type,System.Reflection.BindingFlags,System.Collections.Generic.List{System.CodeDom.CodeExpression},System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentExprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ResolveFieldOrProperty(System.Type,System.String)">
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ResolveIndexerProperty(System.Type,System.Reflection.BindingFlags,System.Collections.Generic.List{System.CodeDom.CodeExpression},System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentExprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ResolveMethod(System.Type,System.String,System.Reflection.BindingFlags,System.Collections.Generic.List{System.CodeDom.CodeExpression},System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="argumentExprs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ResolveProperty(System.Type,System.String,System.Reflection.BindingFlags)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ResolveType(System.CodeDom.CodeTypeReference)">
    <parameter name="typeRef">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.StandardImplicitConversion(System.Type,System.Type,System.CodeDom.CodeExpression,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <parameter name="rhsType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lhsType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.TypesAreAssignable(System.Type,System.Type,System.CodeDom.CodeExpression,System.Workflow.ComponentModel.Compiler.ValidationError@)">
    <parameter name="rhsType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="lhsType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ValidateConditionExpression(System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ValidateMemberAccess(System.CodeDom.CodeExpression,System.Type,System.Reflection.FieldInfo,System.String,System.CodeDom.CodeExpression)">
    <parameter name="accessorMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ValidateMemberAccess(System.CodeDom.CodeExpression,System.Type,System.Reflection.MethodInfo,System.String,System.CodeDom.CodeExpression)">
    <parameter name="accessorMethod">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ValidateMemberAccess(System.CodeDom.CodeExpression,System.Type,System.String,System.CodeDom.CodeExpression,System.Reflection.Assembly,System.Boolean,System.Boolean,System.Boolean)">
    <parameter name="targetType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleValidation.ValidateSubexpression(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExpressionInternal,System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="expr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ruleExpr">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.RuleWriteAttribute.Analyze(System.Workflow.Activities.Rules.RuleAnalysis,System.Reflection.MemberInfo,System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RulePathQualifier,System.CodeDom.CodeExpressionCollection,System.Reflection.ParameterInfo[],System.Collections.Generic.List{System.CodeDom.CodeExpression})">
    <parameter name="member">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.SByteLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.#ctor(System.String)">
    <parameter name="inputString">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.AddKeywordsStartingWith(System.Char,System.Collections.ArrayList)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.CreateKeywordMap">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.NextToken">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.ScanExponent(System.Text.StringBuilder)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.ScanFraction(System.Text.StringBuilder)">
    <parameter name="buffer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.ScanIdentifier(System.Text.StringBuilder,System.Boolean@)">
    <parameter name="sb">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.Tokenize(System.Collections.Generic.List{System.Workflow.Activities.Rules.Token})">
    <parameter name="tokenList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Scanner.TokenizeForIntellisense(System.Collections.Generic.List{System.Workflow.Activities.Rules.Token})">
    <parameter name="tokenList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.Rules.ShortLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.SimpleParameterInfo.#ctor(System.Reflection.ParameterInfo)">
    <parameter name="parameter">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.SimpleRunTimeTypeProvider.GetType(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.SimpleRunTimeTypeProvider.GetType(System.String,System.Boolean)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.SimpleRunTimeTypeProvider.GetTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.SimpleRunTimeTypeProvider.ReferencedAssemblies">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.SimpleRunTimeTypeProvider.TypeLoadErrors">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.StringArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.StringLiteral.GreaterThan(System.String)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.StringLiteral.GreaterThanOrEqual(System.String)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.StringLiteral.LessThan(System.String)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.StringLiteral.LessThanOrEqual(System.String)">
    <parameter name="rhs">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Symbol.ParseRootIdentifier(System.Workflow.Activities.Rules.Parser,System.Workflow.Activities.Rules.ParserContext,System.Boolean)">
    <parameter name="parserContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parser">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.Symbol.RecordSymbol(System.Collections.ArrayList)">
    <parameter name="list">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ThisExpression.AnalyzeUsage(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ThisExpression.Clone(System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ThisExpression.Decompile(System.CodeDom.CodeExpression,System.Text.StringBuilder,System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ThisExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ThisExpression.Match(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="comperand">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ThisExpression.Validate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleValidation,System.Boolean)">
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Tracer.TraceConditionSymbols(System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="symbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Tracer.TraceElseSymbols(System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="symbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Tracer.TraceElseTriggers(System.String,System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleState})">
    <parameter name="triggeredRules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ruleStates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Tracer.TraceRuleSymbols(System.String,System.String,System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="symbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Tracer.TraceRuleTriggers(System.String,System.String,System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleState})">
    <parameter name="triggeredRules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ruleStates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Tracer.TraceThenSymbols(System.String,System.Collections.Generic.ICollection{System.String})">
    <parameter name="symbols">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.Tracer.TraceThenTriggers(System.String,System.Collections.Generic.ICollection{System.Int32},System.Collections.Generic.List{System.Workflow.Activities.Rules.RuleState})">
    <parameter name="triggeredRules">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="ruleStates">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.TypeReferenceExpression.AnalyzeUsage(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleAnalysis,System.Boolean,System.Boolean,System.Workflow.Activities.Rules.RulePathQualifier)">
    <parameter name="analysis">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.TypeReferenceExpression.Clone(System.CodeDom.CodeExpression)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.TypeReferenceExpression.CloneType(System.CodeDom.CodeTypeReference)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.TypeReferenceExpression.Evaluate(System.CodeDom.CodeExpression,System.Workflow.Activities.Rules.RuleExecution)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="execution">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="expression">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.TypeReferenceExpression.MatchType(System.CodeDom.CodeTypeReference,System.CodeDom.CodeTypeReference)">
    <parameter name="typeRef1">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="typeRef2">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.TypeSymbol.#ctor(System.Type)">
    <parameter name="type">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.TypeSymbol.CanOverload(System.Workflow.Activities.Rules.TypeSymbol)">
    <parameter name="typeSym">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.TypeSymbolBase.OverloadType(System.Workflow.Activities.Rules.TypeSymbolBase)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Add(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitAnd(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitAnd(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitAnd(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitAnd(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitAnd(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitOr(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitOr(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitOr(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitOr(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.BitOr(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Divide(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Divide(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Modulus(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Modulus(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Modulus(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Multiply(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Multiply(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Subtract(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Subtract(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.UIntArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.UIntLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Add(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Add(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.BitAnd(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.BitAnd(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.BitAnd(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.BitOr(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.BitOr(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.BitOr(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Divide(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Divide(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Modulus(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Multiply(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Multiply(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Subtract(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Subtract(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.ULongArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.ULongLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UpdatedConditionAction.#ctor(System.Workflow.Activities.Rules.RuleCondition,System.Workflow.Activities.Rules.RuleCondition)">
    <parameter name="conditionDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="newConditionDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.UpdatedConditionAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
    <parameter name="rootActivity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.#ctor(System.Workflow.Activities.Rules.RuleSet,System.Workflow.Activities.Rules.RuleSet)">
    <parameter name="originalRuleSetDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="updatedRuleSetDefinition">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.UpdatedRuleSetAction.ApplyTo(System.Workflow.ComponentModel.Activity)">
    <parameter name="rootActivity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.Char)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.String)">
    <parameter name="v">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Add(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitAnd(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitAnd(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitAnd(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitAnd(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitAnd(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitOr(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitOr(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitOr(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitOr(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.BitOr(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Divide(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Divide(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Divide(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Divide(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Divide(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Divide(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Divide(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Divide(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Modulus(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Modulus(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Modulus(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Modulus(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Modulus(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Modulus(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Modulus(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Multiply(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Multiply(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Multiply(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Multiply(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Multiply(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Multiply(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Multiply(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Multiply(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Subtract(System.Decimal)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Subtract(System.Double)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Subtract(System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Subtract(System.Int64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Subtract(System.Single)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Subtract(System.UInt16)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Subtract(System.UInt32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Subtract(System.UInt64)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.UShortArithmeticLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.Rules.UShortLiteral.Value">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.SequenceActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SequenceActivity.TryScheduleNextChild(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="executionContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SequentialWorkflowActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SetStateActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.SetStateDesigner.TargetState">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.SetStateSubscription.CreateQueue(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SetStateSubscription.DeleteQueue(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SetStateSubscription.Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SetStateSubscription.Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SetStateValidator.SetStateContainment.Validate(System.Workflow.Activities.SetStateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="setState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SetStateValidator.SetStateContainment.ValidateContainment(System.Workflow.Activities.SetStateValidator.SetStateContainment,System.Workflow.ComponentModel.Activity)">
    <parameter name="containment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SetStateValidator.SetStateContainment.ValidateParentState(System.Workflow.Activities.SetStateValidator.SetStateContainment,System.Workflow.ComponentModel.CompositeActivity)">
    <parameter name="containment">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.SetStateValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.CleanUp(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.CleanupChildAtClosure(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.Complete(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.EnteringLeafState(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.ExecuteChild(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.ExecuteEventDriven(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.EventDrivenActivity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventDriven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.ExecuteLeafState(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.ExecuteRootState(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.ExecuteState(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.ExecuteState(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.StateActivity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.ExecuteStateFinalization(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.StateFinalizationActivity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stateFinalization">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.ExecuteStateInitialization(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.StateInitializationActivity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stateInitialization">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.String)">
    <parameter name="childActivityName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.GetDynamicActivity(System.Workflow.ComponentModel.Activity)">
    <parameter name="childActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.GetExecutionState(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.GetExecutionState(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.GetHandlerActivity``1(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.GetStateFinalization(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.GetStateInitialization(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.HandleChildActivityClosed(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.HandleEventDrivenCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.HandleProcessActionEvent(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.HandleStateFinalizationCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.HandleStateInitializationCompleted(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.StateInitializationActivity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stateInitialization">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.HandleSubStateCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.InvalidChildActivity(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.LeavingState(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivity.RaiseProcessActionEvent(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateCompletedState(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateCompositeStateChildren(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateCustomStateActivity(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateEventDrivenActivities(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateInitialState(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateLeafState(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateLeafStateChildren(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateMultipleIEventActivity(System.Workflow.Activities.EventDrivenActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="eventDriven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateMultipleIEventActivityInCompositeActivity(System.Workflow.Activities.EventDrivenActivity,System.Workflow.Activities.IEventActivity,System.Workflow.ComponentModel.CompositeActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="eventDriven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateRootState(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateActivityValidator.ValidateState(System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.CanDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.CheckDragEffect(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.CommentLayoutGlyph.#ctor(System.Workflow.Activities.StateDesigner.Layout)">
    <parameter name="layout">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.ContainedDesignersParser.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Design.ActivityDesigner})">
    <parameter name="containedDesigners">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateDesigner.ContainedDesignersParser.Ordered">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.DesignerLayoutConnectionPoint.#ctor(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Int32,System.Workflow.ComponentModel.CompositeActivity,System.Workflow.ComponentModel.Design.DesignerEdges)">
    <parameter name="associatedDesigner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateDesigner.DesignerLayouts">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.StateDesigner.EventHandlersBounds">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.FindActivityByQualifiedName(System.Workflow.ComponentModel.Activity,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.FindConnector(System.Workflow.Activities.StateDesigner.TransitionInfo)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="transitionInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetCompletedStateDesignerImage(System.Workflow.Activities.StateDesigner)">
    <parameter name="stateDesigner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetDesigner(System.Workflow.ComponentModel.Activity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetDesignerImage(System.Workflow.ComponentModel.Design.ActivityDesigner)">
    <parameter name="designer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetDragImageSnapPoint(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetEventHandlerConnectionPoint(System.Workflow.ComponentModel.CompositeActivity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="eventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetInitialStateDesignerImage(System.Workflow.Activities.StateDesigner)">
    <parameter name="stateDesigner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetPropertyDescriptor(System.Workflow.ComponentModel.Activity,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetService(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Type)">
    <parameter name="designer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="serviceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.GetTargetStateConnectionPoint(System.Workflow.Activities.StateActivity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.StateDesigner.HelpText">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.ImageLayout.OnPaint(System.Drawing.Graphics,System.Workflow.ComponentModel.Design.ActivityDesignerTheme,System.Workflow.ComponentModel.Design.AmbientTheme)">
    <parameter name="ambientTheme">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="designerTheme">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Initialize(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.IsContainedDesignerVisible(System.Workflow.ComponentModel.Design.ActivityDesigner)">
    <parameter name="containedDesigner">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.IsValidTargetConnectionPoint(System.Workflow.ComponentModel.Design.ConnectionPoint)">
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Layout.GetLayout(System.Workflow.ComponentModel.Design.ActivityDesigner)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Layout.GetLayoutAt(System.Int32,System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Layout.OnLayoutPosition(System.Drawing.Graphics,System.Workflow.ComponentModel.Design.ActivityDesignerTheme,System.Workflow.ComponentModel.Design.AmbientTheme)">
    <parameter name="ambientTheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Layout.OnLayoutSize(System.Drawing.Graphics,System.Workflow.ComponentModel.Design.ActivityDesignerTheme,System.Workflow.ComponentModel.Design.AmbientTheme,System.Drawing.Size)">
    <parameter name="ambientTheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="designerTheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="graphics">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Layout.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Layout.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Layout.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.Layout.OnPaint(System.Drawing.Graphics,System.Workflow.ComponentModel.Design.ActivityDesignerTheme,System.Workflow.ComponentModel.Design.AmbientTheme)">
    <parameter name="ambientTheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="designerTheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="graphics">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.LayoutSelectionGlyph.#ctor(System.Workflow.Activities.StateDesigner.Layout)">
    <parameter name="layout">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.OnDragDrop(System.Workflow.ComponentModel.Design.ActivityDragEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.OnGetPropertyValue(System.Workflow.Activities.ExtendedPropertyInfo,System.Object)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="extendedProperty">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
    <parameter name="newTheme">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateDesigner.RootStateDesigner">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.SetActiveDesignerHelper(System.Workflow.Activities.StateDesigner,System.Workflow.ComponentModel.Design.ActivityDesigner)">
    <parameter name="stateDesigner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.SetLeafActiveDesigner(System.Workflow.Activities.StateDesigner,System.Workflow.ComponentModel.Design.ActivityDesigner)">
    <parameter name="parentDesigner">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.StateDesignerPropertyExtender.System#ComponentModel#IExtenderProvider#CanExtend(System.Object)">
    <parameter name="extendee">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.TitleBarLayout.OnLayoutPosition(System.Drawing.Graphics,System.Workflow.ComponentModel.Design.ActivityDesignerTheme,System.Workflow.ComponentModel.Design.AmbientTheme)">
    <parameter name="ambientTheme">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.TransitionInfo.#ctor(System.Workflow.Activities.SetStateActivity,System.Workflow.ComponentModel.CompositeActivity)">
    <parameter name="setState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.TransitionInfo.Matches(System.Workflow.Activities.StateDesignerConnector)">
    <parameter name="stateDesignerConnector">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.TransitionInfo.ParseEventHandler(System.Workflow.ComponentModel.CompositeActivity,System.Collections.Generic.List{System.Workflow.Activities.StateDesigner.TransitionInfo})">
    <parameter name="eventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="transitions">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesigner.TransitionInfo.ParseStateMachine(System.Workflow.Activities.StateActivity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.StateDesigner.TransitionInfo.SourceState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.StateDesigner.ValidChildTypes">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.StateDesigner.Verbs">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesignerConnector.#ctor(System.Workflow.ComponentModel.Design.ConnectionPoint,System.Workflow.ComponentModel.Design.ConnectionPoint)">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="target">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDesignerConnector.PaintEditPoints(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs,System.Drawing.Point,System.Boolean)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateDesignerConnector.RootStateDesigner">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateDesignerLayoutSerializer.GetProperties(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager,System.Object)">
    <parameter name="obj">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="serializationManager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDropDownEditor.dataSourceDropDown_SelectedIndexChanged(System.Object,System.EventArgs)">
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDropDownEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
    <parameter name="value">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDropDownEditor.FindStates(System.Windows.Forms.ListBox,System.Workflow.Activities.StateActivity)">
    <parameter name="dropDownList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parent">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDropDownEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateDropDownEditor.PopulateDropDownList(System.Windows.Forms.ListBox,System.Workflow.ComponentModel.Activity)">
    <parameter name="dropDownList">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateFinalizationActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateFinalizationDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateFinalizationValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateInitializationActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateInitializationDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateInitializationValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateInitializationValidator.ValidateSetStateInsideStateInitialization(System.Workflow.Activities.StateInitializationActivity,System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="stateInitialization">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateInitializationValidator.ValidateSetStateInsideStateInitializationCore(System.Workflow.ComponentModel.CompositeActivity,System.Workflow.Activities.StateActivity,System.Workflow.ComponentModel.Compiler.ValidationErrorCollection)">
    <parameter name="compositeActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="validationErrors">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineAction.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.AddRoundedCorner(System.Drawing.Drawing2D.GraphicsPath,System.Int32,System.Drawing.Point,System.Windows.Forms.ArrowDirection,System.Windows.Forms.ArrowDirection)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.AddSegment(System.Drawing.Drawing2D.GraphicsPath,System.Int32,System.Drawing.Point,System.Drawing.Point,System.Boolean,System.Boolean,System.Windows.Forms.ArrowDirection)">
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.DrawConnector(System.Drawing.Graphics,System.Drawing.Pen,System.Drawing.Point[],System.Drawing.Size,System.Drawing.Size,System.Workflow.ComponentModel.Design.LineAnchor,System.Workflow.ComponentModel.Design.LineAnchor)">
    <parameter name="graphics">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pen">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.GetDesignerPath(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Rectangle,System.Workflow.ComponentModel.Design.ActivityDesignerTheme)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="designer">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.GetLineCap(System.Workflow.ComponentModel.Design.LineAnchor,System.Int32,System.Single@)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.GetRoundedPath(System.Drawing.Point[],System.Int32)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.GetSafeRootDesigner(System.IServiceProvider)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.MeasureString(System.Drawing.Graphics,System.Drawing.Font,System.String,System.Drawing.StringAlignment,System.Drawing.Size)">
    <parameter name="graphics">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineDesignerPaint.OptimizeConnectorPoints(System.Drawing.Point[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="points">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateMachineExecutionState.Actions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineExecutionState.CalculateStateTransition(System.Workflow.Activities.StateActivity,System.String)">
    <parameter name="currentState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="targetStateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineExecutionState.Get(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineExecutionState.ProcessActions(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineExecutionState.ProcessTransitionRequest(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.ContainsState(System.Workflow.Activities.StateActivity,System.String)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.FindActivityByName(System.Workflow.ComponentModel.CompositeActivity,System.String)">
    <parameter name="parentActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="qualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.FindDynamicStateByName(System.Workflow.Activities.StateActivity,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="stateQualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.FindEnclosingState(System.Workflow.ComponentModel.Activity)">
    <parameter name="activity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.FindStateByName(System.Workflow.Activities.StateActivity,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="qualifiedName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.GetCompletedStateName(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.GetCurrentState(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.GetEventActivity(System.Workflow.Activities.EventDrivenActivity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="eventDriven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.GetInitialStateName(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.GetParentEventDriven(System.Workflow.Activities.IEventActivity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="eventActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.GetRootState(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.IsCompletedState(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.IsInitialState(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.IsLeafState(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.IsRootExecutionContext(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.IsRootState(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineHelpers.IsStateMachine(System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscription.Enqueue(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscription.ProcessEvent(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscription.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.ChangeEventDrivenQueueState(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.EventDrivenActivity,System.Boolean)">
    <parameter name="eventDriven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.ChangeStateWorkflowQueuesState(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.StateActivity,System.Boolean)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.CreateSetStateEventQueue(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.DeleteSetStateEventQueue(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.DisableStateWorkflowQueues(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.StateActivity)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.Enqueue(System.Workflow.ComponentModel.ActivityExecutionContext,System.Guid)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.Enqueue(System.Workflow.ComponentModel.ActivityExecutionContext,System.IComparable)">
    <parameter name="queueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.GetQueueName(System.Workflow.Activities.IEventActivity)">
    <parameter name="eventActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.GetSubscription(System.IComparable)">
    <parameter name="queueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.GetSubscription(System.Workflow.Activities.IEventActivity)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="eventActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.GetSubscriptionsShallowCopy">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.GetWorkflowQueue(System.Workflow.ComponentModel.ActivityExecutionContext,System.IComparable)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.IsEventDrivenSubscribed(System.Workflow.Activities.EventDrivenActivity)">
    <parameter name="eventDriven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.IsParentState(System.Workflow.Activities.StateActivity,System.String)">
    <parameter name="state">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.ProcessQueue(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.ReevaluateSubscriptions(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.SubscribeEventActivity(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.IEventActivity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.SubscribeEventDriven(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.EventDrivenActivity)">
    <parameter name="eventDriven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.SubscribeToSetStateEvent(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.UnsubscribeEventActivity(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.IEventActivity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.UnsubscribeEventActivity(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.IEventActivity,System.Workflow.Activities.EventActivitySubscription)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="subscription">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.UnsubscribeEventDriven(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.Activities.EventDrivenActivity)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="eventDriven">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.UnsubscribeState(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineSubscriptionManager.UnsubscribeToSetStateEvent(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateMachineTheme.CompletedStateDesignerImage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.StateMachineTheme.ConnectorPen">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineTheme.GetImageFromPath(System.Workflow.ComponentModel.Design.DesignerTheme,System.String,System.String)">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    <parameter name="designerTheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineTheme.GetRelativePath(System.String,System.String)">
    <parameter name="pathFrom">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="pathTo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateMachineTheme.InitialStateDesignerImage">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineTheme.IsValidImageResource(System.Workflow.ComponentModel.Design.DesignerTheme,System.String,System.String)">
    <parameter name="designerTheme">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="directory">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="path">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.#ctor(System.Workflow.Runtime.WorkflowRuntime,System.Guid)">
    <parameter name="runtime">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.CurrentState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object)">
    <parameter name="queueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.EnqueueItem(System.IComparable,System.Object,System.Workflow.Runtime.IPendingWork,System.Object)">
    <parameter name="workItem">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="queueName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.FindActivityByQualifiedName(System.String)">
    <parameter name="id">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.GetCurrentState">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.GetLeafStates(System.Workflow.Activities.StateActivity)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="parentState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.GetPossibleStateTransitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.GetStateHistory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.PossibleStateTransitions">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.String)">
    <parameter name="targetStateName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.StateMachineWorkflowInstance.SetState(System.Workflow.Activities.StateActivity)">
    <parameter name="targetState">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.StateHistory">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="P:System.Workflow.Activities.StateMachineWorkflowInstance.States">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServiceActivityHelpers.FindLeastCommonParent(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
    <parameter name="source">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="dest">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceActivityHelpers.GetParameterInfo(System.Reflection.MethodInfo,System.Collections.Generic.List{System.Reflection.ParameterInfo}@,System.Collections.Generic.List{System.Reflection.ParameterInfo}@)">
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceActivityHelpers.IsInsideLoop(System.Workflow.ComponentModel.Activity,System.Workflow.ComponentModel.Activity)">
    <parameter name="webServiceActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceActivityHelpers.ValidateParameterTypes(System.Reflection.MethodInfo)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServiceCodeGenerator.CreateOrGetServiceDeclaration(System.Workflow.ComponentModel.Activity,System.CodeDom.CodeNamespaceCollection)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="rootActivity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="codeNamespaceCollection">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceCodeGenerator.GetWebServiceCodeNamespace(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServiceCodeGenerator.GetWebserviceCodeTypeDeclaration(System.String)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServiceCodeGenerator.GetWebServiceMethodDeclaraion(System.Reflection.MethodInfo,System.Boolean,System.Workflow.Activities.Common.SupportedLanguages)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="methodInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceFaultActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceFaultActivity.System#Workflow#Activities#Common#IPropertyValueProvider#GetPropertyValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.ExecuteForActivity(System.Workflow.ComponentModel.ActivityExecutionContext,System.Type,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.GetParameterPropertyDescriptors(System.Collections.IDictionary)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.WebServiceInputActivity.ParameterBindings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.ProcessMessage(System.Workflow.ComponentModel.ActivityExecutionContext,System.Object,System.Type,System.String)">
    <parameter name="msg">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.ProcessParameters(System.Workflow.ComponentModel.ActivityExecutionContext,System.Runtime.Remoting.Messaging.IMethodMessage,System.Type,System.String)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="message">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="operation">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#Common#IPropertyValueProvider#GetPropertyValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#QueueName">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Subscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
    <parameter name="parentEventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#Activities#IEventActivity#Unsubscribe(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.QueueEventArgs})">
    <parameter name="parentEventHandler">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="parentContext">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#QueueEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.QueueEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInputActivity.UnsubscribeForActivity(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceInterfacePropertyDescriptor.#ctor(System.IServiceProvider,System.ComponentModel.PropertyDescriptor)">
    <parameter name="pd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceOutputActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceOutputActivity.GetParameterPropertyDescriptors(System.Collections.IDictionary)">
    <parameter name="properties">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="P:System.Workflow.Activities.WebServiceOutputActivity.ParameterBindings">
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#Activities#Common#IPropertyValueProvider#GetPropertyValues(System.ComponentModel.ITypeDescriptorContext)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetAccessType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceOutputActivity.System#Workflow#ComponentModel#IDynamicPropertyTypeProvider#GetPropertyType(System.IServiceProvider,System.String)">
    <parameter name="propertyName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WebServicePickerEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
    <parameter name="o">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServicePickerEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
    <parameter name="typeDescriptorContext">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebServiceUrlPropertyDescriptor.#ctor(System.IServiceProvider,System.ComponentModel.PropertyDescriptor)">
    <parameter name="pd">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String)">
    <parameter name="roleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WebWorkflowRole.#ctor(System.String,System.String)">
    <parameter name="roleName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WhileActivity.#ctor(System.String)">
    <parameter name="name">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WhileActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)">
    <parameter name="e">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="sender">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WhileActivity.TryNextIteration(System.Workflow.ComponentModel.ActivityExecutionContext)">
    <parameter name="context">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WhileDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})">
    <parameter name="activitiesToInsert">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
    <parameter name="insertLocation">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WhileValidator.Validate(System.Workflow.ComponentModel.Compiler.ValidationManager,System.Object)">
    <parameter name="manager">
      <attribute ctor="M:JetBrains.Annotations.CanBeNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WorkflowAuthorizationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
    <parameter name="info">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WorkflowMessageEventHandler.#ctor(System.Type,System.Reflection.EventInfo,System.Workflow.Activities.IDeliverMessage)">
    <parameter name="eventInfo">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WorkflowMessageEventHandler.EventHandler(System.Object,System.Workflow.Activities.ExternalDataEventArgs)">
    <parameter name="eventArgs">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WorkflowMessageEventHandler.GetKey(System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WorkflowRole.GetIdentities">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WorkflowRole.IncludesIdentity(System.String)">
    <parameter name="identity">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WorkflowWebService.Invoke(System.Type,System.String,System.Boolean,System.Object[])">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    <parameter name="interfaceType">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="methodName">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
  <member name="M:System.Workflow.Activities.WorkflowWebService.PrepareMessage(System.Type,System.String,System.Object[],System.Boolean)">
    <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
  </member>
  <member name="M:System.Workflow.Activities.WorkflowWebService.SafeEnqueueItem(System.Workflow.Runtime.WorkflowInstance,System.Workflow.Activities.EventQueueName,System.Workflow.Activities.MethodMessage)">
    <parameter name="instance">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
    <parameter name="key">
      <attribute ctor="M:JetBrains.Annotations.NotNullAttribute.#ctor" />
    </parameter>
  </member>
</assembly>