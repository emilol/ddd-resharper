<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Features.Intellisense</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons">
             <summary>
              <para>
                <para>Autogenerated identifier classes and identifier objects to Themed Icons registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/>.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <c>Id</c> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>This code was compile-time generated to support Themed Icons in the JetBrains application.</para>
              <para>It has two primary goals: load the icons of this assembly to be registered with <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> so that they were WPF-accessible and theme-sensitive; and emit early-bound accessors for referencing icons in codebehind in a compile-time-validated manner.</para>
              <h1>XAML</h1>
              <para>For performance reasons, the icons are not individually exposed with application resources. There is a custom markup extension to bind an image source in markup.</para>
              <para>To use an icon from XAML, set an <see cref="T:System.Windows.Media.ImageSource"/> property to the <see cref="T:JetBrains.UI.Icons.ThemedIconExtension"/> markup extension, which takes an icon identifier class (nested in <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class) as a parameter.</para>
              <para>Example:</para>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CodeCompletionPage}" /&gt;</code>
              <h1>Attributes</h1>
              <para>Sometimes you have to reference an icon from a type attriute when you're defining objects in code. Typical examples are Options pages and Tool Windows.</para>
              <para>To avoid the use of string IDs which are not validated very well, we've emitted identifier classes to be used with <c>typeof()</c> expression, one per each icon. Use the attribute overload which takes a <see cref="T:System.Type"/> for an image, and choose your icon class from nested classes in the <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
              <para>Example:</para>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CodeCompletionPage))]</code>
              <h1>CodeBehind</h1>
              <para>In codebehind, we have two distinct tasks: (a) specify some icon in the APIs and (b) render icon images onscreen.</para>
              <para>On the APIs stage you should only manipulate icon identifier objects (of type <see cref="T:JetBrains.UI.Icons.IconId"/>, statically defined in <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> in <c>Id</c> fields). Icon identifier classes (nested in <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>) should be turned into icon identifier objects as early as possible. Rendering is about getting an <see cref="T:System.Windows.Media.ImageSource"/> to assign to WPF, or <see cref="T:System.Drawing.Bitmap"/> to use with GDI+ / Windows Forms.</para>
              <para>You should turn an identifier object into a rendered image as late as possible. The identifier is static and lightweight and does not depend on the current theme, while the image is themed and has to be loaded or generated/rasterized. You need an <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> instance to get the image out of an icon identifier object. Once you got the image, you should take care to change it with theme changes â€” either by using a live image property, or by listening to the theme change event. See <see cref="T:JetBrains.UI.Icons.IThemedIconManager"/> and its extensions for the related facilities.</para>
              <para>Example:</para>
              <code>// Getting IconId identifier object to use with APIs
            IconId iconid = FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id;</code>
              <code>// Getting IconId out of an Icon Identifier Class type
            IconId iconid = CompiledIconClassAttribute.TryGetCompiledIconClassId(typeof(FeaturesIntellisenseThemedIcons.CodeCompletionPage), OnError.Throw);</code>
              <code>// Getting image for screen rendering by IconId
            themediconmanager.Icons[icnoid]</code>
              <code>// Getting image for screen rendering by Icon Identifier Class
            themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CodeCompletionPage&gt;()</code>
              <h1>Icons Origin</h1>
              <para>This code was generated by a pre-compile build task from a set of input files which are XAML files adhering to a certain convention, as convenient for exporting them from the Illustrator workspace, plus separate PNG files with raster icons. In the projects, these files are designated with <c>ThemedIconsXamlV3</c> and <c>ThemedIconPng</c> build actions and do not themselves get into the output assembly. All of such files are processed, vector images for different themes of the same icon are split and combined into the single list of icons in this assembly. This list is then written into the genearted XAML file (compiled into BAML within assembly), and serves as the source for this generated code.</para>
            </remarks>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CodeCompletionPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the CodeCompletionPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CodeCompletionPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CodeCompletionPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CodeCompletionPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the CodeCompletionPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CodeCompletionPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CodeCompletionPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CodeCompletionPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.CodeCompletionPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CodeCompletionPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CompletionAppearance">
             <summary>
              <para>
                <para>Autogenerated identifier class for the CompletionAppearance Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CompletionAppearance.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CompletionAppearance}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CompletionAppearance))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.CompletionAppearance.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CompletionAppearance&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CompletionAppearance.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the CompletionAppearance Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.CompletionAppearance"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+CompletionAppearance}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.CompletionAppearance))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.CompletionAppearance.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.CompletionAppearance&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.EditorOptionsPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the EditorOptionsPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.EditorOptionsPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+EditorOptionsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.EditorOptionsPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.EditorOptionsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.EditorOptionsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.EditorOptionsPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the EditorOptionsPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.EditorOptionsPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+EditorOptionsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.EditorOptionsPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.EditorOptionsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.EditorOptionsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the IntellisenseAutopopupPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseAutopopupPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the IntellisenseAutopopupPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseAutopopupPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseAutopopupPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the IntellisenseCompletingCharsPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseCompletingCharsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the IntellisenseCompletingCharsPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseCompletingCharsPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseCompletingCharsPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseGeneral">
             <summary>
              <para>
                <para>Autogenerated identifier class for the IntellisenseGeneral Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseGeneral.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseGeneral}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseGeneral))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseGeneral.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseGeneral&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseGeneral.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the IntellisenseGeneral Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisenseGeneral"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisenseGeneral}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisenseGeneral))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisenseGeneral.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisenseGeneral&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisensePage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the IntellisensePage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisensePage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisensePage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisensePage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisensePage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisensePage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisensePage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the IntellisensePage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.IntellisensePage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+IntellisensePage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.IntellisensePage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.IntellisensePage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.IntellisensePage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ParameterInfoPage">
             <summary>
              <para>
                <para>Autogenerated identifier class for the ParameterInfoPage Themed Icon.</para>
                <para>Identifier classes should be used in attributes, XAML, or generic parameters. Where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected, use the identifier object in the <see cref="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ParameterInfoPage.Id"/> field of the identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+ParameterInfoPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.ParameterInfoPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.ParameterInfoPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.ParameterInfoPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ParameterInfoPage.Id">
             <summary>
              <para>
                <para>Autogenerated identifier object for the ParameterInfoPage Themed Icon.</para>
                <para>Identifier objects should be used where an <see cref="T:JetBrains.UI.Icons.IconId"/> value is expected. In attributes, XAML, or generic parameters use the containing <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons.ParameterInfoPage"/> identifier class.</para>
              </para>
            </summary>
            <remarks>
              <para>For details on Themed Icons and their use, see Remarks on <see cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/> class.</para>
            </remarks>
            <seealso cref="T:JetBrains.ReSharper.Features.Intellisense.Resources.FeaturesIntellisenseThemedIcons"/>
            <example>
              <code>&lt;Image Source="{icons:ThemedIcon myres:FeaturesIntellisenseThemedIcons+ParameterInfoPage}" /&gt;        &lt;!-- XAML --&gt;</code>
            </example>
            <example>
              <code>[Item(Name="Sample", Icon=typeof(FeaturesIntellisenseThemedIcons.ParameterInfoPage))]        // C# Type attribute</code>
            </example>
            <example>
              <code>IconId iconid = FeaturesIntellisenseThemedIcons.ParameterInfoPage.Id;        // IconId identifier object</code>
            </example>
            <example>
              <code>themediconmanager.GetIcon&lt;FeaturesIntellisenseThemedIcons.ParameterInfoPage&gt;()        // Icon image for rendering</code>
            </example>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.CSharp.Rules.MvcActionCSharpTransformationRule">
            <summary>
            Rule to remove trailing parenthesis in action methods
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.Rules.MvcActionTransformationRule`1">
            <summary>
            Rule to remove trailing parenthesis in action methods
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Asp.VB.MvcActionVBTransformationRule">
            <summary>
            Rule to remove trailing parenthesis in action methods
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.MSBuild.LookupItems.MSBuildElementLookupItem.Accept(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.Feature.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.Feature.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.MSBuild.Rules.MSBuildTagCompletionRule.IsAvailable(JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.MSBuild.MSBuildCodeCompletionContext)">
            <summary>
            Determines whether the rule is applicable in the given context
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.MSBuild.Rules.MSBuildTagCompletionRule.AddLookupItems(JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.MSBuild.MSBuildCodeCompletionContext,JetBrains.ReSharper.Feature.Services.CodeCompletion.Infrastructure.LookupItems.GroupedItemsCollector)">
            <summary>
            Applies the rule
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.MSBuild.Rules.MSBuildTagCompletionRule.CompleteItemGroupElement(JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.MSBuild.MSBuildCodeCompletionContext,JetBrains.ReSharper.Feature.Services.CodeCompletion.Infrastructure.LookupItems.GroupedItemsCollector)">
            <summary>
            Completes item group element
            </summary>
            <param name="context"></param>
            <param name="collector"></param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.MSBuild.Rules.MSBuildTagCompletionRule.CanGenerate">
            <summary>
            Gets flag indicating whether the rule can generate members
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.LookupItems.NAntAttributeLookupItem.Accept(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.Feature.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.Feature.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.LookupItems.NAntElementLookupItem.Accept(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.Feature.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.Feature.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.LookupItems.NAntFunctionLookupItem.Accept(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.Feature.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.Feature.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.LookupItems.NAntPropertyLookupItem.Accept(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.Feature.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.Feature.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.LookupItems.NAntScriptElementLookupItem.Accept(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.Feature.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.Feature.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.LookupItems.NAntSimpleLookupItem.Accept(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.Feature.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.Feature.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.LookupItems.NAntTargetLookupItem.Accept(JetBrains.TextControl.ITextControl,JetBrains.Util.TextRange,JetBrains.ReSharper.Feature.Services.Lookup.LookupItemInsertType,JetBrains.ReSharper.Feature.Services.Lookup.Suffix,JetBrains.ProjectModel.ISolution,System.Boolean)">
            <summary>
            Completes the item at the specified range.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.Rules.NAntPropertyCompletionRule.AddLookupItems(JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.NAntCodeCompletionContext,JetBrains.ReSharper.Feature.Services.CodeCompletion.Infrastructure.LookupItems.GroupedItemsCollector)">
            <summary>
            Applies the rule
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.Rules.NAntScriptCompletionRule.IsAvailable(JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.NAntCodeCompletionContext)">
            <summary>
            Determines whether the rule is applicable in the given context
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.Rules.NAntScriptCompletionRule.AddLookupItems(JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.NAntCodeCompletionContext,JetBrains.ReSharper.Feature.Services.CodeCompletion.Infrastructure.LookupItems.GroupedItemsCollector)">
            <summary>
            Applies the rule
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.Rules.NAntTargetCompletionRule.IsAvailable(JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.NAntCodeCompletionContext)">
            <summary>
            Determines whether the rule is applicable in the given context
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.Rules.NAntTargetCompletionRule.AddLookupItems(JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.NAntCodeCompletionContext,JetBrains.ReSharper.Feature.Services.CodeCompletion.Infrastructure.LookupItems.GroupedItemsCollector)">
            <summary>
            Applies the rule
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.BuildScripts.NAnt.Rules.NAntTargetCompletionRule.CanGenerate">
            <summary>
            Gets flag indicating whether the rule can generate members
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.CSharpLookupItemFactory">
            <summary>
            Creates code completion items for certain scanarios
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.KeywordCompletionUtil.Suggest(JetBrains.ReSharper.Psi.Tree.ITreeNode,JetBrains.ReSharper.Psi.Tree.ITreeNode,System.Int32,System.String)">
            <summary>
            Suggest the keyword which could be placed insted of the given tree node
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.AliasRule">
            <summary>
            Add the aliases to completion list
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.AttributeListRule">
            <summary>
            Decorates attributes in declaration list
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.AutomaticCompletionWhereValueIsExpected">
            <summary>
            Fix automatic completiuon behaviour where value is expected...
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.BaseClassesRule">
            <summary>
            Rule for filtering classes in base classes list
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.IndexersRule">
            <summary>
            Adds indexers after dot
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.KeywordCompletionRule">
            <summary>
            Adds matching keywords to the lookup
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.MemberInitializerExpressionRule">
            <summary>
            Correct lookup focus behaviour when member initializer is being completed.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.MethodGroupOrLambdaExpectedRule">
            <summary>
            Rule for completing methods in delegate creation expressions
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.MethodGroupOrLambdaExpectedRuleForLambdaParameterName">
            <summary>
            Rule for completing methods in delegate creation expressions for second parameter (x, y|)
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.LambdaParameterNameExpectedRuleWithReparse">
            <summary>
            Rule for completing methods in delegate creation expressions for second parameter (x, y|)
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.NameSuggestionRule">
            <summary>
            Rule which is run in initializers
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.NewStatementRule">
            <summary>
            Decorates ReferenceName in the 'new' expression.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.Smart.AddThisExpression">
            <summary>
            Adds extra items (not originally included in basic completion)
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.Smart.AddTypeOf">
            <summary>
            Adds extra items (not originally included in basic completion)
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.Smart.CorellationAndProximityComparer">
            <summary>
            This comparer first compares by proximity to expected name, then by declared element type, 
            then (for locals) by proximity of declaration to usage
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.Smart.ExpressionStatement">
            <summary>
            Smart completion of type members where statement is expected.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.Smart.FilterBasicCompletion">
            <summary>
            Smart code completion: filter symbol table regarding extected types...
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.Smart.NewStatementSmartCompletionType">
            <summary>
            Smart completion logic after new
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.CSharp.Rules.Smart.SmartTypeInCast">
            <summary>
            Smart completion logic for casts
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.Clr.ClrSymbolsFilterSettingsView">
            <summary>
            Interaction logic for CLRSymbolsFilterSettingsView.xaml
            </summary>
            <summary>
            ClrSymbolsFilterSettingsView
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.Clr.ClrSymbolsFilterSettingsView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.Clr.ClrSymbolsFilterView">
            <summary>
            Interaction logic for ClrSymbolsFilterView.xaml
            </summary>
            <summary>
            ClrSymbolsFilterView
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.Clr.ClrSymbolsFilterView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.ContextMenuServiceExtensions">
            <summary>
            For solving problem with unknown data context in context menus.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.CustomFilterConfigurationWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            CustomFilterConfigurationWindow
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.CustomFilterConfigurationWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.CustomFiltersView">
            <summary>
            Interaction logic for CustomFiltersView.xaml
            </summary>
            <summary>
            CustomFiltersView
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Filters.CustomFiltersView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.JavaScript.AutopopupInDocCommentReference">
            <summary>
            start automatic code completion in xxx["dd"] expression
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Html.HtmlFooterItem.Image">
            <summary>
            Gets item image
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.AutomaticStrategies.AutopopupInStringLiteralStratery">
            <summary>
            start automatic code completion in 
            xxx["dd" expression
            xxx("dd" expression
            xxx({"dd" expression
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptArgumentsContext.Create(JetBrains.ReSharper.Psi.JavaScript.Tree.IIdentifierExpression,JetBrains.ReSharper.Psi.TreeTextRange@)">
            <summary>
            Calculates completion range for the specified reference
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptCodeCompletionContextProviderInStringLiterals">
            <summary>
            foo["xxx"]
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptFollowingExpressionContext">
            <summary>
            Range and text of the expression that could be substituted into arguments list of a completed item.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.JavaScript.JavaScriptFollowingExpressionContext.Create(JetBrains.ReSharper.Psi.JavaScript.Tree.IJavaScriptFile,JetBrains.ReSharper.Psi.TreeTextRange)">
            <summary>
            
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Preferences.CompletionPreferencesView">
            <summary>
            Interaction logic for CompletionPreferencesView.xaml
            </summary>
            <summary>
            CompletionPreferencesView
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Preferences.CompletionPreferencesView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.CodeCompletion.Sessions.CodeCompletionSession">
            <summary>
            Represents one session of using code completion
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletingCharactersSettingsControl">
            <summary>
            Interaction logic for CompletingCharactersSettingsControl.xaml
            </summary>
            <summary>
            CompletingCharactersSettingsControl
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.CompletingCharactersSettingsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletionAppearancePage">
            <summary>
            The visual completion settings.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletionBehaviorPage">
            <summary>
            The behavioral code completion settings.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.EditorBehaviorPage">
            <summary>
              The Editor-related options.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.IntelliSensePage">
            <summary>
            The IntelliSense node in the options tree.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.LanguageCompletingCharSettings">
            <summary>
            Interaction logic for LanguageCompletingCharSettings.xaml
            </summary>
            <summary>
            LanguageCompletingCharSettings
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.LanguageCompletingCharSettings.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.ConfigureSolutionAnalysisWindow">
            <summary>
            Interaction logic for ConfigureSolutionAnalysisWindow.xaml
            </summary>
            <summary>
            ConfigureSolutionAnalysisWindow
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.ConfigureSolutionAnalysisWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.AutomaticCompletionSettignsControl">
            <summary>
            Interaction logic for UserControl1.xaml
            </summary>
            <summary>
            AutomaticCompletionSettignsControl
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.AutomaticCompletionSettignsControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.ParameterInfoPage">
            <summary>
            IntelliSense Parameter Info.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.AutomaticCompletionSettignsControl2">
            <summary>
            AutomaticCompletionSettignsControl2
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.AutomaticCompletionSettignsControl2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletingCharactersSettingsControl2">
            <summary>
            CompletingCharactersSettingsControl2
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.CompletingCharactersSettingsControl2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletionAppearanceLookupHeightView2">
            <summary>
            CompletionAppearanceLookupHeightView2
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.CompletionAppearanceLookupHeightView2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.CompletionFiltersSettingsControl2">
            <summary>
            CompletionFiltersSettingsControl2
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.CompletionFiltersSettingsControl2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.ParameterInfoAutopopupView2">
            <summary>
            ParameterInfoAutopopupView2
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.ParameterInfoAutopopupView2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Intellisense.Options.TwoPropertiesWithIntValueViewModel2">
            <summary>
            TwoPropertiesWithIntValueViewModel2
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Intellisense.Options.TwoPropertiesWithIntValueViewModel2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
    </members>
</doc>
