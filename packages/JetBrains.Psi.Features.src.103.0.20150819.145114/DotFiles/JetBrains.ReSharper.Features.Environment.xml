<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JetBrains.ReSharper.Features.Environment</name>
    </assembly>
    <members>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.FeaturesEnvironmentGeneralPageCaches">
            <summary>
              The environment options page.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.FeaturesEnvironmentGeneralPageCheckboxes">
            <summary>
              The environment options page.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.Options.FeaturesEnvironmentGeneralPageIcons">
            <summary>
              The environment options page.
            </summary>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator">
            <summary>
            A status bar indicator for the PSI cache notifier.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierIndicator.GetTooltip(JetBrains.DataFlow.Lifetime,System.Drawing.Point,JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi)">
            <summary>
            Called by tooltip manager, if the tooltip is to be displayed
            </summary>
            <param name="lifetime"></param>
            <param name="point">Point in control's coordinates</param>
            <param name="psiCacheNotifierImpl"></param>
            <returns><see cref="T:JetBrains.UI.Tooltips.ITooltipInfo"/>, or <c>Null</c> if no tooltip should be displayed.</returns>
        </member>
        <member name="T:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup">
            <summary>
            The popup view for the cache notifier.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.myPopupWindowMutex">
            <summary>
            Identity for the background notifier windows.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.myWantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.OnAnyClick(System.Object,System.EventArgs)">
            <summary>
            Something has been clicked â€” turn modal.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            
            </summary>
            
            <param name="e">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data. </param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.GetDesiredSize(JetBrains.UI.IGraphicsContainer,System.Drawing.Size)">
            <summary>
            Performs the bottom-up layouting stage, when the control calculates its desired size using the given constraints.
            Should give generally the same results as <see cref="T:JetBrains.CommonControls.IConstrainableControl"/>, but could employ the <paramref name="gc"/> device context for the sake of optimization.
            </summary>
            <param name="gc">The device context to measure against.</param>
            <param name="limit">The maximum available space (that could affect the shape of the control, or strip down unnecessary calculations over the invisible items).
            May be a <see cref="T:System.Drawing.Size"/> with width and height equal to <see cref="F:System.Int32.MaxValue"/>, which means that the size is not limited.</param>
            <returns>The desired size, must be no larger than <paramref name="limit"/>.</returns>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.SetLayout(JetBrains.UI.LayoutResult)">
            <summary>
            Tells the control the details about the new layout applied to it by the controlling entity in conjunction with some <see cref="T:JetBrains.UI.IPopupLayouter"/>.
            Typically, the control need not apply the given size and location because that should be done by the controlling entity.
            The control may change its presentation in response to the layouting details, for example, whether it's attached to the top or the bottom of the anchoring rect.
            </summary>
            <param name="layout">The layouting details.</param>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.ShowWithoutActivation">
            <summary>
            Gets a value indicating whether the window will be activated when it is shown.
            </summary>
            
            <returns>
            True if the window will not be activated when it is shown; otherwise, false. The default is false.
            </returns>
            
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.AutoActivate">
            <summary>
            Gets or sets whether the control should be activated initially when it's shown.
            The typical implementation for a form is to return a negative of this value from the <see cref="P:System.Windows.Forms.Form.ShowWithoutActivation"/> override.
            </summary>
        </member>
        <member name="P:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.CacheNotifierPopup.WantsResize">
            <summary>
            Fires when the control would like to be reasked of its desired size.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.IsVisibleViewIndicatorUi">
            <summary>
            Gets whether the corresponding view should be visible.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.IsVisibleViewPopupUi">
            <summary>
            Gets whether the corresponding view should be visible.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.DescriptionUi">
            <summary>
            The <see cref="P:JetBrains.ReSharper.Psi.Caches.PsiCacheNotifier.Description"/>, marshalled to UI.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.HeaderUi">
            <summary>
            The <see cref="P:JetBrains.ReSharper.Psi.Caches.PsiCacheNotifier.Header"/>, marshalled to UI.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.IsActiveUi">
            <summary>
            The <see cref="P:JetBrains.ReSharper.Psi.Caches.PsiCacheNotifier.IsActive"/>, marshalled to UI.
            </summary>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.ProgressUi">
            <summary>
            The <see cref="P:JetBrains.ReSharper.Psi.Caches.PsiCacheNotifier.Progress"/>, marshalled to UI.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.InitDataFlow_AutoCleanUp">
            <summary>
            Whenever notifier is hidden, clean it up.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.InitDataFlow_MarshalUi">
            <summary>
            Marshal from the immediate thread-neutral properties to the in-ui-thread safe properties.
            When reading values, use the UI versions.
            When setting the values, use the non-UI versions.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.InitDataFlow_ShowViews(JetBrains.UI.StatusBar.IStatusBar)">
            <summary>
            What views to show, and when.
            </summary>
            <param name="statusBar"></param>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.PsiCacheNotifier.PsiCacheNotifierUi.WaitForCaches(System.String,System.String)">
            <summary>
            Synchronously wait until caches are ready, with a popup progress window.
            Must be called under a read lock.
            </summary>
            <returns><c>True</c> if the caches are ready, <c>False</c> if user-cancelled.</returns>
        </member>
        <member name="F:JetBrains.ReSharper.Features.Environment.Tips.TipsForm.components">
            <summary>Required designer variable.</summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Tips.TipsForm.Dispose(System.Boolean)">
            <summary>
              Clean up any resources being used.
            </summary>
        </member>
        <member name="M:JetBrains.ReSharper.Features.Environment.Tips.TipsForm.InitializeComponent">
            <summary>
              Required method for Designer support - do not modify
              the contents of this method with the code editor.
            </summary>
        </member>
    </members>
</doc>
